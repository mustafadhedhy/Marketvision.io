(window.webpackJsonp = window.webpackJsonp || []).push([
  [2],
  {
    "+ZoL": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("3Pt+");
      const s =
        /^([a-zA-Z\xf4\xd4\xf6\xd6\xf2\xd2\xf3\xd3\u0153\u0152\xf8\xd8\u014d\u014c\xf5\xd5\xe0\xc0\xe1\xc1\xe2\xc2\xe4\xc4\xe6\xc6\xe3\xc3\xe5\xc5\u0101\u0100\xfb\xdb\xfc\xdc\xf9\xd9\xfa\xda\u016b\u016a\u015b\u015a\u0161\u0160\xdf][a-zA-Z\xf4\xd4\xf6\xd6\xf2\xd2\xf3\xd3\u0153\u0152\xf8\xd8\u014d\u014c\xf5\xd5\xe0\xc0\xe1\xc1\xe2\xc2\xe4\xc4\xe6\xc6\xe3\xc3\xe5\xc5\u0101\u0100\xfb\xdb\xfc\xdc\xf9\xd9\xfa\xda\u016b\u016a\u015b\u015a\u0161\u0160\xdf\-\s]*)?$/;
      class r extends i.t {
        static validate(e) {
          let t = null;
          return null === e.value.match(s) && (t = { letterSpace: !0 }), t;
        }
      }
    },
    "/uUt": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("7o/Q");
      function s(e, t) {
        return (n) => n.lift(new r(e, t));
      }
      class r {
        constructor(e, t) {
          (this.compare = e), (this.keySelector = t);
        }
        call(e, t) {
          return t.subscribe(new o(e, this.compare, this.keySelector));
        }
      }
      class o extends i.a {
        constructor(e, t, n) {
          super(e),
            (this.keySelector = n),
            (this.hasKey = !1),
            "function" == typeof t && (this.compare = t);
        }
        compare(e, t) {
          return e === t;
        }
        _next(e) {
          let t;
          try {
            const { keySelector: n } = this;
            t = n ? n(e) : e;
          } catch (i) {
            return this.destination.error(i);
          }
          let n = !1;
          if (this.hasKey)
            try {
              const { compare: e } = this;
              n = e(this.key, t);
            } catch (i) {
              return this.destination.error(i);
            }
          else this.hasKey = !0;
          n || ((this.key = t), this.destination.next(e));
        }
      }
    },
    "/xfr": function (e, t, n) {
      "use strict";
      function i(e) {
        return (
          null !== e &&
          "object" == typeof e &&
          "constructor" in e &&
          e.constructor === Object
        );
      }
      function s(e, t) {
        void 0 === e && (e = {}),
          void 0 === t && (t = {}),
          Object.keys(t).forEach(function (n) {
            void 0 === e[n]
              ? (e[n] = t[n])
              : i(t[n]) &&
                i(e[n]) &&
                Object.keys(t[n]).length > 0 &&
                s(e[n], t[n]);
          });
      }
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return l;
        });
      var r = {
        body: {},
        addEventListener: function () {},
        removeEventListener: function () {},
        activeElement: { blur: function () {}, nodeName: "" },
        querySelector: function () {
          return null;
        },
        querySelectorAll: function () {
          return [];
        },
        getElementById: function () {
          return null;
        },
        createEvent: function () {
          return { initEvent: function () {} };
        },
        createElement: function () {
          return {
            children: [],
            childNodes: [],
            style: {},
            setAttribute: function () {},
            getElementsByTagName: function () {
              return [];
            },
          };
        },
        createElementNS: function () {
          return {};
        },
        importNode: function () {
          return null;
        },
        location: {
          hash: "",
          host: "",
          hostname: "",
          href: "",
          origin: "",
          pathname: "",
          protocol: "",
          search: "",
        },
      };
      function o() {
        var e = "undefined" != typeof document ? document : {};
        return s(e, r), e;
      }
      var a = {
        document: r,
        navigator: { userAgent: "" },
        location: {
          hash: "",
          host: "",
          hostname: "",
          href: "",
          origin: "",
          pathname: "",
          protocol: "",
          search: "",
        },
        history: {
          replaceState: function () {},
          pushState: function () {},
          go: function () {},
          back: function () {},
        },
        CustomEvent: function () {
          return this;
        },
        addEventListener: function () {},
        removeEventListener: function () {},
        getComputedStyle: function () {
          return {
            getPropertyValue: function () {
              return "";
            },
          };
        },
        Image: function () {},
        Date: function () {},
        screen: {},
        setTimeout: function () {},
        clearTimeout: function () {},
        matchMedia: function () {
          return {};
        },
        requestAnimationFrame: function (e) {
          return "undefined" == typeof setTimeout
            ? (e(), null)
            : setTimeout(e, 0);
        },
        cancelAnimationFrame: function (e) {
          "undefined" != typeof setTimeout && clearTimeout(e);
        },
      };
      function l() {
        var e = "undefined" != typeof window ? window : {};
        return s(e, a), e;
      }
    },
    0: function (e, t, n) {
      e.exports = n("zUnb");
    },
    "0EUg": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("bHdf");
      function s() {
        return Object(i.a)(1);
      }
    },
    "1AIi": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("ttqe");
      class s extends i.a {
        createStorage() {
          this.storage = window.localStorage;
        }
      }
    },
    "1G5W": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("l7GE"),
        s = n("ZUHj");
      function r(e) {
        return (t) => t.lift(new o(e));
      }
      class o {
        constructor(e) {
          this.notifier = e;
        }
        call(e, t) {
          const n = new a(e),
            i = Object(s.a)(n, this.notifier);
          return i && !n.seenValue ? (n.add(i), t.subscribe(n)) : n;
        }
      }
      class a extends i.a {
        constructor(e) {
          super(e), (this.seenValue = !1);
        }
        notifyNext(e, t, n, i, s) {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
    },
    "1SSY": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return Z;
      }),
        n.d(t, "b", function () {
          return Q;
        });
      var i = n("vxfF"),
        s = n("fXoL"),
        r = n("R0Ic"),
        o = n("ofXK"),
        a = n("RtSl"),
        l = n("P/hZ"),
        c = n("Z7TK"),
        u = n("3Pt+"),
        h = n("x5p7");
      function d(e, t) {
        if ((1 & e && (s.Xb(0, "span"), s.Nc(1), s.Wb()), 2 & e)) {
          const e = s.hc();
          s.Eb(1), s.Oc(e.option.label || "empty");
        }
      }
      function p(e, t) {
        1 & e && s.Tb(0);
      }
      const f = function (e) {
          return { height: e };
        },
        g = function (e, t, n) {
          return {
            "ui-dropdown-item ui-corner-all": !0,
            "ui-state-highlight": e,
            "ui-state-disabled": t,
            "ui-dropdown-item-empty": n,
          };
        },
        m = function (e) {
          return { $implicit: e };
        },
        b = ["container"],
        v = ["filter"],
        y = ["in"],
        w = ["editableInput"];
      function S(e, t) {
        if ((1 & e && (s.Vb(0), s.Nc(1), s.Ub()), 2 & e)) {
          const e = s.hc(2);
          s.Eb(1), s.Oc(e.label || "empty");
        }
      }
      function _(e, t) {
        1 & e && s.Tb(0);
      }
      const C = function (e) {
        return {
          "ui-dropdown-label ui-inputtext ui-corner-all": !0,
          "ui-dropdown-label-empty": e,
        };
      };
      function E(e, t) {
        if (
          (1 & e &&
            (s.Xb(0, "span", 12),
            s.Lc(1, S, 2, 1, "ng-container", 13),
            s.Lc(2, _, 1, 0, "ng-container", 14),
            s.Wb()),
          2 & e)
        ) {
          const e = s.hc();
          s.pc("ngClass", s.sc(4, C, null == e.label || 0 === e.label.length)),
            s.Eb(1),
            s.pc("ngIf", !e.selectedItemTemplate),
            s.Eb(1),
            s.pc("ngTemplateOutlet", e.selectedItemTemplate)(
              "ngTemplateOutletContext",
              s.sc(6, m, e.selectedOption)
            );
        }
      }
      const O = function (e) {
        return {
          "ui-dropdown-label ui-inputtext ui-corner-all ui-placeholder": !0,
          "ui-dropdown-label-empty": e,
        };
      };
      function x(e, t) {
        if ((1 & e && (s.Xb(0, "span", 12), s.Nc(1), s.Wb()), 2 & e)) {
          const e = s.hc();
          s.pc(
            "ngClass",
            s.sc(2, O, null == e.placeholder || 0 === e.placeholder.length)
          ),
            s.Eb(1),
            s.Oc(e.placeholder || "empty");
        }
      }
      function T(e, t) {
        if (1 & e) {
          const e = s.Yb();
          s.Xb(0, "input", 15, 16),
            s.fc("click", function () {
              return s.Ec(e), s.hc().onEditableInputClick();
            })("input", function (t) {
              return s.Ec(e), s.hc().onEditableInputChange(t);
            })("focus", function (t) {
              return s.Ec(e), s.hc().onEditableInputFocus(t);
            })("blur", function (t) {
              return s.Ec(e), s.hc().onInputBlur(t);
            }),
            s.Wb();
        }
        if (2 & e) {
          const e = s.hc();
          s.pc("disabled", e.disabled),
            s.Fb("maxlength", e.maxlength)("placeholder", e.placeholder)(
              "aria-expanded",
              e.overlayVisible
            );
        }
      }
      function k(e, t) {
        if (1 & e) {
          const e = s.Yb();
          s.Xb(0, "i", 17),
            s.fc("click", function (t) {
              return s.Ec(e), s.hc().clear(t);
            }),
            s.Wb();
        }
      }
      function M(e, t) {
        if (1 & e) {
          const e = s.Yb();
          s.Xb(0, "div", 24),
            s.fc("click", function (t) {
              return s.Ec(e), t.stopPropagation();
            }),
            s.Xb(1, "input", 25, 26),
            s.fc("keydown.enter", function (t) {
              return s.Ec(e), t.preventDefault();
            })("keydown", function (t) {
              return s.Ec(e), s.hc(2).onKeydown(t, !1);
            })("input", function (t) {
              return s.Ec(e), s.hc(2).onFilter(t);
            }),
            s.Wb(),
            s.Sb(3, "span", 27),
            s.Wb();
        }
        if (2 & e) {
          const e = s.hc(2);
          s.Eb(1),
            s.pc("value", e.filterValue || ""),
            s.Fb("placeholder", e.filterPlaceholder)(
              "aria-label",
              e.ariaFilterLabel
            );
        }
      }
      function I(e, t) {
        if ((1 & e && (s.Xb(0, "span"), s.Nc(1), s.Wb()), 2 & e)) {
          const e = s.hc().$implicit;
          s.Eb(1), s.Oc(e.label || "empty");
        }
      }
      function P(e, t) {
        1 & e && s.Tb(0);
      }
      function R(e, t) {
        1 & e && s.Tb(0);
      }
      const N = function (e, t) {
        return { $implicit: e, selectedOption: t };
      };
      function L(e, t) {
        if (
          (1 & e &&
            (s.Xb(0, "li", 29),
            s.Lc(1, I, 2, 1, "span", 13),
            s.Lc(2, P, 1, 0, "ng-container", 14),
            s.Wb(),
            s.Lc(3, R, 1, 0, "ng-container", 14)),
          2 & e)
        ) {
          const e = t.$implicit;
          s.hc(2);
          const n = s.Bc(7),
            i = s.hc();
          s.Eb(1),
            s.pc("ngIf", !i.groupTemplate),
            s.Eb(1),
            s.pc("ngTemplateOutlet", i.groupTemplate)(
              "ngTemplateOutletContext",
              s.sc(5, m, e)
            ),
            s.Eb(1),
            s.pc("ngTemplateOutlet", n)(
              "ngTemplateOutletContext",
              s.tc(7, N, e.items, i.selectedOption)
            );
        }
      }
      function A(e, t) {
        if (
          (1 & e && (s.Vb(0), s.Lc(1, L, 4, 10, "ng-template", 28), s.Ub()),
          2 & e)
        ) {
          const e = s.hc(2);
          s.Eb(1), s.pc("ngForOf", e.optionsToDisplay);
        }
      }
      function D(e, t) {
        1 & e && s.Tb(0);
      }
      function j(e, t) {
        if (
          (1 & e && (s.Vb(0), s.Lc(1, D, 1, 0, "ng-container", 14), s.Ub()),
          2 & e)
        ) {
          s.hc();
          const e = s.Bc(7),
            t = s.hc();
          s.Eb(1),
            s.pc("ngTemplateOutlet", e)(
              "ngTemplateOutletContext",
              s.tc(2, N, t.optionsToDisplay, t.selectedOption)
            );
        }
      }
      function F(e, t) {
        if (1 & e) {
          const e = s.Yb();
          s.Xb(0, "p-dropdownItem", 32),
            s.fc("onClick", function (t) {
              return s.Ec(e), s.hc(4).onItemClick(t);
            }),
            s.Wb();
        }
        if (2 & e) {
          const e = t.$implicit,
            n = s.hc(2).selectedOption,
            i = s.hc(2);
          s.pc("option", e)("selected", n == e)("template", i.itemTemplate);
        }
      }
      function V(e, t) {
        if (
          (1 & e && (s.Vb(0), s.Lc(1, F, 1, 3, "ng-template", 28), s.Ub()),
          2 & e)
        ) {
          const e = s.hc().$implicit;
          s.Eb(1), s.pc("ngForOf", e);
        }
      }
      function W(e, t) {
        if (1 & e) {
          const e = s.Yb();
          s.Vb(0),
            s.Xb(1, "p-dropdownItem", 32),
            s.fc("onClick", function (t) {
              return s.Ec(e), s.hc(5).onItemClick(t);
            }),
            s.Wb(),
            s.Ub();
        }
        if (2 & e) {
          const e = t.$implicit,
            n = s.hc(3).selectedOption,
            i = s.hc(2);
          s.Eb(1),
            s.pc("option", e)("selected", n == e)("template", i.itemTemplate);
        }
      }
      function z(e, t) {
        if (1 & e) {
          const e = s.Yb();
          s.Xb(0, "cdk-virtual-scroll-viewport", 34, 35),
            s.fc("scrolledIndexChange", function () {
              return s.Ec(e), s.hc(4).scrollToSelectedVirtualScrollElement();
            }),
            s.Lc(2, W, 2, 3, "ng-container", 36),
            s.Wb();
        }
        if (2 & e) {
          const e = s.hc(2).$implicit,
            t = s.hc(2);
          s.pc("ngStyle", s.sc(4, f, t.scrollHeight))("itemSize", t.itemSize),
            s.Eb(2),
            s.pc("cdkVirtualForOf", e)("cdkVirtualForTemplateCacheSize", 0);
        }
      }
      function X(e, t) {
        if (
          (1 & e && s.Lc(0, z, 3, 6, "cdk-virtual-scroll-viewport", 33), 2 & e)
        ) {
          const e = s.hc(3);
          s.pc(
            "ngIf",
            e.virtualScroll && e.optionsToDisplay && e.optionsToDisplay.length
          );
        }
      }
      function B(e, t) {
        if (
          (1 & e &&
            (s.Lc(0, V, 2, 1, "ng-container", 30),
            s.Lc(1, X, 1, 1, "ng-template", null, 31, s.Mc)),
          2 & e)
        ) {
          const e = s.Bc(2),
            t = s.hc(2);
          s.pc("ngIf", !t.virtualScroll)("ngIfElse", e);
        }
      }
      function H(e, t) {
        if ((1 & e && (s.Xb(0, "li", 37), s.Nc(1), s.Wb()), 2 & e)) {
          const e = s.hc(2);
          s.Eb(1), s.Oc(e.emptyFilterMessage);
        }
      }
      const U = function (e, t) {
          return { showTransitionParams: e, hideTransitionParams: t };
        },
        G = function (e) {
          return { value: "visible", params: e };
        };
      function $(e, t) {
        if (1 & e) {
          const e = s.Yb();
          s.Xb(0, "div", 18),
            s.fc("@overlayAnimation.start", function (t) {
              return s.Ec(e), s.hc().onOverlayAnimationStart(t);
            }),
            s.Lc(1, M, 4, 3, "div", 19),
            s.Xb(2, "div", 20),
            s.Xb(3, "ul", 21),
            s.Lc(4, A, 2, 1, "ng-container", 13),
            s.Lc(5, j, 2, 5, "ng-container", 13),
            s.Lc(6, B, 3, 2, "ng-template", null, 22, s.Mc),
            s.Lc(8, H, 2, 1, "li", 23),
            s.Wb(),
            s.Wb(),
            s.Wb();
        }
        if (2 & e) {
          const e = s.hc();
          s.Gb(e.panelStyleClass),
            s.pc(
              "ngClass",
              "ui-dropdown-panel  ui-widget ui-widget-content ui-corner-all ui-shadow"
            )(
              "@overlayAnimation",
              s.sc(
                14,
                G,
                s.tc(11, U, e.showTransitionOptions, e.hideTransitionOptions)
              )
            )("ngStyle", e.panelStyle),
            s.Eb(1),
            s.pc("ngIf", e.filter),
            s.Eb(1),
            s.Kc(
              "max-height",
              e.virtualScroll ? "auto" : e.scrollHeight || "auto"
            ),
            s.Eb(2),
            s.pc("ngIf", e.group),
            s.Eb(1),
            s.pc("ngIf", !e.group),
            s.Eb(3),
            s.pc(
              "ngIf",
              e.filter &&
                (!e.optionsToDisplay ||
                  (e.optionsToDisplay && 0 === e.optionsToDisplay.length))
            );
        }
      }
      const q = function (e, t, n, i) {
          return {
            "ui-dropdown ui-widget ui-state-default ui-corner-all": !0,
            "ui-state-disabled": e,
            "ui-dropdown-open": t,
            "ui-state-focus": n,
            "ui-dropdown-clearable": i,
          };
        },
        K = { provide: u.j, useExisting: Object(s.V)(() => Z), multi: !0 };
      let Y = (() => {
          let e = class {
            constructor() {
              this.onClick = new s.o();
            }
            onOptionClick(e) {
              this.onClick.emit({ originalEvent: e, option: this.option });
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = s.Lb({
              type: e,
              selectors: [["p-dropdownItem"]],
              inputs: {
                option: "option",
                selected: "selected",
                disabled: "disabled",
                visible: "visible",
                itemSize: "itemSize",
                template: "template",
              },
              outputs: { onClick: "onClick" },
              decls: 3,
              vars: 15,
              consts: [
                ["role", "option", 3, "ngStyle", "ngClass", "click"],
                [4, "ngIf"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
              ],
              template: function (e, t) {
                1 & e &&
                  (s.Xb(0, "li", 0),
                  s.fc("click", function (e) {
                    return t.onOptionClick(e);
                  }),
                  s.Lc(1, d, 2, 1, "span", 1),
                  s.Lc(2, p, 1, 0, "ng-container", 2),
                  s.Wb()),
                  2 & e &&
                    (s.pc("ngStyle", s.sc(7, f, t.itemSize + "px"))(
                      "ngClass",
                      s.uc(
                        9,
                        g,
                        t.selected,
                        t.option.disabled,
                        !t.option.label || 0 === t.option.label.length
                      )
                    ),
                    s.Fb("aria-label", t.option.label)(
                      "aria-selected",
                      t.selected
                    ),
                    s.Eb(1),
                    s.pc("ngIf", !t.template),
                    s.Eb(1),
                    s.pc("ngTemplateOutlet", t.template)(
                      "ngTemplateOutletContext",
                      s.sc(13, m, t.option)
                    ));
              },
              directives: [o.n, o.k, o.m, o.r],
              encapsulation: 2,
            })),
            e
          );
        })(),
        Z = (() => {
          let e = class {
            constructor(e, t, n, i) {
              (this.el = e),
                (this.renderer = t),
                (this.cd = n),
                (this.zone = i),
                (this.scrollHeight = "200px"),
                (this.filterBy = "label"),
                (this.resetFilterOnHide = !1),
                (this.dropdownIcon = "pi pi-chevron-down"),
                (this.autoDisplayFirst = !0),
                (this.emptyFilterMessage = "No results found"),
                (this.autoZIndex = !0),
                (this.baseZIndex = 0),
                (this.showTransitionOptions = "225ms ease-out"),
                (this.hideTransitionOptions = "195ms ease-in"),
                (this.filterMatchMode = "contains"),
                (this.tooltip = ""),
                (this.tooltipPosition = "right"),
                (this.tooltipPositionStyle = "absolute"),
                (this.autofocusFilter = !0),
                (this.onChange = new s.o()),
                (this.onFocus = new s.o()),
                (this.onBlur = new s.o()),
                (this.onClick = new s.o()),
                (this.onShow = new s.o()),
                (this.onHide = new s.o()),
                (this.onModelChange = () => {}),
                (this.onModelTouched = () => {}),
                (this.viewPortOffsetTop = 0);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              e && (this.focused = !1),
                (this._disabled = e),
                this.cd.destroyed || this.cd.detectChanges();
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "item":
                    this.itemTemplate = e.template;
                    break;
                  case "selectedItem":
                    this.selectedItemTemplate = e.template;
                    break;
                  case "group":
                    this.groupTemplate = e.template;
                    break;
                  default:
                    this.itemTemplate = e.template;
                }
              });
            }
            ngOnInit() {
              (this.optionsToDisplay = this.options),
                this.updateSelectedOption(null);
            }
            get options() {
              return this._options;
            }
            set options(e) {
              let t = this.optionLabel
                ? c.b.generateSelectItems(e, this.optionLabel)
                : e;
              (this._options = t),
                (this.optionsToDisplay = this._options),
                this.updateSelectedOption(this.value),
                (this.optionsChanged = !0),
                this.filterValue &&
                  this.filterValue.length &&
                  this.activateFilter();
            }
            ngAfterViewInit() {
              this.editable && this.updateEditableLabel();
            }
            get label() {
              return this.selectedOption ? this.selectedOption.label : null;
            }
            updateEditableLabel() {
              this.editableInputViewChild &&
                this.editableInputViewChild.nativeElement &&
                (this.editableInputViewChild.nativeElement.value = this
                  .selectedOption
                  ? this.selectedOption.label
                  : this.value || "");
            }
            onItemClick(e) {
              const t = e.option;
              t.disabled ||
                (this.selectItem(e, t),
                this.accessibleViewChild.nativeElement.focus()),
                setTimeout(() => {
                  this.hide(e);
                }, 150);
            }
            selectItem(e, t) {
              this.selectedOption != t &&
                ((this.selectedOption = t),
                (this.value = t.value),
                this.onModelChange(this.value),
                this.updateEditableLabel(),
                this.onChange.emit({
                  originalEvent: e.originalEvent,
                  value: this.value,
                }),
                this.virtualScroll &&
                  setTimeout(() => {
                    this.viewPortOffsetTop = this.viewPort
                      ? this.viewPort.measureScrollOffset()
                      : 0;
                  }, 1));
            }
            ngAfterViewChecked() {
              if (
                (this.optionsChanged &&
                  this.overlayVisible &&
                  ((this.optionsChanged = !1),
                  this.virtualScroll &&
                    this.updateVirtualScrollSelectedIndex(!0),
                  this.zone.runOutsideAngular(() => {
                    setTimeout(() => {
                      this.alignOverlay();
                    }, 1);
                  })),
                this.selectedOptionUpdated && this.itemsWrapper)
              ) {
                if (this.virtualScroll && this.viewPort) {
                  let e = this.viewPort.getRenderedRange();
                  this.updateVirtualScrollSelectedIndex(!1),
                    (e.start > this.virtualScrollSelectedIndex ||
                      e.end < this.virtualScrollSelectedIndex) &&
                      this.viewPort.scrollToIndex(
                        this.virtualScrollSelectedIndex
                      );
                }
                l.a.findSingle(this.overlay, "li.ui-state-highlight") &&
                  l.a.scrollInView(
                    this.itemsWrapper,
                    l.a.findSingle(this.overlay, "li.ui-state-highlight")
                  ),
                  (this.selectedOptionUpdated = !1);
              }
            }
            writeValue(e) {
              this.filter && this.resetFilter(),
                (this.value = e),
                this.updateSelectedOption(e),
                this.updateEditableLabel(),
                this.cd.markForCheck();
            }
            resetFilter() {
              (this.filterValue = null),
                this.filterViewChild &&
                  this.filterViewChild.nativeElement &&
                  (this.filterViewChild.nativeElement.value = ""),
                (this.optionsToDisplay = this.options);
            }
            updateSelectedOption(e) {
              (this.selectedOption = this.findOption(e, this.optionsToDisplay)),
                this.autoDisplayFirst &&
                  !this.placeholder &&
                  !this.selectedOption &&
                  this.optionsToDisplay &&
                  this.optionsToDisplay.length &&
                  !this.editable &&
                  (this.selectedOption = this.optionsToDisplay[0]),
                (this.selectedOptionUpdated = !0);
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            setDisabledState(e) {
              this.disabled = e;
            }
            onMouseclick(e) {
              this.disabled ||
                this.readonly ||
                this.isInputClick(e) ||
                (this.onClick.emit(e),
                this.accessibleViewChild.nativeElement.focus(),
                this.overlayVisible ? this.hide(e) : this.show(),
                this.cd.detectChanges());
            }
            isInputClick(e) {
              return (
                l.a.hasClass(e.target, "ui-dropdown-clear-icon") ||
                e.target.isSameNode(this.accessibleViewChild.nativeElement) ||
                (this.editableInputViewChild &&
                  e.target.isSameNode(
                    this.editableInputViewChild.nativeElement
                  ))
              );
            }
            isOutsideClicked(e) {
              return !(
                this.el.nativeElement.isSameNode(e.target) ||
                this.el.nativeElement.contains(e.target) ||
                (this.overlay && this.overlay.contains(e.target))
              );
            }
            onEditableInputClick() {
              this.bindDocumentClickListener();
            }
            onEditableInputFocus(e) {
              (this.focused = !0), this.hide(e), this.onFocus.emit(e);
            }
            onEditableInputChange(e) {
              (this.value = e.target.value),
                this.updateSelectedOption(this.value),
                this.onModelChange(this.value),
                this.onChange.emit({ originalEvent: e, value: this.value });
            }
            show() {
              this.overlayVisible = !0;
            }
            onOverlayAnimationStart(e) {
              switch (e.toState) {
                case "visible":
                  if (
                    ((this.overlay = e.element),
                    (this.itemsWrapper = l.a.findSingle(
                      this.overlay,
                      this.virtualScroll
                        ? ".cdk-virtual-scroll-viewport"
                        : ".ui-dropdown-items-wrapper"
                    )),
                    this.appendOverlay(),
                    this.autoZIndex &&
                      (this.overlay.style.zIndex = String(
                        this.baseZIndex + ++l.a.zindex
                      )),
                    this.alignOverlay(),
                    this.bindDocumentClickListener(),
                    this.bindDocumentResizeListener(),
                    this.options && this.options.length && !this.virtualScroll)
                  ) {
                    let e = l.a.findSingle(
                      this.itemsWrapper,
                      ".ui-dropdown-item.ui-state-highlight"
                    );
                    e && l.a.scrollInView(this.itemsWrapper, e);
                  }
                  this.filterViewChild &&
                    this.filterViewChild.nativeElement &&
                    ((this.preventModelTouched = !0),
                    this.autofocusFilter &&
                      this.filterViewChild.nativeElement.focus()),
                    this.onShow.emit(e);
                  break;
                case "void":
                  this.onOverlayHide();
              }
            }
            scrollToSelectedVirtualScrollElement() {
              this.virtualAutoScrolled ||
                (this.viewPortOffsetTop
                  ? this.viewPort.scrollToOffset(this.viewPortOffsetTop)
                  : this.virtualScrollSelectedIndex > -1 &&
                    this.viewPort.scrollToIndex(
                      this.virtualScrollSelectedIndex
                    )),
                (this.virtualAutoScrolled = !0);
            }
            updateVirtualScrollSelectedIndex(e) {
              this.selectedOption &&
                this.optionsToDisplay &&
                this.optionsToDisplay.length &&
                (e && (this.viewPortOffsetTop = 0),
                (this.virtualScrollSelectedIndex = this.findOptionIndex(
                  this.selectedOption.value,
                  this.optionsToDisplay
                )));
            }
            appendOverlay() {
              this.appendTo &&
                ("body" === this.appendTo
                  ? document.body.appendChild(this.overlay)
                  : l.a.appendChild(this.overlay, this.appendTo),
                this.overlay.style.minWidth ||
                  (this.overlay.style.minWidth =
                    l.a.getWidth(this.containerViewChild.nativeElement) +
                    "px"));
            }
            restoreOverlayAppend() {
              this.overlay &&
                this.appendTo &&
                this.el.nativeElement.appendChild(this.overlay);
            }
            hide(e) {
              (this.overlayVisible = !1),
                this.filter && this.resetFilterOnHide && this.resetFilter(),
                this.virtualScroll && (this.virtualAutoScrolled = !1),
                this.cd.markForCheck(),
                this.onHide.emit(e);
            }
            alignOverlay() {
              this.overlay &&
                (this.appendTo
                  ? l.a.absolutePosition(
                      this.overlay,
                      this.containerViewChild.nativeElement
                    )
                  : l.a.relativePosition(
                      this.overlay,
                      this.containerViewChild.nativeElement
                    ));
            }
            onInputFocus(e) {
              (this.focused = !0), this.onFocus.emit(e);
            }
            onInputBlur(e) {
              (this.focused = !1),
                this.onBlur.emit(e),
                this.preventModelTouched || this.onModelTouched(),
                (this.preventModelTouched = !1);
            }
            findPrevEnabledOption(e) {
              let t;
              if (this.optionsToDisplay && this.optionsToDisplay.length) {
                for (let n = e - 1; 0 <= n; n--) {
                  let e = this.optionsToDisplay[n];
                  if (!e.disabled) {
                    t = e;
                    break;
                  }
                }
                if (!t)
                  for (let n = this.optionsToDisplay.length - 1; n >= e; n--) {
                    let e = this.optionsToDisplay[n];
                    if (!e.disabled) {
                      t = e;
                      break;
                    }
                  }
              }
              return t;
            }
            findNextEnabledOption(e) {
              let t;
              if (this.optionsToDisplay && this.optionsToDisplay.length) {
                for (let n = e + 1; e < this.optionsToDisplay.length - 1; n++) {
                  let e = this.optionsToDisplay[n];
                  if (!e.disabled) {
                    t = e;
                    break;
                  }
                }
                if (!t)
                  for (let n = 0; n < e; n++) {
                    let e = this.optionsToDisplay[n];
                    if (!e.disabled) {
                      t = e;
                      break;
                    }
                  }
              }
              return t;
            }
            onKeydown(e, t) {
              if (
                !this.readonly &&
                this.optionsToDisplay &&
                null !== this.optionsToDisplay.length
              )
                switch (e.which) {
                  case 40:
                    if (!this.overlayVisible && e.altKey) this.show();
                    else if (this.group) {
                      let t = this.selectedOption
                        ? this.findOptionGroupIndex(
                            this.selectedOption.value,
                            this.optionsToDisplay
                          )
                        : -1;
                      if (-1 !== t) {
                        let n = t.itemIndex + 1;
                        n < this.optionsToDisplay[t.groupIndex].items.length
                          ? (this.selectItem(
                              e,
                              this.optionsToDisplay[t.groupIndex].items[n]
                            ),
                            (this.selectedOptionUpdated = !0))
                          : this.optionsToDisplay[t.groupIndex + 1] &&
                            (this.selectItem(
                              e,
                              this.optionsToDisplay[t.groupIndex + 1].items[0]
                            ),
                            (this.selectedOptionUpdated = !0));
                      } else
                        this.selectItem(e, this.optionsToDisplay[0].items[0]);
                    } else {
                      let t = this.selectedOption
                          ? this.findOptionIndex(
                              this.selectedOption.value,
                              this.optionsToDisplay
                            )
                          : -1,
                        n = this.findNextEnabledOption(t);
                      n &&
                        (this.selectItem(e, n),
                        (this.selectedOptionUpdated = !0));
                    }
                    e.preventDefault();
                    break;
                  case 38:
                    if (this.group) {
                      let t = this.selectedOption
                        ? this.findOptionGroupIndex(
                            this.selectedOption.value,
                            this.optionsToDisplay
                          )
                        : -1;
                      if (-1 !== t) {
                        let n = t.itemIndex - 1;
                        if (n >= 0)
                          this.selectItem(
                            e,
                            this.optionsToDisplay[t.groupIndex].items[n]
                          ),
                            (this.selectedOptionUpdated = !0);
                        else if (n < 0) {
                          let n = this.optionsToDisplay[t.groupIndex - 1];
                          n &&
                            (this.selectItem(e, n.items[n.items.length - 1]),
                            (this.selectedOptionUpdated = !0));
                        }
                      }
                    } else {
                      let t = this.selectedOption
                          ? this.findOptionIndex(
                              this.selectedOption.value,
                              this.optionsToDisplay
                            )
                          : -1,
                        n = this.findPrevEnabledOption(t);
                      n &&
                        (this.selectItem(e, n),
                        (this.selectedOptionUpdated = !0));
                    }
                    e.preventDefault();
                    break;
                  case 32:
                  case 32:
                    this.overlayVisible || (this.show(), e.preventDefault());
                    break;
                  case 13:
                    (!this.filter ||
                      (this.optionsToDisplay &&
                        this.optionsToDisplay.length > 0)) &&
                      this.hide(e),
                      e.preventDefault();
                    break;
                  case 27:
                  case 9:
                    this.hide(e);
                    break;
                  default:
                    t && !e.metaKey && this.search(e);
                }
            }
            search(e) {
              this.searchTimeout && clearTimeout(this.searchTimeout);
              const t = e.key;
              let n;
              if (
                ((this.previousSearchChar = this.currentSearchChar),
                (this.currentSearchChar = t),
                (this.searchValue =
                  this.previousSearchChar === this.currentSearchChar
                    ? this.currentSearchChar
                    : this.searchValue
                    ? this.searchValue + t
                    : t),
                this.group)
              ) {
                let e = this.selectedOption
                  ? this.findOptionGroupIndex(
                      this.selectedOption.value,
                      this.optionsToDisplay
                    )
                  : { groupIndex: 0, itemIndex: 0 };
                n = this.searchOptionWithinGroup(e);
              } else {
                let e = this.selectedOption
                  ? this.findOptionIndex(
                      this.selectedOption.value,
                      this.optionsToDisplay
                    )
                  : -1;
                n = this.searchOption(++e);
              }
              n &&
                !n.disabled &&
                (this.selectItem(e, n), (this.selectedOptionUpdated = !0)),
                (this.searchTimeout = setTimeout(() => {
                  this.searchValue = null;
                }, 250));
            }
            searchOption(e) {
              let t;
              return (
                this.searchValue &&
                  ((t = this.searchOptionInRange(
                    e,
                    this.optionsToDisplay.length
                  )),
                  t || (t = this.searchOptionInRange(0, e))),
                t
              );
            }
            searchOptionInRange(e, t) {
              for (let n = e; n < t; n++) {
                let e = this.optionsToDisplay[n];
                if (
                  e.label
                    .toLocaleLowerCase(this.filterLocale)
                    .startsWith(
                      this.searchValue.toLocaleLowerCase(this.filterLocale)
                    ) &&
                  !e.disabled
                )
                  return e;
              }
              return null;
            }
            searchOptionWithinGroup(e) {
              if (this.searchValue) {
                for (
                  let t = e.groupIndex;
                  t < this.optionsToDisplay.length;
                  t++
                )
                  for (
                    let n = e.groupIndex === t ? e.itemIndex + 1 : 0;
                    n < this.optionsToDisplay[t].items.length;
                    n++
                  ) {
                    let e = this.optionsToDisplay[t].items[n];
                    if (
                      e.label
                        .toLocaleLowerCase(this.filterLocale)
                        .startsWith(
                          this.searchValue.toLocaleLowerCase(this.filterLocale)
                        ) &&
                      !e.disabled
                    )
                      return e;
                  }
                for (let t = 0; t <= e.groupIndex; t++)
                  for (
                    let n = 0;
                    n <
                    (e.groupIndex === t
                      ? e.itemIndex
                      : this.optionsToDisplay[t].items.length);
                    n++
                  ) {
                    let e = this.optionsToDisplay[t].items[n];
                    if (
                      e.label
                        .toLocaleLowerCase(this.filterLocale)
                        .startsWith(
                          this.searchValue.toLocaleLowerCase(this.filterLocale)
                        ) &&
                      !e.disabled
                    )
                      return e;
                  }
              }
              return null;
            }
            findOptionIndex(e, t) {
              let n = -1;
              if (t)
                for (let i = 0; i < t.length; i++)
                  if (
                    (null == e && null == t[i].value) ||
                    c.b.equals(e, t[i].value, this.dataKey)
                  ) {
                    n = i;
                    break;
                  }
              return n;
            }
            findOptionGroupIndex(e, t) {
              let n, i;
              if (t)
                for (
                  let s = 0;
                  s < t.length &&
                  ((n = s),
                  (i = this.findOptionIndex(e, t[s].items)),
                  -1 === i);
                  s++
                );
              return -1 !== i ? { groupIndex: n, itemIndex: i } : -1;
            }
            findOption(e, t, n) {
              if (this.group && !n) {
                let n;
                if (t && t.length)
                  for (let i of t)
                    if (((n = this.findOption(e, i.items, !0)), n)) break;
                return n;
              }
              {
                let n = this.findOptionIndex(e, t);
                return -1 != n ? t[n] : null;
              }
            }
            onFilter(e) {
              let t = e.target.value;
              t && t.length
                ? ((this.filterValue = t), this.activateFilter())
                : ((this.filterValue = null),
                  (this.optionsToDisplay = this.options)),
                (this.optionsChanged = !0);
            }
            activateFilter() {
              let e = this.filterBy.split(",");
              if (this.options && this.options.length) {
                if (this.group) {
                  let t = [];
                  for (let n of this.options) {
                    let i = c.a.filter(
                      n.items,
                      e,
                      this.filterValue,
                      this.filterMatchMode,
                      this.filterLocale
                    );
                    i &&
                      i.length &&
                      t.push({ label: n.label, value: n.value, items: i });
                  }
                  this.optionsToDisplay = t;
                } else
                  this.optionsToDisplay = c.a.filter(
                    this.options,
                    e,
                    this.filterValue,
                    this.filterMatchMode,
                    this.filterLocale
                  );
                this.optionsChanged = !0;
              }
            }
            applyFocus() {
              this.editable
                ? l.a
                    .findSingle(
                      this.el.nativeElement,
                      ".ui-dropdown-label.ui-inputtext"
                    )
                    .focus()
                : l.a
                    .findSingle(this.el.nativeElement, "input[readonly]")
                    .focus();
            }
            focus() {
              this.applyFocus();
            }
            bindDocumentClickListener() {
              this.documentClickListener ||
                (this.documentClickListener = this.renderer.listen(
                  "document",
                  "click",
                  (e) => {
                    this.isOutsideClicked(e) &&
                      (this.hide(e), this.unbindDocumentClickListener()),
                      this.cd.markForCheck();
                  }
                ));
            }
            unbindDocumentClickListener() {
              this.documentClickListener &&
                (this.documentClickListener(),
                (this.documentClickListener = null));
            }
            bindDocumentResizeListener() {
              (this.documentResizeListener = this.onWindowResize.bind(this)),
                window.addEventListener("resize", this.documentResizeListener);
            }
            unbindDocumentResizeListener() {
              this.documentResizeListener &&
                (window.removeEventListener(
                  "resize",
                  this.documentResizeListener
                ),
                (this.documentResizeListener = null));
            }
            onWindowResize() {
              l.a.isAndroid() || this.hide(event);
            }
            clear(e) {
              (this.value = null),
                this.onModelChange(this.value),
                this.onChange.emit({ originalEvent: e, value: this.value }),
                this.updateSelectedOption(this.value),
                this.updateEditableLabel();
            }
            onOverlayHide() {
              this.unbindDocumentClickListener(),
                this.unbindDocumentResizeListener(),
                (this.overlay = null),
                (this.itemsWrapper = null),
                this.onModelTouched();
            }
            ngOnDestroy() {
              this.restoreOverlayAppend(), this.onOverlayHide();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(s.Rb(s.m), s.Rb(s.F), s.Rb(s.i), s.Rb(s.B));
            }),
            (e.ɵcmp = s.Lb({
              type: e,
              selectors: [["p-dropdown"]],
              contentQueries: function (e, t, n) {
                var i;
                1 & e && s.Jb(n, a.d, !1),
                  2 & e && s.Ac((i = s.gc())) && (t.templates = i);
              },
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (s.Qc(b, !0),
                  s.Qc(v, !0),
                  s.Qc(y, !0),
                  s.Qc(i.c, !0),
                  s.Qc(w, !0)),
                  2 & e &&
                    (s.Ac((n = s.gc())) && (t.containerViewChild = n.first),
                    s.Ac((n = s.gc())) && (t.filterViewChild = n.first),
                    s.Ac((n = s.gc())) && (t.accessibleViewChild = n.first),
                    s.Ac((n = s.gc())) && (t.viewPort = n.first),
                    s.Ac((n = s.gc())) && (t.editableInputViewChild = n.first));
              },
              hostVars: 4,
              hostBindings: function (e, t) {
                2 & e &&
                  s.Ib("ui-inputwrapper-filled", t.value)(
                    "ui-inputwrapper-focus",
                    t.focused
                  );
              },
              inputs: {
                scrollHeight: "scrollHeight",
                filterBy: "filterBy",
                resetFilterOnHide: "resetFilterOnHide",
                dropdownIcon: "dropdownIcon",
                autoDisplayFirst: "autoDisplayFirst",
                emptyFilterMessage: "emptyFilterMessage",
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                filterMatchMode: "filterMatchMode",
                tooltip: "tooltip",
                tooltipPosition: "tooltipPosition",
                tooltipPositionStyle: "tooltipPositionStyle",
                autofocusFilter: "autofocusFilter",
                disabled: "disabled",
                options: "options",
                filter: "filter",
                name: "name",
                style: "style",
                panelStyle: "panelStyle",
                styleClass: "styleClass",
                panelStyleClass: "panelStyleClass",
                readonly: "readonly",
                required: "required",
                editable: "editable",
                appendTo: "appendTo",
                tabindex: "tabindex",
                placeholder: "placeholder",
                filterPlaceholder: "filterPlaceholder",
                filterLocale: "filterLocale",
                inputId: "inputId",
                selectId: "selectId",
                dataKey: "dataKey",
                autofocus: "autofocus",
                optionLabel: "optionLabel",
                group: "group",
                showClear: "showClear",
                virtualScroll: "virtualScroll",
                itemSize: "itemSize",
                ariaFilterLabel: "ariaFilterLabel",
                ariaLabelledBy: "ariaLabelledBy",
                maxlength: "maxlength",
                tooltipStyleClass: "tooltipStyleClass",
              },
              outputs: {
                onChange: "onChange",
                onFocus: "onFocus",
                onBlur: "onBlur",
                onClick: "onClick",
                onShow: "onShow",
                onHide: "onHide",
              },
              features: [s.Db([K])],
              decls: 13,
              vars: 26,
              consts: [
                [3, "ngClass", "ngStyle", "click"],
                ["container", ""],
                [1, "ui-helper-hidden-accessible"],
                [
                  "type",
                  "text",
                  "readonly",
                  "",
                  "aria-haspopup",
                  "listbox",
                  "aria-haspopup",
                  "listbox",
                  "role",
                  "listbox",
                  3,
                  "disabled",
                  "focus",
                  "blur",
                  "keydown",
                ],
                ["in", ""],
                [
                  1,
                  "ui-dropdown-label-container",
                  3,
                  "pTooltip",
                  "tooltipPosition",
                  "positionStyle",
                  "tooltipStyleClass",
                ],
                [3, "ngClass", 4, "ngIf"],
                [
                  "type",
                  "text",
                  "class",
                  "ui-dropdown-label ui-inputtext ui-corner-all",
                  "aria-haspopup",
                  "listbox",
                  3,
                  "disabled",
                  "click",
                  "input",
                  "focus",
                  "blur",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "ui-dropdown-clear-icon pi pi-times",
                  3,
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "role",
                  "button",
                  "aria-haspopup",
                  "listbox",
                  1,
                  "ui-dropdown-trigger",
                  "ui-state-default",
                  "ui-corner-right",
                ],
                [1, "ui-dropdown-trigger-icon", "ui-clickable", 3, "ngClass"],
                [3, "ngClass", "ngStyle", "class", 4, "ngIf"],
                [3, "ngClass"],
                [4, "ngIf"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [
                  "type",
                  "text",
                  "aria-haspopup",
                  "listbox",
                  1,
                  "ui-dropdown-label",
                  "ui-inputtext",
                  "ui-corner-all",
                  3,
                  "disabled",
                  "click",
                  "input",
                  "focus",
                  "blur",
                ],
                ["editableInput", ""],
                [1, "ui-dropdown-clear-icon", "pi", "pi-times", 3, "click"],
                [3, "ngClass", "ngStyle"],
                [
                  "class",
                  "ui-dropdown-filter-container",
                  3,
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "ui-dropdown-items-wrapper"],
                [
                  1,
                  "ui-dropdown-items",
                  "ui-dropdown-list",
                  "ui-widget-content",
                  "ui-widget",
                  "ui-corner-all",
                  "ui-helper-reset",
                ],
                ["itemslist", ""],
                ["class", "ui-dropdown-empty-message", 4, "ngIf"],
                [1, "ui-dropdown-filter-container", 3, "click"],
                [
                  "type",
                  "text",
                  "autocomplete",
                  "off",
                  1,
                  "ui-dropdown-filter",
                  "ui-inputtext",
                  "ui-widget",
                  "ui-state-default",
                  "ui-corner-all",
                  3,
                  "value",
                  "keydown.enter",
                  "keydown",
                  "input",
                ],
                ["filter", ""],
                [1, "ui-dropdown-filter-icon", "pi", "pi-search"],
                ["ngFor", "", 3, "ngForOf"],
                [1, "ui-dropdown-item-group"],
                [4, "ngIf", "ngIfElse"],
                ["virtualScrollList", ""],
                [3, "option", "selected", "template", "onClick"],
                [3, "ngStyle", "itemSize", "scrolledIndexChange", 4, "ngIf"],
                [3, "ngStyle", "itemSize", "scrolledIndexChange"],
                ["viewport", ""],
                [
                  4,
                  "cdkVirtualFor",
                  "cdkVirtualForOf",
                  "cdkVirtualForTemplateCacheSize",
                ],
                [1, "ui-dropdown-empty-message"],
              ],
              template: function (e, t) {
                1 & e &&
                  (s.Xb(0, "div", 0, 1),
                  s.fc("click", function (e) {
                    return t.onMouseclick(e);
                  }),
                  s.Xb(2, "div", 2),
                  s.Xb(3, "input", 3, 4),
                  s.fc("focus", function (e) {
                    return t.onInputFocus(e);
                  })("blur", function (e) {
                    return t.onInputBlur(e);
                  })("keydown", function (e) {
                    return t.onKeydown(e, !0);
                  }),
                  s.Wb(),
                  s.Wb(),
                  s.Xb(5, "div", 5),
                  s.Lc(6, E, 3, 8, "span", 6),
                  s.Lc(7, x, 2, 4, "span", 6),
                  s.Lc(8, T, 2, 4, "input", 7),
                  s.Lc(9, k, 1, 0, "i", 8),
                  s.Wb(),
                  s.Xb(10, "div", 9),
                  s.Sb(11, "span", 10),
                  s.Wb(),
                  s.Lc(12, $, 9, 16, "div", 11),
                  s.Wb()),
                  2 & e &&
                    (s.Gb(t.styleClass),
                    s.pc(
                      "ngClass",
                      s.vc(
                        21,
                        q,
                        t.disabled,
                        t.overlayVisible,
                        t.focused,
                        t.showClear && !t.disabled
                      )
                    )("ngStyle", t.style),
                    s.Eb(3),
                    s.pc("disabled", t.disabled),
                    s.Fb("id", t.inputId)("aria-expanded", t.overlayVisible)(
                      "aria-labelledby",
                      t.ariaLabelledBy
                    )("tabindex", t.tabindex)("autofocus", t.autofocus),
                    s.Eb(2),
                    s.pc("pTooltip", t.tooltip)(
                      "tooltipPosition",
                      t.tooltipPosition
                    )("positionStyle", t.tooltipPositionStyle)(
                      "tooltipStyleClass",
                      t.tooltipStyleClass
                    ),
                    s.Eb(1),
                    s.pc("ngIf", !t.editable && null != t.label),
                    s.Eb(1),
                    s.pc("ngIf", !t.editable && null == t.label),
                    s.Eb(1),
                    s.pc("ngIf", t.editable),
                    s.Eb(1),
                    s.pc("ngIf", null != t.value && t.showClear && !t.disabled),
                    s.Eb(1),
                    s.Fb("aria-expanded", t.overlayVisible),
                    s.Eb(1),
                    s.pc("ngClass", t.dropdownIcon),
                    s.Eb(1),
                    s.pc("ngIf", t.overlayVisible));
              },
              directives: [o.k, o.n, h.a, o.m, o.r, o.l, Y, i.c, i.a, i.b],
              encapsulation: 2,
              data: {
                animation: [
                  Object(r.m)("overlayAnimation", [
                    Object(r.j)(
                      "void",
                      Object(r.k)({ transform: "translateY(5%)", opacity: 0 })
                    ),
                    Object(r.j)(
                      "visible",
                      Object(r.k)({ transform: "translateY(0)", opacity: 1 })
                    ),
                    Object(r.l)(
                      "void => visible",
                      Object(r.e)("{{showTransitionParams}}")
                    ),
                    Object(r.l)(
                      "visible => void",
                      Object(r.e)("{{hideTransitionParams}}")
                    ),
                  ]),
                ],
              },
            })),
            e
          );
        })(),
        Q = (() => {
          let e = class {};
          return (
            (e.ɵmod = s.Pb({ type: e })),
            (e.ɵinj = s.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[o.c, a.e, i.d, h.b], a.e, i.d],
            })),
            e
          );
        })();
    },
    "2QA8": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (() =>
        "function" == typeof Symbol
          ? Symbol("rxSubscriber")
          : "@@rxSubscriber_" + Math.random())();
    },
    "2Vo4": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("XNiG"),
        s = n("9ppp");
      class r extends i.b {
        constructor(e) {
          super(), (this._value = e);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(e) {
          const t = super._subscribe(e);
          return t && !t.closed && e.next(this._value), t;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new s.a();
          return this._value;
        }
        next(e) {
          super.next((this._value = e));
        }
      }
    },
    "2fFW": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      let i = !1;
      const s = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(e) {
          if (e) {
            const e = new Error();
            console.warn(
              "DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n" +
                e.stack
            );
          } else
            i &&
              console.log(
                "RxJS: Back to a better error behavior. Thank you. <3"
              );
          i = e;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return i;
        },
      };
    },
    "3N8a": function (e, t, n) {
      "use strict";
      var i = n("quSY");
      class s extends i.a {
        constructor(e, t) {
          super();
        }
        schedule(e, t = 0) {
          return this;
        }
      }
      n.d(t, "a", function () {
        return r;
      });
      class r extends s {
        constructor(e, t) {
          super(e, t),
            (this.scheduler = e),
            (this.work = t),
            (this.pending = !1);
        }
        schedule(e, t = 0) {
          if (this.closed) return this;
          this.state = e;
          const n = this.id,
            i = this.scheduler;
          return (
            null != n && (this.id = this.recycleAsyncId(i, n, t)),
            (this.pending = !0),
            (this.delay = t),
            (this.id = this.id || this.requestAsyncId(i, this.id, t)),
            this
          );
        }
        requestAsyncId(e, t, n = 0) {
          return setInterval(e.flush.bind(e, this), n);
        }
        recycleAsyncId(e, t, n = 0) {
          if (null !== n && this.delay === n && !1 === this.pending) return t;
          clearInterval(t);
        }
        execute(e, t) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const n = this._execute(e, t);
          if (n) return n;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(e, t) {
          let n = !1,
            i = void 0;
          try {
            this.work(e);
          } catch (s) {
            (n = !0), (i = (!!s && s) || new Error(s));
          }
          if (n) return this.unsubscribe(), i;
        }
        _unsubscribe() {
          const e = this.id,
            t = this.scheduler,
            n = t.actions,
            i = n.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== i && n.splice(i, 1),
            null != e && (this.id = this.recycleAsyncId(t, e, null)),
            (this.delay = null);
        }
      }
    },
    "3Pt+": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return pe;
      }),
        n.d(t, "b", function () {
          return u;
        }),
        n.d(t, "c", function () {
          return p;
        }),
        n.d(t, "d", function () {
          return je;
        }),
        n.d(t, "e", function () {
          return fe;
        }),
        n.d(t, "f", function () {
          return Pe;
        }),
        n.d(t, "g", function () {
          return Ne;
        }),
        n.d(t, "h", function () {
          return Fe;
        }),
        n.d(t, "i", function () {
          return Ae;
        }),
        n.d(t, "j", function () {
          return l;
        }),
        n.d(t, "k", function () {
          return v;
        }),
        n.d(t, "l", function () {
          return w;
        }),
        n.d(t, "m", function () {
          return S;
        }),
        n.d(t, "n", function () {
          return Te;
        }),
        n.d(t, "o", function () {
          return G;
        }),
        n.d(t, "p", function () {
          return N;
        }),
        n.d(t, "q", function () {
          return D;
        }),
        n.d(t, "r", function () {
          return Ve;
        }),
        n.d(t, "s", function () {
          return U;
        }),
        n.d(t, "t", function () {
          return x;
        }),
        n.d(t, "u", function () {
          return Y;
        }),
        n.d(t, "v", function () {
          return ke;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("cp0P"),
        o = n("Cfvw"),
        a = n("lJxs");
      const l = new i.r("NgValueAccessor"),
        c = { provide: l, useExisting: Object(i.V)(() => u), multi: !0 };
      let u = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {});
          }
          writeValue(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "checked",
              e
            );
          }
          registerOnChange(e) {
            this.onChange = e;
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(i.F), i.Rb(i.m));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [
              ["input", "type", "checkbox", "formControlName", ""],
              ["input", "type", "checkbox", "formControl", ""],
              ["input", "type", "checkbox", "ngModel", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                i.fc("change", function (e) {
                  return t.onChange(e.target.checked);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            features: [i.Db([c])],
          })),
          e
        );
      })();
      const h = { provide: l, useExisting: Object(i.V)(() => p), multi: !0 },
        d = new i.r("CompositionEventMode");
      let p = (() => {
          class e {
            constructor(e, t, n) {
              (this._renderer = e),
                (this._elementRef = t),
                (this._compositionMode = n),
                (this.onChange = (e) => {}),
                (this.onTouched = () => {}),
                (this._composing = !1),
                null == this._compositionMode &&
                  (this._compositionMode = !(function () {
                    const e = Object(s.A)() ? Object(s.A)().getUserAgent() : "";
                    return /android (\d+)/.test(e.toLowerCase());
                  })());
            }
            writeValue(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "value",
                null == e ? "" : e
              );
            }
            registerOnChange(e) {
              this.onChange = e;
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            setDisabledState(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "disabled",
                e
              );
            }
            _handleInput(e) {
              (!this._compositionMode ||
                (this._compositionMode && !this._composing)) &&
                this.onChange(e);
            }
            _compositionStart() {
              this._composing = !0;
            }
            _compositionEnd(e) {
              (this._composing = !1), this._compositionMode && this.onChange(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.F), i.Rb(i.m), i.Rb(d, 8));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["input", "formControlName", "", 3, "type", "checkbox"],
                ["textarea", "formControlName", ""],
                ["input", "formControl", "", 3, "type", "checkbox"],
                ["textarea", "formControl", ""],
                ["input", "ngModel", "", 3, "type", "checkbox"],
                ["textarea", "ngModel", ""],
                ["", "ngDefaultControl", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  i.fc("input", function (e) {
                    return t._handleInput(e.target.value);
                  })("blur", function () {
                    return t.onTouched();
                  })("compositionstart", function () {
                    return t._compositionStart();
                  })("compositionend", function (e) {
                    return t._compositionEnd(e.target.value);
                  });
              },
              features: [i.Db([h])],
            })),
            e
          );
        })(),
        f = (() => {
          class e {
            get value() {
              return this.control ? this.control.value : null;
            }
            get valid() {
              return this.control ? this.control.valid : null;
            }
            get invalid() {
              return this.control ? this.control.invalid : null;
            }
            get pending() {
              return this.control ? this.control.pending : null;
            }
            get disabled() {
              return this.control ? this.control.disabled : null;
            }
            get enabled() {
              return this.control ? this.control.enabled : null;
            }
            get errors() {
              return this.control ? this.control.errors : null;
            }
            get pristine() {
              return this.control ? this.control.pristine : null;
            }
            get dirty() {
              return this.control ? this.control.dirty : null;
            }
            get touched() {
              return this.control ? this.control.touched : null;
            }
            get status() {
              return this.control ? this.control.status : null;
            }
            get untouched() {
              return this.control ? this.control.untouched : null;
            }
            get statusChanges() {
              return this.control ? this.control.statusChanges : null;
            }
            get valueChanges() {
              return this.control ? this.control.valueChanges : null;
            }
            get path() {
              return null;
            }
            reset(e) {
              this.control && this.control.reset(e);
            }
            hasError(e, t) {
              return !!this.control && this.control.hasError(e, t);
            }
            getError(e, t) {
              return this.control ? this.control.getError(e, t) : null;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = i.Mb({ type: e })),
            e
          );
        })(),
        g = (() => {
          class e extends f {
            get formDirective() {
              return null;
            }
            get path() {
              return null;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return m(t || e);
            }),
            (e.ɵdir = i.Mb({ type: e, features: [i.Bb] })),
            e
          );
        })();
      const m = i.Zb(g);
      function b() {
        throw new Error("unimplemented");
      }
      class v extends f {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null),
            (this._rawValidators = []),
            (this._rawAsyncValidators = []);
        }
        get validator() {
          return b();
        }
        get asyncValidator() {
          return b();
        }
      }
      class y {
        constructor(e) {
          this._cd = e;
        }
        get ngClassUntouched() {
          return !!this._cd.control && this._cd.control.untouched;
        }
        get ngClassTouched() {
          return !!this._cd.control && this._cd.control.touched;
        }
        get ngClassPristine() {
          return !!this._cd.control && this._cd.control.pristine;
        }
        get ngClassDirty() {
          return !!this._cd.control && this._cd.control.dirty;
        }
        get ngClassValid() {
          return !!this._cd.control && this._cd.control.valid;
        }
        get ngClassInvalid() {
          return !!this._cd.control && this._cd.control.invalid;
        }
        get ngClassPending() {
          return !!this._cd.control && this._cd.control.pending;
        }
      }
      let w = (() => {
          class e extends y {
            constructor(e) {
              super(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(v, 2));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (e, t) {
                2 & e &&
                  i.Ib("ng-untouched", t.ngClassUntouched)(
                    "ng-touched",
                    t.ngClassTouched
                  )("ng-pristine", t.ngClassPristine)(
                    "ng-dirty",
                    t.ngClassDirty
                  )("ng-valid", t.ngClassValid)("ng-invalid", t.ngClassInvalid)(
                    "ng-pending",
                    t.ngClassPending
                  );
              },
              features: [i.Bb],
            })),
            e
          );
        })(),
        S = (() => {
          class e extends y {
            constructor(e) {
              super(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(g, 2));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 14,
              hostBindings: function (e, t) {
                2 & e &&
                  i.Ib("ng-untouched", t.ngClassUntouched)(
                    "ng-touched",
                    t.ngClassTouched
                  )("ng-pristine", t.ngClassPristine)(
                    "ng-dirty",
                    t.ngClassDirty
                  )("ng-valid", t.ngClassValid)("ng-invalid", t.ngClassInvalid)(
                    "ng-pending",
                    t.ngClassPending
                  );
              },
              features: [i.Bb],
            })),
            e
          );
        })();
      function _(e) {
        return null == e || 0 === e.length;
      }
      const C = new i.r("NgValidators"),
        E = new i.r("NgAsyncValidators"),
        O =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class x {
        static min(e) {
          return (t) => {
            if (_(t.value) || _(e)) return null;
            const n = parseFloat(t.value);
            return !isNaN(n) && n < e
              ? { min: { min: e, actual: t.value } }
              : null;
          };
        }
        static max(e) {
          return (t) => {
            if (_(t.value) || _(e)) return null;
            const n = parseFloat(t.value);
            return !isNaN(n) && n > e
              ? { max: { max: e, actual: t.value } }
              : null;
          };
        }
        static required(e) {
          return _(e.value) ? { required: !0 } : null;
        }
        static requiredTrue(e) {
          return !0 === e.value ? null : { required: !0 };
        }
        static email(e) {
          return _(e.value) || O.test(e.value) ? null : { email: !0 };
        }
        static minLength(e) {
          return (t) => {
            if (_(t.value)) return null;
            const n = t.value ? t.value.length : 0;
            return n < e
              ? { minlength: { requiredLength: e, actualLength: n } }
              : null;
          };
        }
        static maxLength(e) {
          return (t) => {
            const n = t.value ? t.value.length : 0;
            return n > e
              ? { maxlength: { requiredLength: e, actualLength: n } }
              : null;
          };
        }
        static pattern(e) {
          if (!e) return x.nullValidator;
          let t, n;
          return (
            "string" == typeof e
              ? ((n = ""),
                "^" !== e.charAt(0) && (n += "^"),
                (n += e),
                "$" !== e.charAt(e.length - 1) && (n += "$"),
                (t = new RegExp(n)))
              : ((n = e.toString()), (t = e)),
            (e) => {
              if (_(e.value)) return null;
              const i = e.value;
              return t.test(i)
                ? null
                : { pattern: { requiredPattern: n, actualValue: i } };
            }
          );
        }
        static nullValidator(e) {
          return null;
        }
        static compose(e) {
          if (!e) return null;
          const t = e.filter(T);
          return 0 == t.length
            ? null
            : function (e) {
                return M(
                  (function (e, t) {
                    return t.map((t) => t(e));
                  })(e, t)
                );
              };
        }
        static composeAsync(e) {
          if (!e) return null;
          const t = e.filter(T);
          return 0 == t.length
            ? null
            : function (e) {
                const n = (function (e, t) {
                  return t.map((t) => t(e));
                })(e, t).map(k);
                return Object(r.a)(n).pipe(Object(a.a)(M));
              };
        }
      }
      function T(e) {
        return null != e;
      }
      function k(e) {
        const t = Object(i.vb)(e) ? Object(o.a)(e) : e;
        if (!Object(i.ub)(t))
          throw new Error(
            "Expected validator to return Promise or Observable."
          );
        return t;
      }
      function M(e) {
        let t = {};
        return (
          e.forEach((e) => {
            t = null != e ? Object.assign(Object.assign({}, t), e) : t;
          }),
          0 === Object.keys(t).length ? null : t
        );
      }
      function I(e) {
        return e.validate ? (t) => e.validate(t) : e;
      }
      function P(e) {
        return e.validate ? (t) => e.validate(t) : e;
      }
      const R = { provide: l, useExisting: Object(i.V)(() => N), multi: !0 };
      let N = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {});
          }
          writeValue(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "value",
              null == e ? "" : e
            );
          }
          registerOnChange(e) {
            this.onChange = (t) => {
              e("" == t ? null : parseFloat(t));
            };
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(i.F), i.Rb(i.m));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [
              ["input", "type", "number", "formControlName", ""],
              ["input", "type", "number", "formControl", ""],
              ["input", "type", "number", "ngModel", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                i.fc("change", function (e) {
                  return t.onChange(e.target.value);
                })("input", function (e) {
                  return t.onChange(e.target.value);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            features: [i.Db([R])],
          })),
          e
        );
      })();
      const L = { provide: l, useExisting: Object(i.V)(() => D), multi: !0 };
      let A = (() => {
          class e {
            constructor() {
              this._accessors = [];
            }
            add(e, t) {
              this._accessors.push([e, t]);
            }
            remove(e) {
              for (let t = this._accessors.length - 1; t >= 0; --t)
                if (this._accessors[t][1] === e)
                  return void this._accessors.splice(t, 1);
            }
            select(e) {
              this._accessors.forEach((t) => {
                this._isSameGroup(t, e) &&
                  t[1] !== e &&
                  t[1].fireUncheck(e.value);
              });
            }
            _isSameGroup(e, t) {
              return (
                !!e[0].control &&
                e[0]._parent === t._control._parent &&
                e[1].name === t.name
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        D = (() => {
          class e {
            constructor(e, t, n, i) {
              (this._renderer = e),
                (this._elementRef = t),
                (this._registry = n),
                (this._injector = i),
                (this.onChange = () => {}),
                (this.onTouched = () => {});
            }
            ngOnInit() {
              (this._control = this._injector.get(v)),
                this._checkName(),
                this._registry.add(this._control, this);
            }
            ngOnDestroy() {
              this._registry.remove(this);
            }
            writeValue(e) {
              (this._state = e === this.value),
                this._renderer.setProperty(
                  this._elementRef.nativeElement,
                  "checked",
                  this._state
                );
            }
            registerOnChange(e) {
              (this._fn = e),
                (this.onChange = () => {
                  e(this.value), this._registry.select(this);
                });
            }
            fireUncheck(e) {
              this.writeValue(e);
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            setDisabledState(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "disabled",
                e
              );
            }
            _checkName() {
              this.name &&
                this.formControlName &&
                this.name !== this.formControlName &&
                this._throwNameError(),
                !this.name &&
                  this.formControlName &&
                  (this.name = this.formControlName);
            }
            _throwNameError() {
              throw new Error(
                '\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type="radio" formControlName="food" name="food">\n    '
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.F), i.Rb(i.m), i.Rb(A), i.Rb(i.s));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["input", "type", "radio", "formControlName", ""],
                ["input", "type", "radio", "formControl", ""],
                ["input", "type", "radio", "ngModel", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  i.fc("change", function () {
                    return t.onChange();
                  })("blur", function () {
                    return t.onTouched();
                  });
              },
              inputs: {
                name: "name",
                formControlName: "formControlName",
                value: "value",
              },
              features: [i.Db([L])],
            })),
            e
          );
        })();
      const j = { provide: l, useExisting: Object(i.V)(() => F), multi: !0 };
      let F = (() => {
        class e {
          constructor(e, t) {
            (this._renderer = e),
              (this._elementRef = t),
              (this.onChange = (e) => {}),
              (this.onTouched = () => {});
          }
          writeValue(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "value",
              parseFloat(e)
            );
          }
          registerOnChange(e) {
            this.onChange = (t) => {
              e("" == t ? null : parseFloat(t));
            };
          }
          registerOnTouched(e) {
            this.onTouched = e;
          }
          setDisabledState(e) {
            this._renderer.setProperty(
              this._elementRef.nativeElement,
              "disabled",
              e
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(i.F), i.Rb(i.m));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [
              ["input", "type", "range", "formControlName", ""],
              ["input", "type", "range", "formControl", ""],
              ["input", "type", "range", "ngModel", ""],
            ],
            hostBindings: function (e, t) {
              1 & e &&
                i.fc("change", function (e) {
                  return t.onChange(e.target.value);
                })("input", function (e) {
                  return t.onChange(e.target.value);
                })("blur", function () {
                  return t.onTouched();
                });
            },
            features: [i.Db([j])],
          })),
          e
        );
      })();
      const V =
          '\n    <div [formGroup]="myGroup">\n      <input formControlName="firstName">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });',
        W =
          '\n    <div [formGroup]="myGroup">\n       <div formGroupName="person">\n          <input formControlName="firstName">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });',
        z =
          '\n    <form>\n       <div ngModelGroup="person">\n          <input [(ngModel)]="person.name" name="firstName">\n       </div>\n    </form>';
      class X {
        static controlParentException() {
          throw new Error(
            "formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " +
              V
          );
        }
        static ngModelGroupException() {
          throw new Error(
            `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a "form" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${W}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${z}`
          );
        }
        static missingFormException() {
          throw new Error(
            "formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       " +
              V
          );
        }
        static groupParentException() {
          throw new Error(
            "formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      " +
              W
          );
        }
        static arrayParentException() {
          throw new Error(
            'formArrayName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        \n    <div [formGroup]="myGroup">\n      <div formArrayName="cities">\n        <div *ngFor="let city of cityArray.controls; index as i">\n          <input [formControlName]="i">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl(\'SF\')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });'
          );
        }
        static disabledAttrWarning() {
          console.warn(
            "\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    "
          );
        }
        static ngModelWarning(e) {
          console.warn(
            `\n    It looks like you're using ngModel on the same form field as ${e}. \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${
              "formControl" === e ? "FormControlDirective" : "FormControlName"
            }#use-with-ngmodel\n    `
          );
        }
      }
      const B = { provide: l, useExisting: Object(i.V)(() => U), multi: !0 };
      function H(e, t) {
        return null == e
          ? "" + t
          : (t && "object" == typeof t && (t = "Object"),
            `${e}: ${t}`.slice(0, 50));
      }
      let U = (() => {
          class e {
            constructor(e, t) {
              (this._renderer = e),
                (this._elementRef = t),
                (this._optionMap = new Map()),
                (this._idCounter = 0),
                (this.onChange = (e) => {}),
                (this.onTouched = () => {}),
                (this._compareWith = i.wb);
            }
            set compareWith(e) {
              if ("function" != typeof e)
                throw new Error(
                  "compareWith must be a function, but received " +
                    JSON.stringify(e)
                );
              this._compareWith = e;
            }
            writeValue(e) {
              this.value = e;
              const t = this._getOptionId(e);
              null == t &&
                this._renderer.setProperty(
                  this._elementRef.nativeElement,
                  "selectedIndex",
                  -1
                );
              const n = H(t, e);
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "value",
                n
              );
            }
            registerOnChange(e) {
              this.onChange = (t) => {
                (this.value = this._getOptionValue(t)), e(this.value);
              };
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            setDisabledState(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "disabled",
                e
              );
            }
            _registerOption() {
              return (this._idCounter++).toString();
            }
            _getOptionId(e) {
              for (const t of Array.from(this._optionMap.keys()))
                if (this._compareWith(this._optionMap.get(t), e)) return t;
              return null;
            }
            _getOptionValue(e) {
              const t = (function (e) {
                return e.split(":")[0];
              })(e);
              return this._optionMap.has(t) ? this._optionMap.get(t) : e;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.F), i.Rb(i.m));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["select", "formControlName", "", 3, "multiple", ""],
                ["select", "formControl", "", 3, "multiple", ""],
                ["select", "ngModel", "", 3, "multiple", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  i.fc("change", function (e) {
                    return t.onChange(e.target.value);
                  })("blur", function () {
                    return t.onTouched();
                  });
              },
              inputs: { compareWith: "compareWith" },
              features: [i.Db([B])],
            })),
            e
          );
        })(),
        G = (() => {
          class e {
            constructor(e, t, n) {
              (this._element = e),
                (this._renderer = t),
                (this._select = n),
                this._select && (this.id = this._select._registerOption());
            }
            set ngValue(e) {
              null != this._select &&
                (this._select._optionMap.set(this.id, e),
                this._setElementValue(H(this.id, e)),
                this._select.writeValue(this._select.value));
            }
            set value(e) {
              this._setElementValue(e),
                this._select && this._select.writeValue(this._select.value);
            }
            _setElementValue(e) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "value",
                e
              );
            }
            ngOnDestroy() {
              this._select &&
                (this._select._optionMap.delete(this.id),
                this._select.writeValue(this._select.value));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.F), i.Rb(U, 9));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["option"]],
              inputs: { ngValue: "ngValue", value: "value" },
            })),
            e
          );
        })();
      const $ = { provide: l, useExisting: Object(i.V)(() => K), multi: !0 };
      function q(e, t) {
        return null == e
          ? "" + t
          : ("string" == typeof t && (t = `'${t}'`),
            t && "object" == typeof t && (t = "Object"),
            `${e}: ${t}`.slice(0, 50));
      }
      let K = (() => {
          class e {
            constructor(e, t) {
              (this._renderer = e),
                (this._elementRef = t),
                (this._optionMap = new Map()),
                (this._idCounter = 0),
                (this.onChange = (e) => {}),
                (this.onTouched = () => {}),
                (this._compareWith = i.wb);
            }
            set compareWith(e) {
              if ("function" != typeof e)
                throw new Error(
                  "compareWith must be a function, but received " +
                    JSON.stringify(e)
                );
              this._compareWith = e;
            }
            writeValue(e) {
              let t;
              if (((this.value = e), Array.isArray(e))) {
                const n = e.map((e) => this._getOptionId(e));
                t = (e, t) => {
                  e._setSelected(n.indexOf(t.toString()) > -1);
                };
              } else
                t = (e, t) => {
                  e._setSelected(!1);
                };
              this._optionMap.forEach(t);
            }
            registerOnChange(e) {
              this.onChange = (t) => {
                const n = [];
                if (t.hasOwnProperty("selectedOptions")) {
                  const e = t.selectedOptions;
                  for (let t = 0; t < e.length; t++) {
                    const i = e.item(t),
                      s = this._getOptionValue(i.value);
                    n.push(s);
                  }
                } else {
                  const e = t.options;
                  for (let t = 0; t < e.length; t++) {
                    const i = e.item(t);
                    if (i.selected) {
                      const e = this._getOptionValue(i.value);
                      n.push(e);
                    }
                  }
                }
                (this.value = n), e(n);
              };
            }
            registerOnTouched(e) {
              this.onTouched = e;
            }
            setDisabledState(e) {
              this._renderer.setProperty(
                this._elementRef.nativeElement,
                "disabled",
                e
              );
            }
            _registerOption(e) {
              const t = (this._idCounter++).toString();
              return this._optionMap.set(t, e), t;
            }
            _getOptionId(e) {
              for (const t of Array.from(this._optionMap.keys()))
                if (this._compareWith(this._optionMap.get(t)._value, e))
                  return t;
              return null;
            }
            _getOptionValue(e) {
              const t = (function (e) {
                return e.split(":")[0];
              })(e);
              return this._optionMap.has(t) ? this._optionMap.get(t)._value : e;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.F), i.Rb(i.m));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["select", "multiple", "", "formControlName", ""],
                ["select", "multiple", "", "formControl", ""],
                ["select", "multiple", "", "ngModel", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  i.fc("change", function (e) {
                    return t.onChange(e.target);
                  })("blur", function () {
                    return t.onTouched();
                  });
              },
              inputs: { compareWith: "compareWith" },
              features: [i.Db([$])],
            })),
            e
          );
        })(),
        Y = (() => {
          class e {
            constructor(e, t, n) {
              (this._element = e),
                (this._renderer = t),
                (this._select = n),
                this._select && (this.id = this._select._registerOption(this));
            }
            set ngValue(e) {
              null != this._select &&
                ((this._value = e),
                this._setElementValue(q(this.id, e)),
                this._select.writeValue(this._select.value));
            }
            set value(e) {
              this._select
                ? ((this._value = e),
                  this._setElementValue(q(this.id, e)),
                  this._select.writeValue(this._select.value))
                : this._setElementValue(e);
            }
            _setElementValue(e) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "value",
                e
              );
            }
            _setSelected(e) {
              this._renderer.setProperty(
                this._element.nativeElement,
                "selected",
                e
              );
            }
            ngOnDestroy() {
              this._select &&
                (this._select._optionMap.delete(this.id),
                this._select.writeValue(this._select.value));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.F), i.Rb(K, 9));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["option"]],
              inputs: { ngValue: "ngValue", value: "value" },
            })),
            e
          );
        })();
      function Z(e, t) {
        return [...t.path, e];
      }
      function Q(e, t) {
        e || ne(t, "Cannot find control with"),
          t.valueAccessor || ne(t, "No value accessor for form control with"),
          (e.validator = x.compose([e.validator, t.validator])),
          (e.asyncValidator = x.composeAsync([
            e.asyncValidator,
            t.asyncValidator,
          ])),
          t.valueAccessor.writeValue(e.value),
          (function (e, t) {
            t.valueAccessor.registerOnChange((n) => {
              (e._pendingValue = n),
                (e._pendingChange = !0),
                (e._pendingDirty = !0),
                "change" === e.updateOn && J(e, t);
            });
          })(e, t),
          (function (e, t) {
            e.registerOnChange((e, n) => {
              t.valueAccessor.writeValue(e), n && t.viewToModelUpdate(e);
            });
          })(e, t),
          (function (e, t) {
            t.valueAccessor.registerOnTouched(() => {
              (e._pendingTouched = !0),
                "blur" === e.updateOn && e._pendingChange && J(e, t),
                "submit" !== e.updateOn && e.markAsTouched();
            });
          })(e, t),
          t.valueAccessor.setDisabledState &&
            e.registerOnDisabledChange((e) => {
              t.valueAccessor.setDisabledState(e);
            }),
          t._rawValidators.forEach((t) => {
            t.registerOnValidatorChange &&
              t.registerOnValidatorChange(() => e.updateValueAndValidity());
          }),
          t._rawAsyncValidators.forEach((t) => {
            t.registerOnValidatorChange &&
              t.registerOnValidatorChange(() => e.updateValueAndValidity());
          });
      }
      function J(e, t) {
        e._pendingDirty && e.markAsDirty(),
          e.setValue(e._pendingValue, { emitModelToViewChange: !1 }),
          t.viewToModelUpdate(e._pendingValue),
          (e._pendingChange = !1);
      }
      function ee(e, t) {
        null == e && ne(t, "Cannot find control with"),
          (e.validator = x.compose([e.validator, t.validator])),
          (e.asyncValidator = x.composeAsync([
            e.asyncValidator,
            t.asyncValidator,
          ]));
      }
      function te(e) {
        return ne(
          e,
          "There is no FormControl instance attached to form control element with"
        );
      }
      function ne(e, t) {
        let n;
        throw (
          ((n =
            e.path.length > 1
              ? `path: '${e.path.join(" -> ")}'`
              : e.path[0]
              ? `name: '${e.path}'`
              : "unspecified name attribute"),
          new Error(`${t} ${n}`))
        );
      }
      function ie(e) {
        return null != e ? x.compose(e.map(I)) : null;
      }
      function se(e) {
        return null != e ? x.composeAsync(e.map(P)) : null;
      }
      function re(e, t) {
        if (!e.hasOwnProperty("model")) return !1;
        const n = e.model;
        return !!n.isFirstChange() || !Object(i.wb)(t, n.currentValue);
      }
      const oe = [u, F, N, U, K, D];
      function ae(e, t) {
        e._syncPendingControls(),
          t.forEach((e) => {
            const t = e.control;
            "submit" === t.updateOn &&
              t._pendingChange &&
              (e.viewToModelUpdate(t._pendingValue), (t._pendingChange = !1));
          });
      }
      function le(e, t) {
        if (!t) return null;
        Array.isArray(t) ||
          ne(
            e,
            "Value accessor was not provided as an array for form control with"
          );
        let n = void 0,
          i = void 0,
          s = void 0;
        return (
          t.forEach((t) => {
            var r;
            t.constructor === p
              ? (n = t)
              : ((r = t),
                oe.some((e) => r.constructor === e)
                  ? (i &&
                      ne(
                        e,
                        "More than one built-in value accessor matches form control with"
                      ),
                    (i = t))
                  : (s &&
                      ne(
                        e,
                        "More than one custom value accessor matches form control with"
                      ),
                    (s = t)));
          }),
          s ||
            i ||
            n ||
            (ne(e, "No valid value accessor for form control with"), null)
        );
      }
      function ce(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      function ue(e) {
        const t = de(e) ? e.validators : e;
        return Array.isArray(t) ? ie(t) : t || null;
      }
      function he(e, t) {
        const n = de(t) ? t.asyncValidators : e;
        return Array.isArray(n) ? se(n) : n || null;
      }
      function de(e) {
        return null != e && !Array.isArray(e) && "object" == typeof e;
      }
      class pe {
        constructor(e, t) {
          (this.validator = e),
            (this.asyncValidator = t),
            (this._onCollectionChange = () => {}),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []);
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return "VALID" === this.status;
        }
        get invalid() {
          return "INVALID" === this.status;
        }
        get pending() {
          return "PENDING" == this.status;
        }
        get disabled() {
          return "DISABLED" === this.status;
        }
        get enabled() {
          return "DISABLED" !== this.status;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(e) {
          this.validator = ue(e);
        }
        setAsyncValidators(e) {
          this.asyncValidator = he(e);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(e = {}) {
          (this.touched = !0),
            this._parent && !e.onlySelf && this._parent.markAsTouched(e);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((e) => e.markAllAsTouched());
        }
        markAsUntouched(e = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((e) => {
              e.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        markAsDirty(e = {}) {
          (this.pristine = !1),
            this._parent && !e.onlySelf && this._parent.markAsDirty(e);
        }
        markAsPristine(e = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((e) => {
              e.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        markAsPending(e = {}) {
          (this.status = "PENDING"),
            !1 !== e.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !e.onlySelf && this._parent.markAsPending(e);
        }
        disable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = "DISABLED"),
            (this.errors = null),
            this._forEachChild((t) => {
              t.disable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((e) => e(!0));
        }
        enable(e = {}) {
          const t = this._parentMarkedDirty(e.onlySelf);
          (this.status = "VALID"),
            this._forEachChild((t) => {
              t.enable(Object.assign(Object.assign({}, e), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            }),
            this._updateAncestors(
              Object.assign(Object.assign({}, e), { skipPristineCheck: t })
            ),
            this._onDisabledChange.forEach((e) => e(!1));
        }
        _updateAncestors(e) {
          this._parent &&
            !e.onlySelf &&
            (this._parent.updateValueAndValidity(e),
            e.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(e) {
          this._parent = e;
        }
        updateValueAndValidity(e = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              ("VALID" !== this.status && "PENDING" !== this.status) ||
                this._runAsyncValidator(e.emitEvent)),
            !1 !== e.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !e.onlySelf &&
              this._parent.updateValueAndValidity(e);
        }
        _updateTreeValidity(e = { emitEvent: !0 }) {
          this._forEachChild((t) => t._updateTreeValidity(e)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: e.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? "DISABLED" : "VALID";
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(e) {
          if (this.asyncValidator) {
            this.status = "PENDING";
            const t = k(this.asyncValidator(this));
            this._asyncValidationSubscription = t.subscribe((t) =>
              this.setErrors(t, { emitEvent: e })
            );
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            this._asyncValidationSubscription.unsubscribe();
        }
        setErrors(e, t = {}) {
          (this.errors = e), this._updateControlsErrors(!1 !== t.emitEvent);
        }
        get(e) {
          return (function (e, t, n) {
            if (null == t) return null;
            if (
              (Array.isArray(t) || (t = t.split(".")),
              Array.isArray(t) && 0 === t.length)
            )
              return null;
            let i = e;
            return (
              t.forEach((e) => {
                i =
                  i instanceof ge
                    ? i.controls.hasOwnProperty(e)
                      ? i.controls[e]
                      : null
                    : (i instanceof me && i.at(e)) || null;
              }),
              i
            );
          })(this, e);
        }
        getError(e, t) {
          const n = t ? this.get(t) : this;
          return n && n.errors ? n.errors[e] : null;
        }
        hasError(e, t) {
          return !!this.getError(e, t);
        }
        get root() {
          let e = this;
          for (; e._parent; ) e = e._parent;
          return e;
        }
        _updateControlsErrors(e) {
          (this.status = this._calculateStatus()),
            e && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(e);
        }
        _initObservables() {
          (this.valueChanges = new i.o()), (this.statusChanges = new i.o());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? "DISABLED"
            : this.errors
            ? "INVALID"
            : this._anyControlsHaveStatus("PENDING")
            ? "PENDING"
            : this._anyControlsHaveStatus("INVALID")
            ? "INVALID"
            : "VALID";
        }
        _anyControlsHaveStatus(e) {
          return this._anyControls((t) => t.status === e);
        }
        _anyControlsDirty() {
          return this._anyControls((e) => e.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((e) => e.touched);
        }
        _updatePristine(e = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !e.onlySelf && this._parent._updatePristine(e);
        }
        _updateTouched(e = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !e.onlySelf && this._parent._updateTouched(e);
        }
        _isBoxedValue(e) {
          return (
            "object" == typeof e &&
            null !== e &&
            2 === Object.keys(e).length &&
            "value" in e &&
            "disabled" in e
          );
        }
        _registerOnCollectionChange(e) {
          this._onCollectionChange = e;
        }
        _setUpdateStrategy(e) {
          de(e) && null != e.updateOn && (this._updateOn = e.updateOn);
        }
        _parentMarkedDirty(e) {
          return (
            !e &&
            this._parent &&
            this._parent.dirty &&
            !this._parent._anyControlsDirty()
          );
        }
      }
      class fe extends pe {
        constructor(e = null, t, n) {
          super(ue(t), he(n, t)),
            (this._onChange = []),
            this._applyFormState(e),
            this._setUpdateStrategy(t),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 }),
            this._initObservables();
        }
        setValue(e, t = {}) {
          (this.value = this._pendingValue = e),
            this._onChange.length &&
              !1 !== t.emitModelToViewChange &&
              this._onChange.forEach((e) =>
                e(this.value, !1 !== t.emitViewToModelChange)
              ),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          this.setValue(e, t);
        }
        reset(e = null, t = {}) {
          this._applyFormState(e),
            this.markAsPristine(t),
            this.markAsUntouched(t),
            this.setValue(this.value, t),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(e) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(e) {
          this._onChange.push(e);
        }
        _clearChangeFns() {
          (this._onChange = []),
            (this._onDisabledChange = []),
            (this._onCollectionChange = () => {});
        }
        registerOnDisabledChange(e) {
          this._onDisabledChange.push(e);
        }
        _forEachChild(e) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(e) {
          this._isBoxedValue(e)
            ? ((this.value = this._pendingValue = e.value),
              e.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = e);
        }
      }
      class ge extends pe {
        constructor(e, t, n) {
          super(ue(t), he(n, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 });
        }
        registerControl(e, t) {
          return this.controls[e]
            ? this.controls[e]
            : ((this.controls[e] = t),
              t.setParent(this),
              t._registerOnCollectionChange(this._onCollectionChange),
              t);
        }
        addControl(e, t) {
          this.registerControl(e, t),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        removeControl(e) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        setControl(e, t) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            delete this.controls[e],
            t && this.registerControl(e, t),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        contains(e) {
          return this.controls.hasOwnProperty(e) && this.controls[e].enabled;
        }
        setValue(e, t = {}) {
          this._checkAllValuesPresent(e),
            Object.keys(e).forEach((n) => {
              this._throwIfControlMissing(n),
                this.controls[n].setValue(e[n], {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          Object.keys(e).forEach((n) => {
            this.controls[n] &&
              this.controls[n].patchValue(e[n], {
                onlySelf: !0,
                emitEvent: t.emitEvent,
              });
          }),
            this.updateValueAndValidity(t);
        }
        reset(e = {}, t = {}) {
          this._forEachChild((n, i) => {
            n.reset(e[i], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (e, t, n) => (
              (e[n] = t instanceof fe ? t.value : t.getRawValue()), e
            )
          );
        }
        _syncPendingControls() {
          let e = this._reduceChildren(
            !1,
            (e, t) => !!t._syncPendingControls() || e
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _throwIfControlMissing(e) {
          if (!Object.keys(this.controls).length)
            throw new Error(
              "\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.controls[e])
            throw new Error(`Cannot find form control with name: ${e}.`);
        }
        _forEachChild(e) {
          Object.keys(this.controls).forEach((t) => e(this.controls[t], t));
        }
        _setUpControls() {
          this._forEachChild((e) => {
            e.setParent(this),
              e._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(e) {
          let t = !1;
          return (
            this._forEachChild((n, i) => {
              t = t || (this.contains(i) && e(n));
            }),
            t
          );
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (e, t, n) => ((t.enabled || this.disabled) && (e[n] = t.value), e)
          );
        }
        _reduceChildren(e, t) {
          let n = e;
          return (
            this._forEachChild((e, i) => {
              n = t(n, e, i);
            }),
            n
          );
        }
        _allControlsDisabled() {
          for (const e of Object.keys(this.controls))
            if (this.controls[e].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _checkAllValuesPresent(e) {
          this._forEachChild((t, n) => {
            if (void 0 === e[n])
              throw new Error(
                `Must supply a value for form control with name: '${n}'.`
              );
          });
        }
      }
      class me extends pe {
        constructor(e, t, n) {
          super(ue(t), he(n, t)),
            (this.controls = e),
            this._initObservables(),
            this._setUpdateStrategy(t),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !1 });
        }
        at(e) {
          return this.controls[e];
        }
        push(e) {
          this.controls.push(e),
            this._registerControl(e),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        insert(e, t) {
          this.controls.splice(e, 0, t),
            this._registerControl(t),
            this.updateValueAndValidity();
        }
        removeAt(e) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            this.updateValueAndValidity();
        }
        setControl(e, t) {
          this.controls[e] &&
            this.controls[e]._registerOnCollectionChange(() => {}),
            this.controls.splice(e, 1),
            t && (this.controls.splice(e, 0, t), this._registerControl(t)),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(e, t = {}) {
          this._checkAllValuesPresent(e),
            e.forEach((e, n) => {
              this._throwIfControlMissing(n),
                this.at(n).setValue(e, {
                  onlySelf: !0,
                  emitEvent: t.emitEvent,
                });
            }),
            this.updateValueAndValidity(t);
        }
        patchValue(e, t = {}) {
          e.forEach((e, n) => {
            this.at(n) &&
              this.at(n).patchValue(e, {
                onlySelf: !0,
                emitEvent: t.emitEvent,
              });
          }),
            this.updateValueAndValidity(t);
        }
        reset(e = [], t = {}) {
          this._forEachChild((n, i) => {
            n.reset(e[i], { onlySelf: !0, emitEvent: t.emitEvent });
          }),
            this._updatePristine(t),
            this._updateTouched(t),
            this.updateValueAndValidity(t);
        }
        getRawValue() {
          return this.controls.map((e) =>
            e instanceof fe ? e.value : e.getRawValue()
          );
        }
        clear() {
          this.controls.length < 1 ||
            (this._forEachChild((e) => e._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity());
        }
        _syncPendingControls() {
          let e = this.controls.reduce(
            (e, t) => !!t._syncPendingControls() || e,
            !1
          );
          return e && this.updateValueAndValidity({ onlySelf: !0 }), e;
        }
        _throwIfControlMissing(e) {
          if (!this.controls.length)
            throw new Error(
              "\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.at(e))
            throw new Error("Cannot find form control at index " + e);
        }
        _forEachChild(e) {
          this.controls.forEach((t, n) => {
            e(t, n);
          });
        }
        _updateValue() {
          this.value = this.controls
            .filter((e) => e.enabled || this.disabled)
            .map((e) => e.value);
        }
        _anyControls(e) {
          return this.controls.some((t) => t.enabled && e(t));
        }
        _setUpControls() {
          this._forEachChild((e) => this._registerControl(e));
        }
        _checkAllValuesPresent(e) {
          this._forEachChild((t, n) => {
            if (void 0 === e[n])
              throw new Error(
                `Must supply a value for form control at index: ${n}.`
              );
          });
        }
        _allControlsDisabled() {
          for (const e of this.controls) if (e.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(e) {
          e.setParent(this),
            e._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const be = { provide: g, useExisting: Object(i.V)(() => ye) },
        ve = (() => Promise.resolve(null))();
      let ye = (() => {
          class e extends g {
            constructor(e, t) {
              super(),
                (this.submitted = !1),
                (this._directives = []),
                (this.ngSubmit = new i.o()),
                (this.form = new ge({}, ie(e), se(t)));
            }
            ngAfterViewInit() {
              this._setUpdateStrategy();
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            get controls() {
              return this.form.controls;
            }
            addControl(e) {
              ve.then(() => {
                const t = this._findContainer(e.path);
                (e.control = t.registerControl(e.name, e.control)),
                  Q(e.control, e),
                  e.control.updateValueAndValidity({ emitEvent: !1 }),
                  this._directives.push(e);
              });
            }
            getControl(e) {
              return this.form.get(e.path);
            }
            removeControl(e) {
              ve.then(() => {
                const t = this._findContainer(e.path);
                t && t.removeControl(e.name), ce(this._directives, e);
              });
            }
            addFormGroup(e) {
              ve.then(() => {
                const t = this._findContainer(e.path),
                  n = new ge({});
                ee(n, e),
                  t.registerControl(e.name, n),
                  n.updateValueAndValidity({ emitEvent: !1 });
              });
            }
            removeFormGroup(e) {
              ve.then(() => {
                const t = this._findContainer(e.path);
                t && t.removeControl(e.name);
              });
            }
            getFormGroup(e) {
              return this.form.get(e.path);
            }
            updateModel(e, t) {
              ve.then(() => {
                this.form.get(e.path).setValue(t);
              });
            }
            setValue(e) {
              this.control.setValue(e);
            }
            onSubmit(e) {
              return (
                (this.submitted = !0),
                ae(this.form, this._directives),
                this.ngSubmit.emit(e),
                !1
              );
            }
            onReset() {
              this.resetForm();
            }
            resetForm(e) {
              this.form.reset(e), (this.submitted = !1);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.form._updateOn = this.options.updateOn);
            }
            _findContainer(e) {
              return e.pop(), e.length ? this.form.get(e) : this.form;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(C, 10), i.Rb(E, 10));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
                ["ng-form"],
                ["", "ngForm", ""],
              ],
              hostBindings: function (e, t) {
                1 & e &&
                  i.fc("submit", function (e) {
                    return t.onSubmit(e);
                  })("reset", function () {
                    return t.onReset();
                  });
              },
              inputs: { options: ["ngFormOptions", "options"] },
              outputs: { ngSubmit: "ngSubmit" },
              exportAs: ["ngForm"],
              features: [i.Db([be]), i.Bb],
            })),
            e
          );
        })(),
        we = (() => {
          class e extends g {
            ngOnInit() {
              this._checkParentType(), this.formDirective.addFormGroup(this);
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeFormGroup(this);
            }
            get control() {
              return this.formDirective.getFormGroup(this);
            }
            get path() {
              return Z(
                null == this.name ? this.name : this.name.toString(),
                this._parent
              );
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            get validator() {
              return ie(this._validators);
            }
            get asyncValidator() {
              return se(this._asyncValidators);
            }
            _checkParentType() {}
          }
          return (
            (e.ɵfac = function (t) {
              return Se(t || e);
            }),
            (e.ɵdir = i.Mb({ type: e, features: [i.Bb] })),
            e
          );
        })();
      const Se = i.Zb(we);
      class _e {
        static modelParentException() {
          throw new Error(
            `\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive "formControlName" instead.  Example:\n\n      ${V}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      \n    <div [formGroup]="myGroup">\n       <input formControlName="firstName">\n       <input [(ngModel)]="showMoreControls" [ngModelOptions]="{standalone: true}">\n    </div>\n  `
          );
        }
        static formGroupNameException() {
          throw new Error(
            `\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${W}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${z}`
          );
        }
        static missingNameException() {
          throw new Error(
            'If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as \'standalone\' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]="person.firstName" name="first">\n      Example 2: <input [(ngModel)]="person.firstName" [ngModelOptions]="{standalone: true}">'
          );
        }
        static modelGroupParentException() {
          throw new Error(
            `\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${W}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${z}`
          );
        }
      }
      const Ce = { provide: g, useExisting: Object(i.V)(() => Ee) };
      let Ee = (() => {
        class e extends we {
          constructor(e, t, n) {
            super(),
              (this._parent = e),
              (this._validators = t),
              (this._asyncValidators = n);
          }
          _checkParentType() {
            this._parent instanceof e ||
              this._parent instanceof ye ||
              _e.modelGroupParentException();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(g, 5), i.Rb(C, 10), i.Rb(E, 10));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [["", "ngModelGroup", ""]],
            inputs: { name: ["ngModelGroup", "name"] },
            exportAs: ["ngModelGroup"],
            features: [i.Db([Ce]), i.Bb],
          })),
          e
        );
      })();
      const Oe = { provide: v, useExisting: Object(i.V)(() => Te) },
        xe = (() => Promise.resolve(null))();
      let Te = (() => {
          class e extends v {
            constructor(e, t, n, s) {
              super(),
                (this.control = new fe()),
                (this._registered = !1),
                (this.update = new i.o()),
                (this._parent = e),
                (this._rawValidators = t || []),
                (this._rawAsyncValidators = n || []),
                (this.valueAccessor = le(this, s));
            }
            ngOnChanges(e) {
              this._checkForErrors(),
                this._registered || this._setUpControl(),
                "isDisabled" in e && this._updateDisabled(e),
                re(e, this.viewModel) &&
                  (this._updateValue(this.model),
                  (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._parent ? Z(this.name, this._parent) : [this.name];
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            get validator() {
              return ie(this._rawValidators);
            }
            get asyncValidator() {
              return se(this._rawAsyncValidators);
            }
            viewToModelUpdate(e) {
              (this.viewModel = e), this.update.emit(e);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone()
                  ? this._setUpStandalone()
                  : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options &&
                null != this.options.updateOn &&
                (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return (
                !this._parent || !(!this.options || !this.options.standalone)
              );
            }
            _setUpStandalone() {
              Q(this.control, this),
                this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(),
                this._checkName();
            }
            _checkParentType() {
              !(this._parent instanceof Ee) && this._parent instanceof we
                ? _e.formGroupNameException()
                : this._parent instanceof Ee ||
                  this._parent instanceof ye ||
                  _e.modelParentException();
            }
            _checkName() {
              this.options &&
                this.options.name &&
                (this.name = this.options.name),
                this._isStandalone() || this.name || _e.missingNameException();
            }
            _updateValue(e) {
              xe.then(() => {
                this.control.setValue(e, { emitViewToModelChange: !1 });
              });
            }
            _updateDisabled(e) {
              const t = e.isDisabled.currentValue,
                n = "" === t || (t && "false" !== t);
              xe.then(() => {
                n && !this.control.disabled
                  ? this.control.disable()
                  : !n && this.control.disabled && this.control.enable();
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                i.Rb(g, 9),
                i.Rb(C, 10),
                i.Rb(E, 10),
                i.Rb(l, 10)
              );
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                [
                  "",
                  "ngModel",
                  "",
                  3,
                  "formControlName",
                  "",
                  3,
                  "formControl",
                  "",
                ],
              ],
              inputs: {
                name: "name",
                isDisabled: ["disabled", "isDisabled"],
                model: ["ngModel", "model"],
                options: ["ngModelOptions", "options"],
              },
              outputs: { update: "ngModelChange" },
              exportAs: ["ngModel"],
              features: [i.Db([Oe]), i.Bb, i.Cb],
            })),
            e
          );
        })(),
        ke = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            })),
            e
          );
        })();
      const Me = new i.r("NgModelWithFormControlWarning"),
        Ie = { provide: v, useExisting: Object(i.V)(() => Pe) };
      let Pe = (() => {
        class e extends v {
          constructor(e, t, n, s) {
            super(),
              (this._ngModelWarningConfig = s),
              (this.update = new i.o()),
              (this._ngModelWarningSent = !1),
              (this._rawValidators = e || []),
              (this._rawAsyncValidators = t || []),
              (this.valueAccessor = le(this, n));
          }
          set isDisabled(e) {
            X.disabledAttrWarning();
          }
          ngOnChanges(t) {
            var n, s;
            this._isControlChanged(t) &&
              (Q(this.form, this),
              this.control.disabled &&
                this.valueAccessor.setDisabledState &&
                this.valueAccessor.setDisabledState(!0),
              this.form.updateValueAndValidity({ emitEvent: !1 })),
              re(t, this.viewModel) &&
                ("formControl",
                (n = e),
                this,
                (s = this._ngModelWarningConfig),
                Object(i.Y)() &&
                  "never" !== s &&
                  ((((null !== s && "once" !== s) ||
                    n._ngModelWarningSentOnce) &&
                    ("always" !== s || this._ngModelWarningSent)) ||
                    (X.ngModelWarning("formControl"),
                    (n._ngModelWarningSentOnce = !0),
                    (this._ngModelWarningSent = !0))),
                this.form.setValue(this.model),
                (this.viewModel = this.model));
          }
          get path() {
            return [];
          }
          get validator() {
            return ie(this._rawValidators);
          }
          get asyncValidator() {
            return se(this._rawAsyncValidators);
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(e) {
            (this.viewModel = e), this.update.emit(e);
          }
          _isControlChanged(e) {
            return e.hasOwnProperty("form");
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              i.Rb(C, 10),
              i.Rb(E, 10),
              i.Rb(l, 10),
              i.Rb(Me, 8)
            );
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [["", "formControl", ""]],
            inputs: {
              isDisabled: ["disabled", "isDisabled"],
              form: ["formControl", "form"],
              model: ["ngModel", "model"],
            },
            outputs: { update: "ngModelChange" },
            exportAs: ["ngForm"],
            features: [i.Db([Ie]), i.Bb, i.Cb],
          })),
          (e._ngModelWarningSentOnce = !1),
          e
        );
      })();
      const Re = { provide: g, useExisting: Object(i.V)(() => Ne) };
      let Ne = (() => {
        class e extends g {
          constructor(e, t) {
            super(),
              (this._validators = e),
              (this._asyncValidators = t),
              (this.submitted = !1),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new i.o());
          }
          ngOnChanges(e) {
            this._checkFormPresent(),
              e.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations());
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(e) {
            const t = this.form.get(e.path);
            return (
              Q(t, e),
              t.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(e),
              t
            );
          }
          getControl(e) {
            return this.form.get(e.path);
          }
          removeControl(e) {
            ce(this.directives, e);
          }
          addFormGroup(e) {
            const t = this.form.get(e.path);
            ee(t, e), t.updateValueAndValidity({ emitEvent: !1 });
          }
          removeFormGroup(e) {}
          getFormGroup(e) {
            return this.form.get(e.path);
          }
          addFormArray(e) {
            const t = this.form.get(e.path);
            ee(t, e), t.updateValueAndValidity({ emitEvent: !1 });
          }
          removeFormArray(e) {}
          getFormArray(e) {
            return this.form.get(e.path);
          }
          updateModel(e, t) {
            this.form.get(e.path).setValue(t);
          }
          onSubmit(e) {
            return (
              (this.submitted = !0),
              ae(this.form, this.directives),
              this.ngSubmit.emit(e),
              !1
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(e) {
            this.form.reset(e), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((e) => {
              const t = this.form.get(e.path);
              e.control !== t &&
                ((function (e, t) {
                  t.valueAccessor.registerOnChange(() => te(t)),
                    t.valueAccessor.registerOnTouched(() => te(t)),
                    t._rawValidators.forEach((e) => {
                      e.registerOnValidatorChange &&
                        e.registerOnValidatorChange(null);
                    }),
                    t._rawAsyncValidators.forEach((e) => {
                      e.registerOnValidatorChange &&
                        e.registerOnValidatorChange(null);
                    }),
                    e && e._clearChangeFns();
                })(e.control, e),
                t && Q(t, e),
                (e.control = t));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(() => this._updateDomValue()),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {}),
              (this._oldForm = this.form);
          }
          _updateValidators() {
            const e = ie(this._validators);
            this.form.validator = x.compose([this.form.validator, e]);
            const t = se(this._asyncValidators);
            this.form.asyncValidator = x.composeAsync([
              this.form.asyncValidator,
              t,
            ]);
          }
          _checkFormPresent() {
            this.form || X.missingFormException();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(C, 10), i.Rb(E, 10));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (e, t) {
              1 & e &&
                i.fc("submit", function (e) {
                  return t.onSubmit(e);
                })("reset", function () {
                  return t.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [i.Db([Re]), i.Bb, i.Cb],
          })),
          e
        );
      })();
      const Le = { provide: C, useExisting: Object(i.V)(() => Ae), multi: !0 };
      let Ae = (() => {
          class e {
            ngOnChanges(e) {
              "maxlength" in e &&
                (this._createValidator(), this._onChange && this._onChange());
            }
            validate(e) {
              return null != this.maxlength ? this._validator(e) : null;
            }
            registerOnValidatorChange(e) {
              this._onChange = e;
            }
            _createValidator() {
              this._validator = x.maxLength(
                "number" == typeof this.maxlength
                  ? this.maxlength
                  : parseInt(this.maxlength, 10)
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["", "maxlength", "", "formControlName", ""],
                ["", "maxlength", "", "formControl", ""],
                ["", "maxlength", "", "ngModel", ""],
              ],
              hostVars: 1,
              hostBindings: function (e, t) {
                2 & e && i.Fb("maxlength", t.maxlength ? t.maxlength : null);
              },
              inputs: { maxlength: "maxlength" },
              features: [i.Db([Le]), i.Cb],
            })),
            e
          );
        })(),
        De = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })(),
        je = (() => {
          class e {
            group(e, t = null) {
              const n = this._reduceControls(e);
              let i = null,
                s = null,
                r = void 0;
              return (
                null != t &&
                  ((function (e) {
                    return (
                      void 0 !== e.asyncValidators ||
                      void 0 !== e.validators ||
                      void 0 !== e.updateOn
                    );
                  })(t)
                    ? ((i = null != t.validators ? t.validators : null),
                      (s =
                        null != t.asyncValidators ? t.asyncValidators : null),
                      (r = null != t.updateOn ? t.updateOn : void 0))
                    : ((i = null != t.validator ? t.validator : null),
                      (s =
                        null != t.asyncValidator ? t.asyncValidator : null))),
                new ge(n, { asyncValidators: s, updateOn: r, validators: i })
              );
            }
            control(e, t, n) {
              return new fe(e, t, n);
            }
            array(e, t, n) {
              const i = e.map((e) => this._createControl(e));
              return new me(i, t, n);
            }
            _reduceControls(e) {
              const t = {};
              return (
                Object.keys(e).forEach((n) => {
                  t[n] = this._createControl(e[n]);
                }),
                t
              );
            }
            _createControl(e) {
              return e instanceof fe || e instanceof ge || e instanceof me
                ? e
                : Array.isArray(e)
                ? this.control(
                    e[0],
                    e.length > 1 ? e[1] : null,
                    e.length > 2 ? e[2] : null
                  )
                : this.control(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Fe = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [A],
              imports: [De],
            })),
            e
          );
        })(),
        Ve = (() => {
          class e {
            static withConfig(t) {
              return {
                ngModule: e,
                providers: [
                  { provide: Me, useValue: t.warnOnNgModelWithFormControl },
                ],
              };
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [je, A],
              imports: [De],
            })),
            e
          );
        })();
    },
    "4I5i": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "argument out of range"),
            (this.name = "ArgumentOutOfRangeError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
    },
    "5+tZ": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var i = n("ZUHj"),
        s = n("l7GE"),
        r = n("51Dv"),
        o = n("lJxs"),
        a = n("Cfvw");
      function l(e, t, n = Number.POSITIVE_INFINITY) {
        return "function" == typeof t
          ? (i) =>
              i.pipe(
                l(
                  (n, i) =>
                    Object(a.a)(e(n, i)).pipe(
                      Object(o.a)((e, s) => t(n, e, i, s))
                    ),
                  n
                )
              )
          : ("number" == typeof t && (n = t), (t) => t.lift(new c(e, n)));
      }
      class c {
        constructor(e, t = Number.POSITIVE_INFINITY) {
          (this.project = e), (this.concurrent = t);
        }
        call(e, t) {
          return t.subscribe(new u(e, this.project, this.concurrent));
        }
      }
      class u extends s.a {
        constructor(e, t, n = Number.POSITIVE_INFINITY) {
          super(e),
            (this.project = t),
            (this.concurrent = n),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(e) {
          this.active < this.concurrent
            ? this._tryNext(e)
            : this.buffer.push(e);
        }
        _tryNext(e) {
          let t;
          const n = this.index++;
          try {
            t = this.project(e, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.active++, this._innerSub(t, e, n);
        }
        _innerSub(e, t, n) {
          const s = new r.a(this, t, n),
            o = this.destination;
          o.add(s);
          const a = Object(i.a)(this, e, void 0, void 0, s);
          a !== s && o.add(a);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active &&
              0 === this.buffer.length &&
              this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(e, t, n, i, s) {
          this.destination.next(t);
        }
        notifyComplete(e) {
          const t = this.buffer;
          this.remove(e),
            this.active--,
            t.length > 0
              ? this._next(t.shift())
              : 0 === this.active &&
                this.hasCompleted &&
                this.destination.complete();
        }
      }
    },
    "51Dv": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("7o/Q");
      class s extends i.a {
        constructor(e, t, n) {
          super(),
            (this.parent = e),
            (this.outerValue = t),
            (this.outerIndex = n),
            (this.index = 0);
        }
        _next(e) {
          this.parent.notifyNext(
            this.outerValue,
            e,
            this.outerIndex,
            this.index++,
            this
          );
        }
        _error(e) {
          this.parent.notifyError(e, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
    },
    "5C7c": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("6T7H"),
        s = n("fXoL"),
        r = n("AcyG");
      let o = (() => {
        class e {
          constructor(e) {
            this.store = e;
          }
          transform(e, t, n) {
            if (!e) return e;
            let s = this.store.selectSnapshot(i.a.activeTranslates)[t];
            if (s) {
              n = null != n ? n : {};
              const e = Object.keys(n);
              for (const t of e) s = s.replace(`{:${t}}`, n[t]);
            } else s = t;
            return s;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.Rb(r.h));
          }),
          (e.ɵpipe = s.Qb({ name: "i18n", type: e, pure: !0 })),
          e
        );
      })();
    },
    "6T7H": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return u;
      });
      var i = n("mrSG"),
        s = n("AcyG"),
        r = n("vkgz"),
        o = n("JIr8"),
        a = n("oHij"),
        l = n("fXoL"),
        c = n("SScL");
      let u = (() => {
        let e = class {
          constructor(e) {
            this.service = e;
          }
          static translates(e) {
            return e.translates;
          }
          static activeTranslates(e) {
            return e.activeTranslates;
          }
          static selectedLanguage(e) {
            return e.selectedLanguage;
          }
          static languages(e) {
            return e.languages;
          }
          static loading(e) {
            return e.loading;
          }
          ngxsOnInit(e) {
            e.dispatch([new a.a.GetLanguages()]);
          }
          getLanguages(e) {
            const t = this.service.findStorageModel();
            return (
              e.patchState({ loading: !0, storageModel: t }),
              this.service.getLanguages().pipe(
                Object(r.a)((n) => {
                  e.patchState({ languages: n }),
                    e.dispatch(new a.a.GetLanguagesSuccess()),
                    e.dispatch(
                      new a.a.ChangeLocale(t.selectedLanguage || n[0].value)
                    );
                }),
                Object(o.a)((t) => e.dispatch(new a.a.GetLanguagesFailed(t)))
              )
            );
          }
          changeLocale(e, { payload: t }) {
            const { translates: n } = e.getState(),
              i = n[t],
              s = this.service.findStorageModel();
            s.populate({ selectedLanguage: t }),
              this.service.saveStorageModel(s),
              e.patchState({ selectedLanguage: t, storageModel: s }),
              e.dispatch(
                i
                  ? new a.a.ChangeActiveTranslates(i)
                  : new a.a.GetNewTranslates(t)
              );
          }
          getNewTranslates(e, { payload: t }) {
            return (
              e.patchState({ loading: !0 }),
              this.service.getTranslates(t).pipe(
                Object(r.a)((n) => {
                  const { translates: i } = e.getState();
                  e.patchState({
                    translates: Object.assign(Object.assign({}, i), { [t]: n }),
                  }),
                    e.dispatch(new a.a.GetNewTranslatesSuccess()),
                    e.dispatch(new a.a.ChangeActiveTranslates(n));
                }),
                Object(o.a)((t) =>
                  e.dispatch(new a.a.GetNewTranslatesFailed(t))
                )
              )
            );
          }
          changeActiveTranslates(e, { payload: t }) {
            e.patchState({ activeTranslates: t });
          }
          stopLoading(e) {
            e.patchState({ loading: !1 });
          }
        };
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(l.bc(c.a));
          }),
          (e.ɵprov = l.Nb({ token: e, factory: e.ɵfac })),
          Object(i.b)(
            [Object(s.a)(a.a.GetLanguages)],
            e.prototype,
            "getLanguages",
            null
          ),
          Object(i.b)(
            [Object(s.a)(a.a.ChangeLocale)],
            e.prototype,
            "changeLocale",
            null
          ),
          Object(i.b)(
            [Object(s.a)(a.a.GetNewTranslates)],
            e.prototype,
            "getNewTranslates",
            null
          ),
          Object(i.b)(
            [Object(s.a)(a.a.ChangeActiveTranslates)],
            e.prototype,
            "changeActiveTranslates",
            null
          ),
          Object(i.b)(
            [
              Object(s.a)([
                a.a.GetLanguagesSuccess,
                a.a.GetLanguagesFailed,
                a.a.GetNewTranslatesSuccess,
                a.a.GetNewTranslatesFailed,
              ]),
            ],
            e.prototype,
            "stopLoading",
            null
          ),
          Object(i.b)([Object(s.f)()], e, "translates", null),
          Object(i.b)([Object(s.f)()], e, "activeTranslates", null),
          Object(i.b)([Object(s.f)()], e, "selectedLanguage", null),
          Object(i.b)([Object(s.f)()], e, "languages", null),
          Object(i.b)([Object(s.f)()], e, "loading", null),
          (e = Object(i.b)(
            [
              Object(s.g)({
                name: "i18n",
                defaults: {
                  loading: !1,
                  translates: {},
                  activeTranslates: {},
                  languages: [],
                  selectedLanguage: null,
                  storageModel: null,
                },
              }),
            ],
            e
          )),
          e
        );
      })();
    },
    "7o/Q": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var i = n("n6bG"),
        s = n("gRHU"),
        r = n("quSY"),
        o = n("2QA8"),
        a = n("2fFW"),
        l = n("NJ4a");
      class c extends r.a {
        constructor(e, t, n) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = s.a;
              break;
            case 1:
              if (!e) {
                this.destination = s.a;
                break;
              }
              if ("object" == typeof e) {
                e instanceof c
                  ? ((this.syncErrorThrowable = e.syncErrorThrowable),
                    (this.destination = e),
                    e.add(this))
                  : ((this.syncErrorThrowable = !0),
                    (this.destination = new u(this, e)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0),
                (this.destination = new u(this, e, t, n));
          }
        }
        [o.a]() {
          return this;
        }
        static create(e, t, n) {
          const i = new c(e, t, n);
          return (i.syncErrorThrowable = !1), i;
        }
        next(e) {
          this.isStopped || this._next(e);
        }
        error(e) {
          this.isStopped || ((this.isStopped = !0), this._error(e));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(e) {
          this.destination.next(e);
        }
        _error(e) {
          this.destination.error(e), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: e } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = e),
            this
          );
        }
      }
      class u extends c {
        constructor(e, t, n, r) {
          let o;
          super(), (this._parentSubscriber = e);
          let a = this;
          Object(i.a)(t)
            ? (o = t)
            : t &&
              ((o = t.next),
              (n = t.error),
              (r = t.complete),
              t !== s.a &&
                ((a = Object.create(t)),
                Object(i.a)(a.unsubscribe) && this.add(a.unsubscribe.bind(a)),
                (a.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = a),
            (this._next = o),
            (this._error = n),
            (this._complete = r);
        }
        next(e) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: t } = this;
            a.a.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
              ? this.__tryOrSetError(t, this._next, e) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, e);
          }
        }
        error(e) {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this,
              { useDeprecatedSynchronousErrorHandling: n } = a.a;
            if (this._error)
              n && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, this._error, e), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, e), this.unsubscribe());
            else if (t.syncErrorThrowable)
              n
                ? ((t.syncErrorValue = e), (t.syncErrorThrown = !0))
                : Object(l.a)(e),
                this.unsubscribe();
            else {
              if ((this.unsubscribe(), n)) throw e;
              Object(l.a)(e);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this;
            if (this._complete) {
              const t = () => this._complete.call(this._context);
              a.a.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, t), this.unsubscribe())
                : (this.__tryOrUnsub(t), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(e, t) {
          try {
            e.call(this._context, t);
          } catch (n) {
            if ((this.unsubscribe(), a.a.useDeprecatedSynchronousErrorHandling))
              throw n;
            Object(l.a)(n);
          }
        }
        __tryOrSetError(e, t, n) {
          if (!a.a.useDeprecatedSynchronousErrorHandling)
            throw new Error("bad call");
          try {
            t.call(this._context, n);
          } catch (i) {
            return a.a.useDeprecatedSynchronousErrorHandling
              ? ((e.syncErrorValue = i), (e.syncErrorThrown = !0), !0)
              : (Object(l.a)(i), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: e } = this;
          (this._context = null),
            (this._parentSubscriber = null),
            e.unsubscribe();
        }
      }
    },
    "7s7n": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var i = n("mrSG"),
        s = n("AcyG"),
        r = n("GWxI"),
        o = n("fXoL"),
        a = n("EKJS");
      let l = (() => {
        let e = class {
          constructor(e) {
            this.service = e;
          }
          static model(e) {
            return e.model;
          }
          ngxsOnInit(e) {
            e.dispatch([new r.a.Find()]);
          }
          find(e) {
            const t = this.service.find();
            e.patchState({ model: t });
          }
          save(e, { value: t }) {
            const { token: n, user: i } = t,
              s = this.service.createEmptyModel();
            s.populate(Object.assign(Object.assign({}, i), { token: n })),
              this.service.save(s) && e.patchState({ model: s });
          }
          update(e, { value: t }) {
            const { model: n } = e.getState();
            e.dispatch(
              new r.a.Save({
                user: Object.assign(Object.assign({}, n.toObject()), t),
                token: n.token,
              })
            );
          }
          remove(e) {
            if (this.service.remove()) {
              const t = this.service.createEmptyModel();
              e.patchState({ model: t });
            }
          }
        };
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(o.bc(a.a));
          }),
          (e.ɵprov = o.Nb({ token: e, factory: e.ɵfac })),
          Object(i.b)([Object(s.a)(r.a.Find)], e.prototype, "find", null),
          Object(i.b)([Object(s.a)(r.a.Save)], e.prototype, "save", null),
          Object(i.b)([Object(s.a)(r.a.Update)], e.prototype, "update", null),
          Object(i.b)([Object(s.a)(r.a.Remove)], e.prototype, "remove", null),
          Object(i.b)([Object(s.f)()], e, "model", null),
          (e = Object(i.b)(
            [Object(s.g)({ name: "user", defaults: { model: null } })],
            e
          )),
          e
        );
      })();
    },
    "7wB8": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("tyNb");
      const o = ["userDropdown"];
      function a(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 10),
            i.fc("click", function () {
              return i.Ec(e), i.hc().toggle();
            }),
            i.Xb(1, "div", 11),
            i.Xb(2, "a", 12),
            i.Nc(3, "Profile"),
            i.Wb(),
            i.Wb(),
            i.Xb(4, "div", 13),
            i.Xb(5, "a", 14),
            i.Nc(6, "FAQ"),
            i.Wb(),
            i.Wb(),
            i.Xb(7, "div", 13),
            i.Xb(8, "a", 15),
            i.fc("click", function () {
              return i.Ec(e), i.hc().logoutEvent.emit();
            }),
            i.Nc(9, "Logout"),
            i.Wb(),
            i.Wb(),
            i.Wb();
        }
      }
      let l = (() => {
        class e {
          constructor(e) {
            (this.renderer = e),
              (this.logoutEvent = new i.o()),
              (this.isShow = !1);
          }
          toggle() {
            this.isShow ? this.close() : this.open();
          }
          open() {
            (this.isShow = !0), this.subscribeOutsideClickSelectFlags();
          }
          close() {
            (this.isShow = !1), this.unsubscribeOutsideClickSelectFlags();
          }
          subscribeOutsideClickSelectFlags() {
            this.outsideClick = this.renderer.listen(
              "document",
              "click",
              (e) => {
                this.userDropdownElRef.nativeElement.contains(e.target) ||
                  this.close();
              }
            );
          }
          unsubscribeOutsideClickSelectFlags() {
            this.outsideClick &&
              (this.outsideClick(), (this.outsideClick = void 0));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(i.F));
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-user-dropdown"]],
            viewQuery: function (e, t) {
              var n;
              1 & e && i.Qc(o, !0),
                2 & e && i.Ac((n = i.gc())) && (t.userDropdownElRef = n.first);
            },
            inputs: { user: "user" },
            outputs: { logoutEvent: "logoutEvent" },
            decls: 13,
            vars: 4,
            consts: [
              [1, "user-dropdown"],
              ["userDropdown", ""],
              [1, "user-dropdown__main", 3, "click"],
              [1, "user-info", "text-end"],
              [1, "title"],
              [1, "text"],
              [1, "user-avatar", "ms-3"],
              [1, "img-fluid", 3, "src"],
              [1, "select-arrow", "material-icons", "ms-2"],
              ["class", "user-dropdown__list", 3, "click", 4, "ngIf"],
              [1, "user-dropdown__list", 3, "click"],
              [1, "user-dropdown__item"],
              ["routerLink", "/office/profile"],
              [1, "user-dropdown__item", "mobile"],
              ["routerLink", "/office/faq"],
              [3, "click"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "div", 0, 1),
                i.Xb(2, "div", 2),
                i.fc("click", function () {
                  return t.toggle();
                }),
                i.Xb(3, "div", 3),
                i.Xb(4, "p", 4),
                i.Nc(5),
                i.Wb(),
                i.Xb(6, "p", 5),
                i.Nc(7),
                i.Wb(),
                i.Wb(),
                i.Xb(8, "div", 6),
                i.Sb(9, "img", 7),
                i.Wb(),
                i.Xb(10, "span", 8),
                i.Nc(11, "expand_more"),
                i.Wb(),
                i.Wb(),
                i.Lc(12, a, 10, 0, "div", 9),
                i.Wb()),
                2 & e &&
                  (i.Eb(5),
                  i.Oc(t.user.fullName),
                  i.Eb(2),
                  i.Oc(t.user.userName),
                  i.Eb(2),
                  i.pc("src", t.user.avatar, i.Gc),
                  i.Eb(3),
                  i.pc("ngIf", t.isShow));
            },
            directives: [s.m, r.j],
            styles: [
              ".user-dropdown[_ngcontent-%COMP%]{position:relative}.user-dropdown__main[_ngcontent-%COMP%]{display:flex;align-items:center;cursor:pointer}.user-dropdown__list[_ngcontent-%COMP%]{position:absolute;right:-6px;min-width:100px;max-height:250px;margin-top:10px;overflow:auto;z-index:99999;padding:10px 20px;background:#fff;box-shadow:1px 0 3px rgba(0,0,0,.25);color:#444}.user-dropdown__item[_ngcontent-%COMP%]{margin-top:5px;cursor:pointer}.user-dropdown__item[_ngcontent-%COMP%]:first-child{margin-top:0}.user-dropdown__item[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:inherit;display:block}.user-dropdown[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%], .user-dropdown[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{margin-bottom:0}.user-dropdown[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-size:14px;color:#fff}.user-dropdown[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{font-size:12px;color:#a6acbe}.user-dropdown[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%]{width:50px;height:50px;overflow:hidden;background:#fff;border-radius:50%}.user-dropdown[_ngcontent-%COMP%]   .user-avatar[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:50px}.select-arrow[_ngcontent-%COMP%]{color:#c9ced5}@media (min-width:992px){.user-dropdown__item.mobile[_ngcontent-%COMP%]{display:none}}",
            ],
          })),
          e
        );
      })();
    },
    "9Kd/": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return f;
      });
      var i = n("mrSG"),
        s = n("AcyG"),
        r = n("GWxI"),
        o = n("M02b"),
        a = n("vkgz"),
        l = n("JIr8"),
        c = n("Wamw"),
        u = n("LRne"),
        h = n("Hifb"),
        d = n("fXoL"),
        p = n("OA76");
      let f = (() => {
        let e = class {
          constructor(e, t) {
            (this.store = e), (this.service = t);
          }
          static loading(e) {
            return e.loading;
          }
          static storageModel(e) {
            return e.storageModel;
          }
          static passwordRestorePending(e) {
            return e.passwordRestorePending;
          }
          static isAuthorized(e) {
            return e.isAuthorized;
          }
          static isBlocked(e) {
            return e.isBlocked;
          }
          static isVerified(e) {
            return e.isVerified;
          }
          static registrationStep(e) {
            return e.registrationStep;
          }
          static registrationType(e) {
            return e.registrationType;
          }
          ngxsOnInit(e) {
            e.dispatch([new o.a.CheckUser(), new o.a.CheckReferral()]);
          }
          changeRegistrationType(e, { type: t }) {
            e.patchState({ registrationType: t });
          }
          changeRegistrationStep(e, { step: t }) {
            e.patchState({ registrationStep: t });
          }
          checkReferral(e) {
            const t = c.a.find("ref"),
              n = this.service.findStorageModel(),
              { isAuthorized: i } = e.getState();
            t && !i
              ? this.service
                  .getUserIdByName(t)
                  .pipe(
                    Object(a.a)((e) => n.populate({ refId: e, refName: t })),
                    Object(a.a)(() => this.service.saveStorageModel(n)),
                    Object(l.a)(() => Object(u.a)(null))
                  )
                  .subscribe(() => e.patchState({ storageModel: n }))
              : e.patchState({ storageModel: n });
          }
          checkUser(e) {
            const t = this.store.selectSnapshot((e) => e.user.model);
            e.patchState({
              isAuthorized: !(!t.token || t.isBlocked || !t.isVerified),
              isBlocked: t.isBlocked,
              isVerified: t.isVerified,
            });
          }
          registration(e, { value: t }) {
            return (
              e.patchState({ loading: !0 }),
              this.service.registration(t).pipe(
                Object(a.a)((t) => {
                  e.dispatch(new r.a.Save(t)),
                    e.dispatch(new o.a.RegistrationSuccess());
                }),
                Object(l.a)((t) => e.dispatch(new o.a.RegistrationFailed(t)))
              )
            );
          }
          emailVerifyRequest(e) {
            return (
              e.patchState({ loading: !0 }),
              this.service.emailVerifyRequest().pipe(
                Object(a.a)(() =>
                  e.dispatch(new o.a.EmailVerifyRequestSuccess())
                ),
                Object(l.a)((t) =>
                  e.dispatch(new o.a.EmailVerifyRequestFailed(t))
                )
              )
            );
          }
          emailVerify(e, { code: t }) {
            return (
              e.patchState({ loading: !0 }),
              this.service.emailVerify(t).pipe(
                Object(a.a)(() =>
                  this.store.dispatch(new r.a.Update({ isVerified: !0 }))
                ),
                Object(a.a)(() => this.service.removeStorageModel()),
                Object(a.a)(() => e.dispatch(new o.a.EmailVerifySuccess())),
                Object(l.a)((t) => e.dispatch(new o.a.EmailVerifyFailed(t)))
              )
            );
          }
          passwordRestore(e, { value: t }) {
            return (
              e.patchState({ loading: !0 }),
              this.service.passwordRestore(t).pipe(
                Object(a.a)((t) =>
                  t
                    ? e.dispatch(new o.a.PasswordRestoreSuccess()) &&
                      e.patchState({ passwordRestorePending: !0 })
                    : e.dispatch(new o.a.PasswordRestoreFailed())
                ),
                Object(l.a)((t) => e.dispatch(new o.a.PasswordRestoreFailed(t)))
              )
            );
          }
          passwordChange(e, { value: t }) {
            return (
              e.patchState({ loading: !0 }),
              this.service.passwordChange(t).pipe(
                Object(a.a)((t) =>
                  e.dispatch(
                    t
                      ? new o.a.PasswordChangeSuccess()
                      : new o.a.PasswordChangeFailed()
                  )
                ),
                Object(l.a)((t) => e.dispatch(new o.a.PasswordChangeFailed(t)))
              )
            );
          }
          restoreTokenValidate(e, { value: t }) {
            return (
              e.patchState({ loading: !0 }),
              this.service.restoreTokenValidate(t).pipe(
                Object(a.a)((t) =>
                  e.dispatch(
                    t
                      ? new o.a.RestoreTokenValidateSuccess()
                      : new o.a.RestoreTokenValidateFailed()
                  )
                ),
                Object(l.a)((t) =>
                  e.dispatch(new o.a.RestoreTokenValidateFailed(t))
                )
              )
            );
          }
          login(e, { value: t }) {
            return (
              e.patchState({ loading: !0 }),
              this.service.login(t).pipe(
                Object(a.a)((t) => {
                  e.dispatch(new r.a.Save(t)),
                    e.dispatch(new o.a.LoginSuccess());
                }),
                Object(l.a)((t) => e.dispatch(new o.a.LoginFailed(t)))
              )
            );
          }
          logout(e) {
            return (
              e.patchState({ loading: !0 }),
              this.service.logout().pipe(
                Object(a.a)((t) => {
                  t
                    ? (e.dispatch(new r.a.Remove()),
                      e.dispatch(new o.a.LogoutSuccess()),
                      e.dispatch(new o.a.ChangeRegistrationStep(0)))
                    : e.dispatch(new o.a.LogoutFailed());
                }),
                Object(l.a)((t) => e.dispatch(new o.a.LogoutFailed(t)))
              )
            );
          }
          stopLoading(e) {
            e.patchState({ loading: !1 });
          }
        };
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(d.bc(s.h), d.bc(p.a));
          }),
          (e.ɵprov = d.Nb({ token: e, factory: e.ɵfac })),
          Object(i.b)(
            [Object(s.a)(o.a.ChangeRegistrationType)],
            e.prototype,
            "changeRegistrationType",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.ChangeRegistrationStep)],
            e.prototype,
            "changeRegistrationStep",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.CheckReferral)],
            e.prototype,
            "checkReferral",
            null
          ),
          Object(i.b)(
            [
              Object(s.a)(
                [
                  o.a.CheckUser,
                  r.a.Save,
                  r.a.Remove,
                  o.a.LoginSuccess,
                  o.a.LogoutSuccess,
                ],
                { cancelUncompleted: !0 }
              ),
            ],
            e.prototype,
            "checkUser",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.Registration, { cancelUncompleted: !0 })],
            e.prototype,
            "registration",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.EmailVerifyRequest, { cancelUncompleted: !0 })],
            e.prototype,
            "emailVerifyRequest",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.EmailVerify, { cancelUncompleted: !0 })],
            e.prototype,
            "emailVerify",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.PasswordRestore, { cancelUncompleted: !0 })],
            e.prototype,
            "passwordRestore",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.PasswordChange, { cancelUncompleted: !0 })],
            e.prototype,
            "passwordChange",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.RestoreTokenValidate, { cancelUncompleted: !0 })],
            e.prototype,
            "restoreTokenValidate",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.Login, { cancelUncompleted: !0 })],
            e.prototype,
            "login",
            null
          ),
          Object(i.b)(
            [Object(s.a)(o.a.Logout, { cancelUncompleted: !0 })],
            e.prototype,
            "logout",
            null
          ),
          Object(i.b)(
            [
              Object(s.a)([
                o.a.RegistrationSuccess,
                o.a.RegistrationFailed,
                o.a.LoginSuccess,
                o.a.LoginFailed,
                o.a.LogoutSuccess,
                o.a.LogoutFailed,
                o.a.PasswordRestoreSuccess,
                o.a.PasswordRestoreFailed,
                o.a.PasswordChangeSuccess,
                o.a.PasswordChangeFailed,
                o.a.RestoreTokenValidateFailed,
                o.a.RestoreTokenValidateSuccess,
                o.a.EmailVerifyRequestSuccess,
                o.a.EmailVerifyRequestFailed,
                o.a.EmailVerifySuccess,
                o.a.EmailVerifyFailed,
              ]),
            ],
            e.prototype,
            "stopLoading",
            null
          ),
          Object(i.b)([Object(s.f)()], e, "loading", null),
          Object(i.b)([Object(s.f)()], e, "storageModel", null),
          Object(i.b)([Object(s.f)()], e, "passwordRestorePending", null),
          Object(i.b)([Object(s.f)()], e, "isAuthorized", null),
          Object(i.b)([Object(s.f)()], e, "isBlocked", null),
          Object(i.b)([Object(s.f)()], e, "isVerified", null),
          Object(i.b)([Object(s.f)()], e, "registrationStep", null),
          Object(i.b)([Object(s.f)()], e, "registrationType", null),
          (e = Object(i.b)(
            [
              Object(s.g)({
                name: "auth",
                defaults: {
                  loading: !1,
                  isAuthorized: !1,
                  isVerified: !1,
                  isBlocked: !0,
                  passwordRestorePending: !1,
                  storageModel: null,
                  registrationStep: 0,
                  registrationType: h.a.user,
                },
              }),
            ],
            e
          )),
          e
        );
      })();
    },
    "9ppp": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "object unsubscribed"),
            (this.name = "ObjectUnsubscribedError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
    },
    A1Yd: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return a;
        });
      var i = n("fXoL"),
        s = n("P/hZ"),
        r = n("ofXK");
      let o = (() => {
          let e = class {
            constructor(e) {
              (this.el = e),
                (this.iconPos = "left"),
                (this.cornerStyleClass = "ui-corner-all");
            }
            ngAfterViewInit() {
              if (
                ((this._initialStyleClass = this.el.nativeElement.className),
                s.a.addMultipleClasses(
                  this.el.nativeElement,
                  this.getStyleClass()
                ),
                this.icon)
              ) {
                let e = document.createElement("span");
                e.setAttribute("aria-hidden", "true"),
                  (e.className =
                    ("right" == this.iconPos
                      ? "ui-button-icon-right"
                      : "ui-button-icon-left") +
                    " ui-clickable " +
                    this.icon),
                  this.el.nativeElement.appendChild(e);
              }
              let e = document.createElement("span");
              this.icon && !this.label && e.setAttribute("aria-hidden", "true"),
                (e.className = "ui-button-text ui-clickable"),
                e.appendChild(document.createTextNode(this.label || "ui-btn")),
                this.el.nativeElement.appendChild(e),
                (this.initialized = !0);
            }
            getStyleClass() {
              let e =
                "ui-button ui-widget ui-state-default " + this.cornerStyleClass;
              return (
                (e += this.icon
                  ? null != this.label && null != this.label && "" != this.label
                    ? "left" == this.iconPos
                      ? " ui-button-text-icon-left"
                      : " ui-button-text-icon-right"
                    : " ui-button-icon-only"
                  : this.label
                  ? " ui-button-text-only"
                  : " ui-button-text-empty"),
                e
              );
            }
            setStyleClass() {
              let e = this.getStyleClass();
              this.el.nativeElement.className =
                e + " " + this._initialStyleClass;
            }
            get label() {
              return this._label;
            }
            set label(e) {
              (this._label = e),
                this.initialized &&
                  ((s.a.findSingle(
                    this.el.nativeElement,
                    ".ui-button-text"
                  ).textContent = this._label || "ui-btn"),
                  this.icon ||
                    (this._label
                      ? (s.a.removeClass(
                          this.el.nativeElement,
                          "ui-button-text-empty"
                        ),
                        s.a.addClass(
                          this.el.nativeElement,
                          "ui-button-text-only"
                        ))
                      : (s.a.addClass(
                          this.el.nativeElement,
                          "ui-button-text-empty"
                        ),
                        s.a.removeClass(
                          this.el.nativeElement,
                          "ui-button-text-only"
                        ))),
                  this.setStyleClass());
            }
            get icon() {
              return this._icon;
            }
            set icon(e) {
              if (((this._icon = e), this.initialized)) {
                let e =
                  "right" == this.iconPos
                    ? "ui-button-icon-right"
                    : "ui-button-icon-left";
                (s.a.findSingle(
                  this.el.nativeElement,
                  ".ui-clickable"
                ).className = e + " ui-clickable " + this.icon),
                  this.setStyleClass();
              }
            }
            ngOnDestroy() {
              for (; this.el.nativeElement.hasChildNodes(); )
                this.el.nativeElement.removeChild(
                  this.el.nativeElement.lastChild
                );
              this.initialized = !1;
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "pButton", ""]],
              inputs: {
                iconPos: "iconPos",
                cornerStyleClass: "cornerStyleClass",
                label: "label",
                icon: "icon",
              },
            })),
            e
          );
        })(),
        a = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[r.c]],
            })),
            e
          );
        })();
    },
    A1oB: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("fXoL"),
        s = n("yhG/");
      let r = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-accordion"]],
            inputs: { header: "header", text: "text", content: "content" },
            decls: 3,
            vars: 2,
            consts: [
              [
                "expandIcon",
                "pi pi-fw pi-angle-down",
                "collapseIcon",
                "pi pi-fw pi-angle-up",
                0,
                "ui-accordion",
              ],
              [3, "header"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "p-accordion", 0),
                i.Xb(1, "p-accordionTab", 1),
                i.Nc(2),
                i.Wb(),
                i.Wb()),
                2 & e &&
                  (i.Eb(1), i.pc("header", t.header), i.Eb(1), i.Oc(t.text));
            },
            directives: [s.a, s.c],
            encapsulation: 2,
          })),
          e
        );
      })();
    },
    AcyG: function (e, t, n) {
      "use strict";
      var i = n("fXoL"),
        s = n("z5Zb"),
        r = n("ofXK"),
        o = n("HDdC"),
        a = n("XNiG"),
        l = n("2Vo4"),
        c = n("LRne"),
        u = n("cp0P"),
        h = n("z6cu"),
        d = n("EY2u"),
        p = n("Cfvw"),
        f = n("jtHE"),
        g = n("pLZG"),
        m = n("lJxs"),
        b = n("UXun"),
        v = n("IzEk"),
        y = n("l7GE"),
        w = n("51Dv"),
        S = n("ZUHj");
      class _ {
        constructor(e) {
          this.project = e;
        }
        call(e, t) {
          return t.subscribe(new C(e, this.project));
        }
      }
      class C extends y.a {
        constructor(e, t) {
          super(e),
            (this.project = t),
            (this.hasSubscription = !1),
            (this.hasCompleted = !1),
            (this.index = 0);
        }
        _next(e) {
          this.hasSubscription || this.tryNext(e);
        }
        tryNext(e) {
          let t;
          const n = this.index++;
          try {
            t = this.project(e, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          (this.hasSubscription = !0), this._innerSub(t, e, n);
        }
        _innerSub(e, t, n) {
          const i = new w.a(this, t, n),
            s = this.destination;
          s.add(i);
          const r = Object(S.a)(this, e, void 0, void 0, i);
          r !== i && s.add(r);
        }
        _complete() {
          (this.hasCompleted = !0),
            this.hasSubscription || this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(e, t, n, i, s) {
          this.destination.next(t);
        }
        notifyError(e) {
          this.destination.error(e);
        }
        notifyComplete(e) {
          this.destination.remove(e),
            (this.hasSubscription = !1),
            this.hasCompleted && this.destination.complete();
        }
      }
      var E = n("5+tZ"),
        O = n("xbPD"),
        x = n("JIr8"),
        T = n("1G5W"),
        k = n("vkgz"),
        M = n("/uUt");
      n.d(t, "a", function () {
        return ze;
      }),
        n.d(t, "b", function () {
          return me;
        }),
        n.d(t, "c", function () {
          return G;
        }),
        n.d(t, "d", function () {
          return We;
        }),
        n.d(t, "e", function () {
          return Be;
        }),
        n.d(t, "f", function () {
          return He;
        }),
        n.d(t, "g", function () {
          return Xe;
        }),
        n.d(t, "h", function () {
          return Ne;
        }),
        n.d(t, "i", function () {
          return J;
        }),
        n.d(t, "j", function () {
          return te;
        }),
        n.d(t, "k", function () {
          return ce;
        }),
        n.d(t, "l", function () {
          return Ve;
        });
      const I = (e) =>
          e +
          " is not a valid state name. It needs to be a valid object property name.",
        P = () => "States must register a 'name' property",
        R = (e, t, n) => `State name '${e}' from ${t} already exists in ${n}`,
        N = () => "States must be decorated with @State() decorator",
        L = () =>
          "Angular is running in production mode but NGXS is still running in the development mode!\nPlease set developmentMode to false on the NgxsModule options when in production mode.\nNgxsModule.forRoot(states, { developmentMode: !environment.production })",
        A = () =>
          "RECOMMENDATION: Set developmentMode to true on the NgxsModule when Angular is running in development mode.\nNgxsModule.forRoot(states, { developmentMode: !environment.production })",
        D = () => "You have forgotten to import the NGXS module!",
        j = () => "@Action() decorator cannot be used with static methods",
        F = () => "Selectors only work on methods",
        V = () =>
          "Your application was bootstrapped with nooped zone and your execution strategy requires an actual NgZone!\nPlease set the value of the executionStrategy property to NoopNgxsExecutionStrategy.\nNgxsModule.forRoot(states, { executionStrategy: NoopNgxsExecutionStrategy })",
        W = () => "Patching arrays is not supported.",
        z = () => "Patching primitives is not supported.",
        X = (e) =>
          `'${e}' class should be decorated with @Injectable() right after the @State() decorator`;
      let B = (() => {
        class e {
          constructor(e, t) {
            (this._ngZone = e),
              (this._platformId = t),
              this.verifyZoneIsNotNooped(this._ngZone);
          }
          enter(e) {
            return Object(r.x)(this._platformId)
              ? this.runInsideAngular(e)
              : this.runOutsideAngular(e);
          }
          leave(e) {
            return this.runInsideAngular(e);
          }
          runInsideAngular(e) {
            return i.B.isInAngularZone() ? e() : this._ngZone.run(e);
          }
          runOutsideAngular(e) {
            return i.B.isInAngularZone()
              ? this._ngZone.runOutsideAngular(e)
              : e();
          }
          verifyZoneIsNotNooped(e) {
            e instanceof i.B || console.warn(V());
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(i.B), i.bc(i.D));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const H = new i.r("ROOT_STATE_TOKEN"),
        U = new i.r("FEATURE_STATE_TOKEN"),
        G = new i.r("NGXS_PLUGINS"),
        $ = new i.r("NG_TEST_MODE"),
        q = new i.r("NG_DEV_MODE"),
        K = "NGXS_META";
      let Y = (() => {
        class e {
          constructor() {
            (this.defaultsState = {}),
              (this.selectorOptions = {
                injectContainerState: !0,
                suppressErrors: !0,
              }),
              (this.compatibility = { strictContentSecurityPolicy: !1 }),
              (this.executionStrategy = B);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      class Z {
        constructor(e, t, n) {
          (this.previousValue = e),
            (this.currentValue = t),
            (this.firstChange = n);
        }
      }
      const Q = new i.r("NGXS_EXECUTION_STRATEGY");
      function J(e) {
        return e.constructor && e.constructor.type
          ? e.constructor.type
          : e.type;
      }
      const ee = (e, t, n) => {
          e = Object.assign({}, e);
          const i = t.split("."),
            s = i.length - 1;
          return (
            i.reduce(
              (e, t, i) => (
                (e[t] =
                  i === s
                    ? n
                    : Array.isArray(e[t])
                    ? e[t].slice()
                    : Object.assign({}, e[t])),
                e && e[t]
              ),
              e
            ),
            e
          );
        },
        te = (e, t) => t.split(".").reduce((e, t) => e && e[t], e),
        ne = (e) => e && "object" == typeof e && !Array.isArray(e),
        ie = (e, ...t) => {
          if (!t.length) return e;
          const n = t.shift();
          if (ne(e) && ne(n))
            for (const i in n)
              ne(n[i])
                ? (e[i] || Object.assign(e, { [i]: {} }), ie(e[i], n[i]))
                : Object.assign(e, { [i]: n[i] });
          return ie(e, ...t);
        };
      function se(e) {
        if (!e.hasOwnProperty(K)) {
          const t = {
            name: null,
            actions: {},
            defaults: {},
            path: null,
            makeRootSelector: (e) => e.getStateGetter(t.name),
            children: [],
          };
          Object.defineProperty(e, K, { value: t });
        }
        return re(e);
      }
      function re(e) {
        return e[K];
      }
      function oe(e) {
        return e.NGXS_SELECTOR_META;
      }
      function ae(e, t) {
        return t &&
          t.compatibility &&
          t.compatibility.strictContentSecurityPolicy
          ? (function (e) {
              const t = e.slice();
              return (e) => t.reduce((e, t) => e && e[t], e);
            })(e)
          : (function (e) {
              const t = e;
              let n = "store." + t[0],
                i = 0;
              const s = t.length;
              let r = n;
              for (; ++i < s; ) r = r + " && " + (n = n + "." + t[i]);
              return new Function("store", "return " + r + ";");
            })(e);
      }
      function le(e, t) {
        const n = te(t.currentAppState, e.path),
          i = te(t.newAppState, e.path);
        return new Z(n, i, !e.isInitialised);
      }
      function ce(...e) {
        return (function (e, t, n = ue) {
          const i = e.reduce((e, t) => ((e[J(t)] = !0), e), {}),
            s =
              t &&
              (function (e) {
                return e.reduce((e, t) => ((e[t] = !0), e), {});
              })(t);
          return function (e) {
            return e.pipe(
              (function (e, t) {
                return Object(g.a)((n) => {
                  const i = J(n.action);
                  return e[i] && (!t || t[n.status]);
                });
              })(i, s),
              n()
            );
          };
        })(e, ["DISPATCHED"]);
      }
      function ue() {
        return Object(m.a)((e) => e.action);
      }
      function he(e) {
        return (t) =>
          new o.a((n) =>
            t.subscribe({
              next(t) {
                e.leave(() => n.next(t));
              },
              error(t) {
                e.leave(() => n.error(t));
              },
              complete() {
                e.leave(() => n.complete());
              },
            })
          );
      }
      let de = (() => {
        class e {
          constructor(e) {
            this._executionStrategy = e;
          }
          enter(e) {
            return this._executionStrategy.enter(e);
          }
          leave(e) {
            return this._executionStrategy.leave(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(Q));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      class pe extends a.b {
        constructor() {
          super(...arguments),
            (this._itemQueue = []),
            (this._busyPushingNext = !1);
        }
        next(e) {
          if (this._busyPushingNext) this._itemQueue.unshift(e);
          else {
            for (
              this._busyPushingNext = !0, super.next(e);
              this._itemQueue.length > 0;

            ) {
              const e = this._itemQueue.pop();
              super.next(e);
            }
            this._busyPushingNext = !1;
          }
        }
      }
      let fe = (() => {
        class e extends pe {}
        return (
          (e.ɵfac = function (t) {
            return ge(t || e);
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const ge = i.Zb(fe);
      let me = (() => {
        class e extends o.a {
          constructor(e, t) {
            super((n) => {
              const i = e
                .pipe(he(t))
                .subscribe({
                  next: (e) => n.next(e),
                  error: (e) => n.error(e),
                  complete: () => n.complete(),
                });
              n.add(i);
            });
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(fe), i.bc(de));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const be =
        (e) =>
        (...t) =>
          e.shift()(...t, (...t) => be(e)(...t));
      let ve = (() => {
          class e extends l.a {
            constructor() {
              super({});
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        ye = (() => {
          class e {
            constructor(e, t) {
              (this._parentManager = e),
                (this._pluginHandlers = t),
                (this.plugins = []),
                this.registerHandlers();
            }
            get rootPlugins() {
              return (
                (this._parentManager && this._parentManager.plugins) ||
                this.plugins
              );
            }
            registerHandlers() {
              const e = this.getPluginHandlers();
              this.rootPlugins.push(...e);
            }
            getPluginHandlers() {
              return (this._pluginHandlers || []).map((e) =>
                e.handle ? e.handle.bind(e) : e
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(e, 12), i.bc(G, 8));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        we = (() => {
          class e extends a.b {}
          return (
            (e.ɵfac = function (t) {
              return Se(t || e);
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })();
      const Se = i.Zb(we);
      let _e = (() => {
        class e {
          constructor(e, t, n, i, s, r) {
            (this._errorHandler = e),
              (this._actions = t),
              (this._actionResults = n),
              (this._pluginManager = i),
              (this._stateStream = s),
              (this._ngxsExecutionStrategy = r);
          }
          dispatch(e) {
            const t = this._ngxsExecutionStrategy.enter(() =>
              this.dispatchByEvents(e)
            );
            return (
              t.subscribe({
                error: (e) =>
                  this._ngxsExecutionStrategy.leave(() => {
                    try {
                      this._errorHandler.handleError(e);
                    } catch (t) {}
                  }),
              }),
              t.pipe(he(this._ngxsExecutionStrategy))
            );
          }
          dispatchByEvents(e) {
            return Array.isArray(e)
              ? 0 === e.length
                ? Object(c.a)(this._stateStream.getValue())
                : Object(u.a)(e.map((e) => this.dispatchSingle(e)))
              : this.dispatchSingle(e);
          }
          dispatchSingle(e) {
            if (!J(e)) {
              const t = new Error(
                "This action doesn't have a type property: " +
                  e.constructor.name
              );
              return Object(h.a)(t);
            }
            const t = this._stateStream.getValue();
            return be([
              ...this._pluginManager.plugins,
              (e, n) => {
                e !== t && this._stateStream.next(e);
                const i = this.getActionResultStream(n);
                return (
                  i.subscribe((e) => this._actions.next(e)),
                  this._actions.next({ action: n, status: "DISPATCHED" }),
                  this.createDispatchObservable(i)
                );
              },
            ])(t, e).pipe(Object(b.a)());
          }
          getActionResultStream(e) {
            return this._actionResults.pipe(
              Object(g.a)((t) => t.action === e && "DISPATCHED" !== t.status),
              Object(v.a)(1),
              Object(b.a)()
            );
          }
          createDispatchObservable(e) {
            return e
              .pipe(
                (function e(t, n) {
                  return n
                    ? (i) =>
                        i.pipe(
                          e((e, i) =>
                            Object(p.a)(t(e, i)).pipe(
                              Object(m.a)((t, s) => n(e, t, i, s))
                            )
                          )
                        )
                    : (e) => e.lift(new _(t));
                })((e) => {
                  switch (e.status) {
                    case "SUCCESSFUL":
                      return Object(c.a)(this._stateStream.getValue());
                    case "ERRORED":
                      return Object(h.a)(e.error);
                    default:
                      return d.a;
                  }
                })
              )
              .pipe(Object(b.a)());
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              i.bc(i.n),
              i.bc(fe),
              i.bc(we),
              i.bc(ye),
              i.bc(ve),
              i.bc(de)
            );
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const Ce = (e) => {
        Object.freeze(e);
        const t = "function" == typeof e,
          n = Object.prototype.hasOwnProperty;
        return (
          Object.getOwnPropertyNames(e).forEach(function (i) {
            !n.call(e, i) ||
              (t && ("caller" === i || "callee" === i || "arguments" === i)) ||
              null === e[i] ||
              ("object" != typeof e[i] && "function" != typeof e[i]) ||
              Object.isFrozen(e[i]) ||
              Ce(e[i]);
          }),
          e
        );
      };
      let Ee = (() => {
          class e {
            constructor(e, t) {
              (this.isDevMode = e), (this.isTestMode = t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(q), i.bc($));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Oe = (() => {
          class e {
            constructor(e, t) {
              (this._host = e), (this._config = t);
            }
            get isIncorrectProduction() {
              return !this._host.isDevMode() && this._config.developmentMode;
            }
            get isIncorrectDevelopment() {
              return this._host.isDevMode() && !this._config.developmentMode;
            }
            verifyDevMode() {
              this._host.isTestMode() ||
                (this.isIncorrectProduction
                  ? console.warn(L())
                  : this.isIncorrectDevelopment && console.warn(A()));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(Ee), i.bc(Y));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        xe = (() => {
          class e {
            constructor(e, t, n, i) {
              (this._stateStream = e),
                (this._dispatcher = t),
                (this._config = n),
                i.verifyDevMode();
            }
            getRootStateOperations() {
              const e = {
                getState: () => this._stateStream.getValue(),
                setState: (e) => this._stateStream.next(e),
                dispatch: (e) => this._dispatcher.dispatch(e),
              };
              return this._config.developmentMode
                ? this.ensureStateAndActionsAreImmutable(e)
                : e;
            }
            ensureStateAndActionsAreImmutable(e) {
              return {
                getState: () => e.getState(),
                setState: (t) => {
                  const n = Ce(t);
                  return e.setState(n);
                },
                dispatch: (t) => e.dispatch(t),
              };
            }
            setStateToTheCurrentWithNew(e) {
              const t = this.getRootStateOperations(),
                n = t.getState();
              t.setState(Object.assign({}, n, e.defaults));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(ve), i.bc(_e), i.bc(Y), i.bc(Oe));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Te = (() => {
          class e {
            constructor(e) {
              this._internalStateOperations = e;
            }
            createStateContext(e) {
              const t = this._internalStateOperations.getRootStateOperations();
              function n(t) {
                return te(t, e.path);
              }
              function i(n, i) {
                const s = ee(n, e.path, i),
                  r = e.instance;
                if (r.ngxsOnChanges) {
                  const t = le(e, { currentAppState: n, newAppState: s });
                  r.ngxsOnChanges(t);
                }
                return t.setState(s), s;
              }
              function s(e, t) {
                return i(e, t(n(e)));
              }
              return {
                getState: () => n(t.getState()),
                patchState: (e) =>
                  s(
                    t.getState(),
                    (function (e) {
                      return (t) => {
                        if (Array.isArray(e)) throw new Error(W());
                        if ("object" != typeof e) throw new Error(z());
                        const n = Object.assign({}, t);
                        for (const i in e) n[i] = e[i];
                        return n;
                      };
                    })(e)
                  ),
                setState(e) {
                  const n = t.getState();
                  return "function" == typeof e ? s(n, e) : i(n, e);
                },
                dispatch: (e) => t.dispatch(e),
              };
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(xe));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        ke = (() => {
          class e {
            static stateNameErrorMessage(e) {
              return I(e);
            }
            static checkCorrectStateName(e) {
              if (!e) throw new Error(P());
              if (!this.stateNameRegex.test(e))
                throw new Error(this.stateNameErrorMessage(e));
            }
            static checkStateNameIsUnique(e, t) {
              const n = this.getValidStateMeta(e).name,
                i = t[n];
              if (i && i !== e) throw new Error(R(n, e.name, i.name));
              return n;
            }
            static getValidStateMeta(e) {
              const t = re(e);
              if (!t) throw new Error(N());
              return t;
            }
          }
          return (e.stateNameRegex = new RegExp("^[a-zA-Z0-9_]+$")), e;
        })(),
        Me = (() => {
          class e {
            constructor(e, t, n, i, r, o, a) {
              (this._injector = e),
                (this._config = t),
                (this._parentFactory = n),
                (this._actions = i),
                (this._actionResults = r),
                (this._stateContextFactory = o),
                (this._initialState = a),
                (this._actionsSubscription = null),
                (this._states = []),
                (this._statesByName = {}),
                (this._statePaths = {}),
                (this.getRuntimeSelectorContext = Object(s.g)(() => {
                  const e = this;
                  function t(t) {
                    const n = e.statePaths[t];
                    return n ? ae(n.split("."), e._config) : null;
                  }
                  return this._parentFactory
                    ? this._parentFactory.getRuntimeSelectorContext()
                    : {
                        getStateGetter(e) {
                          let n = t(e);
                          return (
                            n ||
                            ((...i) => (n || (n = t(e)), n ? n(...i) : void 0))
                          );
                        },
                        getSelectorOptions: (t) =>
                          Object.assign({}, e._config.selectorOptions, t || {}),
                      };
                }));
            }
            get states() {
              return this._parentFactory
                ? this._parentFactory.states
                : this._states;
            }
            get statesByName() {
              return this._parentFactory
                ? this._parentFactory.statesByName
                : this._statesByName;
            }
            get statePaths() {
              return this._parentFactory
                ? this._parentFactory.statePaths
                : this._statePaths;
            }
            static cloneDefaults(e) {
              let t = {};
              var n;
              return (
                (t = Array.isArray(e)
                  ? e.slice()
                  : ("object" == typeof (n = e) && null !== n) ||
                    "function" == typeof n
                  ? Object.assign({}, e)
                  : void 0 === e
                  ? {}
                  : e),
                t
              );
            }
            static checkStatesAreValid(e) {
              e.forEach(ke.getValidStateMeta);
            }
            ngOnDestroy() {
              this._actionsSubscription.unsubscribe();
            }
            add(t) {
              e.checkStatesAreValid(t);
              const { newStates: n } = this.addToStatesMap(t);
              if (!n.length) return [];
              const i = (function (e) {
                  const t = (t) => {
                    const n = e.find((e) => e === t);
                    if (!n)
                      throw new Error(
                        `Child state not found: ${t}. \r\nYou may have forgotten to add states to module`
                      );
                    return n[K].name;
                  };
                  return e.reduce((e, n) => {
                    const { name: i, children: s } = n[K];
                    return (e[i] = (s || []).map(t)), e;
                  }, {});
                })(n),
                s = (function (e) {
                  const t = [],
                    n = {},
                    i = (s, r = []) => {
                      Array.isArray(r) || (r = []),
                        r.push(s),
                        (n[s] = !0),
                        e[s].forEach((e) => {
                          if (r.indexOf(e) >= 0)
                            throw new Error(
                              `Circular dependency '${e}' is required by '${s}': ${r.join(
                                " -> "
                              )}`
                            );
                          n[e] || i(e, r.slice(0));
                        }),
                        t.indexOf(s) < 0 && t.push(s);
                    };
                  return Object.keys(e).forEach((e) => i(e)), t.reverse();
                })(i),
                r = (function (e, t = {}) {
                  const n = (e, t) => {
                    for (const i in e)
                      if (e.hasOwnProperty(i) && e[i].indexOf(t) >= 0) {
                        const t = n(e, i);
                        return null !== t ? `${t}.${i}` : i;
                      }
                    return null;
                  };
                  for (const i in e)
                    if (e.hasOwnProperty(i)) {
                      const s = n(e, i);
                      t[i] = s ? `${s}.${i}` : i;
                    }
                  return t;
                })(i),
                o = n.reduce((e, t) => ((e[t[K].name] = t), e), {}),
                a = [];
              for (const l of s) {
                const t = o[l],
                  n = r[l],
                  i = t[K];
                this.addRuntimeInfoToMeta(i, n);
                const s = {
                  name: l,
                  path: n,
                  isInitialised: !1,
                  actions: i.actions,
                  instance: this._injector.get(t),
                  defaults: e.cloneDefaults(i.defaults),
                };
                this.hasBeenMountedAndBootstrapped(l, n) || a.push(s),
                  this.states.push(s);
              }
              return a;
            }
            addAndReturnDefaults(e) {
              const t = this.add(e || []);
              return {
                defaults: t.reduce((e, t) => ee(e, t.path, t.defaults), {}),
                states: t,
              };
            }
            connectActionHandlers() {
              null === this._actionsSubscription &&
                (this._actionsSubscription = this._actions
                  .pipe(
                    Object(g.a)((e) => "DISPATCHED" === e.status),
                    Object(E.a)(({ action: e }) =>
                      this.invokeActions(this._actions, e).pipe(
                        Object(m.a)(() => ({
                          action: e,
                          status: "SUCCESSFUL",
                        })),
                        Object(O.a)({ action: e, status: "CANCELED" }),
                        Object(x.a)((t) =>
                          Object(c.a)({
                            action: e,
                            status: "ERRORED",
                            error: t,
                          })
                        )
                      )
                    )
                  )
                  .subscribe((e) => this._actionResults.next(e)));
            }
            invokeActions(e, t) {
              const n = J(t),
                i = [];
              for (const r of this.states) {
                const a = r.actions[n];
                if (a)
                  for (const n of a) {
                    const a = this._stateContextFactory.createStateContext(r);
                    try {
                      let s = r.instance[n.fn](a, t);
                      s instanceof Promise && (s = Object(p.a)(s)),
                        s instanceof o.a
                          ? ((s = s.pipe(Object(O.a)({}))),
                            n.options.cancelUncompleted &&
                              (s = s.pipe(Object(T.a)(e.pipe(ce(t))))))
                          : (s = Object(c.a)({}).pipe(Object(b.a)())),
                        i.push(s);
                    } catch (s) {
                      i.push(Object(h.a)(s));
                    }
                  }
              }
              return i.length || i.push(Object(c.a)({})), Object(u.a)(i);
            }
            addToStatesMap(e) {
              const t = [],
                n = this.statesByName;
              for (const i of e) {
                const e = ke.checkStateNameIsUnique(i, n);
                !n[e] && (t.push(i), (n[e] = i));
              }
              return { newStates: t };
            }
            addRuntimeInfoToMeta(e, t) {
              (this.statePaths[e.name] = t), (e.path = t);
            }
            hasBeenMountedAndBootstrapped(e, t) {
              const n = void 0 !== te(this._initialState, t);
              return this.statesByName[e] && n;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                i.bc(i.s),
                i.bc(Y),
                i.bc(e, 12),
                i.bc(fe),
                i.bc(we),
                i.bc(Te),
                i.bc(s.a, 8)
              );
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Ie = (() => {
          class e {
            constructor(e, t, n) {
              (this.internalStateOperations = e),
                (this.stateContextFactory = t),
                (this.bootstrapper = n);
            }
            ngxsBootstrap(e, t) {
              this.internalStateOperations
                .getRootStateOperations()
                .dispatch(e)
                .pipe(
                  Object(g.a)(() => !!t),
                  Object(k.a)(() => this.invokeInit(t.states)),
                  Object(E.a)(() => this.bootstrapper.appBootstrapped$),
                  Object(g.a)((e) => !!e)
                )
                .subscribe(() => this.invokeBootstrap(t.states));
            }
            invokeInit(e) {
              for (const t of e) {
                const e = t.instance;
                if (e.ngxsOnChanges) {
                  const n = le(t, {
                    currentAppState: {},
                    newAppState: this.internalStateOperations
                      .getRootStateOperations()
                      .getState(),
                  });
                  e.ngxsOnChanges(n);
                }
                e.ngxsOnInit && e.ngxsOnInit(this.getStateContext(t)),
                  (t.isInitialised = !0);
              }
            }
            invokeBootstrap(e) {
              for (const t of e) {
                const e = t.instance;
                e.ngxsAfterBootstrap &&
                  e.ngxsAfterBootstrap(this.getStateContext(t));
              }
            }
            getStateContext(e) {
              return this.stateContextFactory.createStateContext(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(xe), i.bc(Te), i.bc(s.e));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })();
      const Pe = (e) => (e && e.NGXS_SELECTOR_OPTIONS_META) || {};
      function Re(e) {
        const t = oe(e) || re(e);
        return (t && t.makeRootSelector) || (() => e);
      }
      let Ne = (() => {
          class e {
            constructor(e, t, n, i, s, r) {
              (this._stateStream = e),
                (this._internalStateOperations = t),
                (this._config = n),
                (this._internalExecutionStrategy = i),
                (this._stateFactory = s),
                this.initStateStream(r);
            }
            dispatch(e) {
              return this._internalStateOperations
                .getRootStateOperations()
                .dispatch(e);
            }
            select(e) {
              const t = this.getStoreBoundSelectorFn(e);
              return this._stateStream.pipe(
                Object(m.a)(t),
                Object(x.a)((e) => {
                  const { suppressErrors: t } = this._config.selectorOptions;
                  return e instanceof TypeError && t
                    ? Object(c.a)(void 0)
                    : Object(h.a)(e);
                }),
                Object(M.a)(),
                he(this._internalExecutionStrategy)
              );
            }
            selectOnce(e) {
              return this.select(e).pipe(Object(v.a)(1));
            }
            selectSnapshot(e) {
              return this.getStoreBoundSelectorFn(e)(
                this._stateStream.getValue()
              );
            }
            subscribe(e) {
              return this._stateStream
                .pipe(he(this._internalExecutionStrategy))
                .subscribe(e);
            }
            snapshot() {
              return this._internalStateOperations
                .getRootStateOperations()
                .getState();
            }
            reset(e) {
              return this._internalStateOperations
                .getRootStateOperations()
                .setState(e);
            }
            getStoreBoundSelectorFn(e) {
              return Re(e)(this._stateFactory.getRuntimeSelectorContext());
            }
            initStateStream(e) {
              const t = this._stateStream.value;
              if (!t || 0 === Object.keys(t).length) {
                const t =
                  Object.keys(this._config.defaultsState).length > 0
                    ? Object.assign({}, this._config.defaultsState, e)
                    : e;
                this._stateStream.next(t);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                i.bc(ve),
                i.bc(xe),
                i.bc(Y),
                i.bc(de),
                i.bc(Me),
                i.bc(s.a, 8)
              );
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Le = (() => {
          class e {
            constructor(t, n) {
              (e.store = t), (e.config = n);
            }
            ngOnDestroy() {
              (e.store = null), (e.config = null);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(Ne), i.bc(Y));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            (e.store = null),
            (e.config = null),
            e
          );
        })();
      class Ae {
        static get type() {
          return "@@INIT";
        }
      }
      class De {
        constructor(e) {
          this.addedStates = e;
        }
        static get type() {
          return "@@UPDATE_STATE";
        }
      }
      const je = new f.a(1);
      let Fe = (() => {
          class e {
            constructor(e, t, n, s, r = [], o) {
              !(function () {
                try {
                  const e = window.ng,
                    t = !(e.probe && e.coreTokens) && Object(i.Y)();
                  je.next(t);
                } catch (e) {
                  je.next(!1);
                } finally {
                  je.complete();
                }
              })();
              const a = e.addAndReturnDefaults(r);
              t.setStateToTheCurrentWithNew(a),
                e.connectActionHandlers(),
                o.ngxsBootstrap(new Ae(), a);
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)(
                  i.bc(Me),
                  i.bc(xe),
                  i.bc(Ne),
                  i.bc(Le),
                  i.bc(H, 8),
                  i.bc(Ie)
                );
              },
            })),
            e
          );
        })(),
        Ve = (() => {
          class e {
            constructor(t, n, i, s = [], r) {
              const o = e.flattenStates(s),
                a = i.addAndReturnDefaults(o);
              a.states.length &&
                (n.setStateToTheCurrentWithNew(a),
                r.ngxsBootstrap(new De(a.defaults), a));
            }
            static flattenStates(e = []) {
              return e.reduce((e, t) => e.concat(t), []);
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)(
                  i.bc(Ne),
                  i.bc(xe),
                  i.bc(Me),
                  i.bc(U, 8),
                  i.bc(Ie)
                );
              },
            })),
            e
          );
        })(),
        We = (() => {
          class e {
            static forRoot(t = [], n = {}) {
              return {
                ngModule: Fe,
                providers: [
                  Me,
                  Te,
                  me,
                  fe,
                  s.e,
                  Oe,
                  Ee,
                  Ie,
                  _e,
                  we,
                  xe,
                  de,
                  Ne,
                  ve,
                  Le,
                  ye,
                  ...t,
                  ...e.ngxsTokenProviders(t, n),
                ],
              };
            }
            static forFeature(e = []) {
              return {
                ngModule: Ve,
                providers: [
                  Me,
                  ye,
                  ...e,
                  { provide: U, multi: !0, useValue: e },
                ],
              };
            }
            static ngxsTokenProviders(t, n) {
              return [
                { provide: $, useValue: s.f },
                { provide: q, useValue: i.Y },
                { provide: Q, useClass: n.executionStrategy || B },
                { provide: H, useValue: t },
                { provide: e.ROOT_OPTIONS, useValue: n },
                {
                  provide: Y,
                  useFactory: e.ngxsConfigFactory,
                  deps: [e.ROOT_OPTIONS],
                },
                {
                  provide: i.b,
                  useFactory: e.appBootstrapListenerFactory,
                  multi: !0,
                  deps: [s.e],
                },
                { provide: s.a, useFactory: e.getInitialState },
                { provide: s.c, useExisting: Te },
                { provide: s.d, useExisting: Me },
              ];
            }
            static ngxsConfigFactory(e) {
              return ie(new Y(), e);
            }
            static appBootstrapListenerFactory(e) {
              return () => e.bootstrap();
            }
            static getInitialState() {
              return s.b.pop();
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            (e.ROOT_OPTIONS = new i.r("ROOT_OPTIONS")),
            e
          );
        })();
      function ze(e, t) {
        return (n, i) => {
          if (n.hasOwnProperty("prototype")) throw new Error(j());
          const s = se(n.constructor);
          Array.isArray(e) || (e = [e]);
          for (const r of e) {
            const e = r.type;
            s.actions[e] || (s.actions[e] = []),
              s.actions[e].push({ fn: i, options: t || {}, type: e });
          }
        };
      }
      function Xe(e) {
        return (t) => {
          !(function (e) {
            je.subscribe((t) => {
              t && (e.ɵprov || console.warn(X(e.name)));
            });
          })(t);
          const n = t,
            i = se(n),
            s = Object.getPrototypeOf(n),
            r = (function (t) {
              return Object.assign({}, t.NGXS_OPTIONS_META || {}, e);
            })(s);
          !(function (e) {
            const {
                meta: t,
                inheritedStateClass: n,
                optionsWithInheritance: i,
              } = e,
              { children: s, defaults: r, name: o } = i,
              a = "string" == typeof o ? o : (o && o.getName()) || null;
            ke.checkCorrectStateName(a),
              n.hasOwnProperty(K) &&
                (t.actions = Object.assign(
                  {},
                  t.actions,
                  (n[K] || {}).actions
                )),
              (t.children = s),
              (t.defaults = r),
              (t.name = a);
          })({ meta: i, inheritedStateClass: s, optionsWithInheritance: r }),
            (n.NGXS_OPTIONS_META = r);
        };
      }
      function Be(e, ...t) {
        return function (n, i) {
          const s = i.toString(),
            r = `__${s}__selector`,
            o = (function (e, t, n = []) {
              return "string" ==
                typeof (t =
                  t ||
                  (function (e) {
                    const t = e.length - 1;
                    return 36 === e.charCodeAt(t) ? e.slice(0, t) : e;
                  })(e))
                ? ae(n.length ? [t, ...n] : t.split("."), Le.config)
                : t;
            })(s, e, t);
          Object.defineProperties(n, {
            [r]: { writable: !0, enumerable: !1, configurable: !0 },
            [s]: {
              enumerable: !0,
              configurable: !0,
              get() {
                return (
                  this[r] ||
                  (this[r] = (function (e) {
                    if (!Le.store) throw new Error(D());
                    return Le.store.select(e);
                  })(o))
                );
              },
            },
          });
        };
      }
      function He(e) {
        return (t, n, i) => {
          if (!i || null === i.value) throw new Error(F());
          const r = i.value,
            o = (function (e, t, n) {
              const i = n && n.containerClass,
                r = Object(s.g)(function (...e) {
                  const n = t.apply(i, e);
                  return n instanceof Function ? s.g.apply(null, [n]) : n;
                });
              Object.setPrototypeOf(r, t);
              const o = (function (e, t) {
                const n =
                  ((i = e).hasOwnProperty("NGXS_SELECTOR_META") ||
                    Object.defineProperty(i, "NGXS_SELECTOR_META", {
                      value: {
                        makeRootSelector: null,
                        originalFn: null,
                        containerClass: null,
                        selectorName: null,
                        getSelectorOptions: () => ({}),
                      },
                    }),
                  oe(i));
                var i;
                n.originalFn = e;
                let s = () => ({});
                t &&
                  ((n.containerClass = t.containerClass),
                  (n.selectorName = t.selectorName),
                  (s = t.getSelectorOptions || s));
                const r = Object.assign({}, n);
                return (
                  (n.getSelectorOptions = () =>
                    (function (e, t) {
                      return Object.assign(
                        {},
                        Pe(e.containerClass) || {},
                        Pe(e.originalFn) || {},
                        e.getSelectorOptions() || {},
                        t
                      );
                    })(r, s())),
                  n
                );
              })(t, n);
              return (
                (o.makeRootSelector = (t) => {
                  const { argumentSelectorFunctions: n, selectorOptions: i } =
                    (function (e, t, n = []) {
                      const i = t.getSelectorOptions(),
                        s = e.getSelectorOptions(i);
                      return {
                        selectorOptions: s,
                        argumentSelectorFunctions: (function (e = [], t, n) {
                          const i = [];
                          return (
                            n &&
                              (0 === e.length || t.injectContainerState) &&
                              re(n) &&
                              i.push(n),
                            e && i.push(...e),
                            i
                          );
                        })(n, s, t.containerClass).map((t) => Re(t)(e)),
                      };
                    })(t, o, e);
                  return function (e) {
                    const t = n.map((t) => t(e));
                    try {
                      return r(...t);
                    } catch (s) {
                      if (s instanceof TypeError && i.suppressErrors) return;
                      throw s;
                    }
                  };
                }),
                r
              );
            })(e, r, {
              containerClass: t,
              selectorName: n.toString(),
              getSelectorOptions: () => ({}),
            }),
            a = { configurable: !0, get: () => o };
          return (a.originalFn = r), a;
        };
      }
    },
    AsfI: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var i = n("fXoL"),
        s = n("Icl4"),
        r = n("ofXK");
      function o(e, t) {
        1 & e && (i.Xb(0, "span", 6), i.Nc(1, "Copied to clipboard"), i.Wb());
      }
      let a = (() => {
        class e {
          constructor() {
            this.copied = !1;
          }
          set userName(e) {
            this.refLink = `${window.location.origin}?ref=${e}`;
          }
          copy() {
            (this.copied = !0),
              (this.timer = setTimeout(() => {
                (this.copied = !1), clearTimeout(this.timer);
              }, 2e3));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-referral-link"]],
            inputs: { refLink: "refLink", userName: "userName" },
            decls: 7,
            vars: 3,
            consts: [
              [1, "position-relative"],
              [1, "input-group"],
              ["disabled", "", 1, "form-control", 3, "value"],
              [1, "input-group-text", 3, "clipboardCopy", "click"],
              [1, "material-icons"],
              ["class", "copied", 4, "ngIf"],
              [1, "copied"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "div", 0),
                i.Xb(1, "div", 1),
                i.Sb(2, "input", 2),
                i.Xb(3, "span", 3),
                i.fc("click", function () {
                  return t.copy();
                }),
                i.Xb(4, "span", 4),
                i.Nc(5, "content_copy"),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Lc(6, o, 2, 0, "span", 5),
                i.Wb()),
                2 & e &&
                  (i.Eb(2),
                  i.pc("value", t.refLink),
                  i.Eb(1),
                  i.pc("clipboardCopy", t.refLink),
                  i.Eb(3),
                  i.pc("ngIf", t.copied));
            },
            directives: [s.a, r.m],
            styles: [
              ".copied[_ngcontent-%COMP%]{color:green;font-size:12px;position:absolute;right:0;bottom:-25px}.input-group-text[_ngcontent-%COMP%]{cursor:pointer}",
            ],
          })),
          e
        );
      })();
    },
    AytR: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = {
        production: !1,
        apiUrl: "https://api.marketvision.io:443",
        socketUrl: "undefined:undefined",
        stripeApiKey: "pk_test_dFdGTd7sMSydnenl6C6rRIrv00KAiiOrul",
      };
    },
    Cfvw: function (e, t, n) {
      "use strict";
      var i = n("HDdC"),
        s = n("SeVD"),
        r = n("quSY"),
        o = n("kJWO"),
        a = n("jZKg"),
        l = n("Lhse"),
        c = n("c2HN"),
        u = n("I55L");
      function h(e, t) {
        return t
          ? (function (e, t) {
              if (null != e) {
                if (
                  (function (e) {
                    return e && "function" == typeof e[o.a];
                  })(e)
                )
                  return (function (e, t) {
                    return new i.a((n) => {
                      const i = new r.a();
                      return (
                        i.add(
                          t.schedule(() => {
                            const s = e[o.a]();
                            i.add(
                              s.subscribe({
                                next(e) {
                                  i.add(t.schedule(() => n.next(e)));
                                },
                                error(e) {
                                  i.add(t.schedule(() => n.error(e)));
                                },
                                complete() {
                                  i.add(t.schedule(() => n.complete()));
                                },
                              })
                            );
                          })
                        ),
                        i
                      );
                    });
                  })(e, t);
                if (Object(c.a)(e))
                  return (function (e, t) {
                    return new i.a((n) => {
                      const i = new r.a();
                      return (
                        i.add(
                          t.schedule(() =>
                            e.then(
                              (e) => {
                                i.add(
                                  t.schedule(() => {
                                    n.next(e),
                                      i.add(t.schedule(() => n.complete()));
                                  })
                                );
                              },
                              (e) => {
                                i.add(t.schedule(() => n.error(e)));
                              }
                            )
                          )
                        ),
                        i
                      );
                    });
                  })(e, t);
                if (Object(u.a)(e)) return Object(a.a)(e, t);
                if (
                  (function (e) {
                    return e && "function" == typeof e[l.a];
                  })(e) ||
                  "string" == typeof e
                )
                  return (function (e, t) {
                    if (!e) throw new Error("Iterable cannot be null");
                    return new i.a((n) => {
                      const i = new r.a();
                      let s;
                      return (
                        i.add(() => {
                          s && "function" == typeof s.return && s.return();
                        }),
                        i.add(
                          t.schedule(() => {
                            (s = e[l.a]()),
                              i.add(
                                t.schedule(function () {
                                  if (n.closed) return;
                                  let e, t;
                                  try {
                                    const n = s.next();
                                    (e = n.value), (t = n.done);
                                  } catch (i) {
                                    return void n.error(i);
                                  }
                                  t
                                    ? n.complete()
                                    : (n.next(e), this.schedule());
                                })
                              );
                          })
                        ),
                        i
                      );
                    });
                  })(e, t);
              }
              throw new TypeError(
                ((null !== e && typeof e) || e) + " is not observable"
              );
            })(e, t)
          : e instanceof i.a
          ? e
          : new i.a(Object(s.a)(e));
      }
      n.d(t, "a", function () {
        return h;
      });
    },
    CnOO: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      }),
        n.d(t, "b", function () {
          return a;
        });
      var i = n("fXoL"),
        s = n("ofXK");
      const r = new i.r("Stripe Publishable Key"),
        o = new i.r("Stripe Options");
      let a = (() => {
          class e {
            constructor(e, t, n) {
              (this.document = e),
                (this.src = "https://js.stripe.com/v3/"),
                (this.window = this.document.defaultView),
                (this.load = this.injectIntoHead()),
                t && this.setPublishableKey(t, n);
            }
            promiseStripe() {
              return this.load;
            }
            promiseInstance() {
              return this.promiseStripe().then((e) => {
                if (!this.StripeInstance) {
                  const e = new Error(
                    "Stripe PublishableKey NOT SET. Use method StripeScriptTag.setPublishableKey()"
                  );
                  throw ((e.code = "STRIPEKEYNOTSET"), e);
                }
                return this.StripeInstance;
              });
            }
            setPublishableKey(e, t) {
              return this.load.then(
                () => (this.StripeInstance = this.Stripe(e, t))
              );
            }
            injectIntoHead() {
              return this.window && this.window.Stripe
                ? Promise.resolve((this.Stripe = this.window.Stripe))
                : new Promise((e, t) => {
                    const n = this.getTargetTagDropElement(),
                      i = this.document.createElement("script");
                    i.setAttribute("src", this.src),
                      i.setAttribute("type", "text/javascript"),
                      i.addEventListener("load", () => {
                        (this.Stripe = this.grabStripe()), e(this.Stripe);
                      }),
                      n.appendChild(i);
                  });
            }
            grabStripe() {
              return window.Stripe;
            }
            getTargetTagDropElement() {
              let e = this.document.getElementsByTagName("head");
              return e.length
                ? e[0]
                : this.document.getElementsByTagName("body")[0];
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(s.e), i.bc(r), i.bc(o));
            }),
            (e.ɵprov = Object(i.Nb)({
              factory: function () {
                return new e(
                  Object(i.bc)(s.e),
                  Object(i.bc)(r),
                  Object(i.bc)(o)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        l = (() => {
          class e {
            static forRoot(t, n) {
              return {
                ngModule: e,
                providers: [
                  a,
                  { provide: r, useValue: t },
                  { provide: o, useValue: n },
                ],
              };
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c]],
            })),
            e
          );
        })();
    },
    DH7j: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (() =>
        Array.isArray || ((e) => e && "number" == typeof e.length))();
    },
    DV8u: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("fXoL"),
        s = n("ofXK");
      function r(e, t) {
        if (
          (1 & e &&
            (i.Vb(0), i.Xb(1, "div", 1), i.Sb(2, "div", 2), i.Wb(), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.Kc("position", e.position)("background", e.background, i.Kb);
        }
      }
      let o = (() => {
        class e {
          constructor() {
            (this.visible = !0),
              (this.position = "absolute"),
              (this.background = "#fff");
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-progress-spinner"]],
            inputs: {
              visible: "visible",
              position: "position",
              background: "background",
            },
            decls: 1,
            vars: 1,
            consts: [
              [4, "ngIf"],
              [1, "progress-spinner"],
              [1, "loader"],
            ],
            template: function (e, t) {
              1 & e && i.Lc(0, r, 3, 4, "ng-container", 0),
                2 & e && i.pc("ngIf", t.visible);
            },
            directives: [s.m],
            styles: [
              '.progress-spinner[_ngcontent-%COMP%]{position:fixed;top:0;left:0;right:0;bottom:0;display:flex;align-items:center;justify-content:center;z-index:99999}.loader[_ngcontent-%COMP%], .loader[_ngcontent-%COMP%]:after, .loader[_ngcontent-%COMP%]:before{background:#363333;-webkit-animation:load 1s ease-in-out infinite;animation:load 1s ease-in-out infinite;width:1em;height:4em}.loader[_ngcontent-%COMP%]{color:#363333;text-indent:-9999em;margin:88px auto;position:relative;font-size:11px;transform:translateZ(0);-webkit-animation-delay:-.16s;animation-delay:-.16s}.loader[_ngcontent-%COMP%]:after, .loader[_ngcontent-%COMP%]:before{position:absolute;top:0;content:""}.loader[_ngcontent-%COMP%]:before{left:-1.5em;-webkit-animation-delay:-.32s;animation-delay:-.32s}.loader[_ngcontent-%COMP%]:after{left:1.5em}@-webkit-keyframes load{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}@keyframes load{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}',
            ],
          })),
          e
        );
      })();
    },
    DYOT: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return oe;
      }),
        n.d(t, "b", function () {
          return ae;
        });
      var i = n("fXoL"),
        s = n("R0Ic"),
        r = n("ofXK"),
        o = n("A1Yd"),
        a = n("P/hZ"),
        l = n("RtSl"),
        c = n("3Pt+");
      const u = ["contentWrapper"],
        h = ["inputfield"],
        d = function (e) {
          return { "ui-state-disabled": e };
        };
      function p(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "button", 6),
            i.fc("click", function (t) {
              i.Ec(e), i.hc();
              const n = i.Bc(1);
              return i.hc().onButtonClick(t, n);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2);
          i.pc("icon", e.icon)("ngClass", i.sc(3, d, e.disabled))(
            "disabled",
            e.disabled
          );
        }
      }
      function f(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "input", 3, 4),
            i.fc("focus", function (t) {
              return i.Ec(e), i.hc().onInputFocus(t);
            })("keydown", function (t) {
              return i.Ec(e), i.hc().onInputKeydown(t);
            })("click", function () {
              return i.Ec(e), i.hc().onInputClick();
            })("blur", function (t) {
              return i.Ec(e), i.hc().onInputBlur(t);
            })("input", function (t) {
              return i.Ec(e), i.hc().onUserInput(t);
            }),
            i.Wb(),
            i.Lc(2, p, 1, 5, "button", 5);
        }
        if (2 & e) {
          const e = i.hc();
          i.Gb(e.inputStyleClass),
            i.pc("value", e.inputFieldValue)("readonly", e.readonlyInput)(
              "ngStyle",
              e.inputStyle
            )("placeholder", e.placeholder || "")("disabled", e.disabled)(
              "ngClass",
              "ui-inputtext ui-widget ui-state-default ui-corner-all"
            ),
            i.Fb("id", e.inputId)("name", e.name)("required", e.required)(
              "aria-required",
              e.required
            )("tabindex", e.tabindex)("inputmode", e.touchUI ? "off" : null)(
              "aria-labelledby",
              e.ariaLabelledBy
            ),
            i.Eb(2),
            i.pc("ngIf", e.showIcon);
        }
      }
      function g(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 24),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc(4).onPrevButtonClick(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(4).onPrevButtonClick(t);
            })("keydown", function (t) {
              return i.Ec(e), i.hc(4).onInputKeydown(t);
            }),
            i.Sb(1, "span", 25),
            i.Wb();
        }
      }
      function m(e, t) {
        if ((1 & e && (i.Xb(0, "span", 26), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc().$implicit,
            t = i.hc(3);
          i.Eb(1), i.Oc(t.locale.monthNames[e.month]);
        }
      }
      function b(e, t) {
        if ((1 & e && (i.Xb(0, "option", 29), i.Nc(1), i.Wb()), 2 & e)) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc(2).$implicit;
          i.pc("value", n)("selected", n === s.month), i.Eb(1), i.Oc(e);
        }
      }
      function v(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "select", 27),
            i.fc("change", function (t) {
              return i.Ec(e), i.hc(4).onMonthDropdownChange(t.target.value);
            }),
            i.Lc(1, b, 2, 3, "option", 28),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(4);
          i.Eb(1), i.pc("ngForOf", e.locale.monthNames);
        }
      }
      function y(e, t) {
        if ((1 & e && (i.Xb(0, "option", 29), i.Nc(1), i.Wb()), 2 & e)) {
          const e = t.$implicit,
            n = i.hc(5);
          i.pc("value", e)("selected", e === n.currentYear), i.Eb(1), i.Oc(e);
        }
      }
      function w(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "select", 30),
            i.fc("change", function (t) {
              return i.Ec(e), i.hc(4).onYearDropdownChange(t.target.value);
            }),
            i.Lc(1, y, 2, 3, "option", 28),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(4);
          i.Eb(1), i.pc("ngForOf", e.yearOptions);
        }
      }
      function S(e, t) {
        if ((1 & e && (i.Xb(0, "span", 31), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc().$implicit,
            t = i.hc(3);
          i.Eb(1), i.Oc("month" === t.view ? t.currentYear : e.year);
        }
      }
      function _(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 32),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc(4).onNextButtonClick(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(4).onNextButtonClick(t);
            })("keydown", function (t) {
              return i.Ec(e), i.hc(4).onInputKeydown(t);
            }),
            i.Sb(1, "span", 33),
            i.Wb();
        }
      }
      function C(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "th", 39), i.Xb(1, "span"), i.Nc(2), i.Wb(), i.Wb()),
          2 & e)
        ) {
          const e = i.hc(5);
          i.Eb(2), i.Oc(e.locale.weekHeader);
        }
      }
      function E(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "th", 40), i.Xb(1, "span"), i.Nc(2), i.Wb(), i.Wb()),
          2 & e)
        ) {
          const e = t.$implicit;
          i.Eb(2), i.Oc(e);
        }
      }
      function O(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "td", 43), i.Xb(1, "span"), i.Nc(2), i.Wb(), i.Wb()),
          2 & e)
        ) {
          const e = i.hc().index,
            t = i.hc(2).$implicit;
          i.Eb(2), i.Pc(" ", t.weekNumbers[e], " ");
        }
      }
      function x(e, t) {
        if ((1 & e && (i.Vb(0), i.Nc(1), i.Ub()), 2 & e)) {
          const e = i.hc(3).$implicit;
          i.Eb(1), i.Oc(e.day);
        }
      }
      function T(e, t) {
        1 & e && i.Tb(0);
      }
      const k = function (e, t) {
          return { "ui-state-active": e, "ui-state-highlight": t };
        },
        M = function (e) {
          return { $implicit: e };
        };
      function I(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 47),
            i.fc("click", function (t) {
              i.Ec(e);
              const n = i.hc(2).$implicit;
              return i.hc(6).onDateSelect(t, n);
            })("keydown", function (t) {
              i.Ec(e);
              const n = i.hc(2).$implicit,
                s = i.hc(3).index;
              return i.hc(3).onDateCellKeydown(t, n, s);
            }),
            i.Lc(1, x, 2, 1, "ng-container", 9),
            i.Lc(2, T, 1, 0, "ng-container", 48),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2).$implicit,
            t = i.hc(6);
          i.pc("ngClass", i.tc(4, k, t.isSelected(e), e.today)),
            i.Eb(1),
            i.pc("ngIf", !t.dateTemplate),
            i.Eb(1),
            i.pc("ngTemplateOutlet", t.dateTemplate)(
              "ngTemplateOutletContext",
              i.sc(7, M, e)
            );
        }
      }
      function P(e, t) {
        if ((1 & e && (i.Vb(0), i.Nc(1), i.Ub()), 2 & e)) {
          const e = i.hc(3).$implicit;
          i.Eb(1), i.Oc(e.day);
        }
      }
      function R(e, t) {
        1 & e && i.Tb(0);
      }
      function N(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "span", 49),
            i.Lc(1, P, 2, 1, "ng-container", 9),
            i.Lc(2, R, 1, 0, "ng-container", 48),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc(2).$implicit,
            t = i.hc(6);
          i.pc("ngClass", i.tc(4, k, t.isSelected(e), e.today)),
            i.Eb(1),
            i.pc("ngIf", !t.disabledDateTemplate),
            i.Eb(1),
            i.pc("ngTemplateOutlet", t.disabledDateTemplate)(
              "ngTemplateOutletContext",
              i.sc(7, M, e)
            );
        }
      }
      function L(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Lc(1, I, 3, 9, "a", 45),
            i.Lc(2, N, 3, 9, "span", 46),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc().$implicit;
          i.Eb(1),
            i.pc("ngIf", e.selectable),
            i.Eb(1),
            i.pc("ngIf", !e.selectable);
        }
      }
      const A = function (e, t, n) {
        return {
          "ui-datepicker-other-month": e,
          "ui-datepicker-current-day": t,
          "ui-datepicker-today": n,
        };
      };
      function D(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "td", 44), i.Lc(1, L, 3, 2, "ng-container", 9), i.Wb()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = i.hc(6);
          i.pc("ngClass", i.uc(2, A, e.otherMonth, n.isSelected(e), e.today)),
            i.Eb(1),
            i.pc("ngIf", !e.otherMonth || n.showOtherMonths);
        }
      }
      function j(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "tr"),
            i.Lc(1, O, 3, 1, "td", 41),
            i.Lc(2, D, 2, 6, "td", 42),
            i.Wb()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = i.hc(5);
          i.Eb(1), i.pc("ngIf", n.showWeek), i.Eb(1), i.pc("ngForOf", e);
        }
      }
      function F(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 34),
            i.Xb(1, "table", 35),
            i.Xb(2, "thead"),
            i.Xb(3, "tr"),
            i.Lc(4, C, 3, 1, "th", 36),
            i.Lc(5, E, 3, 1, "th", 37),
            i.Wb(),
            i.Wb(),
            i.Xb(6, "tbody"),
            i.Lc(7, j, 3, 2, "tr", 38),
            i.Wb(),
            i.Wb(),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc().$implicit,
            t = i.hc(3);
          i.Eb(4),
            i.pc("ngIf", t.showWeek),
            i.Eb(1),
            i.pc("ngForOf", t.weekDays),
            i.Eb(2),
            i.pc("ngForOf", e.dates);
        }
      }
      function V(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 14),
            i.Xb(1, "div", 15),
            i.Lc(2, g, 2, 0, "a", 16),
            i.Xb(3, "div", 17),
            i.Lc(4, m, 2, 1, "span", 18),
            i.Lc(5, v, 2, 1, "select", 19),
            i.Lc(6, w, 2, 1, "select", 20),
            i.Lc(7, S, 2, 1, "span", 21),
            i.Wb(),
            i.Lc(8, _, 2, 0, "a", 22),
            i.Wb(),
            i.Lc(9, F, 8, 3, "div", 23),
            i.Wb()),
          2 & e)
        ) {
          const e = t.index,
            n = i.hc(3);
          i.Eb(2),
            i.pc("ngIf", 0 === e),
            i.Eb(2),
            i.pc("ngIf", !n.monthNavigator && "month" !== n.view),
            i.Eb(1),
            i.pc(
              "ngIf",
              n.monthNavigator && "month" !== n.view && 1 === n.numberOfMonths
            ),
            i.Eb(1),
            i.pc("ngIf", n.yearNavigator && 1 === n.numberOfMonths),
            i.Eb(1),
            i.pc("ngIf", !n.yearNavigator),
            i.Eb(1),
            i.pc("ngIf", 1 === n.numberOfMonths || e === n.numberOfMonths - 1),
            i.Eb(1),
            i.pc("ngIf", "date" === n.view);
        }
      }
      const W = function (e, t) {
        return { "ui-state-active": e, "ui-state-disabled": t };
      };
      function z(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 52),
            i.fc("click", function (n) {
              i.Ec(e);
              const s = t.index;
              return i.hc(4).onMonthSelect(n, s);
            })("keydown", function (n) {
              i.Ec(e);
              const s = t.index;
              return i.hc(4).onMonthCellKeydown(n, s);
            }),
            i.Nc(1),
            i.Wb();
        }
        if (2 & e) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc(4);
          i.pc(
            "ngClass",
            i.tc(
              2,
              W,
              s.isMonthSelected(n),
              !s.isSelectable(1, n, s.currentYear, !1)
            )
          ),
            i.Eb(1),
            i.Pc(" ", e, " ");
        }
      }
      function X(e, t) {
        if (
          (1 & e && (i.Xb(0, "div", 50), i.Lc(1, z, 2, 5, "a", 51), i.Wb()),
          2 & e)
        ) {
          const e = i.hc(3);
          i.Eb(1), i.pc("ngForOf", e.monthPickerValues);
        }
      }
      function B(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Lc(1, V, 10, 7, "div", 12),
            i.Lc(2, X, 2, 1, "div", 13),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc(2);
          i.Eb(1),
            i.pc("ngForOf", e.months),
            i.Eb(1),
            i.pc("ngIf", "month" === e.view);
        }
      }
      function H(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 59),
            i.Xb(1, "a"),
            i.Sb(2, "span", 56),
            i.Wb(),
            i.Xb(3, "span"),
            i.Nc(4),
            i.Wb(),
            i.Xb(5, "a"),
            i.Sb(6, "span", 58),
            i.Wb(),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc(3);
          i.Eb(4), i.Oc(e.timeSeparator);
        }
      }
      const U = function (e) {
        return { display: e };
      };
      function G(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 64),
            i.Xb(1, "a", 55),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(3).onContainerButtonKeydown(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(3).incrementSecond(t);
            })("mousedown", function (t) {
              return i.Ec(e), i.hc(3).onTimePickerElementMouseDown(t, 2, 1);
            })("mouseup", function (t) {
              return i.Ec(e), i.hc(3).onTimePickerElementMouseUp(t);
            })("mouseleave", function () {
              return i.Ec(e), i.hc(3).onTimePickerElementMouseLeave();
            }),
            i.Sb(2, "span", 56),
            i.Wb(),
            i.Xb(3, "span", 57),
            i.Nc(4, "0"),
            i.Wb(),
            i.Xb(5, "span"),
            i.Nc(6),
            i.Wb(),
            i.Xb(7, "a", 55),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(3).onContainerButtonKeydown(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(3).decrementSecond(t);
            })("mousedown", function (t) {
              return i.Ec(e), i.hc(3).onTimePickerElementMouseDown(t, 2, -1);
            })("mouseup", function (t) {
              return i.Ec(e), i.hc(3).onTimePickerElementMouseUp(t);
            })("mouseleave", function () {
              return i.Ec(e), i.hc(3).onTimePickerElementMouseLeave();
            }),
            i.Sb(8, "span", 58),
            i.Wb(),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(3);
          i.Eb(3),
            i.pc(
              "ngStyle",
              i.sc(2, U, e.currentSecond < 10 ? "inline" : "none")
            ),
            i.Eb(3),
            i.Oc(e.currentSecond);
        }
      }
      function $(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 65),
            i.Xb(1, "a", 66),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(3).onContainerButtonKeydown(t);
            })("click", function (t) {
              return i.Ec(e), i.hc(3).toggleAMPM(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(3).toggleAMPM(t);
            }),
            i.Sb(2, "span", 56),
            i.Wb(),
            i.Xb(3, "span"),
            i.Nc(4),
            i.Wb(),
            i.Xb(5, "a", 66),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(3).onContainerButtonKeydown(t);
            })("click", function (t) {
              return i.Ec(e), i.hc(3).toggleAMPM(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(3).toggleAMPM(t);
            }),
            i.Sb(6, "span", 58),
            i.Wb(),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(3);
          i.Eb(4), i.Oc(e.pm ? "PM" : "AM");
        }
      }
      function q(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 53),
            i.Xb(1, "div", 54),
            i.Xb(2, "a", 55),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(2).onContainerButtonKeydown(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(2).incrementHour(t);
            })("mousedown", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseDown(t, 0, 1);
            })("mouseup", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseUp(t);
            })("mouseleave", function () {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseLeave();
            }),
            i.Sb(3, "span", 56),
            i.Wb(),
            i.Xb(4, "span", 57),
            i.Nc(5, "0"),
            i.Wb(),
            i.Xb(6, "span"),
            i.Nc(7),
            i.Wb(),
            i.Xb(8, "a", 55),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(2).onContainerButtonKeydown(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(2).decrementHour(t);
            })("mousedown", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseDown(t, 0, -1);
            })("mouseup", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseUp(t);
            })("mouseleave", function () {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseLeave();
            }),
            i.Sb(9, "span", 58),
            i.Wb(),
            i.Wb(),
            i.Xb(10, "div", 59),
            i.Xb(11, "a"),
            i.Sb(12, "span", 56),
            i.Wb(),
            i.Xb(13, "span"),
            i.Nc(14),
            i.Wb(),
            i.Xb(15, "a"),
            i.Sb(16, "span", 58),
            i.Wb(),
            i.Wb(),
            i.Xb(17, "div", 60),
            i.Xb(18, "a", 55),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(2).onContainerButtonKeydown(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(2).incrementMinute(t);
            })("mousedown", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseDown(t, 1, 1);
            })("mouseup", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseUp(t);
            })("mouseleave", function () {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseLeave();
            }),
            i.Sb(19, "span", 56),
            i.Wb(),
            i.Xb(20, "span", 57),
            i.Nc(21, "0"),
            i.Wb(),
            i.Xb(22, "span"),
            i.Nc(23),
            i.Wb(),
            i.Xb(24, "a", 55),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(2).onContainerButtonKeydown(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(2).decrementMinute(t);
            })("mousedown", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseDown(t, 1, -1);
            })("mouseup", function (t) {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseUp(t);
            })("mouseleave", function () {
              return i.Ec(e), i.hc(2).onTimePickerElementMouseLeave();
            }),
            i.Sb(25, "span", 58),
            i.Wb(),
            i.Wb(),
            i.Lc(26, H, 7, 1, "div", 61),
            i.Lc(27, G, 9, 4, "div", 62),
            i.Lc(28, $, 7, 1, "div", 63),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2);
          i.Eb(4),
            i.pc("ngStyle", i.sc(8, U, e.currentHour < 10 ? "inline" : "none")),
            i.Eb(3),
            i.Oc(e.currentHour),
            i.Eb(7),
            i.Oc(e.timeSeparator),
            i.Eb(6),
            i.pc(
              "ngStyle",
              i.sc(10, U, e.currentMinute < 10 ? "inline" : "none")
            ),
            i.Eb(3),
            i.Oc(e.currentMinute),
            i.Eb(3),
            i.pc("ngIf", e.showSeconds),
            i.Eb(1),
            i.pc("ngIf", e.showSeconds),
            i.Eb(1),
            i.pc("ngIf", "12" == e.hourFormat);
        }
      }
      const K = function (e) {
        return [e];
      };
      function Y(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 67),
            i.Xb(1, "button", 68),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(2).onContainerButtonKeydown(t);
            })("click", function (t) {
              return i.Ec(e), i.hc(2).onTodayButtonClick(t);
            }),
            i.Wb(),
            i.Xb(2, "button", 68),
            i.fc("keydown", function (t) {
              return i.Ec(e), i.hc(2).onContainerButtonKeydown(t);
            })("click", function (t) {
              return i.Ec(e), i.hc(2).onClearButtonClick(t);
            }),
            i.Wb(),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2);
          i.Eb(1),
            i.pc("label", e._locale.today)(
              "ngClass",
              i.sc(4, K, e.todayButtonStyleClass)
            ),
            i.Eb(1),
            i.pc("label", e._locale.clear)(
              "ngClass",
              i.sc(6, K, e.clearButtonStyleClass)
            );
        }
      }
      const Z = function (e, t, n, i, s, r, o) {
          return {
            "ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all":
              !0,
            "ui-datepicker-inline": e,
            "ui-shadow": t,
            "ui-state-disabled": n,
            "ui-datepicker-timeonly": i,
            "ui-datepicker-multiple-month": s,
            "ui-datepicker-monthpicker": r,
            "ui-datepicker-touch-ui": o,
          };
        },
        Q = function (e, t) {
          return { showTransitionParams: e, hideTransitionParams: t };
        },
        J = function (e) {
          return { value: "visibleTouchUI", params: e };
        },
        ee = function (e) {
          return { value: "visible", params: e };
        };
      function te(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 7, 8),
            i.fc("@overlayAnimation.start", function (t) {
              return i.Ec(e), i.hc().onOverlayAnimationStart(t);
            })("@overlayAnimation.done", function (t) {
              return i.Ec(e), i.hc().onOverlayAnimationDone(t);
            }),
            i.nc(2),
            i.Lc(3, B, 3, 2, "ng-container", 9),
            i.Lc(4, q, 29, 12, "div", 10),
            i.Lc(5, Y, 3, 8, "div", 11),
            i.nc(6, 1),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.Gb(e.panelStyleClass),
            i.pc("ngStyle", e.panelStyle)(
              "ngClass",
              i.yc(
                9,
                Z,
                e.inline,
                !e.inline,
                e.disabled,
                e.timeOnly,
                e.numberOfMonths > 1,
                "month" === e.view,
                e.touchUI
              )
            )(
              "@overlayAnimation",
              e.touchUI
                ? i.sc(
                    20,
                    J,
                    i.tc(
                      17,
                      Q,
                      e.showTransitionOptions,
                      e.hideTransitionOptions
                    )
                  )
                : i.sc(
                    25,
                    ee,
                    i.tc(
                      22,
                      Q,
                      e.showTransitionOptions,
                      e.hideTransitionOptions
                    )
                  )
            )("@.disabled", !0 === e.inline),
            i.Eb(3),
            i.pc("ngIf", !e.timeOnly),
            i.Eb(1),
            i.pc("ngIf", e.showTime || e.timeOnly),
            i.Eb(1),
            i.pc("ngIf", e.showButtonBar);
        }
      }
      const ne = [[["p-header"]], [["p-footer"]]],
        ie = function (e, t) {
          return {
            "ui-calendar": !0,
            "ui-calendar-w-btn": e,
            "ui-calendar-timeonly": t,
          };
        },
        se = ["p-header", "p-footer"],
        re = { provide: c.j, useExisting: Object(i.V)(() => oe), multi: !0 };
      let oe = (() => {
          let e = class {
            constructor(e, t, n, s) {
              (this.el = e),
                (this.renderer = t),
                (this.cd = n),
                (this.zone = s),
                (this.dateFormat = "mm/dd/yy"),
                (this.multipleSeparator = ","),
                (this.rangeSeparator = "-"),
                (this.inline = !1),
                (this.showOtherMonths = !0),
                (this.icon = "pi pi-calendar"),
                (this.shortYearCutoff = "+10"),
                (this.hourFormat = "24"),
                (this.stepHour = 1),
                (this.stepMinute = 1),
                (this.stepSecond = 1),
                (this.showSeconds = !1),
                (this.showOnFocus = !0),
                (this.showWeek = !1),
                (this.dataType = "date"),
                (this.selectionMode = "single"),
                (this.todayButtonStyleClass = "ui-button-secondary"),
                (this.clearButtonStyleClass = "ui-button-secondary"),
                (this.autoZIndex = !0),
                (this.baseZIndex = 0),
                (this.keepInvalid = !1),
                (this.hideOnDateTimeSelect = !0),
                (this.numberOfMonths = 1),
                (this.view = "date"),
                (this.timeSeparator = ":"),
                (this.focusTrap = !0),
                (this.showTransitionOptions = "225ms ease-out"),
                (this.hideTransitionOptions = "195ms ease-in"),
                (this.onFocus = new i.o()),
                (this.onBlur = new i.o()),
                (this.onClose = new i.o()),
                (this.onSelect = new i.o()),
                (this.onInput = new i.o()),
                (this.onTodayClick = new i.o()),
                (this.onClearClick = new i.o()),
                (this.onMonthChange = new i.o()),
                (this.onYearChange = new i.o()),
                (this.onClickOutside = new i.o()),
                (this.onShow = new i.o()),
                (this._locale = {
                  firstDayOfWeek: 0,
                  dayNames: [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                  ],
                  dayNamesShort: [
                    "Sun",
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thu",
                    "Fri",
                    "Sat",
                  ],
                  dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                  monthNames: [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December",
                  ],
                  monthNamesShort: [
                    "Jan",
                    "Feb",
                    "Mar",
                    "Apr",
                    "May",
                    "Jun",
                    "Jul",
                    "Aug",
                    "Sep",
                    "Oct",
                    "Nov",
                    "Dec",
                  ],
                  today: "Today",
                  clear: "Clear",
                  dateFormat: "mm/dd/yy",
                  weekHeader: "Wk",
                }),
                (this.onModelChange = () => {}),
                (this.onModelTouched = () => {}),
                (this.inputFieldValue = null),
                (this.navigationState = null),
                (this.convertTo24Hour = function (e, t) {
                  return "12" == this.hourFormat
                    ? 12 === e
                      ? t
                        ? 12
                        : 0
                      : t
                      ? e + 12
                      : e
                    : e;
                });
            }
            set content(e) {
              (this.contentViewChild = e),
                this.contentViewChild &&
                  (this.isMonthNavigate
                    ? (Promise.resolve(null).then(() => this.updateFocus()),
                      (this.isMonthNavigate = !1))
                    : this.initFocusableCell());
            }
            get defaultDate() {
              return this._defaultDate;
            }
            set defaultDate(e) {
              if (((this._defaultDate = e), this.initialized)) {
                const t = e || new Date();
                (this.currentMonth = t.getMonth()),
                  (this.currentYear = t.getFullYear()),
                  this.initTime(t),
                  this.createMonths(this.currentMonth, this.currentYear);
              }
            }
            get minDate() {
              return this._minDate;
            }
            set minDate(e) {
              (this._minDate = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get maxDate() {
              return this._maxDate;
            }
            set maxDate(e) {
              (this._maxDate = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get disabledDates() {
              return this._disabledDates;
            }
            set disabledDates(e) {
              (this._disabledDates = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get disabledDays() {
              return this._disabledDays;
            }
            set disabledDays(e) {
              (this._disabledDays = e),
                null != this.currentMonth &&
                  null != this.currentMonth &&
                  this.currentYear &&
                  this.createMonths(this.currentMonth, this.currentYear);
            }
            get yearRange() {
              return this._yearRange;
            }
            set yearRange(e) {
              if (((this._yearRange = e), e)) {
                const t = e.split(":"),
                  n = parseInt(t[0]),
                  i = parseInt(t[1]);
                this.populateYearOptions(n, i);
              }
            }
            get showTime() {
              return this._showTime;
            }
            set showTime(e) {
              (this._showTime = e),
                void 0 === this.currentHour &&
                  this.initTime(this.value || new Date()),
                this.updateInputfield();
            }
            get locale() {
              return this._locale;
            }
            set locale(e) {
              (this._locale = e),
                "date" === this.view
                  ? (this.createWeekDays(),
                    this.createMonths(this.currentMonth, this.currentYear))
                  : "month" === this.view && this.createMonthPickerValues();
            }
            ngOnInit() {
              const e = this.defaultDate || new Date();
              (this.currentMonth = e.getMonth()),
                (this.currentYear = e.getFullYear()),
                "date" === this.view
                  ? (this.createWeekDays(),
                    this.initTime(e),
                    this.createMonths(this.currentMonth, this.currentYear),
                    (this.ticksTo1970 =
                      24 *
                      (718685 +
                        Math.floor(492.5) -
                        Math.floor(19.7) +
                        Math.floor(4.925)) *
                      60 *
                      60 *
                      1e7))
                  : "month" === this.view && this.createMonthPickerValues(),
                (this.initialized = !0);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "date":
                    this.dateTemplate = e.template;
                    break;
                  case "disabledDate":
                    this.disabledDateTemplate = e.template;
                    break;
                  default:
                    this.dateTemplate = e.template;
                }
              });
            }
            populateYearOptions(e, t) {
              this.yearOptions = [];
              for (let n = e; n <= t; n++) this.yearOptions.push(n);
            }
            createWeekDays() {
              this.weekDays = [];
              let e = this.locale.firstDayOfWeek;
              for (let t = 0; t < 7; t++)
                this.weekDays.push(this.locale.dayNamesMin[e]),
                  (e = 6 == e ? 0 : ++e);
            }
            createMonthPickerValues() {
              this.monthPickerValues = [];
              for (let e = 0; e <= 11; e++)
                this.monthPickerValues.push(this.locale.monthNamesShort[e]);
            }
            createMonths(e, t) {
              this.months = this.months = [];
              for (let n = 0; n < this.numberOfMonths; n++) {
                let i = e + n,
                  s = t;
                i > 11 && ((i = (i % 11) - 1), (s = t + 1)),
                  this.months.push(this.createMonth(i, s));
              }
            }
            getWeekNumber(e) {
              let t = new Date(e.getTime());
              t.setDate(t.getDate() + 4 - (t.getDay() || 7));
              let n = t.getTime();
              return (
                t.setMonth(0),
                t.setDate(1),
                Math.floor(Math.round((n - t.getTime()) / 864e5) / 7) + 1
              );
            }
            createMonth(e, t) {
              let n = [],
                i = this.getFirstDayOfMonthIndex(e, t),
                s = this.getDaysCountInMonth(e, t),
                r = this.getDaysCountInPrevMonth(e, t),
                o = 1,
                a = new Date(),
                l = [],
                c = Math.ceil((s + i) / 7);
              for (let u = 0; u < c; u++) {
                let c = [];
                if (0 == u) {
                  for (let s = r - i + 1; s <= r; s++) {
                    let n = this.getPreviousMonthAndYear(e, t);
                    c.push({
                      day: s,
                      month: n.month,
                      year: n.year,
                      otherMonth: !0,
                      today: this.isToday(a, s, n.month, n.year),
                      selectable: this.isSelectable(s, n.month, n.year, !0),
                    });
                  }
                  let n = 7 - c.length;
                  for (let i = 0; i < n; i++)
                    c.push({
                      day: o,
                      month: e,
                      year: t,
                      today: this.isToday(a, o, e, t),
                      selectable: this.isSelectable(o, e, t, !1),
                    }),
                      o++;
                } else
                  for (let n = 0; n < 7; n++) {
                    if (o > s) {
                      let n = this.getNextMonthAndYear(e, t);
                      c.push({
                        day: o - s,
                        month: n.month,
                        year: n.year,
                        otherMonth: !0,
                        today: this.isToday(a, o - s, n.month, n.year),
                        selectable: this.isSelectable(
                          o - s,
                          n.month,
                          n.year,
                          !0
                        ),
                      });
                    } else
                      c.push({
                        day: o,
                        month: e,
                        year: t,
                        today: this.isToday(a, o, e, t),
                        selectable: this.isSelectable(o, e, t, !1),
                      });
                    o++;
                  }
                this.showWeek &&
                  l.push(
                    this.getWeekNumber(
                      new Date(c[0].year, c[0].month, c[0].day)
                    )
                  ),
                  n.push(c);
              }
              return { month: e, year: t, dates: n, weekNumbers: l };
            }
            initTime(e) {
              (this.pm = e.getHours() > 11),
                this.showTime
                  ? ((this.currentMinute = e.getMinutes()),
                    (this.currentSecond = e.getSeconds()),
                    this.setCurrentHourPM(e.getHours()))
                  : this.timeOnly &&
                    ((this.currentMinute = 0),
                    (this.currentHour = 0),
                    (this.currentSecond = 0));
            }
            navBackward(e) {
              e.stopPropagation(),
                this.disabled
                  ? e.preventDefault()
                  : ((this.isMonthNavigate = !0),
                    "month" === this.view
                      ? (this.decrementYear(),
                        setTimeout(() => {
                          this.updateFocus();
                        }, 1))
                      : (0 === this.currentMonth
                          ? ((this.currentMonth = 11), this.decrementYear())
                          : this.currentMonth--,
                        this.onMonthChange.emit({
                          month: this.currentMonth + 1,
                          year: this.currentYear,
                        }),
                        this.createMonths(
                          this.currentMonth,
                          this.currentYear
                        )));
            }
            navForward(e) {
              e.stopPropagation(),
                this.disabled
                  ? e.preventDefault()
                  : ((this.isMonthNavigate = !0),
                    "month" === this.view
                      ? (this.incrementYear(),
                        setTimeout(() => {
                          this.updateFocus();
                        }, 1))
                      : (11 === this.currentMonth
                          ? ((this.currentMonth = 0), this.incrementYear())
                          : this.currentMonth++,
                        this.onMonthChange.emit({
                          month: this.currentMonth + 1,
                          year: this.currentYear,
                        }),
                        this.createMonths(
                          this.currentMonth,
                          this.currentYear
                        )));
            }
            decrementYear() {
              if (
                (this.currentYear--,
                this.yearNavigator && this.currentYear < this.yearOptions[0])
              ) {
                let e =
                  this.yearOptions[this.yearOptions.length - 1] -
                  this.yearOptions[0];
                this.populateYearOptions(
                  this.yearOptions[0] - e,
                  this.yearOptions[this.yearOptions.length - 1] - e
                );
              }
            }
            incrementYear() {
              if (
                (this.currentYear++,
                this.yearNavigator &&
                  this.currentYear >
                    this.yearOptions[this.yearOptions.length - 1])
              ) {
                let e =
                  this.yearOptions[this.yearOptions.length - 1] -
                  this.yearOptions[0];
                this.populateYearOptions(
                  this.yearOptions[0] + e,
                  this.yearOptions[this.yearOptions.length - 1] + e
                );
              }
            }
            onDateSelect(e, t) {
              !this.disabled && t.selectable
                ? (this.isMultipleSelection() && this.isSelected(t)
                    ? ((this.value = this.value.filter(
                        (e, n) => !this.isDateEquals(e, t)
                      )),
                      0 === this.value.length && (this.value = null),
                      this.updateModel(this.value))
                    : this.shouldSelectDate(t) && this.selectDate(t),
                  this.isSingleSelection() &&
                    this.hideOnDateTimeSelect &&
                    setTimeout(() => {
                      e.preventDefault(),
                        this.hideOverlay(),
                        this.mask && this.disableModality(),
                        this.cd.markForCheck();
                    }, 150),
                  this.updateInputfield(),
                  e.preventDefault())
                : e.preventDefault();
            }
            shouldSelectDate(e) {
              return (
                !this.isMultipleSelection() ||
                null == this.maxDateCount ||
                this.maxDateCount > (this.value ? this.value.length : 0)
              );
            }
            onMonthSelect(e, t) {
              a.a.hasClass(e.target, "ui-state-disabled") ||
                this.onDateSelect(e, {
                  year: this.currentYear,
                  month: t,
                  day: 1,
                  selectable: !0,
                });
            }
            updateInputfield() {
              let e = "";
              if (this.value)
                if (this.isSingleSelection())
                  e = this.formatDateTime(this.value);
                else if (this.isMultipleSelection())
                  for (let t = 0; t < this.value.length; t++)
                    (e += this.formatDateTime(this.value[t])),
                      t !== this.value.length - 1 &&
                        (e += this.multipleSeparator + " ");
                else if (
                  this.isRangeSelection() &&
                  this.value &&
                  this.value.length
                ) {
                  let t = this.value[1];
                  (e = this.formatDateTime(this.value[0])),
                    t &&
                      (e +=
                        " " +
                        this.rangeSeparator +
                        " " +
                        this.formatDateTime(t));
                }
              (this.inputFieldValue = e),
                this.updateFilledState(),
                this.inputfieldViewChild &&
                  this.inputfieldViewChild.nativeElement &&
                  (this.inputfieldViewChild.nativeElement.value =
                    this.inputFieldValue);
            }
            formatDateTime(e) {
              let t = null;
              return (
                e &&
                  (this.timeOnly
                    ? (t = this.formatTime(e))
                    : ((t = this.formatDate(e, this.getDateFormat())),
                      this.showTime && (t += " " + this.formatTime(e)))),
                t
              );
            }
            setCurrentHourPM(e) {
              "12" == this.hourFormat
                ? ((this.pm = e > 11),
                  (this.currentHour =
                    e >= 12 ? (12 == e ? 12 : e - 12) : 0 == e ? 12 : e))
                : (this.currentHour = e);
            }
            selectDate(e) {
              let t = new Date(e.year, e.month, e.day);
              if (
                (this.showTime &&
                  (t.setHours(
                    "12" == this.hourFormat
                      ? 12 === this.currentHour
                        ? this.pm
                          ? 12
                          : 0
                        : this.pm
                        ? this.currentHour + 12
                        : this.currentHour
                      : this.currentHour
                  ),
                  t.setMinutes(this.currentMinute),
                  t.setSeconds(this.currentSecond)),
                this.minDate &&
                  this.minDate > t &&
                  ((t = this.minDate),
                  this.setCurrentHourPM(t.getHours()),
                  (this.currentMinute = t.getMinutes()),
                  (this.currentSecond = t.getSeconds())),
                this.maxDate &&
                  this.maxDate < t &&
                  ((t = this.maxDate),
                  this.setCurrentHourPM(t.getHours()),
                  (this.currentMinute = t.getMinutes()),
                  (this.currentSecond = t.getSeconds())),
                this.isSingleSelection())
              )
                this.updateModel(t);
              else if (this.isMultipleSelection())
                this.updateModel(this.value ? [...this.value, t] : [t]);
              else if (this.isRangeSelection())
                if (this.value && this.value.length) {
                  let e = this.value[0],
                    n = this.value[1];
                  !n && t.getTime() >= e.getTime()
                    ? (n = t)
                    : ((e = t), (n = null)),
                    this.updateModel([e, n]);
                } else this.updateModel([t, null]);
              this.onSelect.emit(t);
            }
            updateModel(e) {
              if (((this.value = e), "date" == this.dataType))
                this.onModelChange(this.value);
              else if ("string" == this.dataType)
                if (this.isSingleSelection())
                  this.onModelChange(this.formatDateTime(this.value));
                else {
                  let e = null;
                  this.value &&
                    (e = this.value.map((e) => this.formatDateTime(e))),
                    this.onModelChange(e);
                }
            }
            getFirstDayOfMonthIndex(e, t) {
              let n = new Date();
              n.setDate(1), n.setMonth(e), n.setFullYear(t);
              let i = n.getDay() + this.getSundayIndex();
              return i >= 7 ? i - 7 : i;
            }
            getDaysCountInMonth(e, t) {
              return (
                32 - this.daylightSavingAdjust(new Date(t, e, 32)).getDate()
              );
            }
            getDaysCountInPrevMonth(e, t) {
              let n = this.getPreviousMonthAndYear(e, t);
              return this.getDaysCountInMonth(n.month, n.year);
            }
            getPreviousMonthAndYear(e, t) {
              let n, i;
              return (
                0 === e ? ((n = 11), (i = t - 1)) : ((n = e - 1), (i = t)),
                { month: n, year: i }
              );
            }
            getNextMonthAndYear(e, t) {
              let n, i;
              return (
                11 === e ? ((n = 0), (i = t + 1)) : ((n = e + 1), (i = t)),
                { month: n, year: i }
              );
            }
            getSundayIndex() {
              return this.locale.firstDayOfWeek > 0
                ? 7 - this.locale.firstDayOfWeek
                : 0;
            }
            isSelected(e) {
              if (!this.value) return !1;
              if (this.isSingleSelection())
                return this.isDateEquals(this.value, e);
              if (this.isMultipleSelection()) {
                let t = !1;
                for (let n of this.value)
                  if (((t = this.isDateEquals(n, e)), t)) break;
                return t;
              }
              return this.isRangeSelection()
                ? this.value[1]
                  ? this.isDateEquals(this.value[0], e) ||
                    this.isDateEquals(this.value[1], e) ||
                    this.isDateBetween(this.value[0], this.value[1], e)
                  : this.isDateEquals(this.value[0], e)
                : void 0;
            }
            isMonthSelected(e) {
              let t = this.value
                ? Array.isArray(this.value)
                  ? this.value[0].getDate()
                  : this.value.getDate()
                : 1;
              return this.isSelected({
                year: this.currentYear,
                month: e,
                day: t,
                selectable: !0,
              });
            }
            isDateEquals(e, t) {
              return (
                !!e &&
                e.getDate() === t.day &&
                e.getMonth() === t.month &&
                e.getFullYear() === t.year
              );
            }
            isDateBetween(e, t, n) {
              if (e && t) {
                let i = new Date(n.year, n.month, n.day);
                return e.getTime() <= i.getTime() && t.getTime() >= i.getTime();
              }
              return !1;
            }
            isSingleSelection() {
              return "single" === this.selectionMode;
            }
            isRangeSelection() {
              return "range" === this.selectionMode;
            }
            isMultipleSelection() {
              return "multiple" === this.selectionMode;
            }
            isToday(e, t, n, i) {
              return (
                e.getDate() === t && e.getMonth() === n && e.getFullYear() === i
              );
            }
            isSelectable(e, t, n, i) {
              let s = !0,
                r = !0,
                o = !0,
                a = !0;
              return (
                !(i && !this.selectOtherMonths) &&
                (this.minDate &&
                  (this.minDate.getFullYear() > n ||
                    (this.minDate.getFullYear() === n &&
                      (this.minDate.getMonth() > t ||
                        (this.minDate.getMonth() === t &&
                          this.minDate.getDate() > e)))) &&
                  (s = !1),
                this.maxDate &&
                  (this.maxDate.getFullYear() < n ||
                    (this.maxDate.getFullYear() === n &&
                      (this.maxDate.getMonth() < t ||
                        (this.maxDate.getMonth() === t &&
                          this.maxDate.getDate() < e)))) &&
                  (r = !1),
                this.disabledDates && (o = !this.isDateDisabled(e, t, n)),
                this.disabledDays && (a = !this.isDayDisabled(e, t, n)),
                s && r && o && a)
              );
            }
            isDateDisabled(e, t, n) {
              if (this.disabledDates)
                for (let i of this.disabledDates)
                  if (
                    i.getFullYear() === n &&
                    i.getMonth() === t &&
                    i.getDate() === e
                  )
                    return !0;
              return !1;
            }
            isDayDisabled(e, t, n) {
              if (this.disabledDays) {
                let i = new Date(n, t, e).getDay();
                return -1 !== this.disabledDays.indexOf(i);
              }
              return !1;
            }
            onInputFocus(e) {
              (this.focus = !0),
                this.showOnFocus && this.showOverlay(),
                this.onFocus.emit(e);
            }
            onInputClick() {
              this.overlay &&
                this.autoZIndex &&
                (this.overlay.style.zIndex = String(
                  this.baseZIndex + ++a.a.zindex
                )),
                this.showOnFocus && !this.overlayVisible && this.showOverlay();
            }
            onInputBlur(e) {
              (this.focus = !1),
                this.onBlur.emit(e),
                this.keepInvalid || this.updateInputfield(),
                this.onModelTouched();
            }
            onButtonClick(e, t) {
              this.overlayVisible
                ? this.hideOverlay()
                : (t.focus(), this.showOverlay());
            }
            onPrevButtonClick(e) {
              (this.navigationState = { backward: !0, button: !0 }),
                this.navBackward(e);
            }
            onNextButtonClick(e) {
              (this.navigationState = { backward: !1, button: !0 }),
                this.navForward(e);
            }
            onContainerButtonKeydown(e) {
              switch (e.which) {
                case 9:
                  this.inline || this.trapFocus(e);
                  break;
                case 27:
                  (this.overlayVisible = !1), e.preventDefault();
              }
            }
            onInputKeydown(e) {
              (this.isKeydown = !0),
                40 === e.keyCode && this.contentViewChild
                  ? this.trapFocus(e)
                  : 27 === e.keyCode || 13 === e.keyCode
                  ? this.overlayVisible &&
                    ((this.overlayVisible = !1), e.preventDefault())
                  : 9 === e.keyCode &&
                    this.contentViewChild &&
                    (a.a
                      .getFocusableElements(this.contentViewChild.nativeElement)
                      .forEach((e) => (e.tabIndex = "-1")),
                    this.overlayVisible && (this.overlayVisible = !1));
            }
            onDateCellKeydown(e, t, n) {
              const i = e.currentTarget,
                s = i.parentElement;
              switch (e.which) {
                case 40: {
                  i.tabIndex = "-1";
                  let t = a.a.index(s),
                    n = s.parentElement.nextElementSibling;
                  n
                    ? a.a.hasClass(
                        n.children[t].children[0],
                        "ui-state-disabled"
                      )
                      ? ((this.navigationState = { backward: !1 }),
                        this.navForward(e))
                      : ((n.children[t].children[0].tabIndex = "0"),
                        n.children[t].children[0].focus())
                    : ((this.navigationState = { backward: !1 }),
                      this.navForward(e)),
                    e.preventDefault();
                  break;
                }
                case 38: {
                  i.tabIndex = "-1";
                  let t = a.a.index(s),
                    n = s.parentElement.previousElementSibling;
                  if (n) {
                    let i = n.children[t].children[0];
                    a.a.hasClass(i, "ui-state-disabled")
                      ? ((this.navigationState = { backward: !0 }),
                        this.navBackward(e))
                      : ((i.tabIndex = "0"), i.focus());
                  } else
                    (this.navigationState = { backward: !0 }),
                      this.navBackward(e);
                  e.preventDefault();
                  break;
                }
                case 37: {
                  i.tabIndex = "-1";
                  let t = s.previousElementSibling;
                  if (t) {
                    let e = t.children[0];
                    a.a.hasClass(e, "ui-state-disabled") ||
                    a.a.hasClass(e.parentElement, "ui-datepicker-weeknumber")
                      ? this.navigateToMonth(!0, n)
                      : ((e.tabIndex = "0"), e.focus());
                  } else this.navigateToMonth(!0, n);
                  e.preventDefault();
                  break;
                }
                case 39: {
                  i.tabIndex = "-1";
                  let t = s.nextElementSibling;
                  if (t) {
                    let e = t.children[0];
                    a.a.hasClass(e, "ui-state-disabled")
                      ? this.navigateToMonth(!1, n)
                      : ((e.tabIndex = "0"), e.focus());
                  } else this.navigateToMonth(!1, n);
                  e.preventDefault();
                  break;
                }
                case 13:
                  this.onDateSelect(e, t), e.preventDefault();
                  break;
                case 27:
                  (this.overlayVisible = !1), e.preventDefault();
                  break;
                case 9:
                  this.inline || this.trapFocus(e);
              }
            }
            onMonthCellKeydown(e, t) {
              const n = e.currentTarget;
              switch (e.which) {
                case 38:
                case 40: {
                  n.tabIndex = "-1";
                  var i = n.parentElement.children,
                    s = a.a.index(n);
                  let t = i[40 === e.which ? s + 3 : s - 3];
                  t && ((t.tabIndex = "0"), t.focus()), e.preventDefault();
                  break;
                }
                case 37: {
                  n.tabIndex = "-1";
                  let t = n.previousElementSibling;
                  t && ((t.tabIndex = "0"), t.focus()), e.preventDefault();
                  break;
                }
                case 39: {
                  n.tabIndex = "-1";
                  let t = n.nextElementSibling;
                  t && ((t.tabIndex = "0"), t.focus()), e.preventDefault();
                  break;
                }
                case 13:
                  this.onMonthSelect(e, t), e.preventDefault();
                  break;
                case 27:
                  (this.overlayVisible = !1), e.preventDefault();
                  break;
                case 9:
                  this.inline || this.trapFocus(e);
              }
            }
            navigateToMonth(e, t) {
              if (e)
                if (1 === this.numberOfMonths || 0 === t)
                  (this.navigationState = { backward: !0 }),
                    this.navBackward(event);
                else {
                  let e = a.a.find(
                      this.contentViewChild.nativeElement.children[t - 1],
                      ".ui-datepicker-calendar td a"
                    ),
                    n = e[e.length - 1];
                  (n.tabIndex = "0"), n.focus();
                }
              else if (
                1 === this.numberOfMonths ||
                t === this.numberOfMonths - 1
              )
                (this.navigationState = { backward: !1 }),
                  this.navForward(event);
              else {
                let e = a.a.findSingle(
                  this.contentViewChild.nativeElement.children[t + 1],
                  ".ui-datepicker-calendar td a"
                );
                (e.tabIndex = "0"), e.focus();
              }
            }
            updateFocus() {
              let e;
              if (this.navigationState) {
                if (this.navigationState.button)
                  this.initFocusableCell(),
                    this.navigationState.backward
                      ? a.a
                          .findSingle(
                            this.contentViewChild.nativeElement,
                            ".ui-datepicker-prev"
                          )
                          .focus()
                      : a.a
                          .findSingle(
                            this.contentViewChild.nativeElement,
                            ".ui-datepicker-next"
                          )
                          .focus();
                else {
                  if (this.navigationState.backward) {
                    let t = a.a.find(
                      this.contentViewChild.nativeElement,
                      ".ui-datepicker-calendar td a"
                    );
                    e = t[t.length - 1];
                  } else
                    e = a.a.findSingle(
                      this.contentViewChild.nativeElement,
                      ".ui-datepicker-calendar td a"
                    );
                  e && ((e.tabIndex = "0"), e.focus());
                }
                this.navigationState = null;
              } else this.initFocusableCell();
            }
            initFocusableCell() {
              let e;
              if ("month" === this.view) {
                let t = a.a.find(
                    this.contentViewChild.nativeElement,
                    ".ui-monthpicker .ui-monthpicker-month:not(.ui-state-disabled)"
                  ),
                  n = a.a.findSingle(
                    this.contentViewChild.nativeElement,
                    ".ui-monthpicker .ui-monthpicker-month.ui-state-highlight"
                  );
                t.forEach((e) => (e.tabIndex = -1)),
                  (e = n || t[0]),
                  0 === t.length &&
                    a.a
                      .find(
                        this.contentViewChild.nativeElement,
                        '.ui-monthpicker .ui-monthpicker-month.ui-state-disabled[tabindex = "0"]'
                      )
                      .forEach((e) => (e.tabIndex = -1));
              } else
                (e = a.a.findSingle(
                  this.contentViewChild.nativeElement,
                  "a.ui-state-active"
                )),
                  e ||
                    (e =
                      a.a.findSingle(
                        this.contentViewChild.nativeElement,
                        "td.ui-datepicker-today a:not(.ui-state-disabled)"
                      ) ||
                      a.a.findSingle(
                        this.contentViewChild.nativeElement,
                        ".ui-datepicker-calendar td a"
                      ));
              e && (e.tabIndex = "0");
            }
            trapFocus(e) {
              let t = a.a.getFocusableElements(
                this.contentViewChild.nativeElement
              );
              if (t && t.length > 0)
                if (document.activeElement) {
                  let n = t.indexOf(document.activeElement);
                  if (e.shiftKey)
                    if (-1 == n || 0 === n)
                      if (this.focusTrap) t[t.length - 1].focus();
                      else {
                        if (-1 === n) return this.hideOverlay();
                        if (0 === n) return;
                      }
                    else t[n - 1].focus();
                  else if (-1 == n || n === t.length - 1) {
                    if (!this.focusTrap && -1 != n) return this.hideOverlay();
                    t[0].focus();
                  } else t[n + 1].focus();
                } else t[0].focus();
              e.preventDefault();
            }
            onMonthDropdownChange(e) {
              (this.currentMonth = parseInt(e)),
                this.onMonthChange.emit({
                  month: this.currentMonth + 1,
                  year: this.currentYear,
                }),
                this.createMonths(this.currentMonth, this.currentYear);
            }
            onYearDropdownChange(e) {
              (this.currentYear = parseInt(e)),
                this.onYearChange.emit({
                  month: this.currentMonth + 1,
                  year: this.currentYear,
                }),
                this.createMonths(this.currentMonth, this.currentYear);
            }
            validateTime(e, t, n, i) {
              let s = this.value;
              const r = this.convertTo24Hour(e, i);
              this.isRangeSelection() && (s = this.value[1] || this.value[0]),
                this.isMultipleSelection() &&
                  (s = this.value[this.value.length - 1]);
              const o = s ? s.toDateString() : null;
              if (this.minDate && o && this.minDate.toDateString() === o) {
                if (this.minDate.getHours() > r) return !1;
                if (this.minDate.getHours() === r) {
                  if (this.minDate.getMinutes() > t) return !1;
                  if (
                    this.minDate.getMinutes() === t &&
                    this.minDate.getSeconds() > n
                  )
                    return !1;
                }
              }
              if (this.maxDate && o && this.maxDate.toDateString() === o) {
                if (this.maxDate.getHours() < r) return !1;
                if (this.maxDate.getHours() === r) {
                  if (this.maxDate.getMinutes() < t) return !1;
                  if (
                    this.maxDate.getMinutes() === t &&
                    this.maxDate.getSeconds() < n
                  )
                    return !1;
                }
              }
              return !0;
            }
            incrementHour(e) {
              let t = this.currentHour + this.stepHour,
                n = this.pm;
              "24" == this.hourFormat
                ? (t = t >= 24 ? t - 24 : t)
                : "12" == this.hourFormat &&
                  (this.currentHour < 12 && t > 11 && (n = !this.pm),
                  (t = t >= 13 ? t - 12 : t)),
                this.validateTime(
                  t,
                  this.currentMinute,
                  this.currentSecond,
                  n
                ) && ((this.currentHour = t), (this.pm = n)),
                e.preventDefault();
            }
            onTimePickerElementMouseDown(e, t, n) {
              this.disabled || (this.repeat(e, null, t, n), e.preventDefault());
            }
            onTimePickerElementMouseUp(e) {
              this.disabled || (this.clearTimePickerTimer(), this.updateTime());
            }
            onTimePickerElementMouseLeave() {
              !this.disabled &&
                this.timePickerTimer &&
                (this.clearTimePickerTimer(), this.updateTime());
            }
            repeat(e, t, n, i) {
              let s = t || 500;
              switch (
                (this.clearTimePickerTimer(),
                (this.timePickerTimer = setTimeout(() => {
                  this.repeat(e, 100, n, i);
                }, s)),
                n)
              ) {
                case 0:
                  1 === i ? this.incrementHour(e) : this.decrementHour(e);
                  break;
                case 1:
                  1 === i ? this.incrementMinute(e) : this.decrementMinute(e);
                  break;
                case 2:
                  1 === i ? this.incrementSecond(e) : this.decrementSecond(e);
              }
              this.updateInputfield();
            }
            clearTimePickerTimer() {
              this.timePickerTimer &&
                (clearTimeout(this.timePickerTimer),
                (this.timePickerTimer = null));
            }
            decrementHour(e) {
              let t = this.currentHour - this.stepHour,
                n = this.pm;
              "24" == this.hourFormat
                ? (t = t < 0 ? 24 + t : t)
                : "12" == this.hourFormat &&
                  (12 === this.currentHour && (n = !this.pm),
                  (t = t <= 0 ? 12 + t : t)),
                this.validateTime(
                  t,
                  this.currentMinute,
                  this.currentSecond,
                  n
                ) && ((this.currentHour = t), (this.pm = n)),
                e.preventDefault();
            }
            incrementMinute(e) {
              let t = this.currentMinute + this.stepMinute;
              (t = t > 59 ? t - 60 : t),
                this.validateTime(
                  this.currentHour,
                  t,
                  this.currentSecond,
                  this.pm
                ) && (this.currentMinute = t),
                e.preventDefault();
            }
            decrementMinute(e) {
              let t = this.currentMinute - this.stepMinute;
              (t = t < 0 ? 60 + t : t),
                this.validateTime(
                  this.currentHour,
                  t,
                  this.currentSecond,
                  this.pm
                ) && (this.currentMinute = t),
                e.preventDefault();
            }
            incrementSecond(e) {
              let t = this.currentSecond + this.stepSecond;
              (t = t > 59 ? t - 60 : t),
                this.validateTime(
                  this.currentHour,
                  this.currentMinute,
                  t,
                  this.pm
                ) && (this.currentSecond = t),
                e.preventDefault();
            }
            decrementSecond(e) {
              let t = this.currentSecond - this.stepSecond;
              (t = t < 0 ? 60 + t : t),
                this.validateTime(
                  this.currentHour,
                  this.currentMinute,
                  t,
                  this.pm
                ) && (this.currentSecond = t),
                e.preventDefault();
            }
            updateTime() {
              let e = this.value;
              this.isRangeSelection() && (e = this.value[1] || this.value[0]),
                this.isMultipleSelection() &&
                  (e = this.value[this.value.length - 1]),
                (e = e ? new Date(e.getTime()) : new Date()),
                e.setHours(
                  "12" == this.hourFormat
                    ? 12 === this.currentHour
                      ? this.pm
                        ? 12
                        : 0
                      : this.pm
                      ? this.currentHour + 12
                      : this.currentHour
                    : this.currentHour
                ),
                e.setMinutes(this.currentMinute),
                e.setSeconds(this.currentSecond),
                this.isRangeSelection() &&
                  (e = this.value[1] ? [this.value[0], e] : [e, null]),
                this.isMultipleSelection() &&
                  (e = [...this.value.slice(0, -1), e]),
                this.updateModel(e),
                this.onSelect.emit(e),
                this.updateInputfield();
            }
            toggleAMPM(e) {
              const t = !this.pm;
              this.validateTime(
                this.currentHour,
                this.currentMinute,
                this.currentSecond,
                t
              ) && ((this.pm = t), this.updateTime()),
                e.preventDefault();
            }
            onUserInput(e) {
              if (!this.isKeydown) return;
              this.isKeydown = !1;
              let t = e.target.value;
              try {
                let e = this.parseValueFromString(t);
                this.isValidSelection(e) &&
                  (this.updateModel(e), this.updateUI());
              } catch (n) {
                this.updateModel(null);
              }
              (this.filled = null != t && t.length), this.onInput.emit(e);
            }
            isValidSelection(e) {
              let t = !0;
              return (
                this.isSingleSelection()
                  ? this.isSelectable(
                      e.getDate(),
                      e.getMonth(),
                      e.getFullYear(),
                      !1
                    ) || (t = !1)
                  : e.every((e) =>
                      this.isSelectable(
                        e.getDate(),
                        e.getMonth(),
                        e.getFullYear(),
                        !1
                      )
                    ) &&
                    this.isRangeSelection() &&
                    (t = e.length > 1 && e[1] > e[0]),
                t
              );
            }
            parseValueFromString(e) {
              if (!e || 0 === e.trim().length) return null;
              let t;
              if (this.isSingleSelection()) t = this.parseDateTime(e);
              else if (this.isMultipleSelection()) {
                let n = e.split(this.multipleSeparator);
                t = [];
                for (let e of n) t.push(this.parseDateTime(e.trim()));
              } else if (this.isRangeSelection()) {
                let n = e.split(" " + this.rangeSeparator + " ");
                t = [];
                for (let e = 0; e < n.length; e++)
                  t[e] = this.parseDateTime(n[e].trim());
              }
              return t;
            }
            parseDateTime(e) {
              let t,
                n = e.split(" ");
              if (this.timeOnly)
                (t = new Date()), this.populateTime(t, n[0], n[1]);
              else {
                const i = this.getDateFormat();
                if (this.showTime) {
                  let e = "12" == this.hourFormat ? n.pop() : null,
                    s = n.pop();
                  (t = this.parseDate(n.join(" "), i)),
                    this.populateTime(t, s, e);
                } else t = this.parseDate(e, i);
              }
              return t;
            }
            populateTime(e, t, n) {
              if ("12" == this.hourFormat && !n) throw "Invalid Time";
              this.pm = "PM" === n || "pm" === n;
              let i = this.parseTime(t);
              e.setHours(i.hour),
                e.setMinutes(i.minute),
                e.setSeconds(i.second);
            }
            updateUI() {
              let e = this.value || this.defaultDate || new Date();
              Array.isArray(e) && (e = e[0]),
                (this.currentMonth = e.getMonth()),
                (this.currentYear = e.getFullYear()),
                this.createMonths(this.currentMonth, this.currentYear),
                (this.showTime || this.timeOnly) &&
                  (this.setCurrentHourPM(e.getHours()),
                  (this.currentMinute = e.getMinutes()),
                  (this.currentSecond = e.getSeconds()));
            }
            showOverlay() {
              this.overlayVisible ||
                (this.updateUI(), (this.overlayVisible = !0));
            }
            hideOverlay() {
              (this.overlayVisible = !1),
                this.clearTimePickerTimer(),
                this.touchUI && this.disableModality();
            }
            toggle() {
              this.inline ||
                (this.overlayVisible
                  ? this.hideOverlay()
                  : (this.showOverlay(),
                    this.inputfieldViewChild.nativeElement.focus()));
            }
            onOverlayAnimationStart(e) {
              switch (e.toState) {
                case "visible":
                case "visibleTouchUI":
                  this.inline ||
                    ((this.overlay = e.element),
                    this.appendOverlay(),
                    this.autoZIndex &&
                      (this.overlay.style.zIndex = String(
                        this.baseZIndex + ++a.a.zindex
                      )),
                    this.alignOverlay(),
                    this.onShow.emit(e));
                  break;
                case "void":
                  this.onOverlayHide(), this.onClose.emit(e);
              }
            }
            onOverlayAnimationDone(e) {
              switch (e.toState) {
                case "visible":
                case "visibleTouchUI":
                  this.inline ||
                    (this.bindDocumentClickListener(),
                    this.bindDocumentResizeListener());
              }
            }
            appendOverlay() {
              this.appendTo &&
                ("body" === this.appendTo
                  ? document.body.appendChild(this.overlay)
                  : a.a.appendChild(this.overlay, this.appendTo));
            }
            restoreOverlayAppend() {
              this.overlay &&
                this.appendTo &&
                this.el.nativeElement.appendChild(this.overlay);
            }
            alignOverlay() {
              this.touchUI
                ? this.enableModality(this.overlay)
                : this.appendTo
                ? a.a.absolutePosition(
                    this.overlay,
                    this.inputfieldViewChild.nativeElement
                  )
                : a.a.relativePosition(
                    this.overlay,
                    this.inputfieldViewChild.nativeElement
                  );
            }
            enableModality(e) {
              this.mask ||
                ((this.mask = document.createElement("div")),
                (this.mask.style.zIndex = String(parseInt(e.style.zIndex) - 1)),
                a.a.addMultipleClasses(
                  this.mask,
                  "ui-widget-overlay ui-datepicker-mask ui-datepicker-mask-scrollblocker"
                ),
                (this.maskClickListener = this.renderer.listen(
                  this.mask,
                  "click",
                  (e) => {
                    this.disableModality();
                  }
                )),
                document.body.appendChild(this.mask),
                a.a.addClass(document.body, "ui-overflow-hidden"));
            }
            disableModality() {
              if (this.mask) {
                document.body.removeChild(this.mask);
                let e,
                  t = document.body.children;
                for (let n = 0; n < t.length; n++)
                  if (a.a.hasClass(t[n], "ui-datepicker-mask-scrollblocker")) {
                    e = !0;
                    break;
                  }
                e || a.a.removeClass(document.body, "ui-overflow-hidden"),
                  this.unbindMaskClickListener(),
                  (this.mask = null);
              }
            }
            unbindMaskClickListener() {
              this.maskClickListener &&
                (this.maskClickListener(), (this.maskClickListener = null));
            }
            writeValue(e) {
              (this.value = e),
                this.value &&
                  "string" == typeof this.value &&
                  (this.value = this.parseValueFromString(this.value)),
                this.updateInputfield(),
                this.updateUI();
            }
            registerOnChange(e) {
              this.onModelChange = e;
            }
            registerOnTouched(e) {
              this.onModelTouched = e;
            }
            setDisabledState(e) {
              this.disabled = e;
            }
            getDateFormat() {
              return this.dateFormat || this.locale.dateFormat;
            }
            formatDate(e, t) {
              if (!e) return "";
              let n;
              const i = (e) => {
                  const i = n + 1 < t.length && t.charAt(n + 1) === e;
                  return i && n++, i;
                },
                s = (e, t, n) => {
                  let s = "" + t;
                  if (i(e)) for (; s.length < n; ) s = "0" + s;
                  return s;
                },
                r = (e, t, n, s) => (i(e) ? s[t] : n[t]);
              let o = "",
                a = !1;
              if (e)
                for (n = 0; n < t.length; n++)
                  if (a)
                    "'" !== t.charAt(n) || i("'")
                      ? (o += t.charAt(n))
                      : (a = !1);
                  else
                    switch (t.charAt(n)) {
                      case "d":
                        o += s("d", e.getDate(), 2);
                        break;
                      case "D":
                        o += r(
                          "D",
                          e.getDay(),
                          this.locale.dayNamesShort,
                          this.locale.dayNames
                        );
                        break;
                      case "o":
                        o += s(
                          "o",
                          Math.round(
                            (new Date(
                              e.getFullYear(),
                              e.getMonth(),
                              e.getDate()
                            ).getTime() -
                              new Date(e.getFullYear(), 0, 0).getTime()) /
                              864e5
                          ),
                          3
                        );
                        break;
                      case "m":
                        o += s("m", e.getMonth() + 1, 2);
                        break;
                      case "M":
                        o += r(
                          "M",
                          e.getMonth(),
                          this.locale.monthNamesShort,
                          this.locale.monthNames
                        );
                        break;
                      case "y":
                        o += i("y")
                          ? e.getFullYear()
                          : (e.getFullYear() % 100 < 10 ? "0" : "") +
                            (e.getFullYear() % 100);
                        break;
                      case "@":
                        o += e.getTime();
                        break;
                      case "!":
                        o += 1e4 * e.getTime() + this.ticksTo1970;
                        break;
                      case "'":
                        i("'") ? (o += "'") : (a = !0);
                        break;
                      default:
                        o += t.charAt(n);
                    }
              return o;
            }
            formatTime(e) {
              if (!e) return "";
              let t = "",
                n = e.getHours(),
                i = e.getMinutes(),
                s = e.getSeconds();
              return (
                "12" == this.hourFormat && n > 11 && 12 != n && (n -= 12),
                (t +=
                  "12" == this.hourFormat && 0 === n
                    ? 12
                    : n < 10
                    ? "0" + n
                    : n),
                (t += ":"),
                (t += i < 10 ? "0" + i : i),
                this.showSeconds && ((t += ":"), (t += s < 10 ? "0" + s : s)),
                "12" == this.hourFormat &&
                  (t += e.getHours() > 11 ? " PM" : " AM"),
                t
              );
            }
            parseTime(e) {
              let t = e.split(":");
              if (t.length !== (this.showSeconds ? 3 : 2)) throw "Invalid time";
              let n = parseInt(t[0]),
                i = parseInt(t[1]),
                s = this.showSeconds ? parseInt(t[2]) : null;
              if (
                isNaN(n) ||
                isNaN(i) ||
                n > 23 ||
                i > 59 ||
                ("12" == this.hourFormat && n > 12) ||
                (this.showSeconds && (isNaN(s) || s > 59))
              )
                throw "Invalid time";
              return (
                "12" == this.hourFormat &&
                  (12 !== n && this.pm
                    ? (n += 12)
                    : this.pm || 12 !== n || (n -= 12)),
                { hour: n, minute: i, second: s }
              );
            }
            parseDate(e, t) {
              if (null == t || null == e) throw "Invalid arguments";
              if ("" === (e = "object" == typeof e ? e.toString() : e + ""))
                return null;
              let n,
                i,
                s,
                r,
                o = 0,
                a =
                  "string" != typeof this.shortYearCutoff
                    ? this.shortYearCutoff
                    : (new Date().getFullYear() % 100) +
                      parseInt(this.shortYearCutoff, 10),
                l = -1,
                c = -1,
                u = -1,
                h = -1,
                d = !1,
                p = (e) => {
                  let i = n + 1 < t.length && t.charAt(n + 1) === e;
                  return i && n++, i;
                },
                f = (t) => {
                  let n = p(t),
                    i =
                      "@" === t
                        ? 14
                        : "!" === t
                        ? 20
                        : "y" === t && n
                        ? 4
                        : "o" === t
                        ? 3
                        : 2,
                    s = new RegExp(
                      "^\\d{" + ("y" === t ? i : 1) + "," + i + "}"
                    ),
                    r = e.substring(o).match(s);
                  if (!r) throw "Missing number at position " + o;
                  return (o += r[0].length), parseInt(r[0], 10);
                },
                g = (t, n, i) => {
                  let s = -1,
                    r = p(t) ? i : n,
                    a = [];
                  for (let e = 0; e < r.length; e++) a.push([e, r[e]]);
                  a.sort((e, t) => -(e[1].length - t[1].length));
                  for (let l = 0; l < a.length; l++) {
                    let t = a[l][1];
                    if (
                      e.substr(o, t.length).toLowerCase() === t.toLowerCase()
                    ) {
                      (s = a[l][0]), (o += t.length);
                      break;
                    }
                  }
                  if (-1 !== s) return s + 1;
                  throw "Unknown name at position " + o;
                },
                m = () => {
                  if (e.charAt(o) !== t.charAt(n))
                    throw "Unexpected literal at position " + o;
                  o++;
                };
              for ("month" === this.view && (u = 1), n = 0; n < t.length; n++)
                if (d) "'" !== t.charAt(n) || p("'") ? m() : (d = !1);
                else
                  switch (t.charAt(n)) {
                    case "d":
                      u = f("d");
                      break;
                    case "D":
                      g("D", this.locale.dayNamesShort, this.locale.dayNames);
                      break;
                    case "o":
                      h = f("o");
                      break;
                    case "m":
                      c = f("m");
                      break;
                    case "M":
                      c = g(
                        "M",
                        this.locale.monthNamesShort,
                        this.locale.monthNames
                      );
                      break;
                    case "y":
                      l = f("y");
                      break;
                    case "@":
                      (r = new Date(f("@"))),
                        (l = r.getFullYear()),
                        (c = r.getMonth() + 1),
                        (u = r.getDate());
                      break;
                    case "!":
                      (r = new Date((f("!") - this.ticksTo1970) / 1e4)),
                        (l = r.getFullYear()),
                        (c = r.getMonth() + 1),
                        (u = r.getDate());
                      break;
                    case "'":
                      p("'") ? m() : (d = !0);
                      break;
                    default:
                      m();
                  }
              if (o < e.length && ((s = e.substr(o)), !/^\s+/.test(s)))
                throw "Extra/unparsed characters found in date: " + s;
              if (
                (-1 === l
                  ? (l = new Date().getFullYear())
                  : l < 100 &&
                    (l +=
                      new Date().getFullYear() -
                      (new Date().getFullYear() % 100) +
                      (l <= a ? 0 : -100)),
                h > -1)
              )
                for (
                  c = 1, u = h;
                  (i = this.getDaysCountInMonth(l, c - 1)), !(u <= i);

                )
                  c++, (u -= i);
              if (
                ((r = this.daylightSavingAdjust(new Date(l, c - 1, u))),
                r.getFullYear() !== l ||
                  r.getMonth() + 1 !== c ||
                  r.getDate() !== u)
              )
                throw "Invalid date";
              return r;
            }
            daylightSavingAdjust(e) {
              return e
                ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
                : null;
            }
            updateFilledState() {
              this.filled = this.inputFieldValue && "" != this.inputFieldValue;
            }
            onTodayButtonClick(e) {
              let t = new Date(),
                n = {
                  day: t.getDate(),
                  month: t.getMonth(),
                  year: t.getFullYear(),
                  otherMonth:
                    t.getMonth() !== this.currentMonth ||
                    t.getFullYear() !== this.currentYear,
                  today: !0,
                  selectable: !0,
                };
              this.onDateSelect(e, n), this.onTodayClick.emit(e);
            }
            onClearButtonClick(e) {
              this.updateModel(null),
                this.updateInputfield(),
                this.hideOverlay(),
                this.onClearClick.emit(e);
            }
            bindDocumentClickListener() {
              this.documentClickListener ||
                this.zone.runOutsideAngular(() => {
                  this.documentClickListener = this.renderer.listen(
                    "document",
                    "click",
                    (e) => {
                      this.isOutsideClicked(e) &&
                        this.overlayVisible &&
                        this.zone.run(() => {
                          this.hideOverlay(),
                            this.onClickOutside.emit(e),
                            this.cd.markForCheck();
                        });
                    }
                  );
                });
            }
            unbindDocumentClickListener() {
              this.documentClickListener &&
                (this.documentClickListener(),
                (this.documentClickListener = null));
            }
            bindDocumentResizeListener() {
              this.documentResizeListener ||
                this.touchUI ||
                ((this.documentResizeListener = this.onWindowResize.bind(this)),
                window.addEventListener("resize", this.documentResizeListener));
            }
            unbindDocumentResizeListener() {
              this.documentResizeListener &&
                (window.removeEventListener(
                  "resize",
                  this.documentResizeListener
                ),
                (this.documentResizeListener = null));
            }
            isOutsideClicked(e) {
              return !(
                this.el.nativeElement.isSameNode(e.target) ||
                this.isNavIconClicked(e) ||
                this.el.nativeElement.contains(e.target) ||
                (this.overlay && this.overlay.contains(e.target))
              );
            }
            isNavIconClicked(e) {
              return (
                a.a.hasClass(e.target, "ui-datepicker-prev") ||
                a.a.hasClass(e.target, "ui-datepicker-prev-icon") ||
                a.a.hasClass(e.target, "ui-datepicker-next") ||
                a.a.hasClass(e.target, "ui-datepicker-next-icon")
              );
            }
            onWindowResize() {
              this.overlayVisible && !a.a.isAndroid() && this.hideOverlay();
            }
            onOverlayHide() {
              this.unbindDocumentClickListener(),
                this.unbindMaskClickListener(),
                this.unbindDocumentResizeListener(),
                (this.overlay = null),
                this.disableModality();
            }
            ngOnDestroy() {
              this.clearTimePickerTimer(),
                this.restoreOverlayAppend(),
                this.onOverlayHide();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.F), i.Rb(i.i), i.Rb(i.B));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-calendar"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, l.d, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.templates = s);
              },
              viewQuery: function (e, t) {
                var n;
                1 & e && (i.Qc(u, !0), i.Qc(h, !0)),
                  2 & e &&
                    (i.Ac((n = i.gc())) && (t.content = n.first),
                    i.Ac((n = i.gc())) && (t.inputfieldViewChild = n.first));
              },
              hostVars: 4,
              hostBindings: function (e, t) {
                2 & e &&
                  i.Ib("ui-inputwrapper-filled", t.filled)(
                    "ui-inputwrapper-focus",
                    t.focus
                  );
              },
              inputs: {
                dateFormat: "dateFormat",
                multipleSeparator: "multipleSeparator",
                rangeSeparator: "rangeSeparator",
                inline: "inline",
                showOtherMonths: "showOtherMonths",
                icon: "icon",
                shortYearCutoff: "shortYearCutoff",
                hourFormat: "hourFormat",
                stepHour: "stepHour",
                stepMinute: "stepMinute",
                stepSecond: "stepSecond",
                showSeconds: "showSeconds",
                showOnFocus: "showOnFocus",
                showWeek: "showWeek",
                dataType: "dataType",
                selectionMode: "selectionMode",
                todayButtonStyleClass: "todayButtonStyleClass",
                clearButtonStyleClass: "clearButtonStyleClass",
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                keepInvalid: "keepInvalid",
                hideOnDateTimeSelect: "hideOnDateTimeSelect",
                numberOfMonths: "numberOfMonths",
                view: "view",
                timeSeparator: "timeSeparator",
                focusTrap: "focusTrap",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                defaultDate: "defaultDate",
                minDate: "minDate",
                maxDate: "maxDate",
                disabledDates: "disabledDates",
                disabledDays: "disabledDays",
                yearRange: "yearRange",
                showTime: "showTime",
                locale: "locale",
                disabled: "disabled",
                style: "style",
                styleClass: "styleClass",
                inputStyle: "inputStyle",
                inputId: "inputId",
                name: "name",
                inputStyleClass: "inputStyleClass",
                placeholder: "placeholder",
                ariaLabelledBy: "ariaLabelledBy",
                selectOtherMonths: "selectOtherMonths",
                showIcon: "showIcon",
                appendTo: "appendTo",
                readonlyInput: "readonlyInput",
                monthNavigator: "monthNavigator",
                yearNavigator: "yearNavigator",
                timeOnly: "timeOnly",
                required: "required",
                maxDateCount: "maxDateCount",
                showButtonBar: "showButtonBar",
                panelStyleClass: "panelStyleClass",
                panelStyle: "panelStyle",
                touchUI: "touchUI",
                tabindex: "tabindex",
              },
              outputs: {
                onFocus: "onFocus",
                onBlur: "onBlur",
                onClose: "onClose",
                onSelect: "onSelect",
                onInput: "onInput",
                onTodayClick: "onTodayClick",
                onClearClick: "onClearClick",
                onMonthChange: "onMonthChange",
                onYearChange: "onYearChange",
                onClickOutside: "onClickOutside",
                onShow: "onShow",
              },
              features: [i.Db([re])],
              ngContentSelectors: se,
              decls: 3,
              vars: 9,
              consts: [
                [3, "ngClass", "ngStyle"],
                [3, "ngIf"],
                [3, "class", "ngStyle", "ngClass", 4, "ngIf"],
                [
                  "type",
                  "text",
                  "autocomplete",
                  "off",
                  3,
                  "value",
                  "readonly",
                  "ngStyle",
                  "placeholder",
                  "disabled",
                  "ngClass",
                  "focus",
                  "keydown",
                  "click",
                  "blur",
                  "input",
                ],
                ["inputfield", ""],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "class",
                  "ui-datepicker-trigger ui-calendar-button",
                  "tabindex",
                  "0",
                  3,
                  "icon",
                  "ngClass",
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "type",
                  "button",
                  "pButton",
                  "",
                  "tabindex",
                  "0",
                  1,
                  "ui-datepicker-trigger",
                  "ui-calendar-button",
                  3,
                  "icon",
                  "ngClass",
                  "disabled",
                  "click",
                ],
                [3, "ngStyle", "ngClass"],
                ["contentWrapper", ""],
                [4, "ngIf"],
                [
                  "class",
                  "ui-timepicker ui-widget-header ui-corner-all",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "ui-datepicker-buttonbar ui-widget-header",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "ui-datepicker-group ui-widget-content",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                ["class", "ui-monthpicker", 4, "ngIf"],
                [1, "ui-datepicker-group", "ui-widget-content"],
                [
                  1,
                  "ui-datepicker-header",
                  "ui-widget-header",
                  "ui-helper-clearfix",
                  "ui-corner-all",
                ],
                [
                  "class",
                  "ui-datepicker-prev ui-corner-all",
                  "tabindex",
                  "0",
                  3,
                  "click",
                  "keydown.enter",
                  "keydown",
                  4,
                  "ngIf",
                ],
                [1, "ui-datepicker-title"],
                ["class", "ui-datepicker-month", 4, "ngIf"],
                [
                  "tabindex",
                  "0",
                  "class",
                  "ui-datepicker-month",
                  3,
                  "change",
                  4,
                  "ngIf",
                ],
                [
                  "tabindex",
                  "0",
                  "class",
                  "ui-datepicker-year",
                  3,
                  "change",
                  4,
                  "ngIf",
                ],
                ["class", "ui-datepicker-year", 4, "ngIf"],
                [
                  "class",
                  "ui-datepicker-next ui-corner-all",
                  "tabindex",
                  "0",
                  3,
                  "click",
                  "keydown.enter",
                  "keydown",
                  4,
                  "ngIf",
                ],
                ["class", "ui-datepicker-calendar-container", 4, "ngIf"],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-datepicker-prev",
                  "ui-corner-all",
                  3,
                  "click",
                  "keydown.enter",
                  "keydown",
                ],
                [1, "ui-datepicker-prev-icon", "pi", "pi-chevron-left"],
                [1, "ui-datepicker-month"],
                ["tabindex", "0", 1, "ui-datepicker-month", 3, "change"],
                [3, "value", "selected", 4, "ngFor", "ngForOf"],
                [3, "value", "selected"],
                ["tabindex", "0", 1, "ui-datepicker-year", 3, "change"],
                [1, "ui-datepicker-year"],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-datepicker-next",
                  "ui-corner-all",
                  3,
                  "click",
                  "keydown.enter",
                  "keydown",
                ],
                [1, "ui-datepicker-next-icon", "pi", "pi-chevron-right"],
                [1, "ui-datepicker-calendar-container"],
                [1, "ui-datepicker-calendar"],
                ["class", "ui-datepicker-weekheader", 4, "ngIf"],
                ["scope", "col", 4, "ngFor", "ngForOf"],
                [4, "ngFor", "ngForOf"],
                [1, "ui-datepicker-weekheader"],
                ["scope", "col"],
                [
                  "class",
                  "ui-datepicker-weeknumber ui-state-disabled",
                  4,
                  "ngIf",
                ],
                [3, "ngClass", 4, "ngFor", "ngForOf"],
                [1, "ui-datepicker-weeknumber", "ui-state-disabled"],
                [3, "ngClass"],
                [
                  "class",
                  "ui-state-default",
                  "draggable",
                  "false",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "ui-state-default ui-state-disabled",
                  3,
                  "ngClass",
                  4,
                  "ngIf",
                ],
                [
                  "draggable",
                  "false",
                  1,
                  "ui-state-default",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                ],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "ui-state-default", "ui-state-disabled", 3, "ngClass"],
                [1, "ui-monthpicker"],
                [
                  "class",
                  "ui-monthpicker-month",
                  3,
                  "ngClass",
                  "click",
                  "keydown",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [1, "ui-monthpicker-month", 3, "ngClass", "click", "keydown"],
                [1, "ui-timepicker", "ui-widget-header", "ui-corner-all"],
                [1, "ui-hour-picker"],
                [
                  "tabindex",
                  "0",
                  3,
                  "keydown",
                  "keydown.enter",
                  "mousedown",
                  "mouseup",
                  "mouseleave",
                ],
                [1, "pi", "pi-chevron-up"],
                [3, "ngStyle"],
                [1, "pi", "pi-chevron-down"],
                [1, "ui-separator"],
                [1, "ui-minute-picker"],
                ["class", "ui-separator", 4, "ngIf"],
                ["class", "ui-second-picker", 4, "ngIf"],
                ["class", "ui-ampm-picker", 4, "ngIf"],
                [1, "ui-second-picker"],
                [1, "ui-ampm-picker"],
                ["tabindex", "0", 3, "keydown", "click", "keydown.enter"],
                [1, "ui-datepicker-buttonbar", "ui-widget-header"],
                [
                  "type",
                  "button",
                  "tabindex",
                  "0",
                  "pButton",
                  "",
                  3,
                  "label",
                  "ngClass",
                  "keydown",
                  "click",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.oc(ne),
                  i.Xb(0, "span", 0),
                  i.Lc(1, f, 3, 16, "ng-template", 1),
                  i.Lc(2, te, 7, 27, "div", 2),
                  i.Wb()),
                  2 & e &&
                    (i.Gb(t.styleClass),
                    i.pc("ngClass", i.tc(6, ie, t.showIcon, t.timeOnly))(
                      "ngStyle",
                      t.style
                    ),
                    i.Eb(1),
                    i.pc("ngIf", !t.inline),
                    i.Eb(1),
                    i.pc("ngIf", t.inline || t.overlayVisible));
              },
              directives: [r.k, r.n, r.m, o.a, r.l, r.r],
              encapsulation: 2,
              data: {
                animation: [
                  Object(s.m)("overlayAnimation", [
                    Object(s.j)(
                      "visible",
                      Object(s.k)({ transform: "translateY(0)", opacity: 1 })
                    ),
                    Object(s.j)(
                      "visibleTouchUI",
                      Object(s.k)({
                        transform: "translate(-50%,-50%)",
                        opacity: 1,
                      })
                    ),
                    Object(s.l)("void => visible", [
                      Object(s.k)({ transform: "translateY(5%)", opacity: 0 }),
                      Object(s.e)("{{showTransitionParams}}"),
                    ]),
                    Object(s.l)("visible => void", [
                      Object(s.e)(
                        "{{hideTransitionParams}}",
                        Object(s.k)({ opacity: 0, transform: "translateY(5%)" })
                      ),
                    ]),
                    Object(s.l)("void => visibleTouchUI", [
                      Object(s.k)({
                        opacity: 0,
                        transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                      }),
                      Object(s.e)("{{showTransitionParams}}"),
                    ]),
                    Object(s.l)("visibleTouchUI => void", [
                      Object(s.e)(
                        "{{hideTransitionParams}}",
                        Object(s.k)({
                          opacity: 0,
                          transform: "translate3d(-50%, -40%, 0) scale(0.9)",
                        })
                      ),
                    ]),
                  ]),
                ],
              },
            })),
            e
          );
        })(),
        ae = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[r.c, o.b, l.e], o.b, l.e],
            })),
            e
          );
        })();
    },
    EKJS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("fXoL"),
        s = n("R1z2");
      let r = (() => {
        class e {
          constructor(e) {
            this.storage = e;
          }
          find() {
            return this.storage.find();
          }
          save(e) {
            return this.storage.save(e);
          }
          remove() {
            return this.storage.remove();
          }
          createEmptyModel() {
            return this.storage.createEmptyModel();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(s.a));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    EY2u: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      }),
        n.d(t, "b", function () {
          return r;
        });
      var i = n("HDdC");
      const s = new i.a((e) => e.complete());
      function r(e) {
        return e
          ? (function (e) {
              return new i.a((t) => e.schedule(() => t.complete()));
            })(e)
          : s;
      }
    },
    GWxI: function (e, t, n) {
      "use strict";
      var i;
      n.d(t, "a", function () {
        return i;
      }),
        (function (e) {
          class t {
            constructor(e = {}) {
              this.value = e;
            }
          }
          (t.type = "[User] Populate"), (e.Populate = t);
          class n {}
          (n.type = "[User] Find"), (e.Find = n);
          class i {
            constructor(e) {
              this.value = e;
            }
          }
          (i.type = "[User] Update"), (e.Update = i);
          class s {
            constructor(e) {
              this.value = e;
            }
          }
          (s.type = "[User] Save"), (e.Save = s);
          class r {}
          (r.type = "[User] Remove"), (e.Remove = r);
        })(i || (i = {}));
    },
    HDdC: function (e, t, n) {
      "use strict";
      var i = n("7o/Q"),
        s = n("2QA8"),
        r = n("gRHU"),
        o = n("kJWO"),
        a = n("mCNh"),
        l = n("2fFW");
      n.d(t, "a", function () {
        return c;
      });
      let c = (() => {
        class e {
          constructor(e) {
            (this._isScalar = !1), e && (this._subscribe = e);
          }
          lift(t) {
            const n = new e();
            return (n.source = this), (n.operator = t), n;
          }
          subscribe(e, t, n) {
            const { operator: o } = this,
              a = (function (e, t, n) {
                if (e) {
                  if (e instanceof i.a) return e;
                  if (e[s.a]) return e[s.a]();
                }
                return e || t || n ? new i.a(e, t, n) : new i.a(r.a);
              })(e, t, n);
            if (
              (a.add(
                o
                  ? o.call(a, this.source)
                  : this.source ||
                    (l.a.useDeprecatedSynchronousErrorHandling &&
                      !a.syncErrorThrowable)
                  ? this._subscribe(a)
                  : this._trySubscribe(a)
              ),
              l.a.useDeprecatedSynchronousErrorHandling &&
                a.syncErrorThrowable &&
                ((a.syncErrorThrowable = !1), a.syncErrorThrown))
            )
              throw a.syncErrorValue;
            return a;
          }
          _trySubscribe(e) {
            try {
              return this._subscribe(e);
            } catch (t) {
              l.a.useDeprecatedSynchronousErrorHandling &&
                ((e.syncErrorThrown = !0), (e.syncErrorValue = t)),
                (function (e) {
                  for (; e; ) {
                    const { closed: t, destination: n, isStopped: s } = e;
                    if (t || s) return !1;
                    e = n && n instanceof i.a ? n : null;
                  }
                  return !0;
                })(e)
                  ? e.error(t)
                  : console.warn(t);
            }
          }
          forEach(e, t) {
            return new (t = u(t))((t, n) => {
              let i;
              i = this.subscribe(
                (t) => {
                  try {
                    e(t);
                  } catch (s) {
                    n(s), i && i.unsubscribe();
                  }
                },
                n,
                t
              );
            });
          }
          _subscribe(e) {
            const { source: t } = this;
            return t && t.subscribe(e);
          }
          [o.a]() {
            return this;
          }
          pipe(...e) {
            return 0 === e.length ? this : Object(a.b)(e)(this);
          }
          toPromise(e) {
            return new (e = u(e))((e, t) => {
              let n;
              this.subscribe(
                (e) => (n = e),
                (e) => t(e),
                () => e(n)
              );
            });
          }
        }
        return (e.create = (t) => new e(t)), e;
      })();
      function u(e) {
        if ((e || (e = l.a.Promise || Promise), !e))
          throw new Error("no Promise impl found");
        return e;
      }
    },
    HSBQ: function (e, t, n) {
      "use strict";
      var i = n("IKEI"),
        s = n("ICY0");
      class r extends s.a {
        populateAttributes() {
          this.attributes = { refName: "marketvisionltd", refId: 1 };
        }
        get refName() {
          return this.attributes.refName;
        }
        get refId() {
          return this.attributes.refId;
        }
      }
      n.d(t, "a", function () {
        return o;
      });
      let o = (() => {
        class e extends i.a {
          constructor() {
            super(...arguments), (this.models = { [e.STORAGE]: r });
          }
        }
        return (e.STORAGE = "storage"), e;
      })();
    },
    Hifb: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var i = (function (e) {
        return (e.admin = "admin"), (e.user = "user"), (e.agent = "agent"), e;
      })({});
    },
    I55L: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (e) =>
        e && "number" == typeof e.length && "function" != typeof e;
    },
    ICY0: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      class i {
        constructor(e) {
          (this.attributes = {}),
            this.populateAttributes(),
            e && this.populate(e);
        }
        populate(e) {
          const t = Object.keys(e);
          for (const n of t)
            this.attributes.hasOwnProperty(n) && (this.attributes[n] = e[n]);
        }
        toString() {
          return JSON.stringify(this.attributes);
        }
        toObject() {
          return this.attributes;
        }
        populateAttributes() {
          this.attributes = {};
        }
      }
    },
    IKEI: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      class i {
        create(e, t) {
          return this.checkShortName(e), new this.models[e](t);
        }
        createMany(e, t) {
          const n = [];
          return (
            Array.isArray(t) &&
              t.forEach((t) => {
                const i = this.create(e, t);
                n.push(i);
              }),
            n
          );
        }
        checkShortName(e) {
          try {
            if (-1 === Object.keys(this.models).indexOf(e))
              throw new Error(
                "Short name not set. Mistype in short name? You typed: " + e
              );
          } catch (t) {
            throw new Error(`${t}  short name - ${e}`);
          }
        }
      }
    },
    ITC6: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("fXoL"),
        s = n("jhN1");
      let r = (() => {
        class e {
          constructor(e) {
            this.sanitizer = e;
          }
          transform(e, t) {
            if (!e) return e;
            switch (t) {
              case "html":
                return this.sanitizer.bypassSecurityTrustHtml(e);
              case "style":
                return this.sanitizer.bypassSecurityTrustStyle(e);
              case "script":
                return this.sanitizer.bypassSecurityTrustScript(e);
              case "url":
                return this.sanitizer.bypassSecurityTrustUrl(e);
              case "resourceUrl":
                return this.sanitizer.bypassSecurityTrustResourceUrl(e);
              default:
                throw new Error("Invalid safe type specified: " + t);
            }
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(s.b));
          }),
          (e.ɵpipe = i.Qb({ name: "safe", type: e, pure: !0 })),
          e
        );
      })();
    },
    Icl4: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("fXoL"),
        s = n("UvIs");
      let r = (() => {
        class e {
          constructor(e) {
            (this.clipboard = e),
              (this.clipboardCopy = ""),
              (this.copyEvent = new i.o()),
              (this.errorEvent = new i.o());
          }
          copyToClipboard() {
            this.clipboard.copy(this.clipboardCopy).subscribe(
              (e) => this.copyEvent.emit(e),
              (e) => this.errorEvent.emit(e)
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(s.a));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [["", "clipboardCopy", ""]],
            hostBindings: function (e, t) {
              1 & e &&
                i.fc("click", function () {
                  return t.copyToClipboard();
                });
            },
            inputs: { clipboardCopy: "clipboardCopy" },
            outputs: { copyEvent: "copyEvent", errorEvent: "errorEvent" },
          })),
          e
        );
      })();
    },
    IjjT: function (e, t, n) {
      "use strict";
      let i = (() => {
        class e {
          constructor(t, n = e.now) {
            (this.SchedulerAction = t), (this.now = n);
          }
          schedule(e, t = 0, n) {
            return new this.SchedulerAction(this, e).schedule(n, t);
          }
        }
        return (e.now = () => Date.now()), e;
      })();
      n.d(t, "a", function () {
        return s;
      });
      class s extends i {
        constructor(e, t = i.now) {
          super(e, () =>
            s.delegate && s.delegate !== this ? s.delegate.now() : t()
          ),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(e, t = 0, n) {
          return s.delegate && s.delegate !== this
            ? s.delegate.schedule(e, t, n)
            : super.schedule(e, t, n);
        }
        flush(e) {
          const { actions: t } = this;
          if (this.active) return void t.push(e);
          let n;
          this.active = !0;
          do {
            if ((n = e.execute(e.state, e.delay))) break;
          } while ((e = t.shift()));
          if (((this.active = !1), n)) {
            for (; (e = t.shift()); ) e.unsubscribe();
            throw n;
          }
        }
      }
    },
    IzEk: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("7o/Q"),
        s = n("4I5i"),
        r = n("EY2u");
      function o(e) {
        return (t) => (0 === e ? Object(r.b)() : t.lift(new a(e)));
      }
      class a {
        constructor(e) {
          if (((this.total = e), this.total < 0)) throw new s.a();
        }
        call(e, t) {
          return t.subscribe(new l(e, this.total));
        }
      }
      class l extends i.a {
        constructor(e, t) {
          super(e), (this.total = t), (this.count = 0);
        }
        _next(e) {
          const t = this.total,
            n = ++this.count;
          n <= t &&
            (this.destination.next(e),
            n === t && (this.destination.complete(), this.unsubscribe()));
        }
      }
    },
    JIr8: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("l7GE"),
        s = n("51Dv"),
        r = n("ZUHj");
      function o(e) {
        return function (t) {
          const n = new a(e),
            i = t.lift(n);
          return (n.caught = i);
        };
      }
      class a {
        constructor(e) {
          this.selector = e;
        }
        call(e, t) {
          return t.subscribe(new l(e, this.selector, this.caught));
        }
      }
      class l extends i.a {
        constructor(e, t, n) {
          super(e), (this.selector = t), (this.caught = n);
        }
        error(e) {
          if (!this.isStopped) {
            let n;
            try {
              n = this.selector(e, this.caught);
            } catch (t) {
              return void super.error(t);
            }
            this._unsubscribeAndRecycle();
            const i = new s.a(this, void 0, void 0);
            this.add(i);
            const o = Object(r.a)(this, n, void 0, void 0, i);
            o !== i && this.add(o);
          }
        }
      }
    },
    JX91: function (e, t, n) {
      "use strict";
      var i = n("LRne"),
        s = n("0EUg");
      function r(...e) {
        return Object(s.a)()(Object(i.a)(...e));
      }
      var o = n("z+Ro");
      function a(...e) {
        const t = e[e.length - 1];
        return Object(o.a)(t) ? (e.pop(), (n) => r(e, n, t)) : (t) => r(e, t);
      }
      n.d(t, "a", function () {
        return a;
      });
    },
    Jq2x: function (e, t, n) {
      "use strict";
      var i = n("/xfr");
      function s(e) {
        return (s = Object.setPrototypeOf
          ? Object.getPrototypeOf
          : function (e) {
              return e.__proto__ || Object.getPrototypeOf(e);
            })(e);
      }
      function r(e, t) {
        return (r =
          Object.setPrototypeOf ||
          function (e, t) {
            return (e.__proto__ = t), e;
          })(e, t);
      }
      function o() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
          return (
            Date.prototype.toString.call(
              Reflect.construct(Date, [], function () {})
            ),
            !0
          );
        } catch (e) {
          return !1;
        }
      }
      function a(e, t, n) {
        return (a = o()
          ? Reflect.construct
          : function (e, t, n) {
              var i = [null];
              i.push.apply(i, t);
              var s = new (Function.bind.apply(e, i))();
              return n && r(s, n.prototype), s;
            }).apply(null, arguments);
      }
      function l(e) {
        var t = "function" == typeof Map ? new Map() : void 0;
        return (l = function (e) {
          if (
            null === e ||
            -1 === Function.toString.call(e).indexOf("[native code]")
          )
            return e;
          if ("function" != typeof e)
            throw new TypeError(
              "Super expression must either be null or a function"
            );
          if (void 0 !== t) {
            if (t.has(e)) return t.get(e);
            t.set(e, n);
          }
          function n() {
            return a(e, arguments, s(this).constructor);
          }
          return (
            (n.prototype = Object.create(e.prototype, {
              constructor: {
                value: n,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
            r(n, e)
          );
        })(e);
      }
      var c = (function (e) {
        var t, n;
        function i(t) {
          var n, i, s;
          return (
            (i = (function (e) {
              if (void 0 === e)
                throw new ReferenceError(
                  "this hasn't been initialised - super() hasn't been called"
                );
              return e;
            })((n = e.call.apply(e, [this].concat(t)) || this))),
            (s = i.__proto__),
            Object.defineProperty(i, "__proto__", {
              get: function () {
                return s;
              },
              set: function (e) {
                s.__proto__ = e;
              },
            }),
            n
          );
        }
        return (
          (n = e),
          ((t = i).prototype = Object.create(n.prototype)),
          (t.prototype.constructor = t),
          (t.__proto__ = n),
          i
        );
      })(l(Array));
      function u(e) {
        void 0 === e && (e = []);
        var t = [];
        return (
          e.forEach(function (e) {
            Array.isArray(e) ? t.push.apply(t, u(e)) : t.push(e);
          }),
          t
        );
      }
      function h(e, t) {
        return Array.prototype.filter.call(e, t);
      }
      function d(e, t) {
        var n = Object(i.b)(),
          s = Object(i.a)(),
          r = [];
        if (!t && e instanceof c) return e;
        if (!e) return new c(r);
        if ("string" == typeof e) {
          var o = e.trim();
          if (o.indexOf("<") >= 0 && o.indexOf(">") >= 0) {
            var a = "div";
            0 === o.indexOf("<li") && (a = "ul"),
              0 === o.indexOf("<tr") && (a = "tbody"),
              (0 !== o.indexOf("<td") && 0 !== o.indexOf("<th")) || (a = "tr"),
              0 === o.indexOf("<tbody") && (a = "table"),
              0 === o.indexOf("<option") && (a = "select");
            var l = s.createElement(a);
            l.innerHTML = o;
            for (var u = 0; u < l.childNodes.length; u += 1)
              r.push(l.childNodes[u]);
          } else
            r = (function (e, t) {
              if ("string" != typeof e) return [e];
              for (
                var n = [], i = t.querySelectorAll(e), s = 0;
                s < i.length;
                s += 1
              )
                n.push(i[s]);
              return n;
            })(e.trim(), t || s);
        } else if (e.nodeType || e === n || e === s) r.push(e);
        else if (Array.isArray(e)) {
          if (e instanceof c) return e;
          r = e;
        }
        return new c(
          (function (e) {
            for (var t = [], n = 0; n < e.length; n += 1)
              -1 === t.indexOf(e[n]) && t.push(e[n]);
            return t;
          })(r)
        );
      }
      d.fn = c.prototype;
      var p = "resize scroll".split(" ");
      function f(e) {
        return function () {
          for (var t = arguments.length, n = new Array(t), i = 0; i < t; i++)
            n[i] = arguments[i];
          if (void 0 === n[0]) {
            for (var s = 0; s < this.length; s += 1)
              p.indexOf(e) < 0 &&
                (e in this[s] ? this[s][e]() : d(this[s]).trigger(e));
            return this;
          }
          return this.on.apply(this, [e].concat(n));
        };
      }
      f("click"),
        f("blur"),
        f("focus"),
        f("focusin"),
        f("focusout"),
        f("keyup"),
        f("keydown"),
        f("keypress"),
        f("submit"),
        f("change"),
        f("mousedown"),
        f("mousemove"),
        f("mouseup"),
        f("mouseenter"),
        f("mouseleave"),
        f("mouseout"),
        f("mouseover"),
        f("touchstart"),
        f("touchend"),
        f("touchmove"),
        f("resize"),
        f("scroll");
      var g = {
        addClass: function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          var i = u(
            t.map(function (e) {
              return e.split(" ");
            })
          );
          return (
            this.forEach(function (e) {
              var t;
              (t = e.classList).add.apply(t, i);
            }),
            this
          );
        },
        removeClass: function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          var i = u(
            t.map(function (e) {
              return e.split(" ");
            })
          );
          return (
            this.forEach(function (e) {
              var t;
              (t = e.classList).remove.apply(t, i);
            }),
            this
          );
        },
        hasClass: function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          var i = u(
            t.map(function (e) {
              return e.split(" ");
            })
          );
          return (
            h(this, function (e) {
              return (
                i.filter(function (t) {
                  return e.classList.contains(t);
                }).length > 0
              );
            }).length > 0
          );
        },
        toggleClass: function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          var i = u(
            t.map(function (e) {
              return e.split(" ");
            })
          );
          this.forEach(function (e) {
            i.forEach(function (t) {
              e.classList.toggle(t);
            });
          });
        },
        attr: function (e, t) {
          if (1 === arguments.length && "string" == typeof e)
            return this[0] ? this[0].getAttribute(e) : void 0;
          for (var n = 0; n < this.length; n += 1)
            if (2 === arguments.length) this[n].setAttribute(e, t);
            else
              for (var i in e)
                (this[n][i] = e[i]), this[n].setAttribute(i, e[i]);
          return this;
        },
        removeAttr: function (e) {
          for (var t = 0; t < this.length; t += 1) this[t].removeAttribute(e);
          return this;
        },
        transform: function (e) {
          for (var t = 0; t < this.length; t += 1) this[t].style.transform = e;
          return this;
        },
        transition: function (e) {
          for (var t = 0; t < this.length; t += 1)
            this[t].style.transitionDuration =
              "string" != typeof e ? e + "ms" : e;
          return this;
        },
        on: function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          var i = t[0],
            s = t[1],
            r = t[2],
            o = t[3];
          function a(e) {
            var t = e.target;
            if (t) {
              var n = e.target.dom7EventData || [];
              if ((n.indexOf(e) < 0 && n.unshift(e), d(t).is(s))) r.apply(t, n);
              else
                for (var i = d(t).parents(), o = 0; o < i.length; o += 1)
                  d(i[o]).is(s) && r.apply(i[o], n);
            }
          }
          function l(e) {
            var t = (e && e.target && e.target.dom7EventData) || [];
            t.indexOf(e) < 0 && t.unshift(e), r.apply(this, t);
          }
          "function" == typeof t[1] &&
            ((i = t[0]), (r = t[1]), (o = t[2]), (s = void 0)),
            o || (o = !1);
          for (var c, u = i.split(" "), h = 0; h < this.length; h += 1) {
            var p = this[h];
            if (s)
              for (c = 0; c < u.length; c += 1) {
                var f = u[c];
                p.dom7LiveListeners || (p.dom7LiveListeners = {}),
                  p.dom7LiveListeners[f] || (p.dom7LiveListeners[f] = []),
                  p.dom7LiveListeners[f].push({
                    listener: r,
                    proxyListener: a,
                  }),
                  p.addEventListener(f, a, o);
              }
            else
              for (c = 0; c < u.length; c += 1) {
                var g = u[c];
                p.dom7Listeners || (p.dom7Listeners = {}),
                  p.dom7Listeners[g] || (p.dom7Listeners[g] = []),
                  p.dom7Listeners[g].push({ listener: r, proxyListener: l }),
                  p.addEventListener(g, l, o);
              }
          }
          return this;
        },
        off: function () {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          var i = t[0],
            s = t[1],
            r = t[2],
            o = t[3];
          "function" == typeof t[1] &&
            ((i = t[0]), (r = t[1]), (o = t[2]), (s = void 0)),
            o || (o = !1);
          for (var a = i.split(" "), l = 0; l < a.length; l += 1)
            for (var c = a[l], u = 0; u < this.length; u += 1) {
              var h = this[u],
                d = void 0;
              if (
                (!s && h.dom7Listeners
                  ? (d = h.dom7Listeners[c])
                  : s && h.dom7LiveListeners && (d = h.dom7LiveListeners[c]),
                d && d.length)
              )
                for (var p = d.length - 1; p >= 0; p -= 1) {
                  var f = d[p];
                  (r && f.listener === r) ||
                  (r &&
                    f.listener &&
                    f.listener.dom7proxy &&
                    f.listener.dom7proxy === r)
                    ? (h.removeEventListener(c, f.proxyListener, o),
                      d.splice(p, 1))
                    : r ||
                      (h.removeEventListener(c, f.proxyListener, o),
                      d.splice(p, 1));
                }
            }
          return this;
        },
        trigger: function () {
          for (
            var e = Object(i.b)(),
              t = arguments.length,
              n = new Array(t),
              s = 0;
            s < t;
            s++
          )
            n[s] = arguments[s];
          for (var r = n[0].split(" "), o = n[1], a = 0; a < r.length; a += 1)
            for (var l = r[a], c = 0; c < this.length; c += 1) {
              var u = this[c];
              if (e.CustomEvent) {
                var h = new e.CustomEvent(l, {
                  detail: o,
                  bubbles: !0,
                  cancelable: !0,
                });
                (u.dom7EventData = n.filter(function (e, t) {
                  return t > 0;
                })),
                  u.dispatchEvent(h),
                  (u.dom7EventData = []),
                  delete u.dom7EventData;
              }
            }
          return this;
        },
        transitionEnd: function (e) {
          var t = this;
          return (
            e &&
              t.on("transitionend", function n(i) {
                i.target === this &&
                  (e.call(this, i), t.off("transitionend", n));
              }),
            this
          );
        },
        outerWidth: function (e) {
          if (this.length > 0) {
            if (e) {
              var t = this.styles();
              return (
                this[0].offsetWidth +
                parseFloat(t.getPropertyValue("margin-right")) +
                parseFloat(t.getPropertyValue("margin-left"))
              );
            }
            return this[0].offsetWidth;
          }
          return null;
        },
        outerHeight: function (e) {
          if (this.length > 0) {
            if (e) {
              var t = this.styles();
              return (
                this[0].offsetHeight +
                parseFloat(t.getPropertyValue("margin-top")) +
                parseFloat(t.getPropertyValue("margin-bottom"))
              );
            }
            return this[0].offsetHeight;
          }
          return null;
        },
        styles: function () {
          var e = Object(i.b)();
          return this[0] ? e.getComputedStyle(this[0], null) : {};
        },
        offset: function () {
          if (this.length > 0) {
            var e = Object(i.b)(),
              t = Object(i.a)(),
              n = this[0],
              s = n.getBoundingClientRect(),
              r = t.body;
            return {
              top:
                s.top +
                (n === e ? e.scrollY : n.scrollTop) -
                (n.clientTop || r.clientTop || 0),
              left:
                s.left +
                (n === e ? e.scrollX : n.scrollLeft) -
                (n.clientLeft || r.clientLeft || 0),
            };
          }
          return null;
        },
        css: function (e, t) {
          var n,
            s = Object(i.b)();
          if (1 === arguments.length) {
            if ("string" != typeof e) {
              for (n = 0; n < this.length; n += 1)
                for (var r in e) this[n].style[r] = e[r];
              return this;
            }
            if (this[0])
              return s.getComputedStyle(this[0], null).getPropertyValue(e);
          }
          if (2 === arguments.length && "string" == typeof e) {
            for (n = 0; n < this.length; n += 1) this[n].style[e] = t;
            return this;
          }
          return this;
        },
        each: function (e) {
          return e
            ? (this.forEach(function (t, n) {
                e.apply(t, [t, n]);
              }),
              this)
            : this;
        },
        html: function (e) {
          if (void 0 === e) return this[0] ? this[0].innerHTML : null;
          for (var t = 0; t < this.length; t += 1) this[t].innerHTML = e;
          return this;
        },
        text: function (e) {
          if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;
          for (var t = 0; t < this.length; t += 1) this[t].textContent = e;
          return this;
        },
        is: function (e) {
          var t,
            n,
            s = Object(i.b)(),
            r = Object(i.a)(),
            o = this[0];
          if (!o || void 0 === e) return !1;
          if ("string" == typeof e) {
            if (o.matches) return o.matches(e);
            if (o.webkitMatchesSelector) return o.webkitMatchesSelector(e);
            if (o.msMatchesSelector) return o.msMatchesSelector(e);
            for (t = d(e), n = 0; n < t.length; n += 1)
              if (t[n] === o) return !0;
            return !1;
          }
          if (e === r) return o === r;
          if (e === s) return o === s;
          if (e.nodeType || e instanceof c) {
            for (t = e.nodeType ? [e] : e, n = 0; n < t.length; n += 1)
              if (t[n] === o) return !0;
            return !1;
          }
          return !1;
        },
        index: function () {
          var e,
            t = this[0];
          if (t) {
            for (e = 0; null !== (t = t.previousSibling); )
              1 === t.nodeType && (e += 1);
            return e;
          }
        },
        eq: function (e) {
          if (void 0 === e) return this;
          var t = this.length;
          if (e > t - 1) return d([]);
          if (e < 0) {
            var n = t + e;
            return d(n < 0 ? [] : [this[n]]);
          }
          return d([this[e]]);
        },
        append: function () {
          for (var e, t = Object(i.a)(), n = 0; n < arguments.length; n += 1) {
            e = n < 0 || arguments.length <= n ? void 0 : arguments[n];
            for (var s = 0; s < this.length; s += 1)
              if ("string" == typeof e) {
                var r = t.createElement("div");
                for (r.innerHTML = e; r.firstChild; )
                  this[s].appendChild(r.firstChild);
              } else if (e instanceof c)
                for (var o = 0; o < e.length; o += 1) this[s].appendChild(e[o]);
              else this[s].appendChild(e);
          }
          return this;
        },
        prepend: function (e) {
          var t,
            n,
            s = Object(i.a)();
          for (t = 0; t < this.length; t += 1)
            if ("string" == typeof e) {
              var r = s.createElement("div");
              for (r.innerHTML = e, n = r.childNodes.length - 1; n >= 0; n -= 1)
                this[t].insertBefore(r.childNodes[n], this[t].childNodes[0]);
            } else if (e instanceof c)
              for (n = 0; n < e.length; n += 1)
                this[t].insertBefore(e[n], this[t].childNodes[0]);
            else this[t].insertBefore(e, this[t].childNodes[0]);
          return this;
        },
        next: function (e) {
          return this.length > 0
            ? e
              ? this[0].nextElementSibling &&
                d(this[0].nextElementSibling).is(e)
                ? d([this[0].nextElementSibling])
                : d([])
              : d(
                  this[0].nextElementSibling ? [this[0].nextElementSibling] : []
                )
            : d([]);
        },
        nextAll: function (e) {
          var t = [],
            n = this[0];
          if (!n) return d([]);
          for (; n.nextElementSibling; ) {
            var i = n.nextElementSibling;
            e ? d(i).is(e) && t.push(i) : t.push(i), (n = i);
          }
          return d(t);
        },
        prev: function (e) {
          if (this.length > 0) {
            var t = this[0];
            return e
              ? t.previousElementSibling && d(t.previousElementSibling).is(e)
                ? d([t.previousElementSibling])
                : d([])
              : d(t.previousElementSibling ? [t.previousElementSibling] : []);
          }
          return d([]);
        },
        prevAll: function (e) {
          var t = [],
            n = this[0];
          if (!n) return d([]);
          for (; n.previousElementSibling; ) {
            var i = n.previousElementSibling;
            e ? d(i).is(e) && t.push(i) : t.push(i), (n = i);
          }
          return d(t);
        },
        parent: function (e) {
          for (var t = [], n = 0; n < this.length; n += 1)
            null !== this[n].parentNode &&
              (e
                ? d(this[n].parentNode).is(e) && t.push(this[n].parentNode)
                : t.push(this[n].parentNode));
          return d(t);
        },
        parents: function (e) {
          for (var t = [], n = 0; n < this.length; n += 1)
            for (var i = this[n].parentNode; i; )
              e ? d(i).is(e) && t.push(i) : t.push(i), (i = i.parentNode);
          return d(t);
        },
        closest: function (e) {
          var t = this;
          return void 0 === e
            ? d([])
            : (t.is(e) || (t = t.parents(e).eq(0)), t);
        },
        find: function (e) {
          for (var t = [], n = 0; n < this.length; n += 1)
            for (
              var i = this[n].querySelectorAll(e), s = 0;
              s < i.length;
              s += 1
            )
              t.push(i[s]);
          return d(t);
        },
        children: function (e) {
          for (var t = [], n = 0; n < this.length; n += 1)
            for (var i = this[n].children, s = 0; s < i.length; s += 1)
              (e && !d(i[s]).is(e)) || t.push(i[s]);
          return d(t);
        },
        filter: function (e) {
          return d(h(this, e));
        },
        remove: function () {
          for (var e = 0; e < this.length; e += 1)
            this[e].parentNode && this[e].parentNode.removeChild(this[e]);
          return this;
        },
      };
      Object.keys(g).forEach(function (e) {
        Object.defineProperty(d.fn, e, { value: g[e], writable: !0 });
      }),
        (t.a = d);
    },
    LBC9: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      var i = (function (e) {
        return (
          (e.Afghanistan = "Afghanistan"),
          (e.Albania = "Albania"),
          (e.Algeria = "Algeria"),
          (e.Andorra = "Andorra"),
          (e.Angola = "Angola"),
          (e.AntiguaAndBarbuda = "Antigua and Barbuda"),
          (e.Argentina = "Argentina"),
          (e.Armenia = "Armenia"),
          (e.Australia = "Australia"),
          (e.Austria = "Austria"),
          (e.Azerbaijan = "Azerbaijan"),
          (e.Bahamas = "Bahamas"),
          (e.Bahrain = "Bahrain"),
          (e.Bangladesh = "Bangladesh"),
          (e.Barbados = "Barbados"),
          (e.Belarus = "Belarus"),
          (e.Belgium = "Belgium"),
          (e.Belize = "Belize"),
          (e.Benin = "Benin"),
          (e.Bhutan = "Bhutan"),
          (e.Bolivia = "Bolivia"),
          (e.BosniaAndHerzegovina = "Bosnia and Herzegovina"),
          (e.Botswana = "Botswana"),
          (e.Brazil = "Brazil"),
          (e.Brunei = "Brunei"),
          (e.Bulgaria = "Bulgaria"),
          (e.BurkinaFaso = "Burkina Faso"),
          (e.Burundi = "Burundi"),
          (e.CaboVerde = "Cabo Verde"),
          (e.Cambodia = "Cambodia"),
          (e.Cameroon = "Cameroon"),
          (e.Canada = "Canada"),
          (e.CentralAfricanRepublic = "Central African Republic (CAR)"),
          (e.Chad = "Chad"),
          (e.Chile = "Chile"),
          (e.China = "China"),
          (e.Colombia = "Colombia"),
          (e.Comoros = "Comoros"),
          (e.Congo = "Congo, Democratic Republic of the Congo"),
          (e.CostaRica = "Republic of the Costa Rica"),
          (e.CoteDIvoire = "Cote d'Ivoire"),
          (e.Croatia = "Croatia"),
          (e.Cuba = "Cuba"),
          (e.Cyprus = "Cyprus"),
          (e.Czechia = "Czechia"),
          (e.Denmark = "Denmark"),
          (e.Djibouti = "Djibouti"),
          (e.Dominica = "Dominica"),
          (e.DominicanRepublic = "Dominican Republic"),
          (e.Ecuador = "Ecuador"),
          (e.Egypt = "Egypt"),
          (e.ElSalvador = "El Salvador"),
          (e.EquatorialGuinea = "Equatorial Guinea"),
          (e.Eritrea = "Eritrea"),
          (e.Estonia = "Estonia"),
          (e.Eswatini = "Eswatini (formerly Swaziland)"),
          (e.Ethiopia = "Ethiopia"),
          (e.Fiji = "Fiji"),
          (e.Finland = "Finland"),
          (e.France = "France"),
          (e.Gabon = "Gabon"),
          (e.Gambia = "Gambia"),
          (e.Georgia = "Georgia"),
          (e.Germany = "Germany"),
          (e.Ghana = "Ghana"),
          (e.Greece = "Greece"),
          (e.Grenada = "Grenada"),
          (e.Guatemala = "Guatemala"),
          (e.Guinea = "Guinea"),
          (e.GuineaBissau = "Guinea-Bissau"),
          (e.Guyana = "Guyana"),
          (e.Haiti = "Haiti"),
          (e.Honduras = "Honduras"),
          (e.Hungary = "Hungary"),
          (e.Iceland = "Iceland"),
          (e.India = "India"),
          (e.Indonesia = "Indonesia"),
          (e.Iran = "Iran"),
          (e.Iraq = "Iraq"),
          (e.Ireland = "Ireland"),
          (e.Israel = "Israel"),
          (e.Italy = "Italy"),
          (e.Jamaica = "Jamaica"),
          (e.Japan = "Japan"),
          (e.Jordan = "Jordan"),
          (e.Kazakhstan = "Kazakhstan"),
          (e.Kenya = "Kenya"),
          (e.Kiribati = "Kiribati"),
          (e.Kosovo = "Kosovo"),
          (e.Kuwait = "Kuwait"),
          (e.Kyrgyzstan = "Kyrgyzstan"),
          (e.Laos = "Laos"),
          (e.Latvia = "Latvia"),
          (e.Lebanon = "Lebanon"),
          (e.Lesotho = "Lesotho"),
          (e.Liberia = "Liberia"),
          (e.Libya = "Libya"),
          (e.Liechtenstein = "Liechtenstein"),
          (e.Lithuania = "Lithuania"),
          (e.Luxembourg = "Luxembourg"),
          (e.Madagascar = "Madagascar"),
          (e.Malawi = "Malawi"),
          (e.Malaysia = "Malaysia"),
          (e.Maldives = "Maldives"),
          (e.Mali = "Mali"),
          (e.Malta = "Malta"),
          (e.MarshallIslands = "Marshall Islands"),
          (e.Mauritania = "Mauritania"),
          (e.Mauritius = "Mauritius"),
          (e.Mexico = "Mexico"),
          (e.Micronesia = "Micronesia"),
          (e.Moldova = "Moldova"),
          (e.Monaco = "Monaco"),
          (e.Mongolia = "Mongolia"),
          (e.Montenegro = "Montenegro"),
          (e.Morocco = "Morocco"),
          (e.Mozambique = "Mozambique"),
          (e.Myanmar = "Myanmar (formerly Burma)"),
          (e.Namibia = "Namibia"),
          (e.Nauru = "Nauru"),
          (e.Nepal = "Nepal"),
          (e.Netherlands = "Netherlands"),
          (e.NewZealand = "New Zealand"),
          (e.Nicaragua = "Nicaragua"),
          (e.Niger = "Niger"),
          (e.Nigeria = "Nigeria"),
          (e.NorthKorea = "North Korea"),
          (e.NorthMacedonia = "North Macedonia (formerly Macedonia)"),
          (e.Norway = "Norway"),
          (e.Oman = "Oman"),
          (e.Pakistan = "Pakistan"),
          (e.Palau = "Palau"),
          (e.Palestine = "Palestine"),
          (e.Panama = "Panama"),
          (e.PapuaNewGuinea = "Papua New Guinea"),
          (e.Paraguay = "Paraguay"),
          (e.Peru = "Peru"),
          (e.Philippines = "Philippines"),
          (e.Poland = "Poland"),
          (e.Portugal = "Portugal"),
          (e.Qatar = "Qatar"),
          (e.Romania = "Romania"),
          (e.Russia = "Russia"),
          (e.Rwanda = "Rwanda"),
          (e.SaintKittsAndNevis = "Saint Kitts and Nevis"),
          (e.SaintLucia = "Saint Lucia"),
          (e.SaintVincentAndTheGrenadines = "Saint Vincent and the Grenadines"),
          (e.Samoa = "Samoa"),
          (e.SanMarino = "San Marino"),
          (e.SaoTomeAndPrincipe = "Sao Tome and Principe"),
          (e.SaudiArabia = "Saudi Arabia"),
          (e.Senegal = "Senegal"),
          (e.Serbia = "Serbia"),
          (e.Seychelles = "Seychelles"),
          (e.SierraLeone = "Sierra Leone"),
          (e.Singapore = "Singapore"),
          (e.Slovakia = "Slovakia"),
          (e.Slovenia = "Slovenia"),
          (e.SolomonIslands = "Solomon Islands"),
          (e.Somalia = "Somalia"),
          (e.SouthAfrica = "South Africa"),
          (e.SouthKorea = "South Korea"),
          (e.SouthSudan = "South Sudan"),
          (e.Spain = "Spain"),
          (e.SriLanka = "Sri Lanka"),
          (e.Sudan = "Sudan"),
          (e.Suriname = "Suriname"),
          (e.Sweden = "Sweden"),
          (e.Switzerland = "Switzerland"),
          (e.Syria = "Syria"),
          (e.Taiwan = "Taiwan"),
          (e.Tajikistan = "Tajikistan"),
          (e.Tanzania = "Tanzania"),
          (e.Thailand = "Thailand"),
          (e.TimorLeste = "Timor-Leste"),
          (e.Togo = "Togo"),
          (e.Tonga = "Tonga"),
          (e.TrinidadAndTobago = "Trinidad and Tobago"),
          (e.Tunisia = "Tunisia"),
          (e.Turkey = "Turkey"),
          (e.Turkmenistan = "Turkmenistan"),
          (e.Tuvalu = "Tuvalu"),
          (e.Uganda = "Uganda"),
          (e.Ukraine = "Ukraine"),
          (e.UnitedArabEmirates = "United Arab Emirates (UAE)"),
          (e.UnitedKingdom = "United Kingdom"),
          (e.UnitedStatesOfAmerica = "United States of America (USA)"),
          (e.Uruguay = "Uruguay"),
          (e.Uzbekistan = "Uzbekistan"),
          (e.Vanuatu = "Vanuatu"),
          (e.VaticanCity = "Vatican City (Holy See)"),
          (e.Venezuela = "Venezuela"),
          (e.Vietnam = "Vietnam"),
          (e.Yemen = "Yemen"),
          (e.Zambia = "Zambia"),
          (e.Zimbabwe = "Zimbabwe"),
          e
        );
      })({});
    },
    LRne: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("z+Ro"),
        s = n("yCtX"),
        r = n("jZKg");
      function o(...e) {
        let t = e[e.length - 1];
        return Object(i.a)(t) ? (e.pop(), Object(r.a)(e, t)) : Object(s.a)(e);
      }
    },
    Lhse: function (e, t, n) {
      "use strict";
      function i() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      }
      n.d(t, "a", function () {
        return s;
      });
      const s = i();
    },
    "M/UB": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return ye;
      }),
        n.d(t, "b", function () {
          return Ce;
        }),
        n.d(t, "c", function () {
          return _e;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("XNiG"),
        o = n("P/hZ"),
        a = n("tQ6G"),
        l = n("RtSl"),
        c = n("Z7TK"),
        u = n("vxfF");
      const h = ["container"],
        d = ["resizeHelper"],
        p = ["reorderIndicatorUp"],
        f = ["reorderIndicatorDown"],
        g = ["table"],
        m = ["scrollableView"],
        b = ["scrollableFrozenView"];
      function v(e, t) {
        1 & e && i.Sb(0, "div", 13);
      }
      function y(e, t) {
        if ((1 & e && (i.Xb(0, "div", 14), i.Sb(1, "i"), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Gb("ui-treetable-loading-icon pi-spin " + e.loadingIcon);
        }
      }
      function w(e, t) {
        1 & e && i.Tb(0);
      }
      function S(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 15), i.Lc(1, w, 1, 0, "ng-container", 16), i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1), i.pc("ngTemplateOutlet", e.captionTemplate);
        }
      }
      function _(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "p-paginator", 17),
            i.fc("onPageChange", function (t) {
              return i.Ec(e), i.hc().onPageChange(t);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.pc("rows", e.rows)("first", e.first)(
            "totalRecords",
            e.totalRecords
          )("pageLinkSize", e.pageLinks)("alwaysShow", e.alwaysShowPaginator)(
            "rowsPerPageOptions",
            e.rowsPerPageOptions
          )("templateLeft", e.paginatorLeftTemplate)(
            "templateRight",
            e.paginatorRightTemplate
          )("dropdownAppendTo", e.paginatorDropdownAppendTo)(
            "currentPageReportTemplate",
            e.currentPageReportTemplate
          )("showFirstLastIcon", e.showFirstLastIcon)(
            "dropdownItemTemplate",
            e.paginatorDropdownItemTemplate
          )("showCurrentPageReport", e.showCurrentPageReport);
        }
      }
      function C(e, t) {
        1 & e && i.Tb(0);
      }
      function E(e, t) {
        1 & e && i.Tb(0);
      }
      function O(e, t) {
        1 & e && i.Tb(0);
      }
      const x = function (e) {
        return { $implicit: e };
      };
      function T(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 18),
            i.Xb(1, "table", 19, 20),
            i.Lc(3, C, 1, 0, "ng-container", 21),
            i.Xb(4, "thead", 22),
            i.Lc(5, E, 1, 0, "ng-container", 21),
            i.Wb(),
            i.Xb(6, "tfoot", 23),
            i.Lc(7, O, 1, 0, "ng-container", 21),
            i.Wb(),
            i.Sb(8, "tbody", 24),
            i.Wb(),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngClass", e.tableStyleClass)("ngStyle", e.tableStyle),
            i.Eb(2),
            i.pc("ngTemplateOutlet", e.colGroupTemplate)(
              "ngTemplateOutletContext",
              i.sc(10, x, e.columns)
            ),
            i.Eb(2),
            i.pc("ngTemplateOutlet", e.headerTemplate)(
              "ngTemplateOutletContext",
              i.sc(12, x, e.columns)
            ),
            i.Eb(2),
            i.pc("ngTemplateOutlet", e.footerTemplate)(
              "ngTemplateOutletContext",
              i.sc(14, x, e.columns)
            ),
            i.Eb(1),
            i.pc("pTreeTableBody", e.columns)(
              "pTreeTableBodyTemplate",
              e.bodyTemplate
            );
        }
      }
      const k = function (e) {
        return { width: e };
      };
      function M(e, t) {
        if ((1 & e && i.Sb(0, "div", 29, 30), 2 & e)) {
          const e = i.hc(2);
          i.pc("ttScrollableView", e.frozenColumns)("frozen", !0)(
            "ngStyle",
            i.sc(4, k, e.frozenWidth)
          )("scrollHeight", e.scrollHeight);
        }
      }
      const I = function (e, t) {
        return { left: e, width: t };
      };
      function P(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 25),
            i.Lc(1, M, 2, 6, "div", 26),
            i.Sb(2, "div", 27, 28),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngIf", e.frozenColumns || e.frozenBodyTemplate),
            i.Eb(1),
            i.pc("ttScrollableView", e.columns)("frozen", !1)(
              "scrollHeight",
              e.scrollHeight
            )(
              "ngStyle",
              i.tc(5, I, e.frozenWidth, "calc(100% - " + e.frozenWidth + ")")
            );
        }
      }
      function R(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "p-paginator", 31),
            i.fc("onPageChange", function (t) {
              return i.Ec(e), i.hc().onPageChange(t);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.pc("rows", e.rows)("first", e.first)(
            "totalRecords",
            e.totalRecords
          )("pageLinkSize", e.pageLinks)("alwaysShow", e.alwaysShowPaginator)(
            "rowsPerPageOptions",
            e.rowsPerPageOptions
          )("templateLeft", e.paginatorLeftTemplate)(
            "templateRight",
            e.paginatorRightTemplate
          )("dropdownAppendTo", e.paginatorDropdownAppendTo)(
            "currentPageReportTemplate",
            e.currentPageReportTemplate
          )("showFirstLastIcon", e.showFirstLastIcon)(
            "dropdownItemTemplate",
            e.paginatorDropdownItemTemplate
          )("showCurrentPageReport", e.showCurrentPageReport);
        }
      }
      function N(e, t) {
        1 & e && i.Tb(0);
      }
      function L(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 32), i.Lc(1, N, 1, 0, "ng-container", 16), i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1), i.pc("ngTemplateOutlet", e.summaryTemplate);
        }
      }
      function A(e, t) {
        1 & e && i.Sb(0, "div", 33, 34);
      }
      function D(e, t) {
        1 & e && i.Sb(0, "span", 35, 36);
      }
      function j(e, t) {
        1 & e && i.Sb(0, "span", 37, 38);
      }
      const F = function (e, t, n, i, s) {
          return {
            "ui-treetable ui-widget": !0,
            "ui-treetable-auto-layout": e,
            "ui-treetable-hoverable-rows": t,
            "ui-treetable-resizable": n,
            "ui-treetable-resizable-fit": i,
            "ui-treetable-flex-scrollable": s,
          };
        },
        V = ["pTreeTableBody", ""];
      function W(e, t) {
        1 & e && i.Tb(0);
      }
      const z = function (e, t, n, i) {
        return { $implicit: e, node: t, rowData: n, columns: i };
      };
      function X(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, W, 1, 0, "ng-container", 2), i.Ub()),
          2 & e)
        ) {
          const e = i.hc().$implicit,
            t = i.hc(2);
          i.Eb(1),
            i.pc("ngTemplateOutlet", t.template)(
              "ngTemplateOutletContext",
              i.vc(2, z, e, e.node, e.node.data, t.columns)
            );
        }
      }
      function B(e, t) {
        1 & e && i.Lc(0, X, 2, 7, "ng-container", 0),
          2 & e && i.pc("ngIf", t.$implicit.visible);
      }
      function H(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, B, 1, 1, "ng-template", 1), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngForOf", e.tt.serializedValue)(
              "ngForTrackBy",
              e.tt.rowTrackBy
            );
        }
      }
      function U(e, t) {
        1 & e && i.Tb(0);
      }
      function G(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, U, 1, 0, "ng-container", 2), i.Ub()),
          2 & e)
        ) {
          const e = i.hc().$implicit,
            t = i.hc(2);
          i.Eb(1),
            i.pc("ngTemplateOutlet", t.template)(
              "ngTemplateOutletContext",
              i.vc(2, z, e, e.node, e.node.data, t.columns)
            );
        }
      }
      function $(e, t) {
        1 & e && i.Lc(0, G, 2, 7, "ng-container", 0),
          2 & e && i.pc("ngIf", t.$implicit.visible);
      }
      function q(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, $, 1, 1, "ng-template", 3), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("cdkVirtualForOf", e.tt.serializedValue)(
              "cdkVirtualForTrackBy",
              e.tt.rowTrackBy
            )("cdkVirtualForTemplateCacheSize", 0);
        }
      }
      function K(e, t) {
        1 & e && i.Tb(0);
      }
      function Y(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, K, 1, 0, "ng-container", 2), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngTemplateOutlet", e.tt.emptyMessageTemplate)(
              "ngTemplateOutletContext",
              i.sc(2, x, e.columns)
            );
        }
      }
      const Z = ["scrollHeader"],
        Q = ["scrollHeaderBox"],
        J = ["scrollBody"],
        ee = ["scrollTable"],
        te = ["loadingTable"],
        ne = ["scrollFooter"],
        ie = ["scrollFooterBox"],
        se = ["scrollableAligner"],
        re = ["ttScrollableView", ""];
      function oe(e, t) {
        1 & e && i.Tb(0);
      }
      function ae(e, t) {
        1 & e && i.Tb(0);
      }
      function le(e, t) {
        1 & e && i.Tb(0);
      }
      function ce(e, t) {
        1 & e && i.Sb(0, "div", 16, 17);
      }
      const ue = function (e) {
        return { "max-height": e };
      };
      function he(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Xb(1, "div", 10, 11),
            i.Xb(3, "table", 12, 13),
            i.Lc(5, le, 1, 0, "ng-container", 5),
            i.Sb(6, "tbody", 14),
            i.Wb(),
            i.Lc(7, ce, 2, 0, "div", 15),
            i.Wb(),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc(
              "ngStyle",
              i.sc(
                10,
                ue,
                "flex" !== e.tt.scrollHeight ? e.scrollHeight : void 0
              )
            ),
            i.Eb(2),
            i.Gb(e.tt.tableStyleClass),
            i.pc("ngStyle", e.tt.tableStyle),
            i.Eb(2),
            i.pc(
              "ngTemplateOutlet",
              (e.frozen && e.tt.frozenColGroupTemplate) || e.tt.colGroupTemplate
            )("ngTemplateOutletContext", i.sc(12, x, e.columns)),
            i.Eb(1),
            i.pc("pTreeTableBody", e.columns)(
              "pTreeTableBodyTemplate",
              (e.frozen && e.tt.frozenBodyTemplate) || e.tt.bodyTemplate
            )("frozen", e.frozen),
            i.Eb(1),
            i.pc("ngIf", e.frozen);
        }
      }
      function de(e, t) {
        1 & e && i.Tb(0);
      }
      function pe(e, t) {
        1 & e && i.Sb(0, "div", 16, 17);
      }
      function fe(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "cdk-virtual-scroll-viewport", 18),
            i.Xb(1, "table", 12, 13),
            i.Lc(3, de, 1, 0, "ng-container", 5),
            i.Sb(4, "tbody", 14),
            i.Wb(),
            i.Lc(5, pe, 2, 0, "div", 15),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Kc(
            "height",
            "flex" !== e.tt.scrollHeight ? e.scrollHeight : void 0
          ),
            i.pc("itemSize", e.tt.virtualRowHeight)(
              "minBufferPx",
              e.tt.minBufferPx
            )("maxBufferPx", e.tt.maxBufferPx),
            i.Eb(1),
            i.Gb(e.tt.tableStyleClass),
            i.pc("ngStyle", e.tt.tableStyle),
            i.Eb(2),
            i.pc(
              "ngTemplateOutlet",
              (e.frozen && e.tt.frozenColGroupTemplate) || e.tt.colGroupTemplate
            )("ngTemplateOutletContext", i.sc(14, x, e.columns)),
            i.Eb(1),
            i.pc("pTreeTableBody", e.columns)(
              "pTreeTableBodyTemplate",
              (e.frozen && e.tt.frozenBodyTemplate) || e.tt.bodyTemplate
            )("frozen", e.frozen),
            i.Eb(1),
            i.pc("ngIf", e.frozen);
        }
      }
      function ge(e, t) {
        1 & e && i.Tb(0);
      }
      function me(e, t) {
        1 & e && i.Tb(0);
      }
      function be(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 19, 20),
            i.Xb(2, "div", 21, 22),
            i.Xb(4, "table", 23),
            i.Lc(5, ge, 1, 0, "ng-container", 5),
            i.Xb(6, "tfoot", 24),
            i.Lc(7, me, 1, 0, "ng-container", 5),
            i.Wb(),
            i.Wb(),
            i.Wb(),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(4),
            i.pc("ngClass", e.tt.tableStyleClass)("ngStyle", e.tt.tableStyle),
            i.Eb(1),
            i.pc(
              "ngTemplateOutlet",
              (e.frozen && e.tt.frozenColGroupTemplate) || e.tt.colGroupTemplate
            )("ngTemplateOutletContext", i.sc(6, x, e.columns)),
            i.Eb(2),
            i.pc(
              "ngTemplateOutlet",
              (e.frozen && e.tt.frozenFooterTemplate) || e.tt.footerTemplate
            )("ngTemplateOutletContext", i.sc(8, x, e.columns));
        }
      }
      let ve = (() => {
          let e = class {
            constructor() {
              (this.sortSource = new r.b()),
                (this.selectionSource = new r.b()),
                (this.contextMenuSource = new r.b()),
                (this.uiUpdateSource = new r.b()),
                (this.totalRecordsSource = new r.b()),
                (this.sortSource$ = this.sortSource.asObservable()),
                (this.selectionSource$ = this.selectionSource.asObservable()),
                (this.contextMenuSource$ =
                  this.contextMenuSource.asObservable()),
                (this.uiUpdateSource$ = this.uiUpdateSource.asObservable()),
                (this.totalRecordsSource$ =
                  this.totalRecordsSource.asObservable());
            }
            onSort(e) {
              this.sortSource.next(e);
            }
            onSelectionChange() {
              this.selectionSource.next();
            }
            onContextMenu(e) {
              this.contextMenuSource.next(e);
            }
            onUIUpdate(e) {
              this.uiUpdateSource.next(e);
            }
            onTotalRecordsChange(e) {
              this.totalRecordsSource.next(e);
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        ye = (() => {
          let e = class {
            constructor(e, t, n) {
              (this.el = e),
                (this.zone = t),
                (this.tableService = n),
                (this.lazy = !1),
                (this.lazyLoadOnInit = !0),
                (this.first = 0),
                (this.pageLinks = 5),
                (this.alwaysShowPaginator = !0),
                (this.paginatorPosition = "bottom"),
                (this.currentPageReportTemplate =
                  "{currentPage} of {totalPages}"),
                (this.showFirstLastIcon = !0),
                (this.defaultSortOrder = 1),
                (this.sortMode = "single"),
                (this.resetPageOnSort = !0),
                (this.selectionChange = new i.o()),
                (this.contextMenuSelectionChange = new i.o()),
                (this.contextMenuSelectionMode = "separate"),
                (this.compareSelectionBy = "deepEquals"),
                (this.loadingIcon = "pi pi-spinner"),
                (this.showLoader = !0),
                (this.virtualScrollDelay = 150),
                (this.virtualRowHeight = 28),
                (this.columnResizeMode = "fit"),
                (this.rowTrackBy = (e, t) => t),
                (this.filters = {}),
                (this.filterDelay = 300),
                (this.filterMode = "lenient"),
                (this.onFilter = new i.o()),
                (this.onNodeExpand = new i.o()),
                (this.onNodeCollapse = new i.o()),
                (this.onPage = new i.o()),
                (this.onSort = new i.o()),
                (this.onLazyLoad = new i.o()),
                (this.sortFunction = new i.o()),
                (this.onColResize = new i.o()),
                (this.onColReorder = new i.o()),
                (this.onNodeSelect = new i.o()),
                (this.onNodeUnselect = new i.o()),
                (this.onContextMenuSelect = new i.o()),
                (this.onHeaderCheckboxToggle = new i.o()),
                (this.onEditInit = new i.o()),
                (this.onEditComplete = new i.o()),
                (this.onEditCancel = new i.o()),
                (this._value = []),
                (this._totalRecords = 0),
                (this._sortOrder = 1),
                (this.selectionKeys = {});
            }
            ngOnInit() {
              this.lazy &&
                this.lazyLoadOnInit &&
                this.onLazyLoad.emit(this.createLazyLoadMetadata()),
                (this.initialized = !0);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "caption":
                    this.captionTemplate = e.template;
                    break;
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "body":
                    this.bodyTemplate = e.template;
                    break;
                  case "loadingbody":
                    this.loadingBodyTemplate = e.template;
                    break;
                  case "footer":
                    this.footerTemplate = e.template;
                    break;
                  case "summary":
                    this.summaryTemplate = e.template;
                    break;
                  case "colgroup":
                    this.colGroupTemplate = e.template;
                    break;
                  case "emptymessage":
                    this.emptyMessageTemplate = e.template;
                    break;
                  case "paginatorleft":
                    this.paginatorLeftTemplate = e.template;
                    break;
                  case "paginatorright":
                    this.paginatorRightTemplate = e.template;
                    break;
                  case "frozenheader":
                    this.frozenHeaderTemplate = e.template;
                    break;
                  case "frozenbody":
                    this.frozenBodyTemplate = e.template;
                    break;
                  case "frozenfooter":
                    this.frozenFooterTemplate = e.template;
                    break;
                  case "frozencolgroup":
                    this.frozenColGroupTemplate = e.template;
                    break;
                  case "paginatordropdownitem":
                    this.paginatorDropdownItemTemplate = e.template;
                }
              });
            }
            ngOnChanges(e) {
              e.value &&
                ((this._value = e.value.currentValue),
                this.lazy ||
                  ((this.totalRecords = this._value ? this._value.length : 0),
                  "single" == this.sortMode && this.sortField
                    ? this.sortSingle()
                    : "multiple" == this.sortMode && this.multiSortMeta
                    ? this.sortMultiple()
                    : this.hasFilter() && this._filter()),
                this.updateSerializedValue(),
                this.tableService.onUIUpdate(this.value)),
                e.sortField &&
                  ((this._sortField = e.sortField.currentValue),
                  (this.lazy && !this.initialized) ||
                    ("single" === this.sortMode && this.sortSingle())),
                e.sortOrder &&
                  ((this._sortOrder = e.sortOrder.currentValue),
                  (this.lazy && !this.initialized) ||
                    ("single" === this.sortMode && this.sortSingle())),
                e.multiSortMeta &&
                  ((this._multiSortMeta = e.multiSortMeta.currentValue),
                  "multiple" === this.sortMode && this.sortMultiple()),
                e.selection &&
                  ((this._selection = e.selection.currentValue),
                  this.preventSelectionSetterPropagation ||
                    (this.updateSelectionKeys(),
                    this.tableService.onSelectionChange()),
                  (this.preventSelectionSetterPropagation = !1));
            }
            get value() {
              return this._value;
            }
            set value(e) {
              this._value = e;
            }
            updateSerializedValue() {
              (this.serializedValue = []),
                this.paginator
                  ? this.serializePageNodes()
                  : this.serializeNodes(
                      null,
                      this.filteredNodes || this.value,
                      0,
                      !0
                    );
            }
            serializeNodes(e, t, n, i) {
              if (t && t.length)
                for (let s of t) {
                  s.parent = e;
                  const t = {
                    node: s,
                    parent: e,
                    level: n,
                    visible: i && (!e || e.expanded),
                  };
                  this.serializedValue.push(t),
                    t.visible &&
                      s.expanded &&
                      this.serializeNodes(s, s.children, n + 1, t.visible);
                }
            }
            serializePageNodes() {
              let e = this.filteredNodes || this.value;
              if (((this.serializedValue = []), e && e.length)) {
                const t = this.lazy ? 0 : this.first;
                for (let n = t; n < t + this.rows; n++) {
                  let t = e[n];
                  t &&
                    (this.serializedValue.push({
                      node: t,
                      parent: null,
                      level: 0,
                      visible: !0,
                    }),
                    this.serializeNodes(t, t.children, 1, !0));
                }
              }
            }
            get totalRecords() {
              return this._totalRecords;
            }
            set totalRecords(e) {
              (this._totalRecords = e),
                this.tableService.onTotalRecordsChange(this._totalRecords);
            }
            get sortField() {
              return this._sortField;
            }
            set sortField(e) {
              this._sortField = e;
            }
            get sortOrder() {
              return this._sortOrder;
            }
            set sortOrder(e) {
              this._sortOrder = e;
            }
            get multiSortMeta() {
              return this._multiSortMeta;
            }
            set multiSortMeta(e) {
              this._multiSortMeta = e;
            }
            get selection() {
              return this._selection;
            }
            set selection(e) {
              this._selection = e;
            }
            updateSelectionKeys() {
              if (this.dataKey && this._selection)
                if (((this.selectionKeys = {}), Array.isArray(this._selection)))
                  for (let e of this._selection)
                    this.selectionKeys[
                      String(c.b.resolveFieldData(e.data, this.dataKey))
                    ] = 1;
                else
                  this.selectionKeys[
                    String(
                      c.b.resolveFieldData(this._selection.data, this.dataKey)
                    )
                  ] = 1;
            }
            onPageChange(e) {
              (this.first = e.first),
                (this.rows = e.rows),
                this.lazy
                  ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                  : this.serializePageNodes(),
                this.onPage.emit({ first: this.first, rows: this.rows }),
                this.tableService.onUIUpdate(this.value),
                this.scrollable && this.resetScrollTop();
            }
            sort(e) {
              let t = e.originalEvent;
              if (
                ("single" === this.sortMode &&
                  ((this._sortOrder =
                    this.sortField === e.field
                      ? -1 * this.sortOrder
                      : this.defaultSortOrder),
                  (this._sortField = e.field),
                  this.sortSingle(),
                  this.resetPageOnSort &&
                    this.scrollable &&
                    this.resetScrollTop()),
                "multiple" === this.sortMode)
              ) {
                let n = t.metaKey || t.ctrlKey,
                  i = this.getSortMeta(e.field);
                i
                  ? n
                    ? (i.order = -1 * i.order)
                    : ((this._multiSortMeta = [
                        { field: e.field, order: -1 * i.order },
                      ]),
                      this.resetPageOnSort &&
                        this.scrollable &&
                        this.resetScrollTop())
                  : ((n && this.multiSortMeta) ||
                      ((this._multiSortMeta = []),
                      this.resetPageOnSort &&
                        this.scrollable &&
                        this.resetScrollTop()),
                    this.multiSortMeta.push({
                      field: e.field,
                      order: this.defaultSortOrder,
                    })),
                  this.sortMultiple();
              }
            }
            sortSingle() {
              if (this.sortField && this.sortOrder) {
                this.lazy
                  ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                  : this.value &&
                    (this.sortNodes(this.value),
                    this.hasFilter() && this._filter());
                let e = { field: this.sortField, order: this.sortOrder };
                this.onSort.emit(e),
                  this.tableService.onSort(e),
                  this.updateSerializedValue();
              }
            }
            sortNodes(e) {
              if (e && 0 !== e.length) {
                this.customSort
                  ? this.sortFunction.emit({
                      data: e,
                      mode: this.sortMode,
                      field: this.sortField,
                      order: this.sortOrder,
                    })
                  : e.sort((e, t) => {
                      let n = c.b.resolveFieldData(e.data, this.sortField),
                        i = c.b.resolveFieldData(t.data, this.sortField),
                        s = null;
                      return (
                        (s =
                          null == n && null != i
                            ? -1
                            : null != n && null == i
                            ? 1
                            : null == n && null == i
                            ? 0
                            : "string" == typeof n && "string" == typeof i
                            ? n.localeCompare(i, void 0, { numeric: !0 })
                            : n < i
                            ? -1
                            : n > i
                            ? 1
                            : 0),
                        this.sortOrder * s
                      );
                    });
                for (let t of e) this.sortNodes(t.children);
              }
            }
            sortMultiple() {
              this.multiSortMeta &&
                (this.lazy
                  ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                  : this.value &&
                    (this.sortMultipleNodes(this.value),
                    this.hasFilter() && this._filter()),
                this.onSort.emit({ multisortmeta: this.multiSortMeta }),
                this.tableService.onSort(this.multiSortMeta),
                this.updateSerializedValue());
            }
            sortMultipleNodes(e) {
              if (e && 0 !== e.length) {
                this.customSort
                  ? this.sortFunction.emit({
                      data: this.value,
                      mode: this.sortMode,
                      multiSortMeta: this.multiSortMeta,
                    })
                  : e.sort((e, t) =>
                      this.multisortField(e, t, this.multiSortMeta, 0)
                    );
                for (let t of e) this.sortMultipleNodes(t.children);
              }
            }
            multisortField(e, t, n, i) {
              let s = c.b.resolveFieldData(e.data, n[i].field),
                r = c.b.resolveFieldData(t.data, n[i].field),
                o = null;
              if (
                (null == s && null != r
                  ? (o = -1)
                  : null != s && null == r
                  ? (o = 1)
                  : null == s && null == r && (o = 0),
                "string" == typeof s || s instanceof String)
              ) {
                if (s.localeCompare && s != r)
                  return (
                    n[i].order * s.localeCompare(r, void 0, { numeric: !0 })
                  );
              } else o = s < r ? -1 : 1;
              return s == r
                ? n.length - 1 > i
                  ? this.multisortField(e, t, n, i + 1)
                  : 0
                : n[i].order * o;
            }
            getSortMeta(e) {
              if (this.multiSortMeta && this.multiSortMeta.length)
                for (let t = 0; t < this.multiSortMeta.length; t++)
                  if (this.multiSortMeta[t].field === e)
                    return this.multiSortMeta[t];
              return null;
            }
            isSorted(e) {
              if ("single" === this.sortMode)
                return this.sortField && this.sortField === e;
              if ("multiple" === this.sortMode) {
                let t = !1;
                if (this.multiSortMeta)
                  for (let n = 0; n < this.multiSortMeta.length; n++)
                    if (this.multiSortMeta[n].field == e) {
                      t = !0;
                      break;
                    }
                return t;
              }
            }
            createLazyLoadMetadata() {
              return {
                first: this.first,
                rows: this.rows,
                sortField: this.sortField,
                sortOrder: this.sortOrder,
                filters: this.filters,
                globalFilter:
                  this.filters && this.filters.global
                    ? this.filters.global.value
                    : null,
                multiSortMeta: this.multiSortMeta,
              };
            }
            resetScrollTop() {
              this.virtualScroll
                ? this.scrollToVirtualIndex(0)
                : this.scrollTo({ top: 0 });
            }
            scrollToVirtualIndex(e) {
              this.scrollableViewChild &&
                this.scrollableViewChild.scrollToVirtualIndex(e),
                this.scrollableFrozenViewChild &&
                  this.scrollableFrozenViewChild.scrollToVirtualIndex(e);
            }
            scrollTo(e) {
              this.scrollableViewChild && this.scrollableViewChild.scrollTo(e),
                this.scrollableFrozenViewChild &&
                  this.scrollableFrozenViewChild.scrollTo(e);
            }
            isEmpty() {
              let e = this.filteredNodes || this.value;
              return null == e || 0 == e.length;
            }
            getBlockableElement() {
              return this.el.nativeElement.children[0];
            }
            onColumnResizeBegin(e) {
              let t = o.a.getOffset(this.containerViewChild.nativeElement).left;
              (this.lastResizerHelperX =
                e.pageX - t + this.containerViewChild.nativeElement.scrollLeft),
                e.preventDefault();
            }
            onColumnResize(e) {
              let t = o.a.getOffset(this.containerViewChild.nativeElement).left;
              o.a.addClass(
                this.containerViewChild.nativeElement,
                "ui-unselectable-text"
              ),
                (this.resizeHelperViewChild.nativeElement.style.height =
                  this.containerViewChild.nativeElement.offsetHeight + "px"),
                (this.resizeHelperViewChild.nativeElement.style.top = "0px"),
                (this.resizeHelperViewChild.nativeElement.style.left =
                  e.pageX -
                  t +
                  this.containerViewChild.nativeElement.scrollLeft +
                  "px"),
                (this.resizeHelperViewChild.nativeElement.style.display =
                  "block");
            }
            onColumnResizeEnd(e, t) {
              let n =
                  this.resizeHelperViewChild.nativeElement.offsetLeft -
                  this.lastResizerHelperX,
                i = t.offsetWidth,
                s = i + n;
              if (i + n > parseInt(t.style.minWidth || 15)) {
                if ("fit" === this.columnResizeMode) {
                  let e = t.nextElementSibling;
                  for (; !e.offsetParent; ) e = e.nextElementSibling;
                  if (e) {
                    let i = e.offsetWidth - n,
                      r = e.style.minWidth || 15;
                    if (s > 15 && i > parseInt(r))
                      if (this.scrollable) {
                        let e = this.findParentScrollableView(t),
                          n =
                            o.a.findSingle(
                              e,
                              ".ui-treetable-scrollable-body table"
                            ) ||
                            o.a.findSingle(
                              e,
                              ".ui-treetable-virtual-scrollable-body table"
                            ),
                          r = o.a.findSingle(
                            e,
                            "table.ui-treetable-scrollable-header-table"
                          ),
                          a = o.a.findSingle(
                            e,
                            "table.ui-treetable-scrollable-footer-table"
                          ),
                          l = o.a.index(t);
                        this.resizeColGroup(r, l, s, i),
                          this.resizeColGroup(n, l, s, i),
                          this.resizeColGroup(a, l, s, i);
                      } else
                        (t.style.width = s + "px"),
                          e && (e.style.width = i + "px");
                  }
                } else if ("expand" === this.columnResizeMode)
                  if (this.scrollable) {
                    let e = this.findParentScrollableView(t),
                      i =
                        o.a.findSingle(e, ".ui-treetable-scrollable-body") ||
                        o.a.findSingle(e, "cdk-virtual-scroll-viewport"),
                      r =
                        o.a.findSingle(
                          e,
                          ".ui-treetable-scrollable-body table"
                        ) ||
                        o.a.findSingle(e, "cdk-virtual-scroll-viewport table"),
                      a = o.a.findSingle(e, ".ui-treetable-scrollable-header"),
                      l = o.a.findSingle(e, ".ui-treetable-scrollable-footer"),
                      c = o.a.findSingle(
                        e,
                        "table.ui-treetable-scrollable-header-table"
                      ),
                      u = o.a.findSingle(
                        e,
                        "table.ui-treetable-scrollable-footer-table"
                      );
                    (r.style.width = r.offsetWidth + n + "px"),
                      (c.style.width = c.offsetWidth + n + "px"),
                      u && (u.style.width = u.offsetWidth + n + "px");
                    let h = o.a.index(t);
                    const d = t ? r.offsetWidth + n : s,
                      p = t ? c.offsetWidth + n : s,
                      f =
                        this.containerViewChild.nativeElement.offsetWidth >= d;
                    let g = (e, t, n, s) => {
                      e &&
                        t &&
                        ((e.style.width = s
                          ? n + o.a.calculateScrollbarWidth(i) + "px"
                          : "auto"),
                        (t.style.width = n + "px"));
                    };
                    g(i, r, d, f),
                      g(a, c, p, f),
                      g(l, u, p, f),
                      this.resizeColGroup(c, h, s, null),
                      this.resizeColGroup(r, h, s, null),
                      this.resizeColGroup(u, h, s, null);
                  } else
                    (this.tableViewChild.nativeElement.style.width =
                      this.tableViewChild.nativeElement.offsetWidth + n + "px"),
                      (t.style.width = s + "px"),
                      (this.containerViewChild.nativeElement.style.width =
                        this.tableViewChild.nativeElement.style.width + "px");
                this.onColResize.emit({ element: t, delta: n });
              }
              (this.resizeHelperViewChild.nativeElement.style.display = "none"),
                o.a.removeClass(
                  this.containerViewChild.nativeElement,
                  "ui-unselectable-text"
                );
            }
            findParentScrollableView(e) {
              if (e) {
                let t = e.parentElement;
                for (; t && !o.a.hasClass(t, "ui-treetable-scrollable-view"); )
                  t = t.parentElement;
                return t;
              }
              return null;
            }
            resizeColGroup(e, t, n, i) {
              if (e) {
                let s =
                  "COLGROUP" === e.children[0].nodeName ? e.children[0] : null;
                if (!s)
                  throw "Scrollable tables require a colgroup to support resizable columns";
                {
                  let e = s.children[t],
                    r = e.nextElementSibling;
                  (e.style.width = n + "px"),
                    r && i && (r.style.width = i + "px");
                }
              }
            }
            onColumnDragStart(e, t) {
              (this.reorderIconWidth = o.a.getHiddenElementOuterWidth(
                this.reorderIndicatorUpViewChild.nativeElement
              )),
                (this.reorderIconHeight = o.a.getHiddenElementOuterHeight(
                  this.reorderIndicatorDownViewChild.nativeElement
                )),
                (this.draggedColumn = t),
                e.dataTransfer.setData("text", "b");
            }
            onColumnDragEnter(e, t) {
              if (this.reorderableColumns && this.draggedColumn && t) {
                e.preventDefault();
                let n = o.a.getOffset(this.containerViewChild.nativeElement),
                  i = o.a.getOffset(t);
                if (this.draggedColumn != t) {
                  let s = i.left - n.left,
                    r = i.left + t.offsetWidth / 2;
                  (this.reorderIndicatorUpViewChild.nativeElement.style.top =
                    i.top - n.top - (this.reorderIconHeight - 1) + "px"),
                    (this.reorderIndicatorDownViewChild.nativeElement.style.top =
                      i.top - n.top + t.offsetHeight + "px"),
                    e.pageX > r
                      ? ((this.reorderIndicatorUpViewChild.nativeElement.style.left =
                          s +
                          t.offsetWidth -
                          Math.ceil(this.reorderIconWidth / 2) +
                          "px"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.left =
                          s +
                          t.offsetWidth -
                          Math.ceil(this.reorderIconWidth / 2) +
                          "px"),
                        (this.dropPosition = 1))
                      : ((this.reorderIndicatorUpViewChild.nativeElement.style.left =
                          s - Math.ceil(this.reorderIconWidth / 2) + "px"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.left =
                          s - Math.ceil(this.reorderIconWidth / 2) + "px"),
                        (this.dropPosition = -1)),
                    (this.reorderIndicatorUpViewChild.nativeElement.style.display =
                      "block"),
                    (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                      "block");
                } else e.dataTransfer.dropEffect = "none";
              }
            }
            onColumnDragLeave(e) {
              this.reorderableColumns &&
                this.draggedColumn &&
                (e.preventDefault(),
                (this.reorderIndicatorUpViewChild.nativeElement.style.display =
                  "none"),
                (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                  "none"));
            }
            onColumnDrop(e, t) {
              if ((e.preventDefault(), this.draggedColumn)) {
                let e = o.a.indexWithinGroup(
                    this.draggedColumn,
                    "ttreorderablecolumn"
                  ),
                  n = o.a.indexWithinGroup(t, "ttreorderablecolumn"),
                  i = e != n;
                i &&
                  ((n - e == 1 && -1 === this.dropPosition) ||
                    (e - n == 1 && 1 === this.dropPosition)) &&
                  (i = !1),
                  i && n < e && 1 === this.dropPosition && (n += 1),
                  i && n > e && -1 === this.dropPosition && (n -= 1),
                  i &&
                    (c.b.reorderArray(this.columns, e, n),
                    this.onColReorder.emit({
                      dragIndex: e,
                      dropIndex: n,
                      columns: this.columns,
                    })),
                  (this.reorderIndicatorUpViewChild.nativeElement.style.display =
                    "none"),
                  (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                    "none"),
                  (this.draggedColumn.draggable = !1),
                  (this.draggedColumn = null),
                  (this.dropPosition = null);
              }
            }
            handleRowClick(e) {
              let t = e.originalEvent.target.nodeName;
              if (
                "INPUT" != t &&
                "BUTTON" != t &&
                "A" != t &&
                !o.a.hasClass(e.originalEvent.target, "ui-clickable")
              ) {
                if (this.selectionMode) {
                  this.preventSelectionSetterPropagation = !0;
                  let t = e.rowNode,
                    n = this.isSelected(t.node),
                    i = !this.rowTouched && this.metaKeySelection,
                    s = this.dataKey
                      ? String(c.b.resolveFieldData(t.node.data, this.dataKey))
                      : null;
                  if (i) {
                    let i = e.originalEvent.metaKey || e.originalEvent.ctrlKey;
                    if (n && i) {
                      if (this.isSingleSelectionMode())
                        (this._selection = null),
                          (this.selectionKeys = {}),
                          this.selectionChange.emit(null);
                      else {
                        let e = this.findIndexInSelection(t.node);
                        (this._selection = this.selection.filter(
                          (t, n) => n != e
                        )),
                          this.selectionChange.emit(this.selection),
                          s && delete this.selectionKeys[s];
                      }
                      this.onNodeUnselect.emit({
                        originalEvent: e.originalEvent,
                        node: t.node,
                        type: "row",
                      });
                    } else
                      this.isSingleSelectionMode()
                        ? ((this._selection = t.node),
                          this.selectionChange.emit(t.node),
                          s &&
                            ((this.selectionKeys = {}),
                            (this.selectionKeys[s] = 1)))
                        : this.isMultipleSelectionMode() &&
                          (i
                            ? (this._selection = this.selection || [])
                            : ((this._selection = []),
                              (this.selectionKeys = {})),
                          (this._selection = [...this.selection, t.node]),
                          this.selectionChange.emit(this.selection),
                          s && (this.selectionKeys[s] = 1)),
                        this.onNodeSelect.emit({
                          originalEvent: e.originalEvent,
                          node: t.node,
                          type: "row",
                          index: e.rowIndex,
                        });
                  } else if ("single" === this.selectionMode)
                    n
                      ? ((this._selection = null),
                        (this.selectionKeys = {}),
                        this.selectionChange.emit(this.selection),
                        this.onNodeUnselect.emit({
                          originalEvent: e.originalEvent,
                          node: t.node,
                          type: "row",
                        }))
                      : ((this._selection = t.node),
                        this.selectionChange.emit(this.selection),
                        this.onNodeSelect.emit({
                          originalEvent: e.originalEvent,
                          node: t.node,
                          type: "row",
                          index: e.rowIndex,
                        }),
                        s &&
                          ((this.selectionKeys = {}),
                          (this.selectionKeys[s] = 1)));
                  else if ("multiple" === this.selectionMode)
                    if (n) {
                      let n = this.findIndexInSelection(t.node);
                      (this._selection = this.selection.filter(
                        (e, t) => t != n
                      )),
                        this.selectionChange.emit(this.selection),
                        this.onNodeUnselect.emit({
                          originalEvent: e.originalEvent,
                          node: t.node,
                          type: "row",
                        }),
                        s && delete this.selectionKeys[s];
                    } else
                      (this._selection = this.selection
                        ? [...this.selection, t.node]
                        : [t.node]),
                        this.selectionChange.emit(this.selection),
                        this.onNodeSelect.emit({
                          originalEvent: e.originalEvent,
                          node: t.node,
                          type: "row",
                          index: e.rowIndex,
                        }),
                        s && (this.selectionKeys[s] = 1);
                  this.tableService.onSelectionChange();
                }
                this.rowTouched = !1;
              }
            }
            handleRowTouchEnd(e) {
              this.rowTouched = !0;
            }
            handleRowRightClick(e) {
              if (this.contextMenu) {
                const t = e.rowNode.node;
                if ("separate" === this.contextMenuSelectionMode)
                  (this.contextMenuSelection = t),
                    this.contextMenuSelectionChange.emit(t),
                    this.onContextMenuSelect.emit({
                      originalEvent: e.originalEvent,
                      node: t,
                    }),
                    this.contextMenu.show(e.originalEvent),
                    this.tableService.onContextMenu(t);
                else if ("joint" === this.contextMenuSelectionMode) {
                  this.preventSelectionSetterPropagation = !0;
                  let n = this.isSelected(t),
                    i = this.dataKey
                      ? String(c.b.resolveFieldData(t.data, this.dataKey))
                      : null;
                  n ||
                    (this.isSingleSelectionMode()
                      ? ((this.selection = t), this.selectionChange.emit(t))
                      : this.isMultipleSelectionMode() &&
                        ((this.selection = [t]),
                        this.selectionChange.emit(this.selection)),
                    i && (this.selectionKeys[i] = 1)),
                    this.contextMenu.show(e.originalEvent),
                    this.onContextMenuSelect.emit({
                      originalEvent: e.originalEvent,
                      node: t,
                    });
                }
              }
            }
            toggleNodeWithCheckbox(e) {
              (this.selection = this.selection || []),
                (this.preventSelectionSetterPropagation = !0);
              let t = e.rowNode.node;
              this.isSelected(t)
                ? (this.propagateSelectionDown(t, !1),
                  e.rowNode.parent && this.propagateSelectionUp(t.parent, !1),
                  this.selectionChange.emit(this.selection),
                  this.onNodeUnselect.emit({ originalEvent: e, node: t }))
                : (this.propagateSelectionDown(t, !0),
                  e.rowNode.parent && this.propagateSelectionUp(t.parent, !0),
                  this.selectionChange.emit(this.selection),
                  this.onNodeSelect.emit({ originalEvent: e, node: t })),
                this.tableService.onSelectionChange();
            }
            toggleNodesWithCheckbox(e, t) {
              let n = this.filteredNodes || this.value;
              if (((this._selection = t && n ? n.slice() : []), t)) {
                if (n && n.length)
                  for (let e of n) this.propagateSelectionDown(e, !0);
              } else (this._selection = []), (this.selectionKeys = {});
              (this.preventSelectionSetterPropagation = !0),
                this.selectionChange.emit(this._selection),
                this.tableService.onSelectionChange(),
                this.onHeaderCheckboxToggle.emit({
                  originalEvent: e,
                  checked: t,
                });
            }
            propagateSelectionUp(e, t) {
              if (e.children && e.children.length) {
                let n = 0,
                  i = !1,
                  s = this.dataKey
                    ? String(c.b.resolveFieldData(e.data, this.dataKey))
                    : null;
                for (let t of e.children)
                  this.isSelected(t) ? n++ : t.partialSelected && (i = !0);
                if (t && n == e.children.length)
                  (this._selection = [...(this.selection || []), e]),
                    (e.partialSelected = !1),
                    s && (this.selectionKeys[s] = 1);
                else {
                  if (!t) {
                    let t = this.findIndexInSelection(e);
                    t >= 0 &&
                      ((this._selection = this.selection.filter(
                        (e, n) => n != t
                      )),
                      s && delete this.selectionKeys[s]);
                  }
                  e.partialSelected = !!(
                    i ||
                    (n > 0 && n != e.children.length)
                  );
                }
              }
              let n = e.parent;
              n && this.propagateSelectionUp(n, t);
            }
            propagateSelectionDown(e, t) {
              let n = this.findIndexInSelection(e),
                i = this.dataKey
                  ? String(c.b.resolveFieldData(e.data, this.dataKey))
                  : null;
              if (
                (t && -1 == n
                  ? ((this._selection = [...(this.selection || []), e]),
                    i && (this.selectionKeys[i] = 1))
                  : !t &&
                    n > -1 &&
                    ((this._selection = this.selection.filter(
                      (e, t) => t != n
                    )),
                    i && delete this.selectionKeys[i]),
                (e.partialSelected = !1),
                e.children && e.children.length)
              )
                for (let s of e.children) this.propagateSelectionDown(s, t);
            }
            isSelected(e) {
              return (
                !(!e || !this.selection) &&
                (this.dataKey
                  ? void 0 !==
                    this.selectionKeys[
                      c.b.resolveFieldData(e.data, this.dataKey)
                    ]
                  : this.selection instanceof Array
                  ? this.findIndexInSelection(e) > -1
                  : this.equals(e, this.selection))
              );
            }
            findIndexInSelection(e) {
              let t = -1;
              if (this.selection && this.selection.length)
                for (let n = 0; n < this.selection.length; n++)
                  if (this.equals(e, this.selection[n])) {
                    t = n;
                    break;
                  }
              return t;
            }
            isSingleSelectionMode() {
              return "single" === this.selectionMode;
            }
            isMultipleSelectionMode() {
              return "multiple" === this.selectionMode;
            }
            equals(e, t) {
              return "equals" === this.compareSelectionBy
                ? e === t
                : c.b.equals(e.data, t.data, this.dataKey);
            }
            filter(e, t, n) {
              this.filterTimeout && clearTimeout(this.filterTimeout),
                this.isFilterBlank(e)
                  ? this.filters[t] && delete this.filters[t]
                  : (this.filters[t] = { value: e, matchMode: n }),
                (this.filterTimeout = setTimeout(() => {
                  this._filter(), (this.filterTimeout = null);
                }, this.filterDelay));
            }
            filterGlobal(e, t) {
              this.filter(e, "global", t);
            }
            isFilterBlank(e) {
              return (
                null == e ||
                ("string" == typeof e && 0 == e.trim().length) ||
                (e instanceof Array && 0 == e.length)
              );
            }
            _filter() {
              if (this.lazy)
                this.onLazyLoad.emit(this.createLazyLoadMetadata());
              else {
                if (!this.value) return;
                if (this.hasFilter()) {
                  let e;
                  if (this.filters.global) {
                    if (!this.columns && !this.globalFilterFields)
                      throw new Error(
                        "Global filtering requires dynamic columns or globalFilterFields to be defined."
                      );
                    e = this.globalFilterFields || this.columns;
                  }
                  this.filteredNodes = [];
                  const t = "strict" === this.filterMode;
                  let n = !1;
                  for (let i of this.value) {
                    let s,
                      r = Object.assign({}, i),
                      o = !0,
                      a = !1;
                    for (let e in this.filters)
                      if (this.filters.hasOwnProperty(e) && "global" !== e) {
                        let n = this.filters[e];
                        if (
                          ((s = {
                            filterField: e,
                            filterValue: n.value,
                            filterConstraint: c.a[n.matchMode || "startsWith"],
                            isStrictMode: t,
                          }),
                          ((!t ||
                            this.findFilteredNodes(r, s) ||
                            this.isFilterMatched(r, s)) &&
                            (t ||
                              this.isFilterMatched(r, s) ||
                              this.findFilteredNodes(r, s))) ||
                            (o = !1),
                          !o)
                        )
                          break;
                      }
                    if (this.filters.global && !a && e)
                      for (let n = 0; n < e.length; n++) {
                        let i = Object.assign({}, r);
                        (s = {
                          filterField: e[n].field || e[n],
                          filterValue: this.filters.global.value,
                          filterConstraint: c.a[this.filters.global.matchMode],
                          isStrictMode: t,
                        }),
                          ((t &&
                            (this.findFilteredNodes(i, s) ||
                              this.isFilterMatched(i, s))) ||
                            (!t &&
                              (this.isFilterMatched(i, s) ||
                                this.findFilteredNodes(i, s)))) &&
                            ((a = !0), (r = i));
                      }
                    let l = o;
                    this.filters.global && (l = o && a),
                      l && this.filteredNodes.push(r),
                      (n =
                        n ||
                        !o ||
                        a ||
                        (o && this.filteredNodes.length > 0) ||
                        (!a && 0 === this.filteredNodes.length));
                  }
                  n || (this.filteredNodes = null),
                    this.paginator &&
                      (this.totalRecords = this.filteredNodes
                        ? this.filteredNodes.length
                        : this.value
                        ? this.value.length
                        : 0);
                } else
                  (this.filteredNodes = null),
                    this.paginator &&
                      (this.totalRecords = this.value ? this.value.length : 0);
              }
              this.first = 0;
              const e = this.filteredNodes || this.value;
              this.onFilter.emit({ filters: this.filters, filteredValue: e }),
                this.tableService.onUIUpdate(e),
                this.updateSerializedValue(),
                this.scrollable && this.resetScrollTop();
            }
            findFilteredNodes(e, t) {
              if (e) {
                let n = !1;
                if (e.children) {
                  let i = [...e.children];
                  e.children = [];
                  for (let s of i) {
                    let i = Object.assign({}, s);
                    this.isFilterMatched(i, t) &&
                      ((n = !0), e.children.push(i));
                  }
                }
                if (n) return !0;
              }
            }
            isFilterMatched(
              e,
              {
                filterField: t,
                filterValue: n,
                filterConstraint: i,
                isStrictMode: s,
              }
            ) {
              let r = !1;
              return (
                i(c.b.resolveFieldData(e.data, t), n, this.filterLocale) &&
                  (r = !0),
                (!r || (s && !this.isNodeLeaf(e))) &&
                  (r =
                    this.findFilteredNodes(e, {
                      filterField: t,
                      filterValue: n,
                      filterConstraint: i,
                      isStrictMode: s,
                    }) || r),
                r
              );
            }
            isNodeLeaf(e) {
              return !1 !== e.leaf && !(e.children && e.children.length);
            }
            hasFilter() {
              let e = !0;
              for (let t in this.filters)
                if (this.filters.hasOwnProperty(t)) {
                  e = !1;
                  break;
                }
              return !e;
            }
            reset() {
              (this._sortField = null),
                (this._sortOrder = 1),
                (this._multiSortMeta = null),
                this.tableService.onSort(null),
                (this.filteredNodes = null),
                (this.filters = {}),
                (this.first = 0),
                this.lazy
                  ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                  : (this.totalRecords = this._value ? this._value.length : 0);
            }
            updateEditingCell(e, t, n) {
              (this.editingCell = e),
                (this.editingCellData = t),
                (this.editingCellField = n),
                this.bindDocumentEditListener();
            }
            isEditingCellValid() {
              return (
                this.editingCell &&
                0 === o.a.find(this.editingCell, ".ng-invalid.ng-dirty").length
              );
            }
            bindDocumentEditListener() {
              this.documentEditListener ||
                ((this.documentEditListener = (e) => {
                  this.editingCell &&
                    !this.editingCellClick &&
                    this.isEditingCellValid() &&
                    (o.a.removeClass(this.editingCell, "ui-editing-cell"),
                    (this.editingCell = null),
                    this.onEditComplete.emit({
                      field: this.editingCellField,
                      data: this.editingCellData,
                    }),
                    (this.editingCellField = null),
                    (this.editingCellData = null),
                    this.unbindDocumentEditListener()),
                    (this.editingCellClick = !1);
                }),
                document.addEventListener("click", this.documentEditListener));
            }
            unbindDocumentEditListener() {
              this.documentEditListener &&
                (document.removeEventListener(
                  "click",
                  this.documentEditListener
                ),
                (this.documentEditListener = null));
            }
            ngOnDestroy() {
              this.unbindDocumentEditListener(),
                (this.editingCell = null),
                (this.editingCellField = null),
                (this.editingCellData = null),
                (this.initialized = null);
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.B), i.Rb(ve));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-treeTable"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, l.d, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.templates = s);
              },
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (i.Qc(h, !0),
                  i.Qc(d, !0),
                  i.Qc(p, !0),
                  i.Qc(f, !0),
                  i.Qc(g, !0),
                  i.Qc(m, !0),
                  i.Qc(b, !0)),
                  2 & e &&
                    (i.Ac((n = i.gc())) && (t.containerViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.resizeHelperViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.reorderIndicatorUpViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.reorderIndicatorDownViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.tableViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollableViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollableFrozenViewChild = n.first));
              },
              inputs: {
                lazy: "lazy",
                lazyLoadOnInit: "lazyLoadOnInit",
                first: "first",
                pageLinks: "pageLinks",
                alwaysShowPaginator: "alwaysShowPaginator",
                paginatorPosition: "paginatorPosition",
                currentPageReportTemplate: "currentPageReportTemplate",
                showFirstLastIcon: "showFirstLastIcon",
                defaultSortOrder: "defaultSortOrder",
                sortMode: "sortMode",
                resetPageOnSort: "resetPageOnSort",
                contextMenuSelectionMode: "contextMenuSelectionMode",
                compareSelectionBy: "compareSelectionBy",
                loadingIcon: "loadingIcon",
                showLoader: "showLoader",
                virtualScrollDelay: "virtualScrollDelay",
                virtualRowHeight: "virtualRowHeight",
                columnResizeMode: "columnResizeMode",
                rowTrackBy: "rowTrackBy",
                filters: "filters",
                filterDelay: "filterDelay",
                filterMode: "filterMode",
                totalRecords: "totalRecords",
                value: "value",
                sortField: "sortField",
                sortOrder: "sortOrder",
                multiSortMeta: "multiSortMeta",
                selection: "selection",
                rows: "rows",
                contextMenuSelection: "contextMenuSelection",
                columns: "columns",
                style: "style",
                styleClass: "styleClass",
                tableStyle: "tableStyle",
                tableStyleClass: "tableStyleClass",
                autoLayout: "autoLayout",
                paginator: "paginator",
                rowsPerPageOptions: "rowsPerPageOptions",
                paginatorDropdownAppendTo: "paginatorDropdownAppendTo",
                showCurrentPageReport: "showCurrentPageReport",
                customSort: "customSort",
                selectionMode: "selectionMode",
                dataKey: "dataKey",
                metaKeySelection: "metaKeySelection",
                rowHover: "rowHover",
                loading: "loading",
                scrollable: "scrollable",
                scrollHeight: "scrollHeight",
                virtualScroll: "virtualScroll",
                minBufferPx: "minBufferPx",
                maxBufferPx: "maxBufferPx",
                frozenWidth: "frozenWidth",
                frozenColumns: "frozenColumns",
                resizableColumns: "resizableColumns",
                reorderableColumns: "reorderableColumns",
                contextMenu: "contextMenu",
                globalFilterFields: "globalFilterFields",
                filterLocale: "filterLocale",
              },
              outputs: {
                selectionChange: "selectionChange",
                contextMenuSelectionChange: "contextMenuSelectionChange",
                onFilter: "onFilter",
                onNodeExpand: "onNodeExpand",
                onNodeCollapse: "onNodeCollapse",
                onPage: "onPage",
                onSort: "onSort",
                onLazyLoad: "onLazyLoad",
                sortFunction: "sortFunction",
                onColResize: "onColResize",
                onColReorder: "onColReorder",
                onNodeSelect: "onNodeSelect",
                onNodeUnselect: "onNodeUnselect",
                onContextMenuSelect: "onContextMenuSelect",
                onHeaderCheckboxToggle: "onHeaderCheckboxToggle",
                onEditInit: "onEditInit",
                onEditComplete: "onEditComplete",
                onEditCancel: "onEditCancel",
              },
              features: [i.Db([ve]), i.Cb],
              decls: 13,
              vars: 21,
              consts: [
                [3, "ngStyle", "ngClass"],
                ["container", ""],
                ["class", "ui-treetable-loading ui-widget-overlay", 4, "ngIf"],
                ["class", "ui-treetable-loading-content", 4, "ngIf"],
                ["class", "ui-treetable-caption ui-widget-header", 4, "ngIf"],
                [
                  "styleClass",
                  "ui-paginator-top",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                  4,
                  "ngIf",
                ],
                ["class", "ui-treetable-wrapper", 4, "ngIf"],
                ["class", "ui-treetable-scrollable-wrapper", 4, "ngIf"],
                [
                  "styleClass",
                  "ui-paginator-bottom",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                  4,
                  "ngIf",
                ],
                ["class", "ui-treetable-summary ui-widget-header", 4, "ngIf"],
                [
                  "class",
                  "ui-column-resizer-helper ui-state-highlight",
                  "style",
                  "display:none",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "pi pi-arrow-down ui-table-reorder-indicator-up",
                  0,
                  "ngIf",
                ],
                [
                  "class",
                  "pi pi-arrow-up ui-table-reorder-indicator-down",
                  4,
                  "ngIf",
                ],
                [1, "ui-treetable-loading", "ui-widget-overlay"],
                [1, "ui-treetable-loading-content"],
                [1, "ui-treetable-caption", "ui-widget-header"],
                [4, "ngTemplateOutlet"],
                [
                  "styleClass",
                  "ui-paginator-top",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                ],
                [1, "ui-treetable-wrapper"],
                [1, "ui-treetable-table", 3, "ngClass", "ngStyle"],
                ["table", ""],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "ui-treetable-thead"],
                [1, "ui-treetable-tfoot"],
                [
                  1,
                  "ui-treetable-tbody",
                  3,
                  "pTreeTableBody",
                  "pTreeTableBodyTemplate",
                ],
                [1, "ui-treetable-scrollable-wrapper"],
                [
                  "class",
                  "ui-treetable-scrollable-view ui-treetable-frozen-view",
                  3,
                  "ttScrollableView",
                  "frozen",
                  "ngStyle",
                  "scrollHeight",
                  4,
                  "ngIf",
                ],
                [
                  1,
                  "ui-treetable-scrollable-view",
                  3,
                  "ttScrollableView",
                  "frozen",
                  "scrollHeight",
                  "ngStyle",
                ],
                ["scrollableView", ""],
                [
                  1,
                  "ui-treetable-scrollable-view",
                  "ui-treetable-frozen-view",
                  3,
                  "ttScrollableView",
                  "frozen",
                  "ngStyle",
                  "scrollHeight",
                ],
                ["scrollableFrozenView", ""],
                [
                  "styleClass",
                  "ui-paginator-bottom",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                ],
                [1, "ui-treetable-summary", "ui-widget-header"],
                [
                  1,
                  "ui-column-resizer-helper",
                  "ui-state-highlight",
                  2,
                  "display",
                  "none",
                ],
                ["resizeHelper", ""],
                [1, "pi", "pi-arrow-down", "ui-table-reorder-indicator-up"],
                ["reorderIndicatorUp", ""],
                [1, "pi", "pi-arrow-up", "ui-table-reorder-indicator-down"],
                ["reorderIndicatorDown", ""],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Xb(0, "div", 0, 1),
                  i.Lc(2, v, 1, 0, "div", 2),
                  i.Lc(3, y, 2, 2, "div", 3),
                  i.Lc(4, S, 2, 1, "div", 4),
                  i.Lc(5, _, 1, 13, "p-paginator", 5),
                  i.Lc(6, T, 9, 16, "div", 6),
                  i.Lc(7, P, 4, 8, "div", 7),
                  i.Lc(8, R, 1, 13, "p-paginator", 8),
                  i.Lc(9, L, 2, 1, "div", 9),
                  i.Lc(10, A, 2, 0, "div", 10),
                  i.Lc(11, D, 2, 0, "span", 11),
                  i.Lc(12, j, 2, 0, "span", 12),
                  i.Wb()),
                  2 & e &&
                    (i.Gb(t.styleClass),
                    i.pc("ngStyle", t.style)(
                      "ngClass",
                      i.wc(
                        15,
                        F,
                        t.autoLayout,
                        t.rowHover ||
                          "single" === t.selectionMode ||
                          "multiple" === t.selectionMode,
                        t.resizableColumns,
                        t.resizableColumns && "fit" === t.columnResizeMode,
                        t.scrollable && "flex" === t.scrollHeight
                      )
                    ),
                    i.Eb(2),
                    i.pc("ngIf", t.loading && t.showLoader),
                    i.Eb(1),
                    i.pc("ngIf", t.loading && t.showLoader),
                    i.Eb(1),
                    i.pc("ngIf", t.captionTemplate),
                    i.Eb(1),
                    i.pc(
                      "ngIf",
                      t.paginator &&
                        ("top" === t.paginatorPosition ||
                          "both" == t.paginatorPosition)
                    ),
                    i.Eb(1),
                    i.pc("ngIf", !t.scrollable),
                    i.Eb(1),
                    i.pc("ngIf", t.scrollable),
                    i.Eb(1),
                    i.pc(
                      "ngIf",
                      t.paginator &&
                        ("bottom" === t.paginatorPosition ||
                          "both" == t.paginatorPosition)
                    ),
                    i.Eb(1),
                    i.pc("ngIf", t.summaryTemplate),
                    i.Eb(1),
                    i.pc("ngIf", t.resizableColumns),
                    i.Eb(1),
                    i.pc("ngIf", t.reorderableColumns),
                    i.Eb(1),
                    i.pc("ngIf", t.reorderableColumns));
              },
              directives: function () {
                return [s.n, s.k, s.m, s.r, a.a, we, Se];
              },
              encapsulation: 2,
            })),
            e
          );
        })(),
        we = (() => {
          let e = class {
            constructor(e, t, n) {
              (this.tt = e),
                (this.treeTableService = t),
                (this.cd = n),
                (this.subscription =
                  this.tt.tableService.uiUpdateSource$.subscribe(() => {
                    this.tt.virtualScroll && this.cd.detectChanges();
                  }));
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(ye), i.Rb(ve), i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["", "pTreeTableBody", ""]],
              inputs: {
                columns: ["pTreeTableBody", "columns"],
                template: ["pTreeTableBodyTemplate", "template"],
                frozen: "frozen",
              },
              attrs: V,
              decls: 3,
              vars: 3,
              consts: [
                [4, "ngIf"],
                ["ngFor", "", 3, "ngForOf", "ngForTrackBy"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [
                  "cdkVirtualFor",
                  "",
                  3,
                  "cdkVirtualForOf",
                  "cdkVirtualForTrackBy",
                  "cdkVirtualForTemplateCacheSize",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Lc(0, H, 2, 2, "ng-container", 0),
                  i.Lc(1, q, 2, 3, "ng-container", 0),
                  i.Lc(2, Y, 2, 4, "ng-container", 0)),
                  2 & e &&
                    (i.pc("ngIf", !t.tt.virtualScroll),
                    i.Eb(1),
                    i.pc("ngIf", t.tt.virtualScroll),
                    i.Eb(1),
                    i.pc("ngIf", t.tt.isEmpty()));
              },
              directives: [s.m, s.l, s.r, u.b],
              encapsulation: 2,
            })),
            e
          );
        })(),
        Se = (() => {
          let e = class {
            constructor(e, t, n) {
              (this.tt = e),
                (this.el = t),
                (this.zone = n),
                (this.subscription =
                  this.tt.tableService.uiUpdateSource$.subscribe(() => {
                    this.zone.runOutsideAngular(() => {
                      setTimeout(() => {
                        this.alignScrollBar(), (this.initialized = !0);
                      }, 50);
                    });
                  })),
                (this.initialized = !1);
            }
            get scrollHeight() {
              return this._scrollHeight;
            }
            set scrollHeight(e) {
              (this._scrollHeight = e),
                null != e &&
                  (e.includes("%") || e.includes("calc")) &&
                  console.log(
                    'Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight="flex" instead.'
                  ),
                this.tt.virtualScroll &&
                  this.virtualScrollBody &&
                  this.virtualScrollBody.ngOnInit();
            }
            ngAfterViewChecked() {
              !this.initialized &&
                this.el.nativeElement.offsetParent &&
                (this.alignScrollBar(), (this.initialized = !0));
            }
            ngAfterViewInit() {
              if (this.frozen)
                this.scrollableAlignerViewChild &&
                  this.scrollableAlignerViewChild.nativeElement &&
                  (this.scrollableAlignerViewChild.nativeElement.style.height =
                    o.a.calculateScrollbarHeight() + "px");
              else {
                (this.tt.frozenColumns || this.tt.frozenBodyTemplate) &&
                  o.a.addClass(
                    this.el.nativeElement,
                    "ui-treetable-unfrozen-view"
                  );
                let e = this.el.nativeElement.previousElementSibling;
                e &&
                  (this.frozenSiblingBody = o.a.findSingle(
                    e,
                    this.tt.virtualScroll
                      ? ".ui-treetable-virtual-scrollable-body"
                      : ".ui-treetable-scrollable-body"
                  ));
              }
              this.bindEvents(), this.alignScrollBar();
            }
            bindEvents() {
              this.zone.runOutsideAngular(() => {
                o.a.calculateScrollbarWidth(),
                  this.scrollHeaderViewChild &&
                    this.scrollHeaderViewChild.nativeElement &&
                    ((this.headerScrollListener =
                      this.onHeaderScroll.bind(this)),
                    this.scrollHeaderBoxViewChild.nativeElement.addEventListener(
                      "scroll",
                      this.headerScrollListener
                    )),
                  this.scrollFooterViewChild &&
                    this.scrollFooterViewChild.nativeElement &&
                    ((this.footerScrollListener =
                      this.onFooterScroll.bind(this)),
                    this.scrollFooterViewChild.nativeElement.addEventListener(
                      "scroll",
                      this.footerScrollListener
                    )),
                  this.frozen ||
                    ((this.bodyScrollListener = this.onBodyScroll.bind(this)),
                    this.tt.virtualScroll
                      ? this.virtualScrollBody
                          .getElementRef()
                          .nativeElement.addEventListener(
                            "scroll",
                            this.bodyScrollListener
                          )
                      : this.scrollBodyViewChild.nativeElement.addEventListener(
                          "scroll",
                          this.bodyScrollListener
                        ));
              });
            }
            unbindEvents() {
              this.scrollHeaderViewChild &&
                this.scrollHeaderViewChild.nativeElement &&
                this.scrollHeaderBoxViewChild.nativeElement.removeEventListener(
                  "scroll",
                  this.headerScrollListener
                ),
                this.scrollFooterViewChild &&
                  this.scrollFooterViewChild.nativeElement &&
                  this.scrollFooterViewChild.nativeElement.removeEventListener(
                    "scroll",
                    this.footerScrollListener
                  ),
                this.scrollBodyViewChild &&
                  this.scrollBodyViewChild.nativeElement &&
                  this.scrollBodyViewChild.nativeElement.removeEventListener(
                    "scroll",
                    this.bodyScrollListener
                  ),
                this.virtualScrollBody &&
                  this.virtualScrollBody.getElementRef() &&
                  this.virtualScrollBody
                    .getElementRef()
                    .nativeElement.removeEventListener(
                      "scroll",
                      this.bodyScrollListener
                    );
            }
            onHeaderScroll() {
              const e = this.scrollHeaderViewChild.nativeElement.scrollLeft;
              (this.scrollBodyViewChild.nativeElement.scrollLeft = e),
                this.scrollFooterViewChild &&
                  this.scrollFooterViewChild.nativeElement &&
                  (this.scrollFooterViewChild.nativeElement.scrollLeft = e),
                (this.preventBodyScrollPropagation = !0);
            }
            onFooterScroll() {
              const e = this.scrollFooterViewChild.nativeElement.scrollLeft;
              (this.scrollBodyViewChild.nativeElement.scrollLeft = e),
                this.scrollHeaderViewChild &&
                  this.scrollHeaderViewChild.nativeElement &&
                  (this.scrollHeaderViewChild.nativeElement.scrollLeft = e),
                (this.preventBodyScrollPropagation = !0);
            }
            onBodyScroll(e) {
              this.preventBodyScrollPropagation
                ? (this.preventBodyScrollPropagation = !1)
                : (this.scrollHeaderViewChild &&
                    this.scrollHeaderViewChild.nativeElement &&
                    (this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft =
                      -1 * e.target.scrollLeft + "px"),
                  this.scrollFooterViewChild &&
                    this.scrollFooterViewChild.nativeElement &&
                    (this.scrollFooterBoxViewChild.nativeElement.style.marginLeft =
                      -1 * e.target.scrollLeft + "px"),
                  this.frozenSiblingBody &&
                    (this.frozenSiblingBody.scrollTop = e.target.scrollTop));
            }
            scrollToVirtualIndex(e) {
              this.virtualScrollBody && this.virtualScrollBody.scrollToIndex(e);
            }
            scrollTo(e) {
              this.virtualScrollBody
                ? this.virtualScrollBody.scrollTo(e)
                : this.scrollBodyViewChild.nativeElement.scrollTo
                ? this.scrollBodyViewChild.nativeElement.scrollTo(e)
                : ((this.scrollBodyViewChild.nativeElement.scrollLeft = e.left),
                  (this.scrollBodyViewChild.nativeElement.scrollTop = e.top));
            }
            hasVerticalOverflow() {
              return this.tt.virtualScroll
                ? this.virtualScrollBody.getDataLength() *
                    this.tt.virtualRowHeight >
                    this.virtualScrollBody.getViewportSize()
                : o.a.getOuterHeight(this.scrollTableViewChild.nativeElement) >
                    o.a.getOuterHeight(this.scrollBodyViewChild.nativeElement);
            }
            alignScrollBar() {
              if (!this.frozen) {
                let e = this.hasVerticalOverflow()
                  ? o.a.calculateScrollbarWidth()
                  : 0;
                (this.scrollHeaderBoxViewChild.nativeElement.style.marginRight =
                  e + "px"),
                  this.scrollFooterBoxViewChild &&
                    this.scrollFooterBoxViewChild.nativeElement &&
                    (this.scrollFooterBoxViewChild.nativeElement.style.marginRight =
                      e + "px");
              }
              this.initialized = !1;
            }
            ngOnDestroy() {
              this.unbindEvents(),
                (this.frozenSiblingBody = null),
                this.subscription && this.subscription.unsubscribe(),
                (this.initialized = !1);
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(ye), i.Rb(i.m), i.Rb(i.B));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["", "ttScrollableView", ""]],
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (i.Qc(Z, !0),
                  i.Qc(Q, !0),
                  i.Qc(J, !0),
                  i.Qc(ee, !0),
                  i.Qc(te, !0),
                  i.Qc(ne, !0),
                  i.Qc(ie, !0),
                  i.Qc(se, !0),
                  i.Qc(u.c, !0)),
                  2 & e &&
                    (i.Ac((n = i.gc())) && (t.scrollHeaderViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollHeaderBoxViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollBodyViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollTableViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollLoadingTableViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollFooterViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollFooterBoxViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollableAlignerViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.virtualScrollBody = n.first));
              },
              inputs: {
                scrollHeight: "scrollHeight",
                columns: ["ttScrollableView", "columns"],
                frozen: "frozen",
              },
              attrs: re,
              decls: 12,
              vars: 13,
              consts: [
                [1, "ui-treetable-scrollable-header", "ui-widget-header"],
                ["scrollHeader", ""],
                [1, "ui-treetable-scrollable-header-box"],
                ["scrollHeaderBox", ""],
                [
                  1,
                  "ui-treetable-scrollable-header-table",
                  3,
                  "ngClass",
                  "ngStyle",
                ],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "ui-treetable-thead"],
                [4, "ngIf", "ngIfElse"],
                ["virtualScrollTemplate", ""],
                [
                  "class",
                  "ui-treetable-scrollable-footer ui-widget-header",
                  4,
                  "ngIf",
                ],
                [1, "ui-treetable-scrollable-body", 3, "ngStyle"],
                ["scrollBody", ""],
                [3, "ngStyle"],
                ["scrollTable", ""],
                [
                  1,
                  "ui-treetable-tbody",
                  3,
                  "pTreeTableBody",
                  "pTreeTableBodyTemplate",
                  "frozen",
                ],
                ["style", "background-color:transparent", 4, "ngIf"],
                [2, "background-color", "transparent"],
                ["scrollableAligner", ""],
                [
                  1,
                  "ui-treetable-virtual-scrollable-body",
                  3,
                  "itemSize",
                  "minBufferPx",
                  "maxBufferPx",
                ],
                [1, "ui-treetable-scrollable-footer", "ui-widget-header"],
                ["scrollFooter", ""],
                [1, "ui-treetable-scrollable-footer-box"],
                ["scrollFooterBox", ""],
                [
                  1,
                  "ui-treetable-scrollable-footer-table",
                  3,
                  "ngClass",
                  "ngStyle",
                ],
                [1, "ui-treetable-tfoot"],
              ],
              template: function (e, t) {
                if (
                  (1 & e &&
                    (i.Xb(0, "div", 0, 1),
                    i.Xb(2, "div", 2, 3),
                    i.Xb(4, "table", 4),
                    i.Lc(5, oe, 1, 0, "ng-container", 5),
                    i.Xb(6, "thead", 6),
                    i.Lc(7, ae, 1, 0, "ng-container", 5),
                    i.Wb(),
                    i.Wb(),
                    i.Wb(),
                    i.Wb(),
                    i.Lc(8, he, 8, 14, "ng-container", 7),
                    i.Lc(9, fe, 6, 16, "ng-template", null, 8, i.Mc),
                    i.Lc(11, be, 8, 10, "div", 9)),
                  2 & e)
                ) {
                  const e = i.Bc(10);
                  i.Eb(4),
                    i.pc("ngClass", t.tt.tableStyleClass)(
                      "ngStyle",
                      t.tt.tableStyle
                    ),
                    i.Eb(1),
                    i.pc(
                      "ngTemplateOutlet",
                      (t.frozen && t.tt.frozenColGroupTemplate) ||
                        t.tt.colGroupTemplate
                    )("ngTemplateOutletContext", i.sc(9, x, t.columns)),
                    i.Eb(2),
                    i.pc(
                      "ngTemplateOutlet",
                      (t.frozen && t.tt.frozenHeaderTemplate) ||
                        t.tt.headerTemplate
                    )("ngTemplateOutletContext", i.sc(11, x, t.columns)),
                    i.Eb(1),
                    i.pc("ngIf", !t.tt.virtualScroll)("ngIfElse", e),
                    i.Eb(3),
                    i.pc("ngIf", t.tt.footerTemplate);
                }
              },
              directives: [s.k, s.n, s.r, s.m, we, u.c, u.a],
              encapsulation: 2,
            })),
            e
          );
        })(),
        _e = (() => {
          let e = class {
            constructor(e) {
              this.tt = e;
            }
            onClick(e) {
              (this.rowNode.node.expanded = !this.rowNode.node.expanded),
                this.rowNode.node.expanded
                  ? this.tt.onNodeExpand.emit({
                      originalEvent: e,
                      node: this.rowNode.node,
                    })
                  : this.tt.onNodeCollapse.emit({
                      originalEvent: e,
                      node: this.rowNode.node,
                    }),
                this.tt.updateSerializedValue(),
                this.tt.tableService.onUIUpdate(this.tt.value),
                e.preventDefault();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(ye));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-treeTableToggler"]],
              inputs: { rowNode: "rowNode" },
              decls: 2,
              vars: 5,
              consts: [
                [1, "ui-treetable-toggler", "ui-unselectable-text", 3, "click"],
                [3, "ngClass"],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Xb(0, "a", 0),
                  i.fc("click", function (e) {
                    return t.onClick(e);
                  }),
                  i.Sb(1, "i", 1),
                  i.Wb()),
                  2 & e &&
                    (i.Kc(
                      "visibility",
                      !1 === t.rowNode.node.leaf ||
                        (t.rowNode.node.children &&
                          t.rowNode.node.children.length)
                        ? "visible"
                        : "hidden"
                    )("margin-left", 16 * t.rowNode.level + "px"),
                    i.Eb(1),
                    i.pc(
                      "ngClass",
                      t.rowNode.node.expanded
                        ? "pi pi-fw pi-chevron-down"
                        : "pi pi-fw pi-chevron-right"
                    ));
              },
              directives: [s.k],
              encapsulation: 2,
            })),
            e
          );
        })(),
        Ce = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c, a.b, u.d], l.e, u.d],
            })),
            e
          );
        })();
    },
    M02b: function (e, t, n) {
      "use strict";
      var i;
      n.d(t, "a", function () {
        return i;
      }),
        (function (e) {
          class t {
            constructor(e) {
              this.type = e;
            }
          }
          (t.type = "[Auth] ChangeRegistrationType"),
            (e.ChangeRegistrationType = t);
          class n {
            constructor(e) {
              this.step = e;
            }
          }
          (n.type = "[Auth] ChangeRegistrationStep"),
            (e.ChangeRegistrationStep = n);
          class i {}
          (i.type = "[Auth] CheckReferral"), (e.CheckReferral = i);
          class s {}
          (s.type = "[Auth] CheckUser"), (e.CheckUser = s);
          class r {
            constructor(e) {
              this.value = e;
            }
          }
          (r.type = "[Auth] Registration"), (e.Registration = r);
          class o {}
          (o.type = "[Auth] RegistrationSuccess"), (e.RegistrationSuccess = o);
          class a {
            constructor(e) {
              this.error = e;
            }
          }
          (a.type = "[Auth] RegistrationFailed"), (e.RegistrationFailed = a);
          class l {}
          (l.type = "[Auth] EmailVerificationRequest"),
            (e.EmailVerifyRequest = l);
          class c {}
          (c.type = "[Auth] EmailVerifyRequestSuccess"),
            (e.EmailVerifyRequestSuccess = c);
          class u {
            constructor(e) {
              this.error = e;
            }
          }
          (u.type = "[Auth] EmailVerifyRequestFailed"),
            (e.EmailVerifyRequestFailed = u);
          class h {
            constructor(e) {
              this.code = e;
            }
          }
          (h.type = "[Auth] EmailVerify"), (e.EmailVerify = h);
          class d {}
          (d.type = "[Auth] EmailVerifySuccess"), (e.EmailVerifySuccess = d);
          class p {
            constructor(e) {
              this.error = e;
            }
          }
          (p.type = "[Auth] EmailVerifyFailed"), (e.EmailVerifyFailed = p);
          class f {
            constructor(e) {
              this.value = e;
            }
          }
          (f.type = "[Auth] Login"), (e.Login = f);
          class g {}
          (g.type = "[Auth] LoginSuccess"), (e.LoginSuccess = g);
          class m {
            constructor(e) {
              this.error = e;
            }
          }
          (m.type = "[Auth] LoginFailed"), (e.LoginFailed = m);
          class b {
            constructor(e) {
              this.value = e;
            }
          }
          (b.type = "[Auth] PasswordRestore"), (e.PasswordRestore = b);
          class v {}
          (v.type = "[Auth] PasswordRestoreSuccess"),
            (e.PasswordRestoreSuccess = v);
          class y {
            constructor(e) {
              this.error = e;
            }
          }
          (y.type = "[Auth] PasswordRestoreFailed"),
            (e.PasswordRestoreFailed = y);
          class w {
            constructor(e) {
              this.value = e;
            }
          }
          (w.type = "[Auth] PasswordChange"), (e.PasswordChange = w);
          class S {}
          (S.type = "[Auth] PasswordChangeSuccess"),
            (e.PasswordChangeSuccess = S);
          class _ {
            constructor(e) {
              this.error = e;
            }
          }
          (_.type = "[Auth] PasswordChangeFailed"),
            (e.PasswordChangeFailed = _);
          class C {
            constructor(e) {
              this.value = e;
            }
          }
          (C.type = "[Auth] RestoreTokenValidate"),
            (e.RestoreTokenValidate = C);
          class E {}
          (E.type = "[Auth] RestoreTokenValidateSuccess"),
            (e.RestoreTokenValidateSuccess = E);
          class O {
            constructor(e) {
              this.error = e;
            }
          }
          (O.type = "[Auth] RestoreTokenValidateFailed"),
            (e.RestoreTokenValidateFailed = O);
          class x {}
          (x.type = "[Auth] Logout"), (e.Logout = x);
          class T {}
          (T.type = "[Auth] LogoutSuccess"), (e.LogoutSuccess = T);
          class k {
            constructor(e) {
              this.error = e;
            }
          }
          (k.type = "[Auth] LogoutSuccess"), (e.LogoutFailed = k);
        })(i || (i = {}));
    },
    M0ag: function (e, t, n) {
      "use strict";
      var i = n("tk/3"),
        s = n("z6cu"),
        r = n("JIr8"),
        o = n("7s7n"),
        a = n("TkeJ"),
        l = n("GWxI"),
        c = n("fXoL"),
        u = n("AcyG"),
        h = n("tyNb");
      const d = [
        {
          provide: i.a,
          useClass: (() => {
            class e {
              constructor(e, t) {
                (this.store = e), (this.router = t);
              }
              intercept(e, t) {
                let n = e;
                return (
                  (n = e.clone({
                    setHeaders: {
                      "Content-Type": "application/json",
                      Authorization: "Bearer " + this.user.token,
                    },
                  })),
                  t
                    .handle(n)
                    .pipe(
                      Object(r.a)(
                        (e) => (
                          e instanceof i.d &&
                            401 === e.status &&
                            (this.store.dispatch(new l.a.Remove()),
                            this.store.dispatch(new a.a(["/"]))),
                          Object(s.a)(e)
                        )
                      )
                    )
                );
              }
              get user() {
                return this.store.selectSnapshot(o.a.model);
              }
            }
            return (
              (e.ɵfac = function (t) {
                return new (t || e)(c.bc(u.h), c.bc(h.g));
              }),
              (e.ɵprov = c.Nb({ token: e, factory: e.ɵfac })),
              e
            );
          })(),
          multi: !0,
        },
      ];
      n("ITC6"), n("Icl4");
      var p = n("Tdnt"),
        f = n("UvIs"),
        g = n("ofXK"),
        m = n("1AIi"),
        b = n("ttqe");
      class v extends b.a {
        createStorage() {
          this.storage = window.sessionStorage;
        }
      }
      var y = n("3Pt+"),
        w = (n("DV8u"), n("AsfI"), n("aZ8m"), n("cZd9"), n("A1Yd")),
        S = n("arS9");
      let _ = (() => {
        let e = class {};
        return (
          (e.ɵmod = c.Pb({ type: e })),
          (e.ɵinj = c.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[g.c]],
          })),
          e
        );
      })();
      var C = n("1SSY"),
        E = (n("R0Ic"), n("P/hZ"), n("RtSl"));
      let O = (() => {
          let e = class {};
          return (
            (e.ɵmod = c.Pb({ type: e })),
            (e.ɵinj = c.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[g.c]],
            })),
            e
          );
        })(),
        x = (() => {
          let e = class {};
          return (
            (e.ɵmod = c.Pb({ type: e })),
            (e.ɵinj = c.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[g.c, O], E.e],
            })),
            e
          );
        })();
      var T = n("rgW5"),
        k = n("yhG/");
      n("Z7TK");
      let M = (() => {
        let e = class {};
        return (
          (e.ɵmod = c.Pb({ type: e })),
          (e.ɵinj = c.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[g.c, E.e], g.c, E.e],
          })),
          e
        );
      })();
      var I = n("M/UB");
      let P = (() => {
        let e = class {};
        return (
          (e.ɵmod = c.Pb({ type: e })),
          (e.ɵinj = c.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[g.c]],
          })),
          e
        );
      })();
      n("xtqe");
      var R = n("DYOT"),
        N = n("lY0W"),
        L =
          (n("7wB8"),
          n("A1oB"),
          n("aF9I"),
          n("sum4"),
          n("P8Ue"),
          n("hPAK"),
          n("UMfn")),
        A = n("SLJP");
      let D = (() => {
        let e = class {};
        return (
          (e.ɵmod = c.Pb({ type: e })),
          (e.ɵinj = c.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[g.c]],
          })),
          e
        );
      })();
      var j = n("yWug"),
        F = n("MM/6");
      n.d(t, "a", function () {
        return W;
      });
      const V = [
        g.c,
        y.h,
        h.k,
        y.r,
        i.c,
        N.a,
        L.b,
        w.b,
        _,
        S.b,
        I.b,
        P,
        R.b,
        C.b,
        x,
        T.c,
        k.b,
        M,
        A.b,
        D,
        j.b,
        F.b,
      ];
      let W = (() => {
        class e {}
        return (
          (e.ɵmod = c.Pb({ type: e })),
          (e.ɵinj = c.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [p.a, f.a, m.a, v, E.c, ...d],
            imports: [
              V,
              g.c,
              y.h,
              h.k,
              y.r,
              i.c,
              N.a,
              L.b,
              w.b,
              _,
              S.b,
              I.b,
              P,
              R.b,
              C.b,
              x,
              T.c,
              k.b,
              M,
              A.b,
              D,
              j.b,
              F.b,
            ],
          })),
          e
        );
      })();
    },
    "MM/6": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return f;
      }),
        n.d(t, "b", function () {
          return g;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("P/hZ"),
        o = n("RtSl"),
        a = n("R0Ic");
      function l(e, t) {
        1 & e && i.Tb(0);
      }
      function c(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 5),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc(2).onCloseClick(t);
            })("keydown.enter", function () {
              return i.Ec(e), i.hc(2).hide();
            }),
            i.Sb(1, "span", 6),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2);
          i.Fb("aria-label", e.ariaCloseLabel);
        }
      }
      const u = function (e, t) {
          return { showTransitionParams: e, hideTransitionParams: t };
        },
        h = function (e, t) {
          return { value: e, params: t };
        };
      function d(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 1),
            i.fc("click", function () {
              return i.Ec(e), i.hc().onContainerClick();
            })("@animation.start", function (t) {
              return i.Ec(e), i.hc().onAnimationStart(t);
            })("@animation.done", function (t) {
              return i.Ec(e), i.hc().onAnimationEnd(t);
            }),
            i.Xb(1, "div", 2),
            i.nc(2),
            i.Lc(3, l, 1, 0, "ng-container", 3),
            i.Wb(),
            i.Lc(4, c, 2, 1, "a", 4),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.Gb(e.styleClass),
            i.pc(
              "ngClass",
              "ui-overlaypanel ui-widget ui-widget-content ui-corner-all ui-shadow"
            )("ngStyle", e.style)(
              "@animation",
              i.tc(
                10,
                h,
                e.overlayVisible ? "open" : "close",
                i.tc(7, u, e.showTransitionOptions, e.hideTransitionOptions)
              )
            ),
            i.Eb(3),
            i.pc("ngTemplateOutlet", e.contentTemplate),
            i.Eb(1),
            i.pc("ngIf", e.showCloseIcon);
        }
      }
      const p = ["*"];
      let f = (() => {
          let e = class {
            constructor(e, t, n, s) {
              (this.el = e),
                (this.renderer = t),
                (this.cd = n),
                (this.zone = s),
                (this.dismissable = !0),
                (this.autoZIndex = !0),
                (this.baseZIndex = 0),
                (this.showTransitionOptions = "225ms ease-out"),
                (this.hideTransitionOptions = "195ms ease-in"),
                (this.onShow = new i.o()),
                (this.onHide = new i.o()),
                (this.overlayVisible = !1),
                (this.render = !1),
                (this.isContainerClicked = !0);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "content":
                  default:
                    this.contentTemplate = e.template;
                }
                this.cd.markForCheck();
              });
            }
            onContainerClick() {
              this.isContainerClicked = !0;
            }
            bindDocumentClickListener() {
              !this.documentClickListener &&
                this.dismissable &&
                this.zone.runOutsideAngular(() => {
                  let e = r.a.isIOS() ? "touchstart" : "click";
                  this.documentClickListener = this.renderer.listen(
                    "document",
                    e,
                    (e) => {
                      this.container.contains(e.target) ||
                        this.target === e.target ||
                        this.target.contains(e.target) ||
                        this.isContainerClicked ||
                        this.zone.run(() => {
                          this.hide();
                        }),
                        (this.isContainerClicked = !1),
                        this.cd.markForCheck();
                    }
                  );
                });
            }
            unbindDocumentClickListener() {
              this.documentClickListener &&
                (this.documentClickListener(),
                (this.documentClickListener = null));
            }
            toggle(e, t) {
              this.overlayVisible
                ? (this.hasTargetChanged(e, t) &&
                    (this.destroyCallback = () => {
                      this.show(null, t || e.currentTarget || e.target);
                    }),
                  (this.overlayVisible = !1))
                : this.show(e, t);
            }
            show(e, t) {
              (this.target = t || e.currentTarget || e.target),
                (this.overlayVisible = !0),
                (this.render = !0),
                this.cd.markForCheck();
            }
            hasTargetChanged(e, t) {
              return (
                null != this.target &&
                this.target !== (t || e.currentTarget || e.target)
              );
            }
            appendContainer() {
              this.appendTo &&
                ("body" === this.appendTo
                  ? document.body.appendChild(this.container)
                  : r.a.appendChild(this.container, this.appendTo));
            }
            restoreAppend() {
              this.container &&
                this.appendTo &&
                this.el.nativeElement.appendChild(this.container);
            }
            align() {
              this.autoZIndex &&
                (this.container.style.zIndex = String(
                  this.baseZIndex + ++r.a.zindex
                )),
                r.a.absolutePosition(this.container, this.target),
                r.a.getOffset(this.container).top <
                  r.a.getOffset(this.target).top &&
                  r.a.addClass(this.container, "ui-overlaypanel-flipped"),
                Math.floor(r.a.getOffset(this.container).left) <
                  Math.floor(r.a.getOffset(this.target).left) &&
                  r.a.getOffset(this.container).left > 0 &&
                  r.a.addClass(this.container, "ui-overlaypanel-shifted");
            }
            onAnimationStart(e) {
              "open" === e.toState &&
                ((this.container = e.element),
                this.onShow.emit(null),
                this.appendContainer(),
                this.align(),
                this.bindDocumentClickListener(),
                this.bindDocumentResizeListener());
            }
            onAnimationEnd(e) {
              switch (e.toState) {
                case "void":
                  this.destroyCallback &&
                    (this.destroyCallback(), (this.destroyCallback = null));
                  break;
                case "close":
                  this.onContainerDestroy(),
                    this.onHide.emit({}),
                    (this.render = !1);
              }
            }
            hide() {
              (this.overlayVisible = !1), this.cd.markForCheck();
            }
            onCloseClick(e) {
              this.hide(), e.preventDefault();
            }
            onWindowResize(e) {
              this.hide();
            }
            bindDocumentResizeListener() {
              (this.documentResizeListener = this.onWindowResize.bind(this)),
                window.addEventListener("resize", this.documentResizeListener);
            }
            unbindDocumentResizeListener() {
              this.documentResizeListener &&
                (window.removeEventListener(
                  "resize",
                  this.documentResizeListener
                ),
                (this.documentResizeListener = null));
            }
            onContainerDestroy() {
              (this.target = null),
                this.unbindDocumentClickListener(),
                this.unbindDocumentResizeListener();
            }
            ngOnDestroy() {
              (this.target = null),
                (this.destroyCallback = null),
                this.container &&
                  (this.restoreAppend(), this.onContainerDestroy());
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.F), i.Rb(i.i), i.Rb(i.B));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-overlayPanel"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, o.d, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.templates = s);
              },
              inputs: {
                dismissable: "dismissable",
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                showCloseIcon: "showCloseIcon",
                style: "style",
                styleClass: "styleClass",
                appendTo: "appendTo",
                ariaCloseLabel: "ariaCloseLabel",
              },
              outputs: { onShow: "onShow", onHide: "onHide" },
              ngContentSelectors: p,
              decls: 1,
              vars: 1,
              consts: [
                [3, "ngClass", "ngStyle", "class", "click", 4, "ngIf"],
                [3, "ngClass", "ngStyle", "click"],
                [1, "ui-overlaypanel-content"],
                [4, "ngTemplateOutlet"],
                [
                  "tabindex",
                  "0",
                  "class",
                  "ui-overlaypanel-close ui-state-default",
                  3,
                  "click",
                  "keydown.enter",
                  4,
                  "ngIf",
                ],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-overlaypanel-close",
                  "ui-state-default",
                  3,
                  "click",
                  "keydown.enter",
                ],
                [1, "ui-overlaypanel-close-icon", "pi", "pi-times"],
              ],
              template: function (e, t) {
                1 & e && (i.oc(), i.Lc(0, d, 5, 13, "div", 0)),
                  2 & e && i.pc("ngIf", t.render);
              },
              directives: [s.m, s.k, s.n, s.r],
              encapsulation: 2,
              data: {
                animation: [
                  Object(a.m)("animation", [
                    Object(a.j)(
                      "void",
                      Object(a.k)({ transform: "translateY(5%)", opacity: 0 })
                    ),
                    Object(a.j)(
                      "close",
                      Object(a.k)({ transform: "translateY(5%)", opacity: 0 })
                    ),
                    Object(a.j)(
                      "open",
                      Object(a.k)({ transform: "translateY(0)", opacity: 1 })
                    ),
                    Object(a.l)(
                      "void => open",
                      Object(a.e)("{{showTransitionParams}}")
                    ),
                    Object(a.l)(
                      "open => close",
                      Object(a.e)("{{hideTransitionParams}}")
                    ),
                  ]),
                ],
              },
            })),
            e
          );
        })(),
        g = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c, o.e], o.e],
            })),
            e
          );
        })();
    },
    NJ4a: function (e, t, n) {
      "use strict";
      function i(e) {
        setTimeout(() => {
          throw e;
        }, 0);
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    OA76: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var i = n("jtHE"),
        s = n("fXoL"),
        r = n("Tdnt"),
        o = n("r/UM");
      let a = (() => {
        class e {
          constructor(e, t) {
            (this.http = e), (this.storage = t);
          }
          findStorageModel() {
            return this.storage.find();
          }
          saveStorageModel(e) {
            return this.storage.save(e);
          }
          removeStorageModel() {
            return this.storage.remove();
          }
          getUserIdByName(e) {
            const t = new i.a();
            return (
              this.http.post("referral", { username: e }).subscribe(
                (e) => t.next(e.id),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          registration(e) {
            const t = new i.a(1);
            return (
              this.http.post("registration", e).subscribe(
                (e) => t.next(e),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          emailVerifyRequest() {
            const e = new i.a(1);
            return (
              this.http.post("verify-email", null).subscribe(
                () => e.next(!0),
                (t) => e.error(t.error || t)
              ),
              e.asObservable()
            );
          }
          emailVerify(e) {
            const t = new i.a(1);
            return (
              this.http.post("email/verify", { code: e }).subscribe(
                () => t.next(!0),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          passwordRestore(e) {
            const t = new i.a(1);
            return (
              this.http.post("auth/access/restore", e).subscribe(
                () => t.next(!0),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          passwordChange(e) {
            const t = new i.a(1);
            return (
              this.http.post("auth/password/restore", e).subscribe(
                () => t.next(!0),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          restoreTokenValidate(e) {
            const t = new i.a(1);
            return (
              this.http.post("auth/restore-token/validate", e).subscribe(
                (e) => t.next(e.success),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          login(e) {
            const t = new i.a(1);
            return (
              this.http.post("auth/login", e).subscribe(
                (e) => t.next(e),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          logout() {
            const e = new i.a(1);
            return e.next(!0), e.asObservable();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(r.a), s.bc(o.a));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    "P/hZ": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      let i = (() => {
        class e {
          static addClass(e, t) {
            e.classList ? e.classList.add(t) : (e.className += " " + t);
          }
          static addMultipleClasses(e, t) {
            if (e.classList) {
              let n = t.trim().split(" ");
              for (let t = 0; t < n.length; t++) e.classList.add(n[t]);
            } else {
              let n = t.split(" ");
              for (let t = 0; t < n.length; t++) e.className += " " + n[t];
            }
          }
          static removeClass(e, t) {
            e.classList
              ? e.classList.remove(t)
              : (e.className = e.className.replace(
                  new RegExp(
                    "(^|\\b)" + t.split(" ").join("|") + "(\\b|$)",
                    "gi"
                  ),
                  " "
                ));
          }
          static hasClass(e, t) {
            return e.classList
              ? e.classList.contains(t)
              : new RegExp("(^| )" + t + "( |$)", "gi").test(e.className);
          }
          static siblings(e) {
            return Array.prototype.filter.call(
              e.parentNode.children,
              function (t) {
                return t !== e;
              }
            );
          }
          static find(e, t) {
            return Array.from(e.querySelectorAll(t));
          }
          static findSingle(e, t) {
            return e ? e.querySelector(t) : null;
          }
          static index(e) {
            let t = e.parentNode.childNodes,
              n = 0;
            for (var i = 0; i < t.length; i++) {
              if (t[i] == e) return n;
              1 == t[i].nodeType && n++;
            }
            return -1;
          }
          static indexWithinGroup(e, t) {
            let n = e.parentNode ? e.parentNode.childNodes : [],
              i = 0;
            for (var s = 0; s < n.length; s++) {
              if (n[s] == e) return i;
              n[s].attributes &&
                n[s].attributes[t] &&
                1 == n[s].nodeType &&
                i++;
            }
            return -1;
          }
          static relativePosition(e, t) {
            let n = e.offsetParent
              ? { width: e.offsetWidth, height: e.offsetHeight }
              : this.getHiddenElementDimensions(e);
            const i = t.offsetHeight,
              s = t.getBoundingClientRect(),
              r = this.getViewport();
            let o, a;
            s.top + i + n.height > r.height
              ? ((o = -1 * n.height), s.top + o < 0 && (o = -1 * s.top))
              : (o = i),
              (a =
                n.width > r.width
                  ? -1 * s.left
                  : s.left + n.width > r.width
                  ? -1 * (s.left + n.width - r.width)
                  : 0),
              (e.style.top = o + "px"),
              (e.style.left = a + "px");
          }
          static absolutePosition(e, t) {
            let n,
              i,
              s = e.offsetParent
                ? { width: e.offsetWidth, height: e.offsetHeight }
                : this.getHiddenElementDimensions(e),
              r = s.height,
              o = s.width,
              a = t.offsetHeight,
              l = t.offsetWidth,
              c = t.getBoundingClientRect(),
              u = this.getWindowScrollTop(),
              h = this.getWindowScrollLeft(),
              d = this.getViewport();
            c.top + a + r > d.height
              ? ((n = c.top + u - r), n < 0 && (n = u))
              : (n = a + c.top + u),
              (i =
                c.left + o > d.width
                  ? Math.max(0, c.left + h + l - o)
                  : c.left + h),
              (e.style.top = n + "px"),
              (e.style.left = i + "px");
          }
          static getHiddenElementOuterHeight(e) {
            (e.style.visibility = "hidden"), (e.style.display = "block");
            let t = e.offsetHeight;
            return (
              (e.style.display = "none"), (e.style.visibility = "visible"), t
            );
          }
          static getHiddenElementOuterWidth(e) {
            (e.style.visibility = "hidden"), (e.style.display = "block");
            let t = e.offsetWidth;
            return (
              (e.style.display = "none"), (e.style.visibility = "visible"), t
            );
          }
          static getHiddenElementDimensions(e) {
            let t = {};
            return (
              (e.style.visibility = "hidden"),
              (e.style.display = "block"),
              (t.width = e.offsetWidth),
              (t.height = e.offsetHeight),
              (e.style.display = "none"),
              (e.style.visibility = "visible"),
              t
            );
          }
          static scrollInView(e, t) {
            let n = getComputedStyle(e).getPropertyValue("borderTopWidth"),
              i = n ? parseFloat(n) : 0,
              s = getComputedStyle(e).getPropertyValue("paddingTop"),
              r = s ? parseFloat(s) : 0,
              o = e.getBoundingClientRect(),
              a =
                t.getBoundingClientRect().top +
                document.body.scrollTop -
                (o.top + document.body.scrollTop) -
                i -
                r,
              l = e.scrollTop,
              c = e.clientHeight,
              u = this.getOuterHeight(t);
            a < 0
              ? (e.scrollTop = l + a)
              : a + u > c && (e.scrollTop = l + a - c + u);
          }
          static fadeIn(e, t) {
            e.style.opacity = 0;
            let n = +new Date(),
              i = 0,
              s = function () {
                (i =
                  +e.style.opacity.replace(",", ".") +
                  (new Date().getTime() - n) / t),
                  (e.style.opacity = i),
                  (n = +new Date()),
                  +i < 1 &&
                    ((window.requestAnimationFrame &&
                      requestAnimationFrame(s)) ||
                      setTimeout(s, 16));
              };
            s();
          }
          static fadeOut(e, t) {
            var n = 1,
              i = 50 / t;
            let s = setInterval(() => {
              (n -= i) <= 0 && ((n = 0), clearInterval(s)),
                (e.style.opacity = n);
            }, 50);
          }
          static getWindowScrollTop() {
            let e = document.documentElement;
            return (window.pageYOffset || e.scrollTop) - (e.clientTop || 0);
          }
          static getWindowScrollLeft() {
            let e = document.documentElement;
            return (window.pageXOffset || e.scrollLeft) - (e.clientLeft || 0);
          }
          static matches(e, t) {
            var n = Element.prototype;
            return (
              n.matches ||
              n.webkitMatchesSelector ||
              n.mozMatchesSelector ||
              n.msMatchesSelector ||
              function (e) {
                return (
                  -1 !== [].indexOf.call(document.querySelectorAll(e), this)
                );
              }
            ).call(e, t);
          }
          static getOuterWidth(e, t) {
            let n = e.offsetWidth;
            if (t) {
              let t = getComputedStyle(e);
              n += parseFloat(t.marginLeft) + parseFloat(t.marginRight);
            }
            return n;
          }
          static getHorizontalPadding(e) {
            let t = getComputedStyle(e);
            return parseFloat(t.paddingLeft) + parseFloat(t.paddingRight);
          }
          static getHorizontalMargin(e) {
            let t = getComputedStyle(e);
            return parseFloat(t.marginLeft) + parseFloat(t.marginRight);
          }
          static innerWidth(e) {
            let t = e.offsetWidth,
              n = getComputedStyle(e);
            return (
              (t += parseFloat(n.paddingLeft) + parseFloat(n.paddingRight)), t
            );
          }
          static width(e) {
            let t = e.offsetWidth,
              n = getComputedStyle(e);
            return (
              (t -= parseFloat(n.paddingLeft) + parseFloat(n.paddingRight)), t
            );
          }
          static getInnerHeight(e) {
            let t = e.offsetHeight,
              n = getComputedStyle(e);
            return (
              (t += parseFloat(n.paddingTop) + parseFloat(n.paddingBottom)), t
            );
          }
          static getOuterHeight(e, t) {
            let n = e.offsetHeight;
            if (t) {
              let t = getComputedStyle(e);
              n += parseFloat(t.marginTop) + parseFloat(t.marginBottom);
            }
            return n;
          }
          static getHeight(e) {
            let t = e.offsetHeight,
              n = getComputedStyle(e);
            return (
              (t -=
                parseFloat(n.paddingTop) +
                parseFloat(n.paddingBottom) +
                parseFloat(n.borderTopWidth) +
                parseFloat(n.borderBottomWidth)),
              t
            );
          }
          static getWidth(e) {
            let t = e.offsetWidth,
              n = getComputedStyle(e);
            return (
              (t -=
                parseFloat(n.paddingLeft) +
                parseFloat(n.paddingRight) +
                parseFloat(n.borderLeftWidth) +
                parseFloat(n.borderRightWidth)),
              t
            );
          }
          static getViewport() {
            let e = window,
              t = document,
              n = t.documentElement,
              i = t.getElementsByTagName("body")[0];
            return {
              width: e.innerWidth || n.clientWidth || i.clientWidth,
              height: e.innerHeight || n.clientHeight || i.clientHeight,
            };
          }
          static getOffset(e) {
            let t = e.getBoundingClientRect();
            return {
              top: t.top + document.body.scrollTop,
              left: t.left + document.body.scrollLeft,
            };
          }
          static replaceElementWith(e, t) {
            let n = e.parentNode;
            if (!n) throw "Can't replace element";
            return n.replaceChild(t, e);
          }
          static getUserAgent() {
            return navigator.userAgent;
          }
          static isIE() {
            var e = window.navigator.userAgent;
            return (
              e.indexOf("MSIE ") > 0 ||
              (e.indexOf("Trident/") > 0
                ? (e.indexOf("rv:"), !0)
                : e.indexOf("Edge/") > 0)
            );
          }
          static isIOS() {
            return (
              /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream
            );
          }
          static isAndroid() {
            return /(android)/i.test(navigator.userAgent);
          }
          static appendChild(e, t) {
            if (this.isElement(t)) t.appendChild(e);
            else {
              if (!t.el || !t.el.nativeElement)
                throw "Cannot append " + t + " to " + e;
              t.el.nativeElement.appendChild(e);
            }
          }
          static removeChild(e, t) {
            if (this.isElement(t)) t.removeChild(e);
            else {
              if (!t.el || !t.el.nativeElement)
                throw "Cannot remove " + e + " from " + t;
              t.el.nativeElement.removeChild(e);
            }
          }
          static isElement(e) {
            return "object" == typeof HTMLElement
              ? e instanceof HTMLElement
              : e &&
                  "object" == typeof e &&
                  null !== e &&
                  1 === e.nodeType &&
                  "string" == typeof e.nodeName;
          }
          static calculateScrollbarWidth(e) {
            if (e) {
              let t = getComputedStyle(e);
              return (
                e.offsetWidth -
                e.clientWidth -
                parseFloat(t.borderLeftWidth) -
                parseFloat(t.borderRightWidth)
              );
            }
            {
              if (null !== this.calculatedScrollbarWidth)
                return this.calculatedScrollbarWidth;
              let e = document.createElement("div");
              (e.className = "ui-scrollbar-measure"),
                document.body.appendChild(e);
              let t = e.offsetWidth - e.clientWidth;
              return (
                document.body.removeChild(e),
                (this.calculatedScrollbarWidth = t),
                t
              );
            }
          }
          static calculateScrollbarHeight() {
            if (null !== this.calculatedScrollbarHeight)
              return this.calculatedScrollbarHeight;
            let e = document.createElement("div");
            (e.className = "ui-scrollbar-measure"),
              document.body.appendChild(e);
            let t = e.offsetHeight - e.clientHeight;
            return (
              document.body.removeChild(e),
              (this.calculatedScrollbarWidth = t),
              t
            );
          }
          static invokeElementMethod(e, t, n) {
            e[t].apply(e, n);
          }
          static clearSelection() {
            if (window.getSelection)
              window.getSelection().empty
                ? window.getSelection().empty()
                : window.getSelection().removeAllRanges &&
                  window.getSelection().rangeCount > 0 &&
                  window.getSelection().getRangeAt(0).getClientRects().length >
                    0 &&
                  window.getSelection().removeAllRanges();
            else if (document.selection && document.selection.empty)
              try {
                document.selection.empty();
              } catch (e) {}
          }
          static getBrowser() {
            if (!this.browser) {
              let e = this.resolveUserAgent();
              (this.browser = {}),
                e.browser &&
                  ((this.browser[e.browser] = !0),
                  (this.browser.version = e.version)),
                this.browser.chrome
                  ? (this.browser.webkit = !0)
                  : this.browser.webkit && (this.browser.safari = !0);
            }
            return this.browser;
          }
          static resolveUserAgent() {
            let e = navigator.userAgent.toLowerCase(),
              t =
                /(chrome)[ \/]([\w.]+)/.exec(e) ||
                /(webkit)[ \/]([\w.]+)/.exec(e) ||
                /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
                /(msie) ([\w.]+)/.exec(e) ||
                (e.indexOf("compatible") < 0 &&
                  /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
                [];
            return { browser: t[1] || "", version: t[2] || "0" };
          }
          static isInteger(e) {
            return Number.isInteger
              ? Number.isInteger(e)
              : "number" == typeof e && isFinite(e) && Math.floor(e) === e;
          }
          static isHidden(e) {
            return null === e.offsetParent;
          }
          static getFocusableElements(t) {
            let n = e.find(
                t,
                'button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), \n                [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), \n                input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), \n                textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden]), \n                [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])'
              ),
              i = [];
            for (let e of n)
              "none" != getComputedStyle(e).display &&
                "hidden" != getComputedStyle(e).visibility &&
                i.push(e);
            return i;
          }
        }
        return (
          (e.zindex = 1e3),
          (e.calculatedScrollbarWidth = null),
          (e.calculatedScrollbarHeight = null),
          e
        );
      })();
    },
    P8Ue: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("tyNb");
      let o = (() => {
        class e {
          constructor(e, t) {
            (this.viewportScroller = e), (this.router = t);
          }
          scrollToAnchor(e) {
            this.router.navigate(["/"]),
              setTimeout(() => {
                this.viewportScroller.scrollToAnchor(e);
              }, 200);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(s.v), i.Rb(r.g));
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-main-navigation"]],
            decls: 10,
            vars: 0,
            consts: [
              [
                1,
                "nav__item",
                "my-3",
                "me-3",
                "d-flex",
                "align-items-lg-center",
                3,
                "click",
              ],
              [
                1,
                "nav__item",
                "my-3",
                "mx-3",
                "d-flex",
                "align-items-lg-center",
                3,
                "click",
              ],
              [
                1,
                "nav__item",
                "my-3",
                "ms-3",
                "d-flex",
                "align-items-lg-center",
                3,
                "click",
              ],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "li", 0),
                i.fc("click", function () {
                  return t.scrollToAnchor("main");
                }),
                i.Nc(1, "Main"),
                i.Wb(),
                i.Xb(2, "li", 1),
                i.fc("click", function () {
                  return t.scrollToAnchor("how-it-works");
                }),
                i.Nc(3, "How it works"),
                i.Wb(),
                i.Xb(4, "li", 1),
                i.fc("click", function () {
                  return t.scrollToAnchor("features");
                }),
                i.Nc(5, "Features"),
                i.Wb(),
                i.Xb(6, "li", 1),
                i.fc("click", function () {
                  return t.scrollToAnchor("plans");
                }),
                i.Nc(7, "Plans"),
                i.Wb(),
                i.Xb(8, "li", 2),
                i.fc("click", function () {
                  return t.scrollToAnchor("faq");
                }),
                i.Nc(9, "F.A.Q."),
                i.Wb());
            },
            styles: [""],
          })),
          e
        );
      })();
    },
    R0Ic: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      }),
        n.d(t, "b", function () {
          return i;
        }),
        n.d(t, "c", function () {
          return s;
        }),
        n.d(t, "d", function () {
          return b;
        }),
        n.d(t, "e", function () {
          return a;
        }),
        n.d(t, "f", function () {
          return p;
        }),
        n.d(t, "g", function () {
          return d;
        }),
        n.d(t, "h", function () {
          return g;
        }),
        n.d(t, "i", function () {
          return l;
        }),
        n.d(t, "j", function () {
          return u;
        }),
        n.d(t, "k", function () {
          return c;
        }),
        n.d(t, "l", function () {
          return h;
        }),
        n.d(t, "m", function () {
          return o;
        }),
        n.d(t, "n", function () {
          return f;
        }),
        n.d(t, "o", function () {
          return v;
        }),
        n.d(t, "p", function () {
          return y;
        });
      class i {}
      class s {}
      const r = "*";
      function o(e, t) {
        return { type: 7, name: e, definitions: t, options: {} };
      }
      function a(e, t = null) {
        return { type: 4, styles: t, timings: e };
      }
      function l(e, t = null) {
        return { type: 2, steps: e, options: t };
      }
      function c(e) {
        return { type: 6, styles: e, offset: null };
      }
      function u(e, t, n) {
        return { type: 0, name: e, styles: t, options: n };
      }
      function h(e, t, n = null) {
        return { type: 1, expr: e, animation: t, options: n };
      }
      function d(e, t = null) {
        return { type: 8, animation: e, options: t };
      }
      function p(e = null) {
        return { type: 9, options: e };
      }
      function f(e, t = null) {
        return { type: 10, animation: e, options: t };
      }
      function g(e, t, n = null) {
        return { type: 11, selector: e, animation: t, options: n };
      }
      function m(e) {
        Promise.resolve(null).then(e);
      }
      class b {
        constructor(e = 0, t = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this.parentPlayer = null),
            (this.totalTime = e + t);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          m(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {}
        setPosition(e) {}
        getPosition() {
          return 0;
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      class v {
        constructor(e) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = e);
          let t = 0,
            n = 0,
            i = 0;
          const s = this.players.length;
          0 == s
            ? m(() => this._onFinish())
            : this.players.forEach((e) => {
                e.onDone(() => {
                  ++t == s && this._onFinish();
                }),
                  e.onDestroy(() => {
                    ++n == s && this._onDestroy();
                  }),
                  e.onStart(() => {
                    ++i == s && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (e, t) => Math.max(e, t.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((e) => e.init());
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((e) => e()),
            (this._onStartFns = []));
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((e) => e.play());
        }
        pause() {
          this.players.forEach((e) => e.pause());
        }
        restart() {
          this.players.forEach((e) => e.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((e) => e.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((e) => e.destroy()),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((e) => e.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(e) {
          const t = e * this.totalTime;
          this.players.forEach((e) => {
            const n = e.totalTime ? Math.min(1, t / e.totalTime) : 1;
            e.setPosition(n);
          });
        }
        getPosition() {
          let e = 0;
          return (
            this.players.forEach((t) => {
              const n = t.getPosition();
              e = Math.min(n, e);
            }),
            e
          );
        }
        beforeDestroy() {
          this.players.forEach((e) => {
            e.beforeDestroy && e.beforeDestroy();
          });
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      const y = "!";
    },
    R1z2: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("xgWI"),
        s = n("fXoL"),
        r = n("1AIi");
      let o = (() => {
        class e {
          constructor(e, t) {
            (this.storage = e), (this.factory = t);
          }
          find() {
            const t = this.createEmptyModel(),
              n = this.storage.find(e.storageKey);
            return n && t.populate(JSON.parse(n)), t;
          }
          save(t) {
            return this.storage.create(e.storageKey, t.toString());
          }
          remove() {
            return this.storage.remove(e.storageKey);
          }
          createEmptyModel() {
            return this.factory.create(i.a.USER, {});
          }
          static get storageKey() {
            return "market_vision-user";
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(r.a), s.bc(i.a));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    RmEv: function (e, t, n) {
      "use strict";
      var i = n("tk/3"),
        s = n("fXoL"),
        r = n("RtSl");
      n.d(t, "a", function () {
        return o;
      });
      let o = (() => {
        class e extends class {
          getMessage(e) {
            return "string" == typeof e
              ? e
              : e instanceof i.d
              ? e.message
              : e.data
              ? e.data[0].constraints[0]
              : e.message;
          }
        } {
          constructor(e) {
            super(), (this.message = e);
          }
          success(e) {
            this.message.add({
              severity: "success",
              closable: !1,
              life: 2e3,
              detail: e,
            });
          }
          error(e) {
            this.message.add({
              severity: "error",
              closable: !1,
              life: 4e3,
              detail: this.getMessage(e),
            });
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(r.c));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac, providedIn: "root" })),
          e
        );
      })();
    },
    RtSl: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return u;
      }),
        n.d(t, "b", function () {
          return c;
        }),
        n.d(t, "c", function () {
          return a;
        }),
        n.d(t, "d", function () {
          return h;
        }),
        n.d(t, "e", function () {
          return d;
        });
      var i = n("fXoL"),
        s = n("XNiG"),
        r = n("ofXK");
      const o = ["*"];
      let a = (() => {
        let e = class {
          constructor() {
            (this.messageSource = new s.b()),
              (this.clearSource = new s.b()),
              (this.messageObserver = this.messageSource.asObservable()),
              (this.clearObserver = this.clearSource.asObservable());
          }
          add(e) {
            e && this.messageSource.next(e);
          }
          addAll(e) {
            e && e.length && this.messageSource.next(e);
          }
          clear(e) {
            this.clearSource.next(e || null);
          }
        };
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      var l = function (e, t, n, i) {
        var s,
          r = arguments.length,
          o =
            r < 3
              ? t
              : null === i
              ? (i = Object.getOwnPropertyDescriptor(t, n))
              : i;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          o = Reflect.decorate(e, t, n, i);
        else
          for (var a = e.length - 1; a >= 0; a--)
            (s = e[a]) &&
              (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);
        return r > 3 && o && Object.defineProperty(t, n, o), o;
      };
      let c = (() => {
          let e = class {};
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-header"]],
              ngContentSelectors: o,
              decls: 1,
              vars: 0,
              template: function (e, t) {
                1 & e && (i.oc(), i.nc(0));
              },
              encapsulation: 2,
            })),
            e
          );
        })(),
        u = (() => {
          let e = class {};
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-footer"]],
              ngContentSelectors: o,
              decls: 1,
              vars: 0,
              template: function (e, t) {
                1 & e && (i.oc(), i.nc(0));
              },
              encapsulation: 2,
            })),
            e
          );
        })(),
        h = (() => {
          let e = class {
            constructor(e) {
              this.template = e;
            }
            getType() {
              return this.name;
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.M));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "pTemplate", ""]],
              inputs: { type: "type", name: ["pTemplate", "name"] },
            })),
            l([Object(i.t)()], e.prototype, "type", void 0),
            l([Object(i.t)("pTemplate")], e.prototype, "name", void 0),
            e
          );
        })(),
        d = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[r.c]],
            })),
            e
          );
        })();
    },
    SLJP: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return w;
      }),
        n.d(t, "b", function () {
          return S;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("R0Ic"),
        o = n("RtSl");
      function a(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 6),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc(2).clear(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(2).clear(t);
            }),
            i.Sb(1, "i", 7),
            i.Wb();
        }
      }
      function l(e, t) {
        1 & e && i.Tb(0);
      }
      function c(e, t) {
        if ((1 & e && i.Sb(0, "span", 13), 2 & e)) {
          const e = i.hc(2).$implicit;
          i.pc("innerHTML", e.summary, i.Fc);
        }
      }
      function u(e, t) {
        if ((1 & e && i.Sb(0, "span", 14), 2 & e)) {
          const e = i.hc(2).$implicit;
          i.pc("innerHTML", e.detail, i.Fc);
        }
      }
      function h(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div"),
            i.Lc(1, c, 1, 1, "span", 11),
            i.Lc(2, u, 1, 1, "span", 12),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc().$implicit;
          i.Eb(1), i.pc("ngIf", e.summary), i.Eb(1), i.pc("ngIf", e.detail);
        }
      }
      function d(e, t) {
        if ((1 & e && (i.Xb(0, "span", 17), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc(2).$implicit;
          i.Eb(1), i.Oc(e.summary);
        }
      }
      function p(e, t) {
        if ((1 & e && (i.Xb(0, "span", 18), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc(2).$implicit;
          i.Eb(1), i.Oc(e.detail);
        }
      }
      function f(e, t) {
        if (
          (1 & e &&
            (i.Lc(0, d, 2, 1, "span", 15), i.Lc(1, p, 2, 1, "span", 16)),
          2 & e)
        ) {
          const e = i.hc().$implicit;
          i.pc("ngIf", e.summary), i.Eb(1), i.pc("ngIf", e.detail);
        }
      }
      function g(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "li"),
            i.Lc(1, h, 3, 2, "div", 9),
            i.Lc(2, f, 2, 2, "ng-template", null, 10, i.Mc),
            i.Wb()),
          2 & e)
        ) {
          const e = i.Bc(3),
            t = i.hc(3);
          i.Eb(1), i.pc("ngIf", !t.escape)("ngIfElse", e);
        }
      }
      function m(e, t) {
        if (
          (1 & e && (i.Xb(0, "ul"), i.Lc(1, g, 4, 2, "li", 8), i.Wb()), 2 & e)
        ) {
          const e = i.hc(2);
          i.Eb(1), i.pc("ngForOf", e.value);
        }
      }
      const b = function (e, t) {
          return { showTransitionParams: e, hideTransitionParams: t };
        },
        v = function (e) {
          return { value: "visible", params: e };
        };
      function y(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 1),
            i.Lc(1, a, 2, 0, "a", 2),
            i.Sb(2, "span", 3),
            i.Lc(3, l, 1, 0, "ng-container", 4),
            i.Lc(4, m, 2, 1, "ul", 5),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Gb(e.styleClass),
            i.pc("ngClass", e.getSeverityClass())("ngStyle", e.style)(
              "@messageAnimation",
              i.sc(
                12,
                v,
                i.tc(9, b, e.showTransitionOptions, e.hideTransitionOptions)
              )
            ),
            i.Eb(1),
            i.pc("ngIf", e.closable),
            i.Eb(1),
            i.pc("ngClass", e.icon),
            i.Eb(1),
            i.pc("ngTemplateOutlet", e.contentTemplate),
            i.Eb(1),
            i.pc("ngIf", e.value && e.value.length);
        }
      }
      let w = (() => {
          let e = class {
            constructor(e, t) {
              (this.messageService = e),
                (this.el = t),
                (this.closable = !0),
                (this.enableService = !0),
                (this.escape = !0),
                (this.showTransitionOptions = "300ms ease-out"),
                (this.hideTransitionOptions = "250ms ease-in"),
                (this.valueChange = new i.o());
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "content":
                  default:
                    this.contentTemplate = e.template;
                }
              }),
                this.messageService &&
                  this.enableService &&
                  !this.contentTemplate &&
                  ((this.messageSubscription =
                    this.messageService.messageObserver.subscribe((e) => {
                      if (e)
                        if (e instanceof Array) {
                          let t = e.filter((e) => this.key === e.key);
                          this.value = this.value
                            ? [...this.value, ...t]
                            : [...t];
                        } else
                          this.key === e.key &&
                            (this.value = this.value
                              ? [...this.value, e]
                              : [e]);
                    })),
                  (this.clearSubscription =
                    this.messageService.clearObserver.subscribe((e) => {
                      e
                        ? this.key === e && (this.value = null)
                        : (this.value = null);
                    })));
            }
            hasMessages() {
              let e = this.el.nativeElement.parentElement;
              return (
                !(!e || !e.offsetParent) &&
                (null != this.contentTemplate ||
                  (this.value && this.value.length > 0))
              );
            }
            getSeverityClass() {
              if (this.severity) return "ui-messages-" + this.severity;
              {
                const e = this.value[0];
                if (e) {
                  const t = ["info", "warn", "error", "success"].find(
                    (t) => t === e.severity
                  );
                  return (
                    (t || e.severity) && "ui-messages-" + (t || e.severity)
                  );
                }
              }
              return null;
            }
            clear(e) {
              (this.value = []),
                this.valueChange.emit(this.value),
                e.preventDefault();
            }
            get icon() {
              const e =
                this.severity ||
                (this.hasMessages() ? this.value[0].severity : null);
              if (this.hasMessages())
                switch (e) {
                  case "success":
                    return "pi-check";
                  case "info":
                    return "pi-info-circle";
                  case "error":
                    return "pi-times";
                  case "warn":
                    return "pi-exclamation-triangle";
                  default:
                    return e && this.value[0].icon
                      ? this.value[0].icon
                      : "pi-info-circle";
                }
              return null;
            }
            ngOnDestroy() {
              this.messageSubscription &&
                this.messageSubscription.unsubscribe(),
                this.clearSubscription && this.clearSubscription.unsubscribe();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(o.c, 8), i.Rb(i.m));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-messages"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, o.d, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.templates = s);
              },
              inputs: {
                closable: "closable",
                enableService: "enableService",
                escape: "escape",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                value: "value",
                style: "style",
                styleClass: "styleClass",
                key: "key",
                severity: "severity",
              },
              outputs: { valueChange: "valueChange" },
              decls: 1,
              vars: 1,
              consts: [
                [
                  "class",
                  "ui-messages ui-widget ui-corner-all",
                  "role",
                  "alert",
                  3,
                  "ngClass",
                  "ngStyle",
                  "class",
                  4,
                  "ngIf",
                ],
                [
                  "role",
                  "alert",
                  1,
                  "ui-messages",
                  "ui-widget",
                  "ui-corner-all",
                  3,
                  "ngClass",
                  "ngStyle",
                ],
                [
                  "tabindex",
                  "0",
                  "class",
                  "ui-messages-close",
                  3,
                  "click",
                  "keydown.enter",
                  4,
                  "ngIf",
                ],
                [1, "ui-messages-icon", "pi", 3, "ngClass"],
                [4, "ngTemplateOutlet"],
                [4, "ngIf"],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-messages-close",
                  3,
                  "click",
                  "keydown.enter",
                ],
                [1, "pi", "pi-times"],
                [4, "ngFor", "ngForOf"],
                [4, "ngIf", "ngIfElse"],
                ["escapeOut", ""],
                ["class", "ui-messages-summary", 3, "innerHTML", 4, "ngIf"],
                ["class", "ui-messages-detail", 3, "innerHTML", 4, "ngIf"],
                [1, "ui-messages-summary", 3, "innerHTML"],
                [1, "ui-messages-detail", 3, "innerHTML"],
                ["class", "ui-messages-summary", 4, "ngIf"],
                ["class", "ui-messages-detail", 4, "ngIf"],
                [1, "ui-messages-summary"],
                [1, "ui-messages-detail"],
              ],
              template: function (e, t) {
                1 & e && i.Lc(0, y, 5, 14, "div", 0),
                  2 & e && i.pc("ngIf", t.hasMessages());
              },
              directives: [s.m, s.k, s.n, s.r, s.l],
              encapsulation: 2,
              data: {
                animation: [
                  Object(r.m)("messageAnimation", [
                    Object(r.j)(
                      "visible",
                      Object(r.k)({ transform: "translateY(0)", opacity: 1 })
                    ),
                    Object(r.l)("void => *", [
                      Object(r.k)({
                        transform: "translateY(-25%)",
                        opacity: 0,
                      }),
                      Object(r.e)("{{showTransitionParams}}"),
                    ]),
                    Object(r.l)("* => void", [
                      Object(r.e)(
                        "{{hideTransitionParams}}",
                        Object(r.k)({
                          opacity: 0,
                          transform: "translateY(-25%)",
                        })
                      ),
                    ]),
                  ]),
                ],
              },
            })),
            e
          );
        })(),
        S = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c]],
            })),
            e
          );
        })();
    },
    SScL: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var i = n("jtHE"),
        s = n("fXoL"),
        r = n("Tdnt"),
        o = n("Ytcc");
      let a = (() => {
        class e {
          constructor(e, t) {
            (this.http = e), (this.storage = t), this.removeStorageModel();
          }
          findStorageModel() {
            return this.storage.find();
          }
          saveStorageModel(e) {
            return this.storage.save(e);
          }
          removeStorageModel() {
            return this.storage.remove();
          }
          getLanguages() {
            const e = new i.a(1);
            return (
              this.http.get("i18n/languages").subscribe(
                (t) => e.next(t),
                (t) => e.error(t.error || t)
              ),
              e.asObservable()
            );
          }
          getTranslates(e) {
            const t = new i.a(1);
            return (
              this.http.get("i18n/" + e).subscribe(
                (e) => t.next(e),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(r.a), s.bc(o.a));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    SeVD: function (e, t, n) {
      "use strict";
      var i = n("ngJS"),
        s = n("NJ4a"),
        r = n("Lhse"),
        o = n("kJWO"),
        a = n("I55L"),
        l = n("c2HN"),
        c = n("XoHu");
      n.d(t, "a", function () {
        return u;
      });
      const u = (e) => {
        if (e && "function" == typeof e[o.a])
          return (
            (u = e),
            (e) => {
              const t = u[o.a]();
              if ("function" != typeof t.subscribe)
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              return t.subscribe(e);
            }
          );
        if (Object(a.a)(e)) return Object(i.a)(e);
        if (Object(l.a)(e))
          return (
            (n = e),
            (e) => (
              n
                .then(
                  (t) => {
                    e.closed || (e.next(t), e.complete());
                  },
                  (t) => e.error(t)
                )
                .then(null, s.a),
              e
            )
          );
        if (e && "function" == typeof e[r.a])
          return (
            (t = e),
            (e) => {
              const n = t[r.a]();
              for (;;) {
                const t = n.next();
                if (t.done) {
                  e.complete();
                  break;
                }
                if ((e.next(t.value), e.closed)) break;
              }
              return (
                "function" == typeof n.return &&
                  e.add(() => {
                    n.return && n.return();
                  }),
                e
              );
            }
          );
        {
          const t = Object(c.a)(e) ? "an invalid object" : `'${e}'`;
          throw new TypeError(
            `You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`
          );
        }
        var t, n, u;
      };
    },
    SpAZ: function (e, t, n) {
      "use strict";
      function i(e) {
        return e;
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    SxV6: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var i = n("sVev"),
        s = n("pLZG"),
        r = n("IzEk"),
        o = n("xbPD"),
        a = n("XDbj"),
        l = n("SpAZ");
      function c(e, t) {
        const n = arguments.length >= 2;
        return (c) =>
          c.pipe(
            e ? Object(s.a)((t, n) => e(t, n, c)) : l.a,
            Object(r.a)(1),
            n ? Object(o.a)(t) : Object(a.a)(() => new i.a())
          );
      }
    },
    Tdnt: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("tk/3"),
        s = n("AytR"),
        r = n("fXoL");
      let o = (() => {
        class e {
          constructor(e) {
            (this.http = e), (this.baseUrl = "" + s.a.apiUrl);
          }
          get(e, t) {
            return this.http.get(
              this.getFullUrl(e, (t && t.absolute) || !1),
              t
            );
          }
          post(e, t, n) {
            return this.http.post(
              this.getFullUrl(e, (n && n.absolute) || !1),
              t,
              n
            );
          }
          delete(e, t) {
            return this.http.delete(
              this.getFullUrl(e, (t && t.absolute) || !1),
              t
            );
          }
          put(e, t, n) {
            return this.http.put(
              this.getFullUrl(e, (n && n.absolute) || !1),
              t,
              n
            );
          }
          patch(e, t, n) {
            return this.http.patch(
              this.getFullUrl(e, (n && n.absolute) || !1),
              t,
              n
            );
          }
          getFullUrl(e, t) {
            return t ? e : this.baseUrl + "/" + e;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r.bc(i.b));
          }),
          (e.ɵprov = r.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    TkeJ: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return h;
      }),
        n.d(t, "b", function () {
          return y;
        });
      var i,
        s = n("AcyG"),
        r = n("mrSG"),
        o = n("tyNb"),
        a = n("z5Zb"),
        l = n("SxV6"),
        c = n("fXoL"),
        u = n("ofXK");
      class h {
        constructor(e, t, n) {
          (this.path = e), (this.queryParams = t), (this.extras = n);
        }
        static get type() {
          return "[Router] Navigate";
        }
      }
      class d {
        constructor(e, t, n = "none") {
          (this.routerState = e), (this.event = t), (this.trigger = n);
        }
        static get type() {
          return "[Router] RouterNavigation";
        }
      }
      class p {
        constructor(e, t, n, i = "none") {
          (this.routerState = e),
            (this.storeState = t),
            (this.event = n),
            (this.trigger = i);
        }
        static get type() {
          return "[Router] RouterCancel";
        }
      }
      class f {
        constructor(e, t, n, i = "none") {
          (this.routerState = e),
            (this.storeState = t),
            (this.event = n),
            (this.trigger = i);
        }
        static get type() {
          return "[Router] RouterError";
        }
      }
      class g {
        constructor(e, t, n = "none") {
          (this.routerState = e), (this.event = t), (this.trigger = n);
        }
        static get type() {
          return "[Router] RouterDataResolved";
        }
      }
      class m {}
      class b {
        serialize(e) {
          return { root: this.serializeRoute(e.root), url: e.url };
        }
        serializeRoute(e) {
          const t = e.children.map((e) => this.serializeRoute(e));
          return {
            url: e.url,
            params: e.params,
            queryParams: e.queryParams,
            fragment: e.fragment,
            data: e.data,
            outlet: e.outlet,
            component: null,
            routeConfig: null,
            root: null,
            parent: null,
            firstChild: t[0],
            children: t,
            pathFromRoot: null,
            paramMap: e.paramMap,
            queryParamMap: e.queryParamMap,
            toString: e.toString,
          };
        }
      }
      let v = (() => {
          let e = (i = class {
            constructor(e, t, n, i, s, r, o) {
              (this._store = e),
                (this._router = t),
                (this._serializer = n),
                (this._ngZone = i),
                (this._urlSerializer = s),
                (this._locationStrategy = r),
                (this._location = o),
                (this._trigger = "none"),
                (this._routerState = null),
                (this._storeState = null),
                (this._lastRoutesRecognized = null),
                this.setUpStoreListener(),
                this.setUpRouterEventsListener(),
                this.checkInitialNavigationOnce();
            }
            static state(e) {
              return e && e.state;
            }
            static url(e) {
              return e && e.state && e.state.url;
            }
            navigate(e, t) {
              return this._ngZone.run(() =>
                this._router.navigate(
                  t.path,
                  Object.assign({ queryParams: t.queryParams }, t.extras)
                )
              );
            }
            angularRouterAction(e, t) {
              e.setState(
                Object.assign({}, e.getState(), {
                  trigger: t.trigger,
                  state: t.routerState,
                  navigationId: t.event.id,
                })
              );
            }
            setUpStoreListener() {
              this._store.select(i).subscribe((e) => {
                this.navigateIfNeeded(e);
              });
            }
            setUpRouterEventsListener() {
              this._router.events.subscribe((e) => {
                e instanceof o.e
                  ? this.navigationStart()
                  : e instanceof o.m
                  ? (this._lastRoutesRecognized = e)
                  : e instanceof o.f
                  ? this.dispatchRouterDataResolved(e)
                  : e instanceof o.b
                  ? (this.dispatchRouterCancel(e), this.reset())
                  : e instanceof o.d
                  ? (this.dispatchRouterError(e), this.reset())
                  : e instanceof o.c && (this.navigationEnd(), this.reset());
              });
            }
            navigationStart() {
              (this._routerState = this._serializer.serialize(
                this._router.routerState.snapshot
              )),
                "none" !== this._trigger &&
                  (this._storeState = this._store.selectSnapshot(i));
            }
            navigationEnd() {
              this.shouldDispatchRouterNavigation() &&
                this.dispatchRouterNavigation();
            }
            shouldDispatchRouterNavigation() {
              return !this._storeState || "store" !== this._trigger;
            }
            navigateIfNeeded(e) {
              !this._storeState ||
                !this._storeState.state ||
                !e ||
                "router" === e.trigger ||
                this._router.url === this._storeState.state.url ||
                ((this._trigger = "store"),
                this._ngZone.run(() => {
                  this._router.navigateByUrl(this._storeState.state.url);
                }));
            }
            dispatchRouterNavigation() {
              const e = this._serializer.serialize(
                this._lastRoutesRecognized.state
              );
              this.dispatchRouterAction(
                new d(
                  e,
                  new o.m(
                    this._lastRoutesRecognized.id,
                    this._lastRoutesRecognized.url,
                    this._lastRoutesRecognized.urlAfterRedirects,
                    e
                  ),
                  this._trigger
                )
              );
            }
            dispatchRouterCancel(e) {
              this.dispatchRouterAction(
                new p(this._routerState, this._storeState, e, this._trigger)
              );
            }
            dispatchRouterError(e) {
              this.dispatchRouterAction(
                new f(
                  this._routerState,
                  this._storeState,
                  new o.d(e.id, e.url, "" + e),
                  this._trigger
                )
              );
            }
            dispatchRouterAction(e) {
              this._trigger = "router";
              try {
                this._store.dispatch(e);
              } finally {
                this._trigger = "none";
              }
            }
            dispatchRouterDataResolved(e) {
              const t = this._serializer.serialize(e.state);
              this.dispatchRouterAction(new g(t, e, this._trigger));
            }
            reset() {
              (this._trigger = "none"),
                (this._storeState = null),
                (this._routerState = null);
            }
            checkInitialNavigationOnce() {
              Object(a.f)() ||
                this._router.events
                  .pipe(Object(l.a)((e) => e instanceof o.m))
                  .subscribe(({ url: e }) => {
                    const t = this._location.normalize(
                        this._locationStrategy.path(!0)
                      ),
                      n = this._urlSerializer.parse(t);
                    this._urlSerializer.serialize(n) !== e &&
                      this._router.navigateByUrl(t);
                  });
            }
          });
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                c.bc(s.h),
                c.bc(o.g),
                c.bc(m),
                c.bc(c.B),
                c.bc(o.n),
                c.bc(u.j),
                c.bc(u.i)
              );
            }),
            (e.ɵprov = c.Nb({ token: e, factory: e.ɵfac })),
            Object(r.b)(
              [
                Object(s.a)(h),
                Object(r.c)("design:type", Function),
                Object(r.c)("design:paramtypes", [Object, h]),
                Object(r.c)("design:returntype", void 0),
              ],
              e.prototype,
              "navigate",
              null
            ),
            Object(r.b)(
              [
                Object(s.a)([d, f, p, g]),
                Object(r.c)("design:type", Function),
                Object(r.c)("design:paramtypes", [Object, Object]),
                Object(r.c)("design:returntype", void 0),
              ],
              e.prototype,
              "angularRouterAction",
              null
            ),
            Object(r.b)(
              [
                Object(s.f)(),
                Object(r.c)("design:type", Function),
                Object(r.c)("design:paramtypes", [Object]),
                Object(r.c)("design:returntype", void 0),
              ],
              e,
              "state",
              null
            ),
            Object(r.b)(
              [
                Object(s.f)(),
                Object(r.c)("design:type", Function),
                Object(r.c)("design:paramtypes", [Object]),
                Object(r.c)("design:returntype", Object),
              ],
              e,
              "url",
              null
            ),
            (e = i =
              Object(r.b)(
                [
                  Object(s.g)({
                    name: "router",
                    defaults: {
                      state: void 0,
                      navigationId: void 0,
                      trigger: "none",
                    },
                  }),
                ],
                e
              )),
            e
          );
        })(),
        y = (() => {
          class e {
            static forRoot() {
              return { ngModule: e, providers: [{ provide: m, useClass: b }] };
            }
          }
          return (
            (e.ɵmod = c.Pb({ type: e })),
            (e.ɵinj = c.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.d.forFeature([v])]],
            })),
            e
          );
        })();
    },
    UMfn: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return B;
      }),
        n.d(t, "b", function () {
          return H;
        }),
        n.d(t, "c", function () {
          return X;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("bTu8"),
        o = n("XNiG"),
        a = n("LRne");
      const l = ["prevElRef"],
        c = ["nextElRef"],
        u = ["scrollbarElRef"],
        h = ["paginationElRef"];
      function d(e, t) {
        1 & e && (i.Vb(0), i.Sb(1, "div", 6, 7), i.Sb(3, "div", 8, 9), i.Ub());
      }
      function p(e, t) {
        1 & e && i.Sb(0, "div", 10, 11);
      }
      function f(e, t) {
        1 & e && i.Sb(0, "div", 12, 13);
      }
      function g(e, t) {}
      function m(e, t) {
        1 & e && i.Lc(0, g, 0, 0, "ng-template");
      }
      function b(e, t) {}
      function v(e, t) {
        1 & e && i.Lc(0, b, 0, 0, "ng-template");
      }
      function y(e, t) {}
      function w(e, t) {
        1 & e && i.Lc(0, y, 0, 0, "ng-template");
      }
      function S(e, t) {}
      const _ = function (e) {
        return { $implicit: e };
      };
      function C(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 3), i.Lc(1, S, 0, 0, "ng-template", 18), i.Wb()),
          2 & e)
        ) {
          const e = i.hc().$implicit,
            t = i.hc(2);
          i.pc("ngClass", t.zoomContainerClass),
            i.Eb(1),
            i.pc("ngTemplateOutlet", e.template)(
              "ngTemplateOutletContext",
              i.sc(3, _, e.slideData)
            );
        }
      }
      function E(e, t) {}
      function O(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, E, 0, 0, "ng-template", 18), i.Ub()),
          2 & e)
        ) {
          const e = i.hc().$implicit;
          i.Eb(1),
            i.pc("ngTemplateOutlet", e.template)(
              "ngTemplateOutletContext",
              i.sc(2, _, e.slideData)
            );
        }
      }
      function x(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 15),
            i.Lc(1, C, 2, 5, "div", 16),
            i.Lc(2, O, 2, 4, "ng-container", 17),
            i.Wb()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = i.hc().key,
            s = i.hc();
          i.Jc(s.style),
            i.pc(
              "ngClass",
              (e.class ? e.class + " " : "") +
                s.slideClass +
                ("" !== n ? " " + s.slideDuplicateClass : "")
            )("ngSwitch", e.zoom),
            i.Fb(
              "data-swiper-slide-index",
              e.virtualIndex ? e.virtualIndex : e.slideIndex
            ),
            i.Eb(1),
            i.pc("ngSwitchCase", !0);
        }
      }
      function T(e, t) {
        1 & e && (i.Lc(0, x, 3, 6, "div", 14), i.ic(1, "async")),
          2 & e && i.pc("ngForOf", i.jc(1, 1, t.loopSlides));
      }
      const k = [
          [["", "slot", "container-start"]],
          [["", "slot", "wrapper-start"]],
          [["", "slot", "wrapper-end"]],
          [["", "slot", "container-end"]],
        ],
        M = function (e, t) {
          return [e, t];
        },
        I = function (e) {
          return { loopSlides: e, key: "prepend" };
        },
        P = function (e) {
          return { loopSlides: e, key: "" };
        },
        R = function (e) {
          return { loopSlides: e, key: "append" };
        },
        N = [
          "[slot=container-start]",
          "[slot=wrapper-start]",
          "[slot=wrapper-end]",
          "[slot=container-end]",
        ];
      function L(e) {
        return (
          "object" == typeof e &&
          null !== e &&
          e.constructor &&
          "Object" === Object.prototype.toString.call(e).slice(8, -1)
        );
      }
      function A(e, t, n) {
        return (
          (!0 === j(e) && t && !t.el) ||
          !(
            "boolean" != typeof t &&
            t.el !== (null == n ? void 0 : n.nativeElement) &&
            ("string" == typeof t.el || "object" == typeof t.el)
          )
        );
      }
      function D(e, t) {
        const n = ["__proto__", "constructor", "prototype"];
        Object.keys(t)
          .filter((e) => n.indexOf(e) < 0)
          .forEach((n) => {
            void 0 !== e[n]
              ? (e[n] && !t[n]) ||
                (L(t[n]) && L(e[n]) && Object.keys(t[n]).length > 0
                  ? t[n].__swiper__
                    ? (e[n] = t[n])
                    : D(e[n], t[n])
                  : (e[n] = t[n]))
              : (e[n] = t[n]);
          });
      }
      function j(e) {
        return null != e && "" + e != "false";
      }
      const F = ["pagination", "navigation", "scrollbar", "virtual"];
      function V(e, t = {}) {
        return L(e) ? e : !0 === j(e) && t;
      }
      const W = [
        "init",
        "_direction",
        "touchEventsTarget",
        "initialSlide",
        "_speed",
        "cssMode",
        "updateOnWindowResize",
        "resizeObserver",
        "nested",
        "_width",
        "_height",
        "preventInteractionOnTransition",
        "userAgent",
        "url",
        "_edgeSwipeDetection",
        "_edgeSwipeThreshold",
        "_freeMode",
        "_freeModeMomentum",
        "_freeModeMomentumRatio",
        "_freeModeMomentumBounce",
        "_freeModeMomentumBounceRatio",
        "_freeModeMomentumVelocityRatio",
        "_freeModeSticky",
        "_freeModeMinimumVelocity",
        "_autoHeight",
        "setWrapperSize",
        "virtualTranslate",
        "_effect",
        "breakpoints",
        "_spaceBetween",
        "_slidesPerView",
        "_slidesPerColumn",
        "_slidesPerColumnFill",
        "_slidesPerGroup",
        "_slidesPerGroupSkip",
        "_centeredSlides",
        "_centeredSlidesBounds",
        "_slidesOffsetBefore",
        "_slidesOffsetAfter",
        "normalizeSlideIndex",
        "_centerInsufficientSlides",
        "_watchOverflow",
        "roundLengths",
        "touchRatio",
        "touchAngle",
        "simulateTouch",
        "_shortSwipes",
        "_longSwipes",
        "longSwipesRatio",
        "longSwipesMs",
        "_followFinger",
        "allowTouchMove",
        "_threshold",
        "touchMoveStopPropagation",
        "touchStartPreventDefault",
        "touchStartForcePreventDefault",
        "touchReleaseOnEdges",
        "uniqueNavElements",
        "_resistance",
        "_resistanceRatio",
        "_watchSlidesProgress",
        "_watchSlidesVisibility",
        "_grabCursor",
        "preventClicks",
        "preventClicksPropagation",
        "_slideToClickedSlide",
        "_preloadImages",
        "updateOnImagesReady",
        "_loop",
        "_loopAdditionalSlides",
        "_loopedSlides",
        "_loopFillGroupWithBlank",
        "loopPreventsSlide",
        "_allowSlidePrev",
        "_allowSlideNext",
        "_swipeHandler",
        "_noSwiping",
        "noSwipingClass",
        "noSwipingSelector",
        "passiveListeners",
        "containerModifierClass",
        "slideClass",
        "slideBlankClass",
        "slideActiveClass",
        "slideDuplicateActiveClass",
        "slideVisibleClass",
        "slideDuplicateClass",
        "slideNextClass",
        "slideDuplicateNextClass",
        "slidePrevClass",
        "slideDuplicatePrevClass",
        "wrapperClass",
        "runCallbacksOnInit",
        "observer",
        "observeParents",
        "observeSlideChildren",
        "a11y",
        "autoplay",
        "_controller",
        "coverflowEffect",
        "cubeEffect",
        "fadeEffect",
        "flipEffect",
        "hashNavigation",
        "history",
        "keyboard",
        "lazy",
        "mousewheel",
        "_navigation",
        "_pagination",
        "parallax",
        "_scrollbar",
        "_thumbs",
        "virtual",
        "zoom",
      ].map((e) => e.replace(/_/, ""));
      function z(e = {}) {
        const t = { on: {} },
          n = {};
        D(t, r.a.defaults), D(t, r.a.extendedDefaults), (t._emitClasses = !0);
        const i = {};
        return (
          Object.keys(e).forEach((s) => {
            const r = s.replace(/^_/, "");
            void 0 !== e[r] &&
              (W.indexOf(r) >= 0
                ? L(e[r])
                  ? ((t[r] = {}), (n[r] = {}), D(t[r], e[r]), D(n[r], e[r]))
                  : ((t[r] = e[r]), (n[r] = e[r]))
                : (i[r] = e[r]));
          }),
          { params: t, passedParams: n, rest: i }
        );
      }
      let X = (() => {
          class e {
            constructor(e) {
              (this.template = e),
                (this.class = ""),
                (this.slideData = {
                  isActive: !1,
                  isPrev: !1,
                  isNext: !1,
                  isVisible: !1,
                  isDuplicate: !1,
                });
            }
            set zoom(e) {
              this._zoom = j(e);
            }
            get zoom() {
              return this._zoom;
            }
            get classNames() {
              return this._classNames;
            }
            set classNames(e) {
              this._classNames !== e &&
                ((this._classNames = e),
                (this.slideData = {
                  isActive: this._hasClass([
                    "swiper-slide-active",
                    "swiper-slide-duplicate-active",
                  ]),
                  isVisible: this._hasClass(["swiper-slide-visible"]),
                  isDuplicate: this._hasClass(["swiper-slide-duplicate"]),
                  isPrev: this._hasClass([
                    "swiper-slide-prev",
                    "swiper-slide-duplicate-prev",
                  ]),
                  isNext: this._hasClass([
                    "swiper-slide-next",
                    "swiper-slide-duplicate-next",
                  ]),
                }));
            }
            _hasClass(e) {
              return e.some((e) => this._classNames.indexOf(e) >= 0);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.M));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["ng-template", "swiperSlide", ""]],
              inputs: {
                class: "class",
                zoom: "zoom",
                virtualIndex: "virtualIndex",
              },
            })),
            e
          );
        })(),
        B = (() => {
          class e {
            constructor(e, t, n, s) {
              (this._ngZone = e),
                (this.elementRef = t),
                (this._changeDetectorRef = n),
                (this._platformId = s),
                (this.slideClass = "swiper-slide"),
                (this.wrapperClass = "swiper-wrapper"),
                (this.showNavigation = !0),
                (this.showPagination = !0),
                (this.showScrollbar = !0),
                (this.s__beforeBreakpoint = new i.o()),
                (this.s__containerClasses = new i.o()),
                (this.s__slideClass = new i.o()),
                (this.s__swiper = new i.o()),
                (this.s_activeIndexChange = new i.o()),
                (this.s_afterInit = new i.o()),
                (this.s_autoplay = new i.o()),
                (this.s_autoplayStart = new i.o()),
                (this.s_autoplayStop = new i.o()),
                (this.s_beforeDestroy = new i.o()),
                (this.s_beforeInit = new i.o()),
                (this.s_beforeLoopFix = new i.o()),
                (this.s_beforeResize = new i.o()),
                (this.s_beforeSlideChangeStart = new i.o()),
                (this.s_beforeTransitionStart = new i.o()),
                (this.s_breakpoint = new i.o()),
                (this.s_changeDirection = new i.o()),
                (this.s_click = new i.o()),
                (this.s_doubleTap = new i.o()),
                (this.s_doubleClick = new i.o()),
                (this.s_destroy = new i.o()),
                (this.s_fromEdge = new i.o()),
                (this.s_hashChange = new i.o()),
                (this.s_hashSet = new i.o()),
                (this.s_imagesReady = new i.o()),
                (this.s_init = new i.o()),
                (this.s_keyPress = new i.o()),
                (this.s_lazyImageLoad = new i.o()),
                (this.s_lazyImageReady = new i.o()),
                (this.s_loopFix = new i.o()),
                (this.s_momentumBounce = new i.o()),
                (this.s_navigationHide = new i.o()),
                (this.s_navigationShow = new i.o()),
                (this.s_observerUpdate = new i.o()),
                (this.s_orientationchange = new i.o()),
                (this.s_paginationHide = new i.o()),
                (this.s_paginationRender = new i.o()),
                (this.s_paginationShow = new i.o()),
                (this.s_paginationUpdate = new i.o()),
                (this.s_progress = new i.o()),
                (this.s_reachBeginning = new i.o()),
                (this.s_reachEnd = new i.o()),
                (this.s_realIndexChange = new i.o()),
                (this.s_resize = new i.o()),
                (this.s_scroll = new i.o()),
                (this.s_scrollbarDragEnd = new i.o()),
                (this.s_scrollbarDragMove = new i.o()),
                (this.s_scrollbarDragStart = new i.o()),
                (this.s_setTransition = new i.o()),
                (this.s_setTranslate = new i.o()),
                (this.s_slideChange = new i.o()),
                (this.s_slideChangeTransitionEnd = new i.o()),
                (this.s_slideChangeTransitionStart = new i.o()),
                (this.s_slideNextTransitionEnd = new i.o()),
                (this.s_slideNextTransitionStart = new i.o()),
                (this.s_slidePrevTransitionEnd = new i.o()),
                (this.s_slidePrevTransitionStart = new i.o()),
                (this.s_slideResetTransitionStart = new i.o()),
                (this.s_slideResetTransitionEnd = new i.o()),
                (this.s_sliderMove = new i.o()),
                (this.s_sliderFirstMove = new i.o()),
                (this.s_slidesLengthChange = new i.o()),
                (this.s_slidesGridLengthChange = new i.o()),
                (this.s_snapGridLengthChange = new i.o()),
                (this.s_snapIndexChange = new i.o()),
                (this.s_tap = new i.o()),
                (this.s_toEdge = new i.o()),
                (this.s_touchEnd = new i.o()),
                (this.s_touchMove = new i.o()),
                (this.s_touchMoveOpposite = new i.o()),
                (this.s_touchStart = new i.o()),
                (this.s_transitionEnd = new i.o()),
                (this.s_transitionStart = new i.o()),
                (this.s_update = new i.o()),
                (this.s_zoomChange = new i.o()),
                (this.s_swiper = new i.o()),
                (this.indexChange = new i.o()),
                (this._activeSlides = new o.b()),
                (this.containerClasses = "swiper-container"),
                (this.slidesChanges = (e) => {
                  (this.slides = e.map(
                    (e, t) => (
                      (e.slideIndex = t), (e.classNames = this.slideClass), e
                    )
                  )),
                    this.loop && !this.loopedSlides && this.calcLoopedSlides(),
                    this.virtual
                      ? this.swiperRef &&
                        this.swiperRef.virtual &&
                        this._ngZone.runOutsideAngular(() => {
                          (this.swiperRef.virtual.slides = this.slides),
                            this.swiperRef.virtual.update(!0);
                        })
                      : ((this.prependSlides = Object(a.a)(
                          this.slides.slice(
                            this.slides.length - this.loopedSlides
                          )
                        )),
                        (this.appendSlides = Object(a.a)(
                          this.slides.slice(0, this.loopedSlides)
                        ))),
                    this._changeDetectorRef.detectChanges();
                }),
                (this.style = null),
                (this.updateVirtualSlides = (e) => {
                  !this.swiperRef ||
                    (this.currentVirtualData &&
                      this.currentVirtualData.from === e.from &&
                      this.currentVirtualData.to === e.to &&
                      this.currentVirtualData.offset === e.offset) ||
                    ((this.style = this.swiperRef.isHorizontal()
                      ? {
                          [this.swiperRef.rtlTranslate ? "right" : "left"]:
                            e.offset + "px",
                        }
                      : { top: e.offset + "px" }),
                    (this.currentVirtualData = e),
                    this._activeSlides.next(e.slides),
                    this._ngZone.run(() => {
                      this._changeDetectorRef.detectChanges();
                    }),
                    this._ngZone.runOutsideAngular(() => {
                      this.swiperRef.updateSlides(),
                        this.swiperRef.updateProgress(),
                        this.swiperRef.updateSlidesClasses(),
                        this.swiperRef.lazy &&
                          this.swiperRef.params.lazy.enabled &&
                          this.swiperRef.lazy.load(),
                        this.swiperRef.virtual.update(!0);
                    }));
                });
            }
            set navigation(e) {
              var t, n, i;
              const s =
                  "boolean" != typeof this._navigation
                    ? null === (t = this._navigation) || void 0 === t
                      ? void 0
                      : t.nextEl
                    : null,
                r =
                  "boolean" != typeof this._navigation
                    ? null === (n = this._navigation) || void 0 === n
                      ? void 0
                      : n.prevEl
                    : null;
              (this._navigation = V(e, {
                nextEl: s || null,
                prevEl: r || null,
              })),
                (this.showNavigation = !(
                  !0 !== j(e) ||
                  (this._navigation &&
                    "boolean" != typeof this._navigation &&
                    this._navigation.prevEl !==
                      (null === (i = this._prevElRef) || void 0 === i
                        ? void 0
                        : i.nativeElement) &&
                    (null !== this._navigation.prevEl ||
                      null !== this._navigation.nextEl) &&
                    ("string" == typeof this._navigation.nextEl ||
                      "string" == typeof this._navigation.prevEl ||
                      "object" == typeof this._navigation.nextEl ||
                      "object" == typeof this._navigation.prevEl))
                ));
            }
            get navigation() {
              return this._navigation;
            }
            set pagination(e) {
              var t;
              const n =
                "boolean" != typeof this._pagination
                  ? null === (t = this._pagination) || void 0 === t
                    ? void 0
                    : t.el
                  : null;
              (this._pagination = V(e, { el: n || null })),
                (this.showPagination = A(
                  e,
                  this._pagination,
                  this._paginationElRef
                ));
            }
            get pagination() {
              return this._pagination;
            }
            set scrollbar(e) {
              var t;
              const n =
                "boolean" != typeof this._scrollbar
                  ? null === (t = this._scrollbar) || void 0 === t
                    ? void 0
                    : t.el
                  : null;
              (this._scrollbar = V(e, { el: n || null })),
                (this.showScrollbar = A(
                  e,
                  this._scrollbar,
                  this._scrollbarElRef
                ));
            }
            get scrollbar() {
              return this._scrollbar;
            }
            set virtual(e) {
              this._virtual = V(e);
            }
            get virtual() {
              return this._virtual;
            }
            set index(e) {
              this.setIndex(e);
            }
            set config(e) {
              this.updateSwiper(e);
              const { params: t } = z(e);
              Object.assign(this, t);
            }
            set prevElRef(e) {
              (this._prevElRef = e),
                this._setElement(e, this.navigation, "navigation", "prevEl");
            }
            set nextElRef(e) {
              (this._nextElRef = e),
                this._setElement(e, this.navigation, "navigation", "nextEl");
            }
            set scrollbarElRef(e) {
              (this._scrollbarElRef = e),
                this._setElement(e, this.scrollbar, "scrollbar");
            }
            set paginationElRef(e) {
              (this._paginationElRef = e),
                this._setElement(e, this.pagination, "pagination");
            }
            get activeSlides() {
              return this.virtual
                ? this._activeSlides
                : Object(a.a)(this.slides);
            }
            get zoomContainerClass() {
              return "boolean" != typeof this.zoom
                ? this.zoom.containerClass
                : "swiper-zoom-container";
            }
            _setElement(e, t, n, i = "el") {
              if (!e || !t) return;
              if (t && e.nativeElement) {
                if (t[i] === e.nativeElement) return;
                t[i] = e.nativeElement;
              }
              const s = {};
              (s[n] = !0), this.updateInitSwiper(s);
            }
            ngOnInit() {
              const { params: e } = z(this);
              Object.assign(this, e);
            }
            ngAfterViewInit() {
              this.childrenSlidesInit(),
                this.initSwiper(),
                this._changeDetectorRef.detectChanges(),
                setTimeout(() => {
                  this.s_swiper.emit(this.swiperRef);
                });
            }
            childrenSlidesInit() {
              this.slidesChanges(this.slidesEl),
                this.slidesEl.changes.subscribe(this.slidesChanges);
            }
            get isSwiperActive() {
              return this.swiperRef && !this.swiperRef.destroyed;
            }
            initSwiper() {
              const { params: e } = z(this);
              Object.assign(this, e),
                this._ngZone.runOutsideAngular(() => {
                  (e.init = !1),
                    e.virtual || (e.observer = !0),
                    (e.onAny = (e, ...t) => {
                      const n = this["s_" + e];
                      n && n.emit(...t);
                    }),
                    Object.assign(e.on, {
                      _containerClasses(e, t) {
                        this.containerClasses = t;
                      },
                      _slideClasses: (e, t) => {
                        t.forEach(({ slideEl: e, classNames: t }, n) => {
                          const i =
                            parseInt(
                              e.getAttribute("data-swiper-slide-index")
                            ) || n;
                          if (this.virtual) {
                            const e = this.slides.find(
                              (e) => e.virtualIndex && e.virtualIndex === i
                            );
                            if (e) return void (e.classNames = t);
                          }
                          this.slides[i] && (this.slides[i].classNames = t);
                        }),
                          this._changeDetectorRef.detectChanges();
                      },
                    });
                  const t = new r.a(e);
                  if (
                    ((t.loopCreate = () => {}),
                    (t.loopDestroy = () => {}),
                    e.loop && (t.loopedSlides = this.loopedSlides),
                    t.virtual && t.params.virtual.enabled)
                  ) {
                    t.virtual.slides = this.slides;
                    const e = {
                      cache: !1,
                      renderExternal: this.updateVirtualSlides,
                      renderExternalUpdate: !1,
                    };
                    D(t.params.virtual, e), D(t.originalParams.virtual, e);
                  }
                  Object(s.w)(this._platformId) &&
                    ((this.swiperRef = t.init(this.elementRef.nativeElement)),
                    this.swiperRef.virtual &&
                      this.swiperRef.params.virtual.enabled &&
                      this.swiperRef.virtual.update(!0),
                    this._changeDetectorRef.detectChanges(),
                    t.on("slideChange", () => {
                      this.indexChange.emit(this.swiperRef.realIndex);
                    }));
                });
            }
            ngOnChanges(e) {
              this.updateSwiper(e), this._changeDetectorRef.detectChanges();
            }
            updateInitSwiper(e) {
              e &&
                this.swiperRef &&
                !this.swiperRef.destroyed &&
                this._ngZone.runOutsideAngular(() => {
                  const {
                    pagination: t,
                    navigation: n,
                    scrollbar: i,
                    thumbs: s,
                  } = this.swiperRef;
                  e.pagination &&
                    (this.pagination &&
                    "boolean" != typeof this.pagination &&
                    this.pagination.el &&
                    t &&
                    !t.el
                      ? (this.updateParameter("pagination", this.pagination),
                        t.init(),
                        t.render(),
                        t.update())
                      : (t.destroy(), (t.el = null))),
                    e.scrollbar &&
                      (this.scrollbar &&
                      "boolean" != typeof this.scrollbar &&
                      this.scrollbar.el &&
                      i &&
                      !i.el
                        ? (this.updateParameter("scrollbar", this.scrollbar),
                          i.init(),
                          i.updateSize(),
                          i.setTranslate())
                        : (i.destroy(), (i.el = null))),
                    e.navigation &&
                      (this.navigation &&
                      "boolean" != typeof this.navigation &&
                      this.navigation.prevEl &&
                      this.navigation.nextEl &&
                      n &&
                      !n.prevEl &&
                      !n.nextEl
                        ? (this.updateParameter("navigation", this.navigation),
                          n.init(),
                          n.update())
                        : n.prevEl &&
                          n.nextEl &&
                          (n.destroy(), (n.nextEl = null), (n.prevEl = null))),
                    e.thumbs &&
                      this.thumbs &&
                      this.thumbs.swiper &&
                      (this.updateParameter("thumbs", this.thumbs),
                      s.init() && s.update(!0)),
                    e.controller &&
                      this.controller &&
                      this.controller.control &&
                      (this.swiperRef.controller.control =
                        this.controller.control),
                    this.swiperRef.update();
                });
            }
            updateSwiper(e) {
              this._ngZone.runOutsideAngular(() => {
                var t, n;
                if (
                  !e.config &&
                  e &&
                  this.swiperRef &&
                  !this.swiperRef.destroyed
                ) {
                  for (const i in e) {
                    if (F.indexOf(i) >= 0) continue;
                    const s =
                      null !==
                        (n =
                          null === (t = e[i]) || void 0 === t
                            ? void 0
                            : t.currentValue) && void 0 !== n
                        ? n
                        : e[i];
                    this.updateParameter(i, s);
                  }
                  e.allowSlideNext &&
                    (this.swiperRef.allowSlideNext = this.allowSlideNext),
                    e.allowSlidePrev &&
                      (this.swiperRef.allowSlidePrev = this.allowSlidePrev),
                    e.direction &&
                      this.swiperRef.changeDirection(this.direction, !1),
                    e.breakpoints &&
                      (this.loop &&
                        !this.loopedSlides &&
                        this.calcLoopedSlides(),
                      (this.swiperRef.currentBreakpoint = null),
                      this.swiperRef.setBreakpoint()),
                    (e.thumbs || e.controller) && this.updateInitSwiper(e),
                    this.swiperRef.update();
                }
              });
            }
            calcLoopedSlides() {
              if (!this.loop) return;
              let e = this.slidesPerView;
              if (this.breakpoints) {
                const t = r.a.prototype.getBreakpoint(this.breakpoints),
                  n = t in this.breakpoints ? this.breakpoints[t] : void 0;
                n && n.slidesPerView && (e = n.slidesPerView);
              }
              if ("auto" === e)
                return (
                  (this.loopedSlides = this.slides.length), this.slides.length
                );
              let t = this.loopedSlides || e;
              return (
                (t += this.loopAdditionalSlides),
                t > this.slides.length && (t = this.slides.length),
                (this.loopedSlides = t),
                t
              );
            }
            updateParameter(e, t) {
              if (!this.swiperRef || this.swiperRef.destroyed) return;
              const n = e.replace(/^_/, ""),
                i = L(this.swiperRef.params[n]);
              if (Object.keys(this.swiperRef.modules).indexOf(n) >= 0) {
                const e = this.swiperRef.modules[n].params[n];
                i
                  ? D(this.swiperRef.params[n], e)
                  : (this.swiperRef.params[n] = e);
              }
              i && L(t)
                ? D(this.swiperRef.params[n], t)
                : (this.swiperRef.params[n] = t);
            }
            setIndex(e, t, n) {
              this.isSwiperActive
                ? e !== this.swiperRef.activeIndex &&
                  this._ngZone.runOutsideAngular(() => {
                    this.loop
                      ? this.swiperRef.slideToLoop(e, t, !n)
                      : this.swiperRef.slideTo(e, t, !n);
                  })
                : (this.initialSlide = e);
            }
            ngOnDestroy() {
              this._ngZone.runOutsideAngular(() => {
                var e;
                null === (e = this.swiperRef) ||
                  void 0 === e ||
                  e.destroy(!0, !1);
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.B), i.Rb(i.m), i.Rb(i.i), i.Rb(i.D));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["swiper"], ["", "swiper", ""]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, X, !0),
                  2 & e && i.Ac((s = i.gc())) && (t.slidesEl = s);
              },
              viewQuery: function (e, t) {
                var n;
                1 & e && (i.Qc(l, !0), i.Qc(c, !0), i.Qc(u, !0), i.Qc(h, !0)),
                  2 & e &&
                    (i.Ac((n = i.gc())) && (t.prevElRef = n.first),
                    i.Ac((n = i.gc())) && (t.nextElRef = n.first),
                    i.Ac((n = i.gc())) && (t.scrollbarElRef = n.first),
                    i.Ac((n = i.gc())) && (t.paginationElRef = n.first));
              },
              hostVars: 2,
              hostBindings: function (e, t) {
                2 & e && i.Gb(t.containerClasses);
              },
              inputs: {
                slideClass: "slideClass",
                wrapperClass: "wrapperClass",
                navigation: "navigation",
                pagination: "pagination",
                scrollbar: "scrollbar",
                virtual: "virtual",
                index: "index",
                config: "config",
                loopedSlides: "loopedSlides",
                initialSlide: "initialSlide",
                direction: "direction",
                touchEventsTarget: "touchEventsTarget",
                speed: "speed",
                cssMode: "cssMode",
                updateOnWindowResize: "updateOnWindowResize",
                resizeObserver: "resizeObserver",
                nested: "nested",
                width: "width",
                height: "height",
                preventInteractionOnTransition:
                  "preventInteractionOnTransition",
                userAgent: "userAgent",
                url: "url",
                edgeSwipeDetection: "edgeSwipeDetection",
                edgeSwipeThreshold: "edgeSwipeThreshold",
                freeMode: "freeMode",
                freeModeMomentum: "freeModeMomentum",
                freeModeMomentumRatio: "freeModeMomentumRatio",
                freeModeMomentumBounce: "freeModeMomentumBounce",
                freeModeMomentumBounceRatio: "freeModeMomentumBounceRatio",
                freeModeMomentumVelocityRatio: "freeModeMomentumVelocityRatio",
                freeModeSticky: "freeModeSticky",
                freeModeMinimumVelocity: "freeModeMinimumVelocity",
                autoHeight: "autoHeight",
                setWrapperSize: "setWrapperSize",
                virtualTranslate: "virtualTranslate",
                effect: "effect",
                breakpoints: "breakpoints",
                spaceBetween: "spaceBetween",
                slidesPerView: "slidesPerView",
                slidesPerColumn: "slidesPerColumn",
                slidesPerColumnFill: "slidesPerColumnFill",
                slidesPerGroup: "slidesPerGroup",
                slidesPerGroupSkip: "slidesPerGroupSkip",
                centeredSlides: "centeredSlides",
                centeredSlidesBounds: "centeredSlidesBounds",
                slidesOffsetBefore: "slidesOffsetBefore",
                slidesOffsetAfter: "slidesOffsetAfter",
                normalizeSlideIndex: "normalizeSlideIndex",
                centerInsufficientSlides: "centerInsufficientSlides",
                watchOverflow: "watchOverflow",
                roundLengths: "roundLengths",
                touchRatio: "touchRatio",
                touchAngle: "touchAngle",
                simulateTouch: "simulateTouch",
                shortSwipes: "shortSwipes",
                longSwipes: "longSwipes",
                longSwipesRatio: "longSwipesRatio",
                longSwipesMs: "longSwipesMs",
                followFinger: "followFinger",
                allowTouchMove: "allowTouchMove",
                threshold: "threshold",
                touchMoveStopPropagation: "touchMoveStopPropagation",
                touchStartPreventDefault: "touchStartPreventDefault",
                touchStartForcePreventDefault: "touchStartForcePreventDefault",
                touchReleaseOnEdges: "touchReleaseOnEdges",
                uniqueNavElements: "uniqueNavElements",
                resistance: "resistance",
                resistanceRatio: "resistanceRatio",
                watchSlidesProgress: "watchSlidesProgress",
                watchSlidesVisibility: "watchSlidesVisibility",
                grabCursor: "grabCursor",
                preventClicks: "preventClicks",
                preventClicksPropagation: "preventClicksPropagation",
                slideToClickedSlide: "slideToClickedSlide",
                preloadImages: "preloadImages",
                updateOnImagesReady: "updateOnImagesReady",
                loop: "loop",
                loopAdditionalSlides: "loopAdditionalSlides",
                loopFillGroupWithBlank: "loopFillGroupWithBlank",
                loopPreventsSlide: "loopPreventsSlide",
                allowSlidePrev: "allowSlidePrev",
                allowSlideNext: "allowSlideNext",
                swipeHandler: "swipeHandler",
                noSwiping: "noSwiping",
                noSwipingClass: "noSwipingClass",
                noSwipingSelector: "noSwipingSelector",
                passiveListeners: "passiveListeners",
                containerModifierClass: "containerModifierClass",
                slideBlankClass: "slideBlankClass",
                slideActiveClass: "slideActiveClass",
                slideDuplicateActiveClass: "slideDuplicateActiveClass",
                slideVisibleClass: "slideVisibleClass",
                slideDuplicateClass: "slideDuplicateClass",
                slideNextClass: "slideNextClass",
                slideDuplicateNextClass: "slideDuplicateNextClass",
                slidePrevClass: "slidePrevClass",
                slideDuplicatePrevClass: "slideDuplicatePrevClass",
                runCallbacksOnInit: "runCallbacksOnInit",
                observeParents: "observeParents",
                observeSlideChildren: "observeSlideChildren",
                a11y: "a11y",
                autoplay: "autoplay",
                controller: "controller",
                coverflowEffect: "coverflowEffect",
                cubeEffect: "cubeEffect",
                fadeEffect: "fadeEffect",
                flipEffect: "flipEffect",
                hashNavigation: "hashNavigation",
                history: "history",
                keyboard: "keyboard",
                lazy: "lazy",
                mousewheel: "mousewheel",
                parallax: "parallax",
                thumbs: "thumbs",
                zoom: "zoom",
                class: "class",
                id: "id",
              },
              outputs: {
                s__beforeBreakpoint: "_beforeBreakpoint",
                s__containerClasses: "_containerClasses",
                s__slideClass: "_slideClass",
                s__swiper: "_swiper",
                s_activeIndexChange: "activeIndexChange",
                s_afterInit: "afterInit",
                s_autoplay: "autoplay",
                s_autoplayStart: "autoplayStart",
                s_autoplayStop: "autoplayStop",
                s_beforeDestroy: "beforeDestroy",
                s_beforeInit: "beforeInit",
                s_beforeLoopFix: "beforeLoopFix",
                s_beforeResize: "beforeResize",
                s_beforeSlideChangeStart: "beforeSlideChangeStart",
                s_beforeTransitionStart: "beforeTransitionStart",
                s_breakpoint: "breakpoint",
                s_changeDirection: "changeDirection",
                s_click: "click",
                s_doubleTap: "doubleTap",
                s_doubleClick: "doubleClick",
                s_destroy: "destroy",
                s_fromEdge: "fromEdge",
                s_hashChange: "hashChange",
                s_hashSet: "hashSet",
                s_imagesReady: "imagesReady",
                s_init: "init",
                s_keyPress: "keyPress",
                s_lazyImageLoad: "lazyImageLoad",
                s_lazyImageReady: "lazyImageReady",
                s_loopFix: "loopFix",
                s_momentumBounce: "momentumBounce",
                s_navigationHide: "navigationHide",
                s_navigationShow: "navigationShow",
                s_observerUpdate: "observerUpdate",
                s_orientationchange: "orientationchange",
                s_paginationHide: "paginationHide",
                s_paginationRender: "paginationRender",
                s_paginationShow: "paginationShow",
                s_paginationUpdate: "paginationUpdate",
                s_progress: "progress",
                s_reachBeginning: "reachBeginning",
                s_reachEnd: "reachEnd",
                s_realIndexChange: "realIndexChange",
                s_resize: "resize",
                s_scroll: "scroll",
                s_scrollbarDragEnd: "scrollbarDragEnd",
                s_scrollbarDragMove: "scrollbarDragMove",
                s_scrollbarDragStart: "scrollbarDragStart",
                s_setTransition: "setTransition",
                s_setTranslate: "setTranslate",
                s_slideChange: "slideChange",
                s_slideChangeTransitionEnd: "slideChangeTransitionEnd",
                s_slideChangeTransitionStart: "slideChangeTransitionStart",
                s_slideNextTransitionEnd: "slideNextTransitionEnd",
                s_slideNextTransitionStart: "slideNextTransitionStart",
                s_slidePrevTransitionEnd: "slidePrevTransitionEnd",
                s_slidePrevTransitionStart: "slidePrevTransitionStart",
                s_slideResetTransitionStart: "slideResetTransitionStart",
                s_slideResetTransitionEnd: "slideResetTransitionEnd",
                s_sliderMove: "sliderMove",
                s_sliderFirstMove: "sliderFirstMove",
                s_slidesLengthChange: "slidesLengthChange",
                s_slidesGridLengthChange: "slidesGridLengthChange",
                s_snapGridLengthChange: "snapGridLengthChange",
                s_snapIndexChange: "snapIndexChange",
                s_tap: "tap",
                s_toEdge: "toEdge",
                s_touchEnd: "touchEnd",
                s_touchMove: "touchMove",
                s_touchMoveOpposite: "touchMoveOpposite",
                s_touchStart: "touchStart",
                s_transitionEnd: "transitionEnd",
                s_transitionStart: "transitionStart",
                s_update: "update",
                s_zoomChange: "zoomChange",
                s_swiper: "swiper",
                indexChange: "indexChange",
              },
              features: [i.Cb],
              ngContentSelectors: N,
              decls: 13,
              vars: 20,
              consts: [
                [4, "ngIf"],
                ["class", "swiper-scrollbar", 4, "ngIf"],
                ["class", "swiper-pagination", 4, "ngIf"],
                [3, "ngClass"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                ["slidesTemplate", ""],
                [1, "swiper-button-prev"],
                ["prevElRef", ""],
                [1, "swiper-button-next"],
                ["nextElRef", ""],
                [1, "swiper-scrollbar"],
                ["scrollbarElRef", ""],
                [1, "swiper-pagination"],
                ["paginationElRef", ""],
                [3, "ngClass", "style", "ngSwitch", 4, "ngFor", "ngForOf"],
                [3, "ngClass", "ngSwitch"],
                [3, "ngClass", 4, "ngSwitchCase"],
                [4, "ngSwitchDefault"],
                [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
              ],
              template: function (e, t) {
                if (
                  (1 & e &&
                    (i.oc(k),
                    i.nc(0),
                    i.Lc(1, d, 5, 0, "ng-container", 0),
                    i.Lc(2, p, 2, 0, "div", 1),
                    i.Lc(3, f, 2, 0, "div", 2),
                    i.Xb(4, "div", 3),
                    i.nc(5, 1),
                    i.Lc(6, m, 1, 0, void 0, 4),
                    i.Lc(7, v, 1, 0, void 0, 4),
                    i.Lc(8, w, 1, 0, void 0, 4),
                    i.nc(9, 2),
                    i.Wb(),
                    i.nc(10, 3),
                    i.Lc(11, T, 2, 3, "ng-template", null, 5, i.Mc)),
                  2 & e)
                ) {
                  const e = i.Bc(12);
                  i.Eb(1),
                    i.pc("ngIf", t.navigation && t.showNavigation),
                    i.Eb(1),
                    i.pc("ngIf", t.scrollbar && t.showScrollbar),
                    i.Eb(1),
                    i.pc("ngIf", t.pagination && t.showPagination),
                    i.Eb(1),
                    i.pc(
                      "ngClass",
                      i.tc(11, M, t.wrapperClass, t.class).join(" ")
                    ),
                    i.Fb("id", t.id),
                    i.Eb(2),
                    i.pc("ngTemplateOutlet", e)(
                      "ngTemplateOutletContext",
                      i.sc(14, I, t.prependSlides)
                    ),
                    i.Eb(1),
                    i.pc("ngTemplateOutlet", e)(
                      "ngTemplateOutletContext",
                      i.sc(16, P, t.activeSlides)
                    ),
                    i.Eb(1),
                    i.pc("ngTemplateOutlet", e)(
                      "ngTemplateOutletContext",
                      i.sc(18, R, t.appendSlides)
                    );
                }
              },
              directives: [s.m, s.k, s.r, s.l, s.o, s.p, s.q],
              pipes: [s.b],
              styles: [
                "\n      swiper {\n        display: block;\n      }\n    ",
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            e
          );
        })(),
        H = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c]],
            })),
            e
          );
        })();
    },
    UXun: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("jtHE");
      function s(e, t, n) {
        let s;
        return (
          (s =
            e && "object" == typeof e
              ? e
              : { bufferSize: e, windowTime: t, refCount: !1, scheduler: n }),
          (e) =>
            e.lift(
              (function ({
                bufferSize: e = Number.POSITIVE_INFINITY,
                windowTime: t = Number.POSITIVE_INFINITY,
                refCount: n,
                scheduler: s,
              }) {
                let r,
                  o,
                  a = 0,
                  l = !1,
                  c = !1;
                return function (u) {
                  a++,
                    (r && !l) ||
                      ((l = !1),
                      (r = new i.a(e, t, s)),
                      (o = u.subscribe({
                        next(e) {
                          r.next(e);
                        },
                        error(e) {
                          (l = !0), r.error(e);
                        },
                        complete() {
                          (c = !0), (o = void 0), r.complete();
                        },
                      })));
                  const h = r.subscribe(this);
                  this.add(() => {
                    a--,
                      h.unsubscribe(),
                      o &&
                        !c &&
                        n &&
                        0 === a &&
                        (o.unsubscribe(), (o = void 0), (r = void 0));
                  });
                };
              })(s)
            )
        );
      }
    },
    UvIs: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("ofXK"),
        s = n("jtHE"),
        r = n("fXoL");
      let o = (() => {
        class e {
          constructor(e) {
            this.dom = e;
          }
          copy(e) {
            const t = new s.a(1);
            let n;
            try {
              (n = this.dom.createElement("textarea")),
                (n.style.position = "absolute"),
                (n.style.opacity = "0"),
                (n.style.left = "0px"),
                (n.style.top = "0px"),
                (n.style.width = "0px"),
                (n.style.height = "0px"),
                this.dom.body.appendChild(n),
                (n.value = e),
                n.select(),
                this.dom.execCommand("copy"),
                t.next(e);
            } catch (i) {
              t.thrownError(i);
            } finally {
              n && n.parentNode && n.parentNode.removeChild(n);
            }
            return t.asObservable();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r.bc(i.e));
          }),
          (e.ɵprov = r.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    V9rR: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("3Pt+");
      class s extends i.t {
        static validate(e) {
          return (t) => {
            let n = { valuesNotMatch: { value: t.value } },
              r = !1;
            try {
              e instanceof Array
                ? e.forEach((e) => (r = r && s.compareValues(t, e)))
                : e instanceof i.a && (r = s.compareValues(t, e)),
                r && (n = null);
            } catch (o) {
              n = o;
            }
            return n;
          };
        }
        static compareValues(e, t) {
          return e.value === t.value;
        }
      }
    },
    VRyK: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var i = n("HDdC"),
        s = n("z+Ro"),
        r = n("bHdf"),
        o = n("yCtX");
      function a(...e) {
        let t = Number.POSITIVE_INFINITY,
          n = null,
          a = e[e.length - 1];
        return (
          Object(s.a)(a)
            ? ((n = e.pop()),
              e.length > 1 &&
                "number" == typeof e[e.length - 1] &&
                (t = e.pop()))
            : "number" == typeof a && (t = e.pop()),
          null === n && 1 === e.length && e[0] instanceof i.a
            ? e[0]
            : Object(r.a)(t)(Object(o.a)(e, n))
        );
      }
    },
    WH5g: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("3Pt+");
      const s =
        /^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
      class r extends i.t {
        static validate(e) {
          let t = null;
          return null === e.value.match(s) && (t = { email: !0 }), t;
        }
      }
    },
    Wamw: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      class i {
        static find(e) {
          const t = location.search.substr(1).split("&");
          let n = [],
            i = null;
          for (const s of t)
            (n = s.split("=")), n[0] === e && (i = decodeURIComponent(n[1]));
          return i;
        }
      }
    },
    XDbj: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("sVev"),
        s = n("7o/Q");
      function r(e = l) {
        return (t) => t.lift(new o(e));
      }
      class o {
        constructor(e) {
          this.errorFactory = e;
        }
        call(e, t) {
          return t.subscribe(new a(e, this.errorFactory));
        }
      }
      class a extends s.a {
        constructor(e, t) {
          super(e), (this.errorFactory = t), (this.hasValue = !1);
        }
        _next(e) {
          (this.hasValue = !0), this.destination.next(e);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let t;
            try {
              t = this.errorFactory();
            } catch (e) {
              t = e;
            }
            this.destination.error(t);
          }
        }
      }
      function l() {
        return new i.a();
      }
    },
    XNiG: function (e, t, n) {
      "use strict";
      n.d(t, "c", function () {
        return c;
      }),
        n.d(t, "b", function () {
          return u;
        }),
        n.d(t, "a", function () {
          return h;
        });
      var i = n("HDdC"),
        s = n("7o/Q"),
        r = n("quSY"),
        o = n("9ppp"),
        a = n("Ylt2"),
        l = n("2QA8");
      class c extends s.a {
        constructor(e) {
          super(e), (this.destination = e);
        }
      }
      let u = (() => {
        class e extends i.a {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [l.a]() {
            return new c(this);
          }
          lift(e) {
            const t = new h(this, this);
            return (t.operator = e), t;
          }
          next(e) {
            if (this.closed) throw new o.a();
            if (!this.isStopped) {
              const { observers: t } = this,
                n = t.length,
                i = t.slice();
              for (let s = 0; s < n; s++) i[s].next(e);
            }
          }
          error(e) {
            if (this.closed) throw new o.a();
            (this.hasError = !0), (this.thrownError = e), (this.isStopped = !0);
            const { observers: t } = this,
              n = t.length,
              i = t.slice();
            for (let s = 0; s < n; s++) i[s].error(e);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new o.a();
            this.isStopped = !0;
            const { observers: e } = this,
              t = e.length,
              n = e.slice();
            for (let i = 0; i < t; i++) n[i].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(e) {
            if (this.closed) throw new o.a();
            return super._trySubscribe(e);
          }
          _subscribe(e) {
            if (this.closed) throw new o.a();
            return this.hasError
              ? (e.error(this.thrownError), r.a.EMPTY)
              : this.isStopped
              ? (e.complete(), r.a.EMPTY)
              : (this.observers.push(e), new a.a(this, e));
          }
          asObservable() {
            const e = new i.a();
            return (e.source = this), e;
          }
        }
        return (e.create = (e, t) => new h(e, t)), e;
      })();
      class h extends u {
        constructor(e, t) {
          super(), (this.destination = e), (this.source = t);
        }
        next(e) {
          const { destination: t } = this;
          t && t.next && t.next(e);
        }
        error(e) {
          const { destination: t } = this;
          t && t.error && this.destination.error(e);
        }
        complete() {
          const { destination: e } = this;
          e && e.complete && this.destination.complete();
        }
        _subscribe(e) {
          const { source: t } = this;
          return t ? this.source.subscribe(e) : r.a.EMPTY;
        }
      }
    },
    XoHu: function (e, t, n) {
      "use strict";
      function i(e) {
        return null !== e && "object" == typeof e;
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    Ylt2: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("quSY");
      class s extends i.a {
        constructor(e, t) {
          super(),
            (this.subject = e),
            (this.subscriber = t),
            (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const e = this.subject,
            t = e.observers;
          if (
            ((this.subject = null),
            !t || 0 === t.length || e.isStopped || e.closed)
          )
            return;
          const n = t.indexOf(this.subscriber);
          -1 !== n && t.splice(n, 1);
        }
      }
    },
    Ytcc: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("fClZ"),
        s = n("fXoL"),
        r = n("1AIi");
      let o = (() => {
        class e {
          constructor(e, t) {
            (this.storage = e), (this.factory = t);
          }
          find() {
            const t = this.createEmptyModel(),
              n = this.storage.find(e.storageKey);
            return n && t.populate(JSON.parse(n)), t;
          }
          save(t) {
            return this.storage.create(e.storageKey, t.toString());
          }
          remove() {
            return this.storage.remove(e.storageKey);
          }
          createEmptyModel() {
            return this.factory.create(i.a.STORAGE, {});
          }
          static get storageKey() {
            return "market_vision-i18n";
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(r.a), s.bc(i.a));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    Z7TK: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      }),
        n.d(t, "b", function () {
          return i;
        }),
        n.d(t, "c", function () {
          return o;
        });
      class i {
        static equals(e, t, n) {
          return n
            ? this.resolveFieldData(e, n) === this.resolveFieldData(t, n)
            : this.equalsByValue(e, t);
        }
        static equalsByValue(e, t) {
          if (e === t) return !0;
          if (e && t && "object" == typeof e && "object" == typeof t) {
            var n,
              i,
              s,
              r = Array.isArray(e),
              o = Array.isArray(t);
            if (r && o) {
              if ((i = e.length) != t.length) return !1;
              for (n = i; 0 != n--; )
                if (!this.equalsByValue(e[n], t[n])) return !1;
              return !0;
            }
            if (r != o) return !1;
            var a = e instanceof Date,
              l = t instanceof Date;
            if (a != l) return !1;
            if (a && l) return e.getTime() == t.getTime();
            var c = e instanceof RegExp,
              u = t instanceof RegExp;
            if (c != u) return !1;
            if (c && u) return e.toString() == t.toString();
            var h = Object.keys(e);
            if ((i = h.length) !== Object.keys(t).length) return !1;
            for (n = i; 0 != n--; )
              if (!Object.prototype.hasOwnProperty.call(t, h[n])) return !1;
            for (n = i; 0 != n--; )
              if (!this.equalsByValue(e[(s = h[n])], t[s])) return !1;
            return !0;
          }
          return e != e && t != t;
        }
        static resolveFieldData(e, t) {
          if (e && t) {
            if (this.isFunction(t)) return t(e);
            if (-1 == t.indexOf(".")) return e[t];
            {
              let n = t.split("."),
                i = e;
              for (let e = 0, t = n.length; e < t; ++e) {
                if (null == i) return null;
                i = i[n[e]];
              }
              return i;
            }
          }
          return null;
        }
        static isFunction(e) {
          return !!(e && e.constructor && e.call && e.apply);
        }
        static reorderArray(e, t, n) {
          e &&
            t !== n &&
            (n >= e.length && ((n %= e.length), (t %= e.length)),
            e.splice(n, 0, e.splice(t, 1)[0]));
        }
        static generateSelectItems(e, t) {
          let n;
          if (e && e.length) {
            n = [];
            for (let i of e)
              n.push({ label: this.resolveFieldData(i, t), value: i });
          }
          return n;
        }
        static insertIntoOrderedArray(e, t, n, i) {
          if (n.length > 0) {
            let s = !1;
            for (let r = 0; r < n.length; r++)
              if (this.findIndexInList(n[r], i) > t) {
                n.splice(r, 0, e), (s = !0);
                break;
              }
            s || n.push(e);
          } else n.push(e);
        }
        static findIndexInList(e, t) {
          let n = -1;
          if (t)
            for (let i = 0; i < t.length; i++)
              if (t[i] == e) {
                n = i;
                break;
              }
          return n;
        }
        static removeAccents(e) {
          return (
            e &&
              e.search(/[\xC0-\xFF]/g) > -1 &&
              (e = e
                .replace(/[\xC0-\xC5]/g, "A")
                .replace(/[\xC6]/g, "AE")
                .replace(/[\xC7]/g, "C")
                .replace(/[\xC8-\xCB]/g, "E")
                .replace(/[\xCC-\xCF]/g, "I")
                .replace(/[\xD0]/g, "D")
                .replace(/[\xD1]/g, "N")
                .replace(/[\xD2-\xD6\xD8]/g, "O")
                .replace(/[\xD9-\xDC]/g, "U")
                .replace(/[\xDD]/g, "Y")
                .replace(/[\xDE]/g, "P")
                .replace(/[\xE0-\xE5]/g, "a")
                .replace(/[\xE6]/g, "ae")
                .replace(/[\xE7]/g, "c")
                .replace(/[\xE8-\xEB]/g, "e")
                .replace(/[\xEC-\xEF]/g, "i")
                .replace(/[\xF1]/g, "n")
                .replace(/[\xF2-\xF6\xF8]/g, "o")
                .replace(/[\xF9-\xFC]/g, "u")
                .replace(/[\xFE]/g, "p")
                .replace(/[\xFD\xFF]/g, "y")),
            e
          );
        }
      }
      class s {
        static filter(e, t, n, r, o) {
          let a = [],
            l = i.removeAccents(n).toLocaleLowerCase(o);
          if (e)
            for (let c of e)
              for (let e of t) {
                let t = i
                  .removeAccents(String(i.resolveFieldData(c, e)))
                  .toLocaleLowerCase(o);
                if (s[r](t, l, o)) {
                  a.push(c);
                  break;
                }
              }
          return a;
        }
        static startsWith(e, t, n) {
          if (null == t || "" === t.trim()) return !0;
          if (null == e) return !1;
          let s = i.removeAccents(t.toString()).toLocaleLowerCase(n);
          return (
            i
              .removeAccents(e.toString())
              .toLocaleLowerCase(n)
              .slice(0, s.length) === s
          );
        }
        static contains(e, t, n) {
          if (null == t || ("string" == typeof t && "" === t.trim())) return !0;
          if (null == e) return !1;
          let s = i.removeAccents(t.toString()).toLocaleLowerCase(n);
          return (
            -1 !== i.removeAccents(e.toString()).toLocaleLowerCase(n).indexOf(s)
          );
        }
        static endsWith(e, t, n) {
          if (null == t || "" === t.trim()) return !0;
          if (null == e) return !1;
          let s = i.removeAccents(t.toString()).toLocaleLowerCase(n),
            r = i.removeAccents(e.toString()).toLocaleLowerCase(n);
          return -1 !== r.indexOf(s, r.length - s.length);
        }
        static equals(e, t, n) {
          return (
            null == t ||
            ("string" == typeof t && "" === t.trim()) ||
            (null != e &&
              (e.getTime && t.getTime
                ? e.getTime() === t.getTime()
                : i.removeAccents(e.toString()).toLocaleLowerCase(n) ==
                  i.removeAccents(t.toString()).toLocaleLowerCase(n)))
          );
        }
        static notEquals(e, t, n) {
          return !(
            null == t ||
            ("string" == typeof t && "" === t.trim()) ||
            (null != e &&
              (e.getTime && t.getTime
                ? e.getTime() === t.getTime()
                : i.removeAccents(e.toString()).toLocaleLowerCase(n) ==
                  i.removeAccents(t.toString()).toLocaleLowerCase(n)))
          );
        }
        static in(e, t, n) {
          if (null == t || 0 === t.length) return !0;
          if (null == e) return !1;
          for (let s = 0; s < t.length; s++) if (i.equals(e, t[s])) return !0;
          return !1;
        }
        static lt(e, t, n) {
          return (
            null == t ||
            (null != e &&
              (e.getTime && t.getTime ? e.getTime() < t.getTime() : e < t))
          );
        }
        static lte(e, t, n) {
          return (
            null == t ||
            (null != e &&
              (e.getTime && t.getTime ? e.getTime() <= t.getTime() : e <= t))
          );
        }
        static gt(e, t, n) {
          return (
            null == t ||
            (null != e &&
              (e.getTime && t.getTime ? e.getTime() > t.getTime() : e > t))
          );
        }
        static gte(e, t, n) {
          return (
            null == t ||
            (null != e &&
              (e.getTime && t.getTime ? e.getTime() >= t.getTime() : e >= t))
          );
        }
      }
      var r = 0;
      function o() {
        return "pr_id_" + ++r;
      }
    },
    ZUHj: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("51Dv"),
        s = n("SeVD"),
        r = n("HDdC");
      function o(e, t, n, o, a = new i.a(e, n, o)) {
        if (!a.closed)
          return t instanceof r.a ? t.subscribe(a) : Object(s.a)(t)(a);
      }
    },
    aF9I: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("fXoL"),
        s = n("P8Ue"),
        r = n("tyNb");
      let o = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-footer"]],
            decls: 31,
            vars: 0,
            consts: [
              [1, "footer"],
              [1, "container", "py-5"],
              [1, "row"],
              [1, "col-12", "col-lg-6", "pe-lg-5", "order-2", "order-lg-1"],
              [1, "footer__logo"],
              [1, "footer__text", "pe-lg-5", "mt-4", "mb-3"],
              [1, "footer__text", "pe-lg-5"],
              [1, "footer__copyright"],
              [
                1,
                "col-12",
                "col-lg-6",
                "mb-5",
                "mb-lg-0",
                "order-1",
                "order-lg-2",
              ],
              [1, "footer__title"],
              [1, "footer__form"],
              [1, "input-wrapper"],
              ["placeholder", "E-mail"],
              [1, "pi", "pi-fw", "pi-angle-right"],
              [1, "footer__socials", "my-5"],
              [1, "footer__socials--title"],
              [1, "footer__socials--list"],
              [1, "icon", "facebook-icon"],
              [1, "icon", "twitter-icon"],
              [1, "icon", "icon", "instagram-icon"],
              [1, "nav"],
              [1, "footer__terms"],
              [1, "footer__terms--list"],
              ["routerLink", "/terms", 1, "footer__terms--item"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "div", 0),
                i.Xb(1, "div", 1),
                i.Xb(2, "div", 2),
                i.Xb(3, "div", 3),
                i.Sb(4, "div", 4),
                i.Xb(5, "p", 5),
                i.Nc(6, "FULL RISK DISCLOSURE:"),
                i.Wb(),
                i.Xb(7, "p", 6),
                i.Nc(
                  8,
                  "MarketVision International Inc. is not a registered broker, analyst, investment advisor or anything of that sort. Everything that we provide on this site is purely for guidance, informational and educational purposes. All information contained herein should be independently verified and confirmed. We do not accept any liability for any loss or damage whatsoever caused in reliance upon such information or services. Please be aware of the risks involved with any trading done in crypto market. Only risk capital should be used for trading. Do not trade with money that you cannot afford to lose. When in doubt, you should consult a qualified financial advisor before making any investment decisions."
                ),
                i.Wb(),
                i.Xb(9, "p", 7),
                i.Nc(
                  10,
                  "\xa9 2021 MarketVision International Inc. All rights reserved."
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(11, "div", 8),
                i.Xb(12, "p", 9),
                i.Nc(13, ""),
                i.Wb(),
                i.Xb(14, "div", 10),
                i.Xb(15, "div", 11),
                // i.Sb(16, "input", 12),
                i.Xb(17, "button"),
                // i.Sb(18, "span", 13),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(19, "div", 14),
                i.Xb(20, "span", 15),
                i.Nc(21, "Follow Us:"),
                i.Wb(),
                i.Xb(22, "ul", 16),
                i.Sb(23, "li", 17),
                i.Sb(24, "li", 18),
                i.Sb(25, "li", 19),
                i.Wb(),
                i.Wb(),
                i.Sb(26, "app-main-navigation", 20),
                i.Xb(27, "div", 21),
                i.Xb(28, "ul", 22),
                i.Xb(29, "li", 23),
                i.Nc(30, "Terms & Conditions"),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb());
            },
            directives: [s.a, r.h],
            styles: [
              '.footer[_ngcontent-%COMP%]{background:#000;color:#fff;position:relative;overflow:hidden}.footer[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]{position:relative;z-index:2}.footer[_ngcontent-%COMP%]:after, .footer[_ngcontent-%COMP%]:before{content:"";display:block;width:600px;height:600px;position:absolute;background:radial-gradient(ellipse at center,rgba(26,24,68,.65) 0,transparent 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#a61a1844",endColorstr="#00000000",GradientType=1)}.footer[_ngcontent-%COMP%]:before{top:-110px;left:-110px}.footer[_ngcontent-%COMP%]:after{top:-140px;right:-30px}.footer__logo[_ngcontent-%COMP%]{width:200px;height:125px;background:#fff;-webkit-mask:url(logo.png) no-repeat center/contain;mask:url(logo.png) no-repeat center/contain}.footer__title[_ngcontent-%COMP%]{font-size:28px;font-weight:600}.footer__text[_ngcontent-%COMP%]{font-size:12px;color:#6d7783}.footer__copyright[_ngcontent-%COMP%]{font-size:14px;color:#6d7783;margin-top:95px}.footer__socials[_ngcontent-%COMP%]{display:flex;align-items:center}.footer__socials--title[_ngcontent-%COMP%]{color:#6d7783;font-size:12px;margin-right:20px}.footer__socials--list[_ngcontent-%COMP%]{display:flex;align-items:center;margin-bottom:0;padding-left:0}.footer__socials--list[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{background:#fff;width:21px;height:21px;margin-left:25px}.footer__socials--list[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]:first-child{margin-left:0}.footer__form[_ngcontent-%COMP%]{margin-top:45px}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;box-shadow:0 2px 5px rgba(0,0,0,.2);border:0px solid #222a41;border-radius:16px}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{color:#fff;padding:0 20px;width:100%}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#fff;opacity:1}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder{color:#fff;opacity:1}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#fff}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-ms-input-placeholder{color:#fff}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:#222a41;color:#6d7783;width:0px;min-width:0px;height:0px;text-align:center;border-radius:0px}.footer__form[_ngcontent-%COMP%]   .input-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{line-height:48px}.footer__form[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{margin-top:15px;font-size:12px;color:#6d7783}.footer[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]{justify-content:space-between;font-weight:600;font-size:18px;margin-bottom:28px}.footer__terms--list[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;padding-left:0}.footer__terms--item[_ngcontent-%COMP%]{color:#fff;font-size:14px;padding:0 15px}.footer__terms--item[_ngcontent-%COMP%]:last-child{padding-right:0}.footer__terms--item.div[_ngcontent-%COMP%]{position:relative}.footer__terms--item.div[_ngcontent-%COMP%]:after{content:"";display:block;width:1px;height:13px;background:#6d7783;position:absolute;top:50%;right:-1px;transform:translateY(-50%)}.facebook-icon[_ngcontent-%COMP%]{-webkit-mask:url(facebook-icon.8b628d83db106ab840cd.svg) no-repeat center/contain;mask:url(facebook-icon.8b628d83db106ab840cd.svg) no-repeat center/contain}.twitter-icon[_ngcontent-%COMP%]{-webkit-mask:url(twitter-icon.a2fdf6b07d3086bcfb70.svg) no-repeat center/contain;mask:url(twitter-icon.a2fdf6b07d3086bcfb70.svg) no-repeat center/contain}.instagram-icon[_ngcontent-%COMP%]{-webkit-mask:url(instagram-icon.ce0dbaf3b712f9697f72.svg) no-repeat center/contain;mask:url(instagram-icon.ce0dbaf3b712f9697f72.svg) no-repeat center/contain}@media (max-width:500px){.footer[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]{justify-content:center;font-size:14px}.footer__terms--list[_ngcontent-%COMP%]{justify-content:center;margin-top:30px}}',
            ],
          })),
          e
        );
      })();
    },
    aZ8m: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var i = n("fXoL"),
        s = n("tyNb"),
        r = n("ofXK"),
        o = n("7wB8");
      function a(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Vb(0),
            i.Xb(1, "li", 7),
            i.Xb(2, "app-user-dropdown", 8),
            i.fc("logoutEvent", function () {
              return i.Ec(e), i.hc().logoutEvent.emit();
            }),
            i.Wb(),
            i.Wb(),
            i.Xb(3, "li", 9),
            i.fc("click", function () {
              return i.Ec(e), i.hc().logoutEvent.emit();
            }),
            i.Xb(4, "span", 5),
            i.Nc(5, "logout"),
            i.Wb(),
            i.Wb(),
            i.Ub();
        }
        if (2 & e) {
          const e = i.hc();
          i.Eb(2), i.pc("user", e.user);
        }
      }
      const l = function (e) {
        return { accent: e };
      };
      let c = (() => {
        class e {
          constructor() {
            (this.languages = []),
              (this.logoutEvent = new i.o()),
              (this.selectedLanguageEvent = new i.o());
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-header"]],
            inputs: {
              isAuthorized: "isAuthorized",
              user: "user",
              languages: "languages",
              selectedLanguage: "selectedLanguage",
            },
            outputs: {
              logoutEvent: "logoutEvent",
              selectedLanguageEvent: "selectedLanguageEvent",
            },
            decls: 8,
            vars: 4,
            consts: [
              [1, "header"],
              ["routerLink", "/", 1, "header__logo", 3, "ngClass"],
              [1, "header__right", "ms-auto"],
              [1, "nav", "align-items-center"],
              [
                "routerLink",
                "/office/faq",
                1,
                "nav__item",
                "mx-5",
                "d-flex",
                "align-items-center",
                "faq",
              ],
              [1, "material-icons"],
              [4, "ngIf"],
              [
                1,
                "nav__item",
                "nav__divider",
                "me-lg-4",
                "pe-3",
                "d-flex",
                "align-items-center",
              ],
              [3, "user", "logoutEvent"],
              [
                1,
                "nav__item",
                "me-5",
                "d-flex",
                "align-items-center",
                "logout",
                3,
                "click",
              ],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "header", 0),
                i.Sb(1, "div", 1),
                i.Xb(2, "div", 2),
                i.Xb(3, "ul", 3),
                i.Xb(4, "li", 4),
                i.Xb(5, "span", 5),
                i.Nc(6, "help_outline"),
                i.Wb(),
                i.Wb(),
                i.Lc(7, a, 6, 1, "ng-container", 6),
                i.Wb(),
                i.Wb(),
                i.Wb()),
                2 & e &&
                  (i.Eb(1),
                  i.pc("ngClass", i.sc(2, l, t.isAuthorized)),
                  i.Eb(6),
                  i.pc("ngIf", t.isAuthorized));
            },
            directives: [s.h, r.k, r.m, o.a],
            styles: [
              '.header[_ngcontent-%COMP%]{background:#363333;display:flex;align-items:center;color:#fff;border-bottom:1px solid #ddd}.header__logo[_ngcontent-%COMP%]{width:245px;padding:30px;text-align:center;background:#363333}.header__logo[_ngcontent-%COMP%]:after{content:"";background:#fff;-webkit-mask:url(logo.png) no-repeat center/contain;mask:url(logo.png) no-repeat center/contain;display:block;width:200px;height:158px;padding:30px;margin:0 auto}.header__logo.accent[_ngcontent-%COMP%]{background:#f6f6f6}.header__logo.accent[_ngcontent-%COMP%]:after{background:#363333}.nav__item[_ngcontent-%COMP%]{margin-left:0}.nav__divider[_ngcontent-%COMP%]{position:relative}.nav__divider[_ngcontent-%COMP%]:after{content:"";display:block;width:1px;height:100%;background:#6d6d6d;position:absolute;top:0;right:0;bottom:0}@media (max-width:991px){.header__logo[_ngcontent-%COMP%]{width:125px;padding:15px 0}.header__logo[_ngcontent-%COMP%]:after{width:100px;height:40px}.nav__item.faq[_ngcontent-%COMP%], .nav__item.logout[_ngcontent-%COMP%]{display:none!important}.nav__divider[_ngcontent-%COMP%]:after{display:none}}',
            ],
          })),
          e
        );
      })();
    },
    arS9: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return y;
      }),
        n.d(t, "b", function () {
          return w;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("P/hZ"),
        o = n("RtSl"),
        a = n("R0Ic");
      const l = ["container"];
      function c(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 6),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc().onCloseIconClick(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc().onCloseIconClick(t);
            }),
            i.Wb();
        }
      }
      const u = function (e, t, n, i) {
        return {
          "pi-info-circle": e,
          "pi-exclamation-triangle": t,
          "pi-times-circle": n,
          "pi-check": i,
        };
      };
      function h(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Sb(1, "span", 7),
            i.Xb(2, "div", 8),
            i.Xb(3, "div", 9),
            i.Nc(4),
            i.Wb(),
            i.Xb(5, "div", 10),
            i.Nc(6),
            i.Wb(),
            i.Wb(),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.Gb(
              "ui-toast-icon pi" + (e.message.icon ? " " + e.message.icon : "")
            ),
            i.pc(
              "ngClass",
              i.vc(
                5,
                u,
                "info" == e.message.severity,
                "warn" == e.message.severity,
                "error" == e.message.severity,
                "success" == e.message.severity
              )
            ),
            i.Eb(3),
            i.Oc(e.message.summary),
            i.Eb(2),
            i.Oc(e.message.detail);
        }
      }
      function d(e, t) {
        1 & e && i.Tb(0);
      }
      const p = function (e, t, n, i) {
          return {
            showTransformParams: e,
            hideTransformParams: t,
            showTransitionParams: n,
            hideTransitionParams: i,
          };
        },
        f = function (e) {
          return { value: "visible", params: e };
        },
        g = function (e) {
          return { $implicit: e };
        };
      function m(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "p-toastItem", 3),
            i.fc("onClose", function (t) {
              return i.Ec(e), i.hc().onMessageClose(t);
            })("@toastAnimation.start", function (t) {
              return i.Ec(e), i.hc().onAnimationStart(t);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc();
          i.pc("message", e)("index", n)("template", s.template)(
            "@toastAnimation",
            void 0
          )("showTransformOptions", s.showTransformOptions)(
            "hideTransformOptions",
            s.hideTransformOptions
          )("showTransitionOptions", s.showTransitionOptions)(
            "hideTransitionOptions",
            s.hideTransitionOptions
          );
        }
      }
      const b = function (e, t, n, i, s, r, o) {
        return {
          "ui-toast ui-widget": !0,
          "ui-toast-top-right": e,
          "ui-toast-top-left": t,
          "ui-toast-bottom-right": n,
          "ui-toast-bottom-left": i,
          "ui-toast-top-center": s,
          "ui-toast-bottom-center": r,
          "ui-toast-center": o,
        };
      };
      let v = (() => {
          let e = class {
            constructor(e) {
              (this.zone = e), (this.onClose = new i.o());
            }
            ngAfterViewInit() {
              this.initTimeout();
            }
            initTimeout() {
              this.message.sticky ||
                this.zone.runOutsideAngular(() => {
                  this.timeout = setTimeout(() => {
                    this.onClose.emit({
                      index: this.index,
                      message: this.message,
                    });
                  }, this.message.life || 3e3);
                });
            }
            clearTimeout() {
              this.timeout &&
                (clearTimeout(this.timeout), (this.timeout = null));
            }
            onMouseEnter() {
              this.clearTimeout();
            }
            onMouseLeave() {
              this.initTimeout();
            }
            onCloseIconClick(e) {
              this.clearTimeout(),
                this.onClose.emit({ index: this.index, message: this.message }),
                e.preventDefault();
            }
            ngOnDestroy() {
              this.clearTimeout();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.B));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-toastItem"]],
              viewQuery: function (e, t) {
                var n;
                1 & e && i.Qc(l, !0),
                  2 & e &&
                    i.Ac((n = i.gc())) &&
                    (t.containerViewChild = n.first);
              },
              inputs: {
                message: "message",
                index: "index",
                template: "template",
                showTransformOptions: "showTransformOptions",
                hideTransformOptions: "hideTransformOptions",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
              },
              outputs: { onClose: "onClose" },
              decls: 6,
              vars: 16,
              consts: [
                [
                  "role",
                  "alert",
                  "aria-live",
                  "assertive",
                  "aria-atomic",
                  "true",
                  1,
                  "ui-toast-message",
                  "ui-shadow",
                  3,
                  "ngClass",
                  "mouseenter",
                  "mouseleave",
                ],
                ["container", ""],
                [1, "ui-toast-message-content"],
                [
                  "tabindex",
                  "0",
                  "class",
                  "ui-toast-close-icon pi pi-times",
                  3,
                  "click",
                  "keydown.enter",
                  4,
                  "ngIf",
                ],
                [4, "ngIf"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-toast-close-icon",
                  "pi",
                  "pi-times",
                  3,
                  "click",
                  "keydown.enter",
                ],
                [3, "ngClass"],
                [1, "ui-toast-message-text-content"],
                [1, "ui-toast-summary"],
                [1, "ui-toast-detail"],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Xb(0, "div", 0, 1),
                  i.fc("mouseenter", function () {
                    return t.onMouseEnter();
                  })("mouseleave", function () {
                    return t.onMouseLeave();
                  }),
                  i.Xb(2, "div", 2),
                  i.Lc(3, c, 1, 0, "a", 3),
                  i.Lc(4, h, 7, 10, "ng-container", 4),
                  i.Lc(5, d, 1, 0, "ng-container", 5),
                  i.Wb(),
                  i.Wb()),
                  2 & e &&
                    (i.pc(
                      "@messageState",
                      i.sc(
                        12,
                        f,
                        i.vc(
                          7,
                          p,
                          t.showTransformOptions,
                          t.hideTransformOptions,
                          t.showTransitionOptions,
                          t.hideTransitionOptions
                        )
                      )
                    )("ngClass", "ui-toast-message-" + t.message.severity),
                    i.Fb("id", t.message.id),
                    i.Eb(3),
                    i.pc("ngIf", !1 !== t.message.closable),
                    i.Eb(1),
                    i.pc("ngIf", !t.template),
                    i.Eb(1),
                    i.pc("ngTemplateOutlet", t.template)(
                      "ngTemplateOutletContext",
                      i.sc(14, g, t.message)
                    ));
              },
              directives: [s.k, s.m, s.r],
              encapsulation: 2,
              data: {
                animation: [
                  Object(a.m)("messageState", [
                    Object(a.j)(
                      "visible",
                      Object(a.k)({ transform: "translateY(0)", opacity: 1 })
                    ),
                    Object(a.l)("void => *", [
                      Object(a.k)({
                        transform: "{{showTransformParams}}",
                        opacity: 0,
                      }),
                      Object(a.e)("{{showTransitionParams}}"),
                    ]),
                    Object(a.l)("* => void", [
                      Object(a.e)(
                        "{{hideTransitionParams}}",
                        Object(a.k)({
                          height: 0,
                          opacity: 0,
                          transform: "{{hideTransformParams}}",
                        })
                      ),
                    ]),
                  ]),
                ],
              },
            })),
            e
          );
        })(),
        y = (() => {
          let e = class {
            constructor(e, t) {
              (this.messageService = e),
                (this.cd = t),
                (this.autoZIndex = !0),
                (this.baseZIndex = 0),
                (this.position = "top-right"),
                (this.preventOpenDuplicates = !1),
                (this.preventDuplicates = !1),
                (this.showTransformOptions = "translateY(100%)"),
                (this.hideTransformOptions = "translateY(-100%)"),
                (this.showTransitionOptions = "300ms ease-out"),
                (this.hideTransitionOptions = "250ms ease-in"),
                (this.onClose = new i.o());
            }
            ngOnInit() {
              (this.messageSubscription =
                this.messageService.messageObserver.subscribe((e) => {
                  if (e) {
                    if (e instanceof Array) {
                      const t = e.filter((e) => this.canAdd(e));
                      this.add(t);
                    } else this.canAdd(e) && this.add([e]);
                    this.modal &&
                      this.messages &&
                      this.messages.length &&
                      this.enableModality();
                  }
                })),
                (this.clearSubscription =
                  this.messageService.clearObserver.subscribe((e) => {
                    e
                      ? this.key === e && (this.messages = null)
                      : (this.messages = null),
                      this.modal && this.disableModality();
                  }));
            }
            add(e) {
              (this.messages = this.messages
                ? [...this.messages, ...e]
                : [...e]),
                this.preventDuplicates &&
                  (this.messagesArchieve = this.messagesArchieve
                    ? [...this.messagesArchieve, ...e]
                    : [...e]);
            }
            canAdd(e) {
              let t = this.key === e.key;
              return (
                t &&
                  this.preventOpenDuplicates &&
                  (t = !this.containsMessage(this.messages, e)),
                t &&
                  this.preventDuplicates &&
                  (t = !this.containsMessage(this.messagesArchieve, e)),
                t
              );
            }
            containsMessage(e, t) {
              return (
                !!e &&
                null !=
                  e.find(
                    (e) =>
                      e.summary === t.summary &&
                      e.detail == t.detail &&
                      e.severity === t.severity
                  )
              );
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "message":
                  default:
                    this.template = e.template;
                }
              });
            }
            onMessageClose(e) {
              this.messages.splice(e.index, 1),
                0 === this.messages.length && this.disableModality(),
                this.onClose.emit({ message: e.message }),
                this.cd.detectChanges();
            }
            enableModality() {
              this.mask ||
                ((this.mask = document.createElement("div")),
                (this.mask.style.zIndex = String(
                  parseInt(this.containerViewChild.nativeElement.style.zIndex) -
                    1
                )),
                (this.mask.style.display = "block"),
                r.a.addMultipleClasses(
                  this.mask,
                  "ui-widget-overlay ui-dialog-mask"
                ),
                document.body.appendChild(this.mask));
            }
            disableModality() {
              this.mask &&
                (document.body.removeChild(this.mask), (this.mask = null));
            }
            onAnimationStart(e) {
              "void" === e.fromState &&
                this.autoZIndex &&
                (this.containerViewChild.nativeElement.style.zIndex = String(
                  this.baseZIndex + ++r.a.zindex
                ));
            }
            ngOnDestroy() {
              this.messageSubscription &&
                this.messageSubscription.unsubscribe(),
                this.clearSubscription && this.clearSubscription.unsubscribe(),
                this.disableModality();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(o.c), i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-toast"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, o.d, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.templates = s);
              },
              viewQuery: function (e, t) {
                var n;
                1 & e && i.Qc(l, !0),
                  2 & e &&
                    i.Ac((n = i.gc())) &&
                    (t.containerViewChild = n.first);
              },
              inputs: {
                autoZIndex: "autoZIndex",
                baseZIndex: "baseZIndex",
                position: "position",
                preventOpenDuplicates: "preventOpenDuplicates",
                preventDuplicates: "preventDuplicates",
                showTransformOptions: "showTransformOptions",
                hideTransformOptions: "hideTransformOptions",
                showTransitionOptions: "showTransitionOptions",
                hideTransitionOptions: "hideTransitionOptions",
                key: "key",
                style: "style",
                styleClass: "styleClass",
                modal: "modal",
              },
              outputs: { onClose: "onClose" },
              decls: 3,
              vars: 13,
              consts: [
                [3, "ngClass", "ngStyle"],
                ["container", ""],
                [
                  3,
                  "message",
                  "index",
                  "template",
                  "showTransformOptions",
                  "hideTransformOptions",
                  "showTransitionOptions",
                  "hideTransitionOptions",
                  "onClose",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  3,
                  "message",
                  "index",
                  "template",
                  "showTransformOptions",
                  "hideTransformOptions",
                  "showTransitionOptions",
                  "hideTransitionOptions",
                  "onClose",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Xb(0, "div", 0, 1),
                  i.Lc(2, m, 1, 8, "p-toastItem", 2),
                  i.Wb()),
                  2 & e &&
                    (i.Gb(t.styleClass),
                    i.pc(
                      "ngClass",
                      i.yc(
                        5,
                        b,
                        "top-right" === t.position,
                        "top-left" === t.position,
                        "bottom-right" === t.position,
                        "bottom-left" === t.position,
                        "top-center" === t.position,
                        "bottom-center" === t.position,
                        "center" === t.position
                      )
                    )("ngStyle", t.style),
                    i.Eb(2),
                    i.pc("ngForOf", t.messages));
              },
              directives: [s.k, s.n, s.l, v],
              encapsulation: 2,
              data: {
                animation: [
                  Object(a.m)("toastAnimation", [
                    Object(a.l)(":enter, :leave", [
                      Object(a.h)("@*", Object(a.f)()),
                    ]),
                  ]),
                ],
              },
            })),
            e
          );
        })(),
        w = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c], o.e],
            })),
            e
          );
        })();
    },
    bHdf: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("5+tZ"),
        s = n("SpAZ");
      function r(e = Number.POSITIVE_INFINITY) {
        return Object(i.a)(s.a, e);
      }
    },
    bOdf: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("5+tZ");
      function s(e, t) {
        return Object(i.a)(e, t, 1);
      }
    },
    bTu8: function (e, t, n) {
      "use strict";
      var i,
        s,
        r,
        o = n("/xfr"),
        a = n("Jq2x"),
        l = n("cKS0");
      function c() {
        return (
          i ||
            (i = (function () {
              var e = Object(o.b)(),
                t = Object(o.a)();
              return {
                touch: !!(
                  "ontouchstart" in e ||
                  (e.DocumentTouch && t instanceof e.DocumentTouch)
                ),
                pointerEvents:
                  !!e.PointerEvent &&
                  "maxTouchPoints" in e.navigator &&
                  e.navigator.maxTouchPoints >= 0,
                observer:
                  "MutationObserver" in e || "WebkitMutationObserver" in e,
                passiveListener: (function () {
                  var t = !1;
                  try {
                    var n = Object.defineProperty({}, "passive", {
                      get: function () {
                        t = !0;
                      },
                    });
                    e.addEventListener("testPassiveListener", null, n);
                  } catch (i) {}
                  return t;
                })(),
                gestures: "ongesturestart" in e,
              };
            })()),
          i
        );
      }
      function u(e) {
        return (
          void 0 === e && (e = {}),
          s ||
            (s = (function (e) {
              var t = (void 0 === e ? {} : e).userAgent,
                n = c(),
                i = Object(o.b)(),
                s = i.navigator.platform,
                r = t || i.navigator.userAgent,
                a = { ios: !1, android: !1 },
                l = i.screen.width,
                u = i.screen.height,
                h = r.match(/(Android);?[\s\/]+([\d.]+)?/),
                d = r.match(/(iPad).*OS\s([\d_]+)/),
                p = r.match(/(iPod)(.*OS\s([\d_]+))?/),
                f = !d && r.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
                g = "Win32" === s,
                m = "MacIntel" === s;
              return (
                !d &&
                  m &&
                  n.touch &&
                  [
                    "1024x1366",
                    "1366x1024",
                    "834x1194",
                    "1194x834",
                    "834x1112",
                    "1112x834",
                    "768x1024",
                    "1024x768",
                    "820x1180",
                    "1180x820",
                    "810x1080",
                    "1080x810",
                  ].indexOf(l + "x" + u) >= 0 &&
                  ((d = r.match(/(Version)\/([\d.]+)/)) ||
                    (d = [0, 1, "13_0_0"]),
                  (m = !1)),
                h && !g && ((a.os = "android"), (a.android = !0)),
                (d || f || p) && ((a.os = "ios"), (a.ios = !0)),
                a
              );
            })(e)),
          s
        );
      }
      function h() {
        return (
          r ||
            (r = (function () {
              var e,
                t = Object(o.b)();
              return {
                isEdge: !!t.navigator.userAgent.match(/Edge/g),
                isSafari:
                  ((e = t.navigator.userAgent.toLowerCase()),
                  e.indexOf("safari") >= 0 &&
                    e.indexOf("chrome") < 0 &&
                    e.indexOf("android") < 0),
                isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
                  t.navigator.userAgent
                ),
              };
            })()),
          r
        );
      }
      var d = {
        name: "resize",
        create: function () {
          var e = this;
          Object(l.e)(e, {
            resize: {
              observer: null,
              createObserver: function () {
                e &&
                  !e.destroyed &&
                  e.initialized &&
                  ((e.resize.observer = new ResizeObserver(function (t) {
                    var n = e.width,
                      i = e.height,
                      s = n,
                      r = i;
                    t.forEach(function (t) {
                      var n = t.contentBoxSize,
                        i = t.contentRect,
                        o = t.target;
                      (o && o !== e.el) ||
                        ((s = i ? i.width : (n[0] || n).inlineSize),
                        (r = i ? i.height : (n[0] || n).blockSize));
                    }),
                      (s === n && r === i) || e.resize.resizeHandler();
                  })),
                  e.resize.observer.observe(e.el));
              },
              removeObserver: function () {
                e.resize.observer &&
                  e.resize.observer.unobserve &&
                  e.el &&
                  (e.resize.observer.unobserve(e.el),
                  (e.resize.observer = null));
              },
              resizeHandler: function () {
                e &&
                  !e.destroyed &&
                  e.initialized &&
                  (e.emit("beforeResize"), e.emit("resize"));
              },
              orientationChangeHandler: function () {
                e &&
                  !e.destroyed &&
                  e.initialized &&
                  e.emit("orientationchange");
              },
            },
          });
        },
        on: {
          init: function (e) {
            var t = Object(o.b)();
            e.params.resizeObserver && void 0 !== Object(o.b)().ResizeObserver
              ? e.resize.createObserver()
              : (t.addEventListener("resize", e.resize.resizeHandler),
                t.addEventListener(
                  "orientationchange",
                  e.resize.orientationChangeHandler
                ));
          },
          destroy: function (e) {
            var t = Object(o.b)();
            e.resize.removeObserver(),
              t.removeEventListener("resize", e.resize.resizeHandler),
              t.removeEventListener(
                "orientationchange",
                e.resize.orientationChangeHandler
              );
          },
        },
      };
      function p() {
        return (p =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var i in n)
                Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
            }
            return e;
          }).apply(this, arguments);
      }
      var f = {
          attach: function (e, t) {
            void 0 === t && (t = {});
            var n = Object(o.b)(),
              i = this,
              s = new (n.MutationObserver || n.WebkitMutationObserver)(
                function (e) {
                  if (1 !== e.length) {
                    var t = function () {
                      i.emit("observerUpdate", e[0]);
                    };
                    n.requestAnimationFrame
                      ? n.requestAnimationFrame(t)
                      : n.setTimeout(t, 0);
                  } else i.emit("observerUpdate", e[0]);
                }
              );
            s.observe(e, {
              attributes: void 0 === t.attributes || t.attributes,
              childList: void 0 === t.childList || t.childList,
              characterData: void 0 === t.characterData || t.characterData,
            }),
              i.observer.observers.push(s);
          },
          init: function () {
            if (this.support.observer && this.params.observer) {
              if (this.params.observeParents)
                for (var e = this.$el.parents(), t = 0; t < e.length; t += 1)
                  this.observer.attach(e[t]);
              this.observer.attach(this.$el[0], {
                childList: this.params.observeSlideChildren,
              }),
                this.observer.attach(this.$wrapperEl[0], { attributes: !1 });
            }
          },
          destroy: function () {
            this.observer.observers.forEach(function (e) {
              e.disconnect();
            }),
              (this.observer.observers = []);
          },
        },
        g = {
          name: "observer",
          params: {
            observer: !1,
            observeParents: !1,
            observeSlideChildren: !1,
          },
          create: function () {
            Object(l.a)(this, { observer: p({}, f, { observers: [] }) });
          },
          on: {
            init: function (e) {
              e.observer.init();
            },
            destroy: function (e) {
              e.observer.destroy();
            },
          },
        };
      function m(e) {
        var t = Object(o.a)(),
          n = Object(o.b)(),
          i = this.touchEventsData,
          s = this.params,
          r = this.touches;
        if (
          this.enabled &&
          (!this.animating || !s.preventInteractionOnTransition)
        ) {
          var c = e;
          c.originalEvent && (c = c.originalEvent);
          var u = Object(a.a)(c.target);
          if (
            ("wrapper" !== s.touchEventsTarget ||
              u.closest(this.wrapperEl).length) &&
            ((i.isTouchEvent = "touchstart" === c.type),
            (i.isTouchEvent || !("which" in c) || 3 !== c.which) &&
              !(
                (!i.isTouchEvent && "button" in c && c.button > 0) ||
                (i.isTouched && i.isMoved)
              ))
          )
            if (
              (!!s.noSwipingClass &&
                "" !== s.noSwipingClass &&
                c.target &&
                c.target.shadowRoot &&
                e.path &&
                e.path[0] &&
                (u = Object(a.a)(e.path[0])),
              s.noSwiping &&
                u.closest(
                  s.noSwipingSelector
                    ? s.noSwipingSelector
                    : "." + s.noSwipingClass
                )[0])
            )
              this.allowClick = !0;
            else if (!s.swipeHandler || u.closest(s.swipeHandler)[0]) {
              (r.currentX =
                "touchstart" === c.type ? c.targetTouches[0].pageX : c.pageX),
                (r.currentY =
                  "touchstart" === c.type ? c.targetTouches[0].pageY : c.pageY);
              var h = r.currentX,
                d = r.currentY,
                p = s.edgeSwipeDetection || s.iOSEdgeSwipeDetection,
                f = s.edgeSwipeThreshold || s.iOSEdgeSwipeThreshold;
              if (p && (h <= f || h >= n.innerWidth - f)) {
                if ("prevent" !== p) return;
                e.preventDefault();
              }
              if (
                (Object(l.e)(i, {
                  isTouched: !0,
                  isMoved: !1,
                  allowTouchCallbacks: !0,
                  isScrolling: void 0,
                  startMoving: void 0,
                }),
                (r.startX = h),
                (r.startY = d),
                (i.touchStartTime = Object(l.h)()),
                (this.allowClick = !0),
                this.updateSize(),
                (this.swipeDirection = void 0),
                s.threshold > 0 && (i.allowThresholdMove = !1),
                "touchstart" !== c.type)
              ) {
                var g = !0;
                u.is(i.formElements) && (g = !1),
                  t.activeElement &&
                    Object(a.a)(t.activeElement).is(i.formElements) &&
                    t.activeElement !== u[0] &&
                    t.activeElement.blur(),
                  (!s.touchStartForcePreventDefault &&
                    !(
                      g &&
                      this.allowTouchMove &&
                      s.touchStartPreventDefault
                    )) ||
                    u[0].isContentEditable ||
                    c.preventDefault();
              }
              this.emit("touchStart", c);
            }
        }
      }
      function b(e) {
        var t = Object(o.a)(),
          n = this.touchEventsData,
          i = this.params,
          s = this.touches,
          r = this.rtlTranslate;
        if (this.enabled) {
          var c = e;
          if ((c.originalEvent && (c = c.originalEvent), n.isTouched)) {
            if (!n.isTouchEvent || "touchmove" === c.type) {
              var u =
                  "touchmove" === c.type &&
                  c.targetTouches &&
                  (c.targetTouches[0] || c.changedTouches[0]),
                h = "touchmove" === c.type ? u.pageX : c.pageX,
                d = "touchmove" === c.type ? u.pageY : c.pageY;
              if (c.preventedByNestedSwiper)
                return (s.startX = h), void (s.startY = d);
              if (!this.allowTouchMove)
                return (
                  (this.allowClick = !1),
                  void (
                    n.isTouched &&
                    (Object(l.e)(s, {
                      startX: h,
                      startY: d,
                      currentX: h,
                      currentY: d,
                    }),
                    (n.touchStartTime = Object(l.h)()))
                  )
                );
              if (n.isTouchEvent && i.touchReleaseOnEdges && !i.loop)
                if (this.isVertical()) {
                  if (
                    (d < s.startY && this.translate <= this.maxTranslate()) ||
                    (d > s.startY && this.translate >= this.minTranslate())
                  )
                    return (n.isTouched = !1), void (n.isMoved = !1);
                } else if (
                  (h < s.startX && this.translate <= this.maxTranslate()) ||
                  (h > s.startX && this.translate >= this.minTranslate())
                )
                  return;
              if (
                n.isTouchEvent &&
                t.activeElement &&
                c.target === t.activeElement &&
                Object(a.a)(c.target).is(n.formElements)
              )
                return (n.isMoved = !0), void (this.allowClick = !1);
              if (
                (n.allowTouchCallbacks && this.emit("touchMove", c),
                !(c.targetTouches && c.targetTouches.length > 1))
              ) {
                (s.currentX = h), (s.currentY = d);
                var p,
                  f = s.currentX - s.startX,
                  g = s.currentY - s.startY;
                if (
                  !(
                    this.params.threshold &&
                    Math.sqrt(Math.pow(f, 2) + Math.pow(g, 2)) <
                      this.params.threshold
                  )
                )
                  if (
                    (void 0 === n.isScrolling &&
                      ((this.isHorizontal() && s.currentY === s.startY) ||
                      (this.isVertical() && s.currentX === s.startX)
                        ? (n.isScrolling = !1)
                        : f * f + g * g >= 25 &&
                          ((p =
                            (180 * Math.atan2(Math.abs(g), Math.abs(f))) /
                            Math.PI),
                          (n.isScrolling = this.isHorizontal()
                            ? p > i.touchAngle
                            : 90 - p > i.touchAngle))),
                    n.isScrolling && this.emit("touchMoveOpposite", c),
                    void 0 === n.startMoving &&
                      ((s.currentX === s.startX && s.currentY === s.startY) ||
                        (n.startMoving = !0)),
                    n.isScrolling)
                  )
                    n.isTouched = !1;
                  else if (n.startMoving) {
                    (this.allowClick = !1),
                      !i.cssMode && c.cancelable && c.preventDefault(),
                      i.touchMoveStopPropagation &&
                        !i.nested &&
                        c.stopPropagation(),
                      n.isMoved ||
                        (i.loop && this.loopFix(),
                        (n.startTranslate = this.getTranslate()),
                        this.setTransition(0),
                        this.animating &&
                          this.$wrapperEl.trigger(
                            "webkitTransitionEnd transitionend"
                          ),
                        (n.allowMomentumBounce = !1),
                        !i.grabCursor ||
                          (!0 !== this.allowSlideNext &&
                            !0 !== this.allowSlidePrev) ||
                          this.setGrabCursor(!0),
                        this.emit("sliderFirstMove", c)),
                      this.emit("sliderMove", c),
                      (n.isMoved = !0);
                    var m = this.isHorizontal() ? f : g;
                    (s.diff = m),
                      (m *= i.touchRatio),
                      r && (m = -m),
                      (this.swipeDirection = m > 0 ? "prev" : "next"),
                      (n.currentTranslate = m + n.startTranslate);
                    var b = !0,
                      v = i.resistanceRatio;
                    if (
                      (i.touchReleaseOnEdges && (v = 0),
                      m > 0 && n.currentTranslate > this.minTranslate()
                        ? ((b = !1),
                          i.resistance &&
                            (n.currentTranslate =
                              this.minTranslate() -
                              1 +
                              Math.pow(
                                -this.minTranslate() + n.startTranslate + m,
                                v
                              )))
                        : m < 0 &&
                          n.currentTranslate < this.maxTranslate() &&
                          ((b = !1),
                          i.resistance &&
                            (n.currentTranslate =
                              this.maxTranslate() +
                              1 -
                              Math.pow(
                                this.maxTranslate() - n.startTranslate - m,
                                v
                              ))),
                      b && (c.preventedByNestedSwiper = !0),
                      !this.allowSlideNext &&
                        "next" === this.swipeDirection &&
                        n.currentTranslate < n.startTranslate &&
                        (n.currentTranslate = n.startTranslate),
                      !this.allowSlidePrev &&
                        "prev" === this.swipeDirection &&
                        n.currentTranslate > n.startTranslate &&
                        (n.currentTranslate = n.startTranslate),
                      this.allowSlidePrev ||
                        this.allowSlideNext ||
                        (n.currentTranslate = n.startTranslate),
                      i.threshold > 0)
                    ) {
                      if (!(Math.abs(m) > i.threshold || n.allowThresholdMove))
                        return void (n.currentTranslate = n.startTranslate);
                      if (!n.allowThresholdMove)
                        return (
                          (n.allowThresholdMove = !0),
                          (s.startX = s.currentX),
                          (s.startY = s.currentY),
                          (n.currentTranslate = n.startTranslate),
                          void (s.diff = this.isHorizontal()
                            ? s.currentX - s.startX
                            : s.currentY - s.startY)
                        );
                    }
                    i.followFinger &&
                      !i.cssMode &&
                      ((i.freeMode ||
                        i.watchSlidesProgress ||
                        i.watchSlidesVisibility) &&
                        (this.updateActiveIndex(), this.updateSlidesClasses()),
                      i.freeMode &&
                        (0 === n.velocities.length &&
                          n.velocities.push({
                            position:
                              s[this.isHorizontal() ? "startX" : "startY"],
                            time: n.touchStartTime,
                          }),
                        n.velocities.push({
                          position:
                            s[this.isHorizontal() ? "currentX" : "currentY"],
                          time: Object(l.h)(),
                        })),
                      this.updateProgress(n.currentTranslate),
                      this.setTranslate(n.currentTranslate));
                  }
              }
            }
          } else
            n.startMoving && n.isScrolling && this.emit("touchMoveOpposite", c);
        }
      }
      function v(e) {
        var t = this,
          n = t.touchEventsData,
          i = t.params,
          s = t.touches,
          r = t.rtlTranslate,
          o = t.$wrapperEl,
          a = t.slidesGrid,
          c = t.snapGrid;
        if (t.enabled) {
          var u = e;
          if (
            (u.originalEvent && (u = u.originalEvent),
            n.allowTouchCallbacks && t.emit("touchEnd", u),
            (n.allowTouchCallbacks = !1),
            !n.isTouched)
          )
            return (
              n.isMoved && i.grabCursor && t.setGrabCursor(!1),
              (n.isMoved = !1),
              void (n.startMoving = !1)
            );
          i.grabCursor &&
            n.isMoved &&
            n.isTouched &&
            (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) &&
            t.setGrabCursor(!1);
          var h,
            d = Object(l.h)(),
            p = d - n.touchStartTime;
          if (
            (t.allowClick &&
              (t.updateClickedSlide(u),
              t.emit("tap click", u),
              p < 300 &&
                d - n.lastClickTime < 300 &&
                t.emit("doubleTap doubleClick", u)),
            (n.lastClickTime = Object(l.h)()),
            Object(l.g)(function () {
              t.destroyed || (t.allowClick = !0);
            }),
            !n.isTouched ||
              !n.isMoved ||
              !t.swipeDirection ||
              0 === s.diff ||
              n.currentTranslate === n.startTranslate)
          )
            return (
              (n.isTouched = !1), (n.isMoved = !1), void (n.startMoving = !1)
            );
          if (
            ((n.isTouched = !1),
            (n.isMoved = !1),
            (n.startMoving = !1),
            (h = i.followFinger
              ? r
                ? t.translate
                : -t.translate
              : -n.currentTranslate),
            !i.cssMode)
          )
            if (i.freeMode) {
              if (h < -t.minTranslate()) return void t.slideTo(t.activeIndex);
              if (h > -t.maxTranslate())
                return void t.slideTo(
                  t.slides.length < c.length
                    ? c.length - 1
                    : t.slides.length - 1
                );
              if (i.freeModeMomentum) {
                if (n.velocities.length > 1) {
                  var f = n.velocities.pop(),
                    g = n.velocities.pop(),
                    m = f.time - g.time;
                  (t.velocity = (f.position - g.position) / m),
                    (t.velocity /= 2),
                    Math.abs(t.velocity) < i.freeModeMinimumVelocity &&
                      (t.velocity = 0),
                    (m > 150 || Object(l.h)() - f.time > 300) &&
                      (t.velocity = 0);
                } else t.velocity = 0;
                (t.velocity *= i.freeModeMomentumVelocityRatio),
                  (n.velocities.length = 0);
                var b = 1e3 * i.freeModeMomentumRatio,
                  v = t.translate + t.velocity * b;
                r && (v = -v);
                var y,
                  w,
                  S = !1,
                  _ = 20 * Math.abs(t.velocity) * i.freeModeMomentumBounceRatio;
                if (v < t.maxTranslate())
                  i.freeModeMomentumBounce
                    ? (v + t.maxTranslate() < -_ && (v = t.maxTranslate() - _),
                      (y = t.maxTranslate()),
                      (S = !0),
                      (n.allowMomentumBounce = !0))
                    : (v = t.maxTranslate()),
                    i.loop && i.centeredSlides && (w = !0);
                else if (v > t.minTranslate())
                  i.freeModeMomentumBounce
                    ? (v - t.minTranslate() > _ && (v = t.minTranslate() + _),
                      (y = t.minTranslate()),
                      (S = !0),
                      (n.allowMomentumBounce = !0))
                    : (v = t.minTranslate()),
                    i.loop && i.centeredSlides && (w = !0);
                else if (i.freeModeSticky) {
                  for (var C, E = 0; E < c.length; E += 1)
                    if (c[E] > -v) {
                      C = E;
                      break;
                    }
                  v = -(v =
                    Math.abs(c[C] - v) < Math.abs(c[C - 1] - v) ||
                    "next" === t.swipeDirection
                      ? c[C]
                      : c[C - 1]);
                }
                if (
                  (w &&
                    t.once("transitionEnd", function () {
                      t.loopFix();
                    }),
                  0 !== t.velocity)
                ) {
                  if (
                    ((b = r
                      ? Math.abs((-v - t.translate) / t.velocity)
                      : Math.abs((v - t.translate) / t.velocity)),
                    i.freeModeSticky)
                  ) {
                    var O = Math.abs((r ? -v : v) - t.translate),
                      x = t.slidesSizesGrid[t.activeIndex];
                    b =
                      O < x
                        ? i.speed
                        : O < 2 * x
                        ? 1.5 * i.speed
                        : 2.5 * i.speed;
                  }
                } else if (i.freeModeSticky) return void t.slideToClosest();
                i.freeModeMomentumBounce && S
                  ? (t.updateProgress(y),
                    t.setTransition(b),
                    t.setTranslate(v),
                    t.transitionStart(!0, t.swipeDirection),
                    (t.animating = !0),
                    o.transitionEnd(function () {
                      t &&
                        !t.destroyed &&
                        n.allowMomentumBounce &&
                        (t.emit("momentumBounce"),
                        t.setTransition(i.speed),
                        setTimeout(function () {
                          t.setTranslate(y),
                            o.transitionEnd(function () {
                              t && !t.destroyed && t.transitionEnd();
                            });
                        }, 0));
                    }))
                  : t.velocity
                  ? (t.updateProgress(v),
                    t.setTransition(b),
                    t.setTranslate(v),
                    t.transitionStart(!0, t.swipeDirection),
                    t.animating ||
                      ((t.animating = !0),
                      o.transitionEnd(function () {
                        t && !t.destroyed && t.transitionEnd();
                      })))
                  : (t.emit("_freeModeNoMomentumRelease"), t.updateProgress(v)),
                  t.updateActiveIndex(),
                  t.updateSlidesClasses();
              } else {
                if (i.freeModeSticky) return void t.slideToClosest();
                i.freeMode && t.emit("_freeModeNoMomentumRelease");
              }
              (!i.freeModeMomentum || p >= i.longSwipesMs) &&
                (t.updateProgress(),
                t.updateActiveIndex(),
                t.updateSlidesClasses());
            } else {
              for (
                var T = 0, k = t.slidesSizesGrid[0], M = 0;
                M < a.length;
                M += M < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup
              ) {
                var I = M < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
                void 0 !== a[M + I]
                  ? h >= a[M] &&
                    h < a[M + I] &&
                    ((T = M), (k = a[M + I] - a[M]))
                  : h >= a[M] &&
                    ((T = M), (k = a[a.length - 1] - a[a.length - 2]));
              }
              var P = (h - a[T]) / k,
                R = T < i.slidesPerGroupSkip - 1 ? 1 : i.slidesPerGroup;
              if (p > i.longSwipesMs) {
                if (!i.longSwipes) return void t.slideTo(t.activeIndex);
                "next" === t.swipeDirection &&
                  t.slideTo(P >= i.longSwipesRatio ? T + R : T),
                  "prev" === t.swipeDirection &&
                    t.slideTo(P > 1 - i.longSwipesRatio ? T + R : T);
              } else {
                if (!i.shortSwipes) return void t.slideTo(t.activeIndex);
                !t.navigation ||
                (u.target !== t.navigation.nextEl &&
                  u.target !== t.navigation.prevEl)
                  ? ("next" === t.swipeDirection && t.slideTo(T + R),
                    "prev" === t.swipeDirection && t.slideTo(T))
                  : t.slideTo(u.target === t.navigation.nextEl ? T + R : T);
              }
            }
        }
      }
      function y() {
        var e = this.params,
          t = this.el;
        if (!t || 0 !== t.offsetWidth) {
          e.breakpoints && this.setBreakpoint();
          var n = this.allowSlideNext,
            i = this.allowSlidePrev,
            s = this.snapGrid;
          (this.allowSlideNext = !0),
            (this.allowSlidePrev = !0),
            this.updateSize(),
            this.updateSlides(),
            this.updateSlidesClasses(),
            this.slideTo(
              ("auto" === e.slidesPerView || e.slidesPerView > 1) &&
                this.isEnd &&
                !this.isBeginning &&
                !this.params.centeredSlides
                ? this.slides.length - 1
                : this.activeIndex,
              0,
              !1,
              !0
            ),
            this.autoplay &&
              this.autoplay.running &&
              this.autoplay.paused &&
              this.autoplay.run(),
            (this.allowSlidePrev = i),
            (this.allowSlideNext = n),
            this.params.watchOverflow &&
              s !== this.snapGrid &&
              this.checkOverflow();
        }
      }
      function w(e) {
        this.enabled &&
          (this.allowClick ||
            (this.params.preventClicks && e.preventDefault(),
            this.params.preventClicksPropagation &&
              this.animating &&
              (e.stopPropagation(), e.stopImmediatePropagation())));
      }
      function S() {
        var e = this.wrapperEl,
          t = this.rtlTranslate;
        if (this.enabled) {
          (this.previousTranslate = this.translate),
            (this.translate = this.isHorizontal()
              ? t
                ? e.scrollWidth - e.offsetWidth - e.scrollLeft
                : -e.scrollLeft
              : -e.scrollTop),
            -0 === this.translate && (this.translate = 0),
            this.updateActiveIndex(),
            this.updateSlidesClasses();
          var n = this.maxTranslate() - this.minTranslate();
          (0 === n ? 0 : (this.translate - this.minTranslate()) / n) !==
            this.progress &&
            this.updateProgress(t ? -this.translate : this.translate),
            this.emit("setTranslate", this.translate, !1);
        }
      }
      var _ = !1;
      function C() {}
      var E = {
        init: !0,
        direction: "horizontal",
        touchEventsTarget: "container",
        initialSlide: 0,
        speed: 300,
        cssMode: !1,
        updateOnWindowResize: !0,
        resizeObserver: !1,
        nested: !1,
        createElements: !1,
        enabled: !0,
        width: null,
        height: null,
        preventInteractionOnTransition: !1,
        userAgent: null,
        url: null,
        edgeSwipeDetection: !1,
        edgeSwipeThreshold: 20,
        freeMode: !1,
        freeModeMomentum: !0,
        freeModeMomentumRatio: 1,
        freeModeMomentumBounce: !0,
        freeModeMomentumBounceRatio: 1,
        freeModeMomentumVelocityRatio: 1,
        freeModeSticky: !1,
        freeModeMinimumVelocity: 0.02,
        autoHeight: !1,
        setWrapperSize: !1,
        virtualTranslate: !1,
        effect: "slide",
        breakpoints: void 0,
        breakpointsBase: "window",
        spaceBetween: 0,
        slidesPerView: 1,
        slidesPerColumn: 1,
        slidesPerColumnFill: "column",
        slidesPerGroup: 1,
        slidesPerGroupSkip: 0,
        centeredSlides: !1,
        centeredSlidesBounds: !1,
        slidesOffsetBefore: 0,
        slidesOffsetAfter: 0,
        normalizeSlideIndex: !0,
        centerInsufficientSlides: !1,
        watchOverflow: !1,
        roundLengths: !1,
        touchRatio: 1,
        touchAngle: 45,
        simulateTouch: !0,
        shortSwipes: !0,
        longSwipes: !0,
        longSwipesRatio: 0.5,
        longSwipesMs: 300,
        followFinger: !0,
        allowTouchMove: !0,
        threshold: 0,
        touchMoveStopPropagation: !1,
        touchStartPreventDefault: !0,
        touchStartForcePreventDefault: !1,
        touchReleaseOnEdges: !1,
        uniqueNavElements: !0,
        resistance: !0,
        resistanceRatio: 0.85,
        watchSlidesProgress: !1,
        watchSlidesVisibility: !1,
        grabCursor: !1,
        preventClicks: !0,
        preventClicksPropagation: !0,
        slideToClickedSlide: !1,
        preloadImages: !0,
        updateOnImagesReady: !0,
        loop: !1,
        loopAdditionalSlides: 0,
        loopedSlides: null,
        loopFillGroupWithBlank: !1,
        loopPreventsSlide: !0,
        allowSlidePrev: !0,
        allowSlideNext: !0,
        swipeHandler: null,
        noSwiping: !0,
        noSwipingClass: "swiper-no-swiping",
        noSwipingSelector: null,
        passiveListeners: !0,
        containerModifierClass: "swiper-container-",
        slideClass: "swiper-slide",
        slideBlankClass: "swiper-slide-invisible-blank",
        slideActiveClass: "swiper-slide-active",
        slideDuplicateActiveClass: "swiper-slide-duplicate-active",
        slideVisibleClass: "swiper-slide-visible",
        slideDuplicateClass: "swiper-slide-duplicate",
        slideNextClass: "swiper-slide-next",
        slideDuplicateNextClass: "swiper-slide-duplicate-next",
        slidePrevClass: "swiper-slide-prev",
        slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
        wrapperClass: "swiper-wrapper",
        runCallbacksOnInit: !0,
        _emitClasses: !1,
      };
      function O(e, t) {
        for (var n = 0; n < t.length; n++) {
          var i = t[n];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(e, i.key, i);
        }
      }
      var x = {
          modular: {
            useParams: function (e) {
              var t = this;
              t.modules &&
                Object.keys(t.modules).forEach(function (n) {
                  var i = t.modules[n];
                  i.params && Object(l.e)(e, i.params);
                });
            },
            useModules: function (e) {
              void 0 === e && (e = {});
              var t = this;
              t.modules &&
                Object.keys(t.modules).forEach(function (n) {
                  var i = t.modules[n],
                    s = e[n] || {};
                  i.on &&
                    t.on &&
                    Object.keys(i.on).forEach(function (e) {
                      t.on(e, i.on[e]);
                    }),
                    i.create && i.create.bind(t)(s);
                });
            },
          },
          eventsEmitter: {
            on: function (e, t, n) {
              var i = this;
              if ("function" != typeof t) return i;
              var s = n ? "unshift" : "push";
              return (
                e.split(" ").forEach(function (e) {
                  i.eventsListeners[e] || (i.eventsListeners[e] = []),
                    i.eventsListeners[e][s](t);
                }),
                i
              );
            },
            once: function (e, t, n) {
              var i = this;
              if ("function" != typeof t) return i;
              function s() {
                i.off(e, s), s.__emitterProxy && delete s.__emitterProxy;
                for (
                  var n = arguments.length, r = new Array(n), o = 0;
                  o < n;
                  o++
                )
                  r[o] = arguments[o];
                t.apply(i, r);
              }
              return (s.__emitterProxy = t), i.on(e, s, n);
            },
            onAny: function (e, t) {
              if ("function" != typeof e) return this;
              var n = t ? "unshift" : "push";
              return (
                this.eventsAnyListeners.indexOf(e) < 0 &&
                  this.eventsAnyListeners[n](e),
                this
              );
            },
            offAny: function (e) {
              if (!this.eventsAnyListeners) return this;
              var t = this.eventsAnyListeners.indexOf(e);
              return t >= 0 && this.eventsAnyListeners.splice(t, 1), this;
            },
            off: function (e, t) {
              var n = this;
              return n.eventsListeners
                ? (e.split(" ").forEach(function (e) {
                    void 0 === t
                      ? (n.eventsListeners[e] = [])
                      : n.eventsListeners[e] &&
                        n.eventsListeners[e].forEach(function (i, s) {
                          (i === t ||
                            (i.__emitterProxy && i.__emitterProxy === t)) &&
                            n.eventsListeners[e].splice(s, 1);
                        });
                  }),
                  n)
                : n;
            },
            emit: function () {
              var e,
                t,
                n,
                i = this;
              if (!i.eventsListeners) return i;
              for (
                var s = arguments.length, r = new Array(s), o = 0;
                o < s;
                o++
              )
                r[o] = arguments[o];
              "string" == typeof r[0] || Array.isArray(r[0])
                ? ((e = r[0]), (t = r.slice(1, r.length)), (n = i))
                : ((e = r[0].events), (t = r[0].data), (n = r[0].context || i)),
                t.unshift(n);
              var a = Array.isArray(e) ? e : e.split(" ");
              return (
                a.forEach(function (e) {
                  i.eventsAnyListeners &&
                    i.eventsAnyListeners.length &&
                    i.eventsAnyListeners.forEach(function (i) {
                      i.apply(n, [e].concat(t));
                    }),
                    i.eventsListeners &&
                      i.eventsListeners[e] &&
                      i.eventsListeners[e].forEach(function (e) {
                        e.apply(n, t);
                      });
                }),
                i
              );
            },
          },
          update: {
            updateSize: function () {
              var e,
                t,
                n = this.$el;
              (t =
                null != this.params.height
                  ? this.params.height
                  : n[0].clientHeight),
                (0 ===
                  (e =
                    null != this.params.width
                      ? this.params.width
                      : n[0].clientWidth) &&
                  this.isHorizontal()) ||
                  (0 === t && this.isVertical()) ||
                  ((e =
                    e -
                    parseInt(n.css("padding-left") || 0, 10) -
                    parseInt(n.css("padding-right") || 0, 10)),
                  (t =
                    t -
                    parseInt(n.css("padding-top") || 0, 10) -
                    parseInt(n.css("padding-bottom") || 0, 10)),
                  Number.isNaN(e) && (e = 0),
                  Number.isNaN(t) && (t = 0),
                  Object(l.e)(this, {
                    width: e,
                    height: t,
                    size: this.isHorizontal() ? e : t,
                  }));
            },
            updateSlides: function () {
              var e = this;
              function t(t) {
                return e.isHorizontal()
                  ? t
                  : {
                      width: "height",
                      "margin-top": "margin-left",
                      "margin-bottom ": "margin-right",
                      "margin-left": "margin-top",
                      "margin-right": "margin-bottom",
                      "padding-left": "padding-top",
                      "padding-right": "padding-bottom",
                      marginRight: "marginBottom",
                    }[t];
              }
              function n(e, n) {
                return parseFloat(e.getPropertyValue(t(n)) || 0);
              }
              var i = e.params,
                s = e.$wrapperEl,
                r = e.size,
                o = e.rtlTranslate,
                a = e.wrongRTL,
                c = e.virtual && i.virtual.enabled,
                u = c ? e.virtual.slides.length : e.slides.length,
                h = s.children("." + e.params.slideClass),
                d = c ? e.virtual.slides.length : h.length,
                p = [],
                f = [],
                g = [],
                m = i.slidesOffsetBefore;
              "function" == typeof m && (m = i.slidesOffsetBefore.call(e));
              var b = i.slidesOffsetAfter;
              "function" == typeof b && (b = i.slidesOffsetAfter.call(e));
              var v = e.snapGrid.length,
                y = e.slidesGrid.length,
                w = i.spaceBetween,
                S = -m,
                _ = 0,
                C = 0;
              if (void 0 !== r) {
                var E, O;
                "string" == typeof w &&
                  w.indexOf("%") >= 0 &&
                  (w = (parseFloat(w.replace("%", "")) / 100) * r),
                  (e.virtualSize = -w),
                  h.css(
                    o
                      ? { marginLeft: "", marginTop: "" }
                      : { marginRight: "", marginBottom: "" }
                  ),
                  i.slidesPerColumn > 1 &&
                    ((E =
                      Math.floor(d / i.slidesPerColumn) ===
                      d / e.params.slidesPerColumn
                        ? d
                        : Math.ceil(d / i.slidesPerColumn) * i.slidesPerColumn),
                    "auto" !== i.slidesPerView &&
                      "row" === i.slidesPerColumnFill &&
                      (E = Math.max(E, i.slidesPerView * i.slidesPerColumn)));
                for (
                  var x,
                    T,
                    k,
                    M = i.slidesPerColumn,
                    I = E / M,
                    P = Math.floor(d / i.slidesPerColumn),
                    R = 0;
                  R < d;
                  R += 1
                ) {
                  O = 0;
                  var N = h.eq(R);
                  if (i.slidesPerColumn > 1) {
                    var L = void 0,
                      A = void 0,
                      D = void 0;
                    if (
                      "row" === i.slidesPerColumnFill &&
                      i.slidesPerGroup > 1
                    ) {
                      var j = Math.floor(
                          R / (i.slidesPerGroup * i.slidesPerColumn)
                        ),
                        F = R - i.slidesPerColumn * i.slidesPerGroup * j,
                        V =
                          0 === j
                            ? i.slidesPerGroup
                            : Math.min(
                                Math.ceil((d - j * M * i.slidesPerGroup) / M),
                                i.slidesPerGroup
                              );
                      (D = Math.floor(F / V)),
                        N.css({
                          "-webkit-box-ordinal-group": (L =
                            (A = F - D * V + j * i.slidesPerGroup) +
                            (D * E) / M),
                          "-moz-box-ordinal-group": L,
                          "-ms-flex-order": L,
                          "-webkit-order": L,
                          order: L,
                        });
                    } else
                      "column" === i.slidesPerColumnFill
                        ? ((D = R - (A = Math.floor(R / M)) * M),
                          (A > P || (A === P && D === M - 1)) &&
                            (D += 1) >= M &&
                            ((D = 0), (A += 1)))
                        : (A = R - (D = Math.floor(R / I)) * I);
                    N.css(
                      t("margin-top"),
                      0 !== D && i.spaceBetween && i.spaceBetween + "px"
                    );
                  }
                  if ("none" !== N.css("display")) {
                    if ("auto" === i.slidesPerView) {
                      var W = getComputedStyle(N[0]),
                        z = N[0].style.transform,
                        X = N[0].style.webkitTransform;
                      if (
                        (z && (N[0].style.transform = "none"),
                        X && (N[0].style.webkitTransform = "none"),
                        i.roundLengths)
                      )
                        O = e.isHorizontal()
                          ? N.outerWidth(!0)
                          : N.outerHeight(!0);
                      else {
                        var B = n(W, "width"),
                          H = n(W, "padding-left"),
                          U = n(W, "padding-right"),
                          G = n(W, "margin-left"),
                          $ = n(W, "margin-right"),
                          q = W.getPropertyValue("box-sizing");
                        if (q && "border-box" === q) O = B + G + $;
                        else {
                          var K = N[0];
                          O =
                            B + H + U + G + $ + (K.offsetWidth - K.clientWidth);
                        }
                      }
                      z && (N[0].style.transform = z),
                        X && (N[0].style.webkitTransform = X),
                        i.roundLengths && (O = Math.floor(O));
                    } else
                      (O = (r - (i.slidesPerView - 1) * w) / i.slidesPerView),
                        i.roundLengths && (O = Math.floor(O)),
                        h[R] && (h[R].style[t("width")] = O + "px");
                    h[R] && (h[R].swiperSlideSize = O),
                      g.push(O),
                      i.centeredSlides
                        ? ((S = S + O / 2 + _ / 2 + w),
                          0 === _ && 0 !== R && (S = S - r / 2 - w),
                          0 === R && (S = S - r / 2 - w),
                          Math.abs(S) < 0.001 && (S = 0),
                          i.roundLengths && (S = Math.floor(S)),
                          C % i.slidesPerGroup == 0 && p.push(S),
                          f.push(S))
                        : (i.roundLengths && (S = Math.floor(S)),
                          (C - Math.min(e.params.slidesPerGroupSkip, C)) %
                            e.params.slidesPerGroup ==
                            0 && p.push(S),
                          f.push(S),
                          (S = S + O + w)),
                      (e.virtualSize += O + w),
                      (_ = O),
                      (C += 1);
                  }
                }
                if (
                  ((e.virtualSize = Math.max(e.virtualSize, r) + b),
                  o &&
                    a &&
                    ("slide" === i.effect || "coverflow" === i.effect) &&
                    s.css({ width: e.virtualSize + i.spaceBetween + "px" }),
                  i.setWrapperSize &&
                    s.css(
                      (((T = {})[t("width")] =
                        e.virtualSize + i.spaceBetween + "px"),
                      T)
                    ),
                  i.slidesPerColumn > 1 &&
                    ((e.virtualSize = (O + i.spaceBetween) * E),
                    (e.virtualSize =
                      Math.ceil(e.virtualSize / i.slidesPerColumn) -
                      i.spaceBetween),
                    s.css(
                      (((k = {})[t("width")] =
                        e.virtualSize + i.spaceBetween + "px"),
                      k)
                    ),
                    i.centeredSlides))
                ) {
                  x = [];
                  for (var Y = 0; Y < p.length; Y += 1) {
                    var Z = p[Y];
                    i.roundLengths && (Z = Math.floor(Z)),
                      p[Y] < e.virtualSize + p[0] && x.push(Z);
                  }
                  p = x;
                }
                if (!i.centeredSlides) {
                  x = [];
                  for (var Q = 0; Q < p.length; Q += 1) {
                    var J = p[Q];
                    i.roundLengths && (J = Math.floor(J)),
                      p[Q] <= e.virtualSize - r && x.push(J);
                  }
                  (p = x),
                    Math.floor(e.virtualSize - r) -
                      Math.floor(p[p.length - 1]) >
                      1 && p.push(e.virtualSize - r);
                }
                if ((0 === p.length && (p = [0]), 0 !== i.spaceBetween)) {
                  var ee,
                    te =
                      e.isHorizontal() && o ? "marginLeft" : t("marginRight");
                  h.filter(function (e, t) {
                    return !i.cssMode || t !== h.length - 1;
                  }).css((((ee = {})[te] = w + "px"), ee));
                }
                if (i.centeredSlides && i.centeredSlidesBounds) {
                  var ne = 0;
                  g.forEach(function (e) {
                    ne += e + (i.spaceBetween ? i.spaceBetween : 0);
                  });
                  var ie = (ne -= i.spaceBetween) - r;
                  p = p.map(function (e) {
                    return e < 0 ? -m : e > ie ? ie + b : e;
                  });
                }
                if (i.centerInsufficientSlides) {
                  var se = 0;
                  if (
                    (g.forEach(function (e) {
                      se += e + (i.spaceBetween ? i.spaceBetween : 0);
                    }),
                    (se -= i.spaceBetween) < r)
                  ) {
                    var re = (r - se) / 2;
                    p.forEach(function (e, t) {
                      p[t] = e - re;
                    }),
                      f.forEach(function (e, t) {
                        f[t] = e + re;
                      });
                  }
                }
                Object(l.e)(e, {
                  slides: h,
                  snapGrid: p,
                  slidesGrid: f,
                  slidesSizesGrid: g,
                }),
                  d !== u && e.emit("slidesLengthChange"),
                  p.length !== v &&
                    (e.params.watchOverflow && e.checkOverflow(),
                    e.emit("snapGridLengthChange")),
                  f.length !== y && e.emit("slidesGridLengthChange"),
                  (i.watchSlidesProgress || i.watchSlidesVisibility) &&
                    e.updateSlidesOffset();
              }
            },
            updateAutoHeight: function (e) {
              var t,
                n = this,
                i = [],
                s = n.virtual && n.params.virtual.enabled,
                r = 0;
              "number" == typeof e
                ? n.setTransition(e)
                : !0 === e && n.setTransition(n.params.speed);
              var o = function (e) {
                return s
                  ? n.slides.filter(function (t) {
                      return (
                        parseInt(
                          t.getAttribute("data-swiper-slide-index"),
                          10
                        ) === e
                      );
                    })[0]
                  : n.slides.eq(e)[0];
              };
              if (
                "auto" !== n.params.slidesPerView &&
                n.params.slidesPerView > 1
              )
                if (n.params.centeredSlides)
                  n.visibleSlides.each(function (e) {
                    i.push(e);
                  });
                else
                  for (t = 0; t < Math.ceil(n.params.slidesPerView); t += 1) {
                    var a = n.activeIndex + t;
                    if (a > n.slides.length && !s) break;
                    i.push(o(a));
                  }
              else i.push(o(n.activeIndex));
              for (t = 0; t < i.length; t += 1)
                if (void 0 !== i[t]) {
                  var l = i[t].offsetHeight;
                  r = l > r ? l : r;
                }
              r && n.$wrapperEl.css("height", r + "px");
            },
            updateSlidesOffset: function () {
              for (var e = this.slides, t = 0; t < e.length; t += 1)
                e[t].swiperSlideOffset = this.isHorizontal()
                  ? e[t].offsetLeft
                  : e[t].offsetTop;
            },
            updateSlidesProgress: function (e) {
              void 0 === e && (e = (this && this.translate) || 0);
              var t = this.params,
                n = this.slides,
                i = this.rtlTranslate;
              if (0 !== n.length) {
                void 0 === n[0].swiperSlideOffset && this.updateSlidesOffset();
                var s = -e;
                i && (s = e),
                  n.removeClass(t.slideVisibleClass),
                  (this.visibleSlidesIndexes = []),
                  (this.visibleSlides = []);
                for (var r = 0; r < n.length; r += 1) {
                  var o = n[r],
                    l =
                      (s +
                        (t.centeredSlides ? this.minTranslate() : 0) -
                        o.swiperSlideOffset) /
                      (o.swiperSlideSize + t.spaceBetween);
                  if (
                    t.watchSlidesVisibility ||
                    (t.centeredSlides && t.autoHeight)
                  ) {
                    var c = -(s - o.swiperSlideOffset),
                      u = c + this.slidesSizesGrid[r];
                    ((c >= 0 && c < this.size - 1) ||
                      (u > 1 && u <= this.size) ||
                      (c <= 0 && u >= this.size)) &&
                      (this.visibleSlides.push(o),
                      this.visibleSlidesIndexes.push(r),
                      n.eq(r).addClass(t.slideVisibleClass));
                  }
                  o.progress = i ? -l : l;
                }
                this.visibleSlides = Object(a.a)(this.visibleSlides);
              }
            },
            updateProgress: function (e) {
              void 0 === e &&
                (e =
                  (this &&
                    this.translate &&
                    this.translate * (this.rtlTranslate ? -1 : 1)) ||
                  0);
              var t = this.params,
                n = this.maxTranslate() - this.minTranslate(),
                i = this.progress,
                s = this.isBeginning,
                r = this.isEnd,
                o = s,
                a = r;
              0 === n
                ? ((i = 0), (s = !0), (r = !0))
                : ((s = (i = (e - this.minTranslate()) / n) <= 0),
                  (r = i >= 1)),
                Object(l.e)(this, { progress: i, isBeginning: s, isEnd: r }),
                (t.watchSlidesProgress ||
                  t.watchSlidesVisibility ||
                  (t.centeredSlides && t.autoHeight)) &&
                  this.updateSlidesProgress(e),
                s && !o && this.emit("reachBeginning toEdge"),
                r && !a && this.emit("reachEnd toEdge"),
                ((o && !s) || (a && !r)) && this.emit("fromEdge"),
                this.emit("progress", i);
            },
            updateSlidesClasses: function () {
              var e,
                t = this.slides,
                n = this.params,
                i = this.$wrapperEl,
                s = this.activeIndex,
                r = this.realIndex,
                o = this.virtual && n.virtual.enabled;
              t.removeClass(
                n.slideActiveClass +
                  " " +
                  n.slideNextClass +
                  " " +
                  n.slidePrevClass +
                  " " +
                  n.slideDuplicateActiveClass +
                  " " +
                  n.slideDuplicateNextClass +
                  " " +
                  n.slideDuplicatePrevClass
              ),
                (e = o
                  ? this.$wrapperEl.find(
                      "." +
                        n.slideClass +
                        '[data-swiper-slide-index="' +
                        s +
                        '"]'
                    )
                  : t.eq(s)).addClass(n.slideActiveClass),
                n.loop &&
                  (e.hasClass(n.slideDuplicateClass)
                    ? i
                        .children(
                          "." +
                            n.slideClass +
                            ":not(." +
                            n.slideDuplicateClass +
                            ')[data-swiper-slide-index="' +
                            r +
                            '"]'
                        )
                        .addClass(n.slideDuplicateActiveClass)
                    : i
                        .children(
                          "." +
                            n.slideClass +
                            "." +
                            n.slideDuplicateClass +
                            '[data-swiper-slide-index="' +
                            r +
                            '"]'
                        )
                        .addClass(n.slideDuplicateActiveClass));
              var a = e
                .nextAll("." + n.slideClass)
                .eq(0)
                .addClass(n.slideNextClass);
              n.loop &&
                0 === a.length &&
                (a = t.eq(0)).addClass(n.slideNextClass);
              var l = e
                .prevAll("." + n.slideClass)
                .eq(0)
                .addClass(n.slidePrevClass);
              n.loop &&
                0 === l.length &&
                (l = t.eq(-1)).addClass(n.slidePrevClass),
                n.loop &&
                  (a.hasClass(n.slideDuplicateClass)
                    ? i
                        .children(
                          "." +
                            n.slideClass +
                            ":not(." +
                            n.slideDuplicateClass +
                            ')[data-swiper-slide-index="' +
                            a.attr("data-swiper-slide-index") +
                            '"]'
                        )
                        .addClass(n.slideDuplicateNextClass)
                    : i
                        .children(
                          "." +
                            n.slideClass +
                            "." +
                            n.slideDuplicateClass +
                            '[data-swiper-slide-index="' +
                            a.attr("data-swiper-slide-index") +
                            '"]'
                        )
                        .addClass(n.slideDuplicateNextClass),
                  l.hasClass(n.slideDuplicateClass)
                    ? i
                        .children(
                          "." +
                            n.slideClass +
                            ":not(." +
                            n.slideDuplicateClass +
                            ')[data-swiper-slide-index="' +
                            l.attr("data-swiper-slide-index") +
                            '"]'
                        )
                        .addClass(n.slideDuplicatePrevClass)
                    : i
                        .children(
                          "." +
                            n.slideClass +
                            "." +
                            n.slideDuplicateClass +
                            '[data-swiper-slide-index="' +
                            l.attr("data-swiper-slide-index") +
                            '"]'
                        )
                        .addClass(n.slideDuplicatePrevClass)),
                this.emitSlidesClasses();
            },
            updateActiveIndex: function (e) {
              var t,
                n = this.rtlTranslate ? this.translate : -this.translate,
                i = this.slidesGrid,
                s = this.snapGrid,
                r = this.params,
                o = this.activeIndex,
                a = this.realIndex,
                c = this.snapIndex,
                u = e;
              if (void 0 === u) {
                for (var h = 0; h < i.length; h += 1)
                  void 0 !== i[h + 1]
                    ? n >= i[h] && n < i[h + 1] - (i[h + 1] - i[h]) / 2
                      ? (u = h)
                      : n >= i[h] && n < i[h + 1] && (u = h + 1)
                    : n >= i[h] && (u = h);
                r.normalizeSlideIndex && (u < 0 || void 0 === u) && (u = 0);
              }
              if (s.indexOf(n) >= 0) t = s.indexOf(n);
              else {
                var d = Math.min(r.slidesPerGroupSkip, u);
                t = d + Math.floor((u - d) / r.slidesPerGroup);
              }
              if ((t >= s.length && (t = s.length - 1), u !== o)) {
                var p = parseInt(
                  this.slides.eq(u).attr("data-swiper-slide-index") || u,
                  10
                );
                Object(l.e)(this, {
                  snapIndex: t,
                  realIndex: p,
                  previousIndex: o,
                  activeIndex: u,
                }),
                  this.emit("activeIndexChange"),
                  this.emit("snapIndexChange"),
                  a !== p && this.emit("realIndexChange"),
                  (this.initialized || this.params.runCallbacksOnInit) &&
                    this.emit("slideChange");
              } else
                t !== c && ((this.snapIndex = t), this.emit("snapIndexChange"));
            },
            updateClickedSlide: function (e) {
              var t,
                n = this.params,
                i = Object(a.a)(e.target).closest("." + n.slideClass)[0],
                s = !1;
              if (i)
                for (var r = 0; r < this.slides.length; r += 1)
                  if (this.slides[r] === i) {
                    (s = !0), (t = r);
                    break;
                  }
              if (!i || !s)
                return (
                  (this.clickedSlide = void 0),
                  void (this.clickedIndex = void 0)
                );
              (this.clickedSlide = i),
                (this.clickedIndex =
                  this.virtual && this.params.virtual.enabled
                    ? parseInt(
                        Object(a.a)(i).attr("data-swiper-slide-index"),
                        10
                      )
                    : t),
                n.slideToClickedSlide &&
                  void 0 !== this.clickedIndex &&
                  this.clickedIndex !== this.activeIndex &&
                  this.slideToClickedSlide();
            },
          },
          translate: {
            getTranslate: function (e) {
              void 0 === e && (e = this.isHorizontal() ? "x" : "y");
              var t = this.params,
                n = this.rtlTranslate,
                i = this.translate,
                s = this.$wrapperEl;
              if (t.virtualTranslate) return n ? -i : i;
              if (t.cssMode) return i;
              var r = Object(l.f)(s[0], e);
              return n && (r = -r), r || 0;
            },
            setTranslate: function (e, t) {
              var n = this.rtlTranslate,
                i = this.params,
                s = this.$wrapperEl,
                r = this.wrapperEl,
                o = this.progress,
                a = 0,
                l = 0;
              this.isHorizontal() ? (a = n ? -e : e) : (l = e),
                i.roundLengths && ((a = Math.floor(a)), (l = Math.floor(l))),
                i.cssMode
                  ? (r[this.isHorizontal() ? "scrollLeft" : "scrollTop"] =
                      this.isHorizontal() ? -a : -l)
                  : i.virtualTranslate ||
                    s.transform("translate3d(" + a + "px, " + l + "px, 0px)"),
                (this.previousTranslate = this.translate),
                (this.translate = this.isHorizontal() ? a : l);
              var c = this.maxTranslate() - this.minTranslate();
              (0 === c ? 0 : (e - this.minTranslate()) / c) !== o &&
                this.updateProgress(e),
                this.emit("setTranslate", this.translate, t);
            },
            minTranslate: function () {
              return -this.snapGrid[0];
            },
            maxTranslate: function () {
              return -this.snapGrid[this.snapGrid.length - 1];
            },
            translateTo: function (e, t, n, i, s) {
              void 0 === e && (e = 0),
                void 0 === t && (t = this.params.speed),
                void 0 === n && (n = !0),
                void 0 === i && (i = !0);
              var r = this,
                o = r.params,
                a = r.wrapperEl;
              if (r.animating && o.preventInteractionOnTransition) return !1;
              var l,
                c = r.minTranslate(),
                u = r.maxTranslate();
              if (
                (r.updateProgress((l = i && e > c ? c : i && e < u ? u : e)),
                o.cssMode)
              ) {
                var h,
                  d = r.isHorizontal();
                return (
                  0 === t
                    ? (a[d ? "scrollLeft" : "scrollTop"] = -l)
                    : a.scrollTo
                    ? a.scrollTo(
                        (((h = {})[d ? "left" : "top"] = -l),
                        (h.behavior = "smooth"),
                        h)
                      )
                    : (a[d ? "scrollLeft" : "scrollTop"] = -l),
                  !0
                );
              }
              return (
                0 === t
                  ? (r.setTransition(0),
                    r.setTranslate(l),
                    n &&
                      (r.emit("beforeTransitionStart", t, s),
                      r.emit("transitionEnd")))
                  : (r.setTransition(t),
                    r.setTranslate(l),
                    n &&
                      (r.emit("beforeTransitionStart", t, s),
                      r.emit("transitionStart")),
                    r.animating ||
                      ((r.animating = !0),
                      r.onTranslateToWrapperTransitionEnd ||
                        (r.onTranslateToWrapperTransitionEnd = function (e) {
                          r &&
                            !r.destroyed &&
                            e.target === this &&
                            (r.$wrapperEl[0].removeEventListener(
                              "transitionend",
                              r.onTranslateToWrapperTransitionEnd
                            ),
                            r.$wrapperEl[0].removeEventListener(
                              "webkitTransitionEnd",
                              r.onTranslateToWrapperTransitionEnd
                            ),
                            (r.onTranslateToWrapperTransitionEnd = null),
                            delete r.onTranslateToWrapperTransitionEnd,
                            n && r.emit("transitionEnd"));
                        }),
                      r.$wrapperEl[0].addEventListener(
                        "transitionend",
                        r.onTranslateToWrapperTransitionEnd
                      ),
                      r.$wrapperEl[0].addEventListener(
                        "webkitTransitionEnd",
                        r.onTranslateToWrapperTransitionEnd
                      ))),
                !0
              );
            },
          },
          transition: {
            setTransition: function (e, t) {
              this.params.cssMode || this.$wrapperEl.transition(e),
                this.emit("setTransition", e, t);
            },
            transitionStart: function (e, t) {
              void 0 === e && (e = !0);
              var n = this.activeIndex,
                i = this.params,
                s = this.previousIndex;
              if (!i.cssMode) {
                i.autoHeight && this.updateAutoHeight();
                var r = t;
                if (
                  (r || (r = n > s ? "next" : n < s ? "prev" : "reset"),
                  this.emit("transitionStart"),
                  e && n !== s)
                ) {
                  if ("reset" === r)
                    return void this.emit("slideResetTransitionStart");
                  this.emit("slideChangeTransitionStart"),
                    this.emit(
                      "next" === r
                        ? "slideNextTransitionStart"
                        : "slidePrevTransitionStart"
                    );
                }
              }
            },
            transitionEnd: function (e, t) {
              void 0 === e && (e = !0);
              var n = this.activeIndex,
                i = this.previousIndex,
                s = this.params;
              if (((this.animating = !1), !s.cssMode)) {
                this.setTransition(0);
                var r = t;
                if (
                  (r || (r = n > i ? "next" : n < i ? "prev" : "reset"),
                  this.emit("transitionEnd"),
                  e && n !== i)
                ) {
                  if ("reset" === r)
                    return void this.emit("slideResetTransitionEnd");
                  this.emit("slideChangeTransitionEnd"),
                    this.emit(
                      "next" === r
                        ? "slideNextTransitionEnd"
                        : "slidePrevTransitionEnd"
                    );
                }
              }
            },
          },
          slide: {
            slideTo: function (e, t, n, i, s) {
              if (
                (void 0 === e && (e = 0),
                void 0 === t && (t = this.params.speed),
                void 0 === n && (n = !0),
                "number" != typeof e && "string" != typeof e)
              )
                throw new Error(
                  "The 'index' argument cannot have type other than 'number' or 'string'. [" +
                    typeof e +
                    "] given."
                );
              if ("string" == typeof e) {
                var r = parseInt(e, 10);
                if (!isFinite(r))
                  throw new Error(
                    "The passed-in 'index' (string) couldn't be converted to 'number'. [" +
                      e +
                      "] given."
                  );
                e = r;
              }
              var o = this,
                a = e;
              a < 0 && (a = 0);
              var l = o.params,
                c = o.snapGrid,
                u = o.slidesGrid,
                h = o.previousIndex,
                d = o.activeIndex,
                p = o.rtlTranslate,
                f = o.wrapperEl;
              if (
                (o.animating && l.preventInteractionOnTransition) ||
                (!o.enabled && !i && !s)
              )
                return !1;
              var g = Math.min(o.params.slidesPerGroupSkip, a),
                m = g + Math.floor((a - g) / o.params.slidesPerGroup);
              m >= c.length && (m = c.length - 1),
                (d || l.initialSlide || 0) === (h || 0) &&
                  n &&
                  o.emit("beforeSlideChangeStart");
              var b,
                v = -c[m];
              if ((o.updateProgress(v), l.normalizeSlideIndex))
                for (var y = 0; y < u.length; y += 1) {
                  var w = -Math.floor(100 * v),
                    S = Math.floor(100 * u[y]),
                    _ = Math.floor(100 * u[y + 1]);
                  void 0 !== u[y + 1]
                    ? w >= S && w < _ - (_ - S) / 2
                      ? (a = y)
                      : w >= S && w < _ && (a = y + 1)
                    : w >= S && (a = y);
                }
              if (o.initialized && a !== d) {
                if (
                  !o.allowSlideNext &&
                  v < o.translate &&
                  v < o.minTranslate()
                )
                  return !1;
                if (
                  !o.allowSlidePrev &&
                  v > o.translate &&
                  v > o.maxTranslate() &&
                  (d || 0) !== a
                )
                  return !1;
              }
              if (
                ((b = a > d ? "next" : a < d ? "prev" : "reset"),
                (p && -v === o.translate) || (!p && v === o.translate))
              )
                return (
                  o.updateActiveIndex(a),
                  l.autoHeight && o.updateAutoHeight(),
                  o.updateSlidesClasses(),
                  "slide" !== l.effect && o.setTranslate(v),
                  "reset" !== b &&
                    (o.transitionStart(n, b), o.transitionEnd(n, b)),
                  !1
                );
              if (l.cssMode) {
                var C,
                  E = o.isHorizontal(),
                  O = -v;
                return (
                  p && (O = f.scrollWidth - f.offsetWidth - O),
                  0 === t
                    ? (f[E ? "scrollLeft" : "scrollTop"] = O)
                    : f.scrollTo
                    ? f.scrollTo(
                        (((C = {})[E ? "left" : "top"] = O),
                        (C.behavior = "smooth"),
                        C)
                      )
                    : (f[E ? "scrollLeft" : "scrollTop"] = O),
                  !0
                );
              }
              return (
                0 === t
                  ? (o.setTransition(0),
                    o.setTranslate(v),
                    o.updateActiveIndex(a),
                    o.updateSlidesClasses(),
                    o.emit("beforeTransitionStart", t, i),
                    o.transitionStart(n, b),
                    o.transitionEnd(n, b))
                  : (o.setTransition(t),
                    o.setTranslate(v),
                    o.updateActiveIndex(a),
                    o.updateSlidesClasses(),
                    o.emit("beforeTransitionStart", t, i),
                    o.transitionStart(n, b),
                    o.animating ||
                      ((o.animating = !0),
                      o.onSlideToWrapperTransitionEnd ||
                        (o.onSlideToWrapperTransitionEnd = function (e) {
                          o &&
                            !o.destroyed &&
                            e.target === this &&
                            (o.$wrapperEl[0].removeEventListener(
                              "transitionend",
                              o.onSlideToWrapperTransitionEnd
                            ),
                            o.$wrapperEl[0].removeEventListener(
                              "webkitTransitionEnd",
                              o.onSlideToWrapperTransitionEnd
                            ),
                            (o.onSlideToWrapperTransitionEnd = null),
                            delete o.onSlideToWrapperTransitionEnd,
                            o.transitionEnd(n, b));
                        }),
                      o.$wrapperEl[0].addEventListener(
                        "transitionend",
                        o.onSlideToWrapperTransitionEnd
                      ),
                      o.$wrapperEl[0].addEventListener(
                        "webkitTransitionEnd",
                        o.onSlideToWrapperTransitionEnd
                      ))),
                !0
              );
            },
            slideToLoop: function (e, t, n, i) {
              void 0 === e && (e = 0),
                void 0 === t && (t = this.params.speed),
                void 0 === n && (n = !0);
              var s = e;
              return (
                this.params.loop && (s += this.loopedSlides),
                this.slideTo(s, t, n, i)
              );
            },
            slideNext: function (e, t, n) {
              void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
              var i = this.params;
              if (!this.enabled) return this;
              var s =
                this.activeIndex < i.slidesPerGroupSkip ? 1 : i.slidesPerGroup;
              if (i.loop) {
                if (this.animating && i.loopPreventsSlide) return !1;
                this.loopFix(),
                  (this._clientLeft = this.$wrapperEl[0].clientLeft);
              }
              return this.slideTo(this.activeIndex + s, e, t, n);
            },
            slidePrev: function (e, t, n) {
              void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
              var i = this.params,
                s = this.snapGrid,
                r = this.slidesGrid,
                o = this.rtlTranslate;
              if (!this.enabled) return this;
              if (i.loop) {
                if (this.animating && i.loopPreventsSlide) return !1;
                this.loopFix(),
                  (this._clientLeft = this.$wrapperEl[0].clientLeft);
              }
              function a(e) {
                return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
              }
              var l,
                c = a(o ? this.translate : -this.translate),
                u = s.map(function (e) {
                  return a(e);
                }),
                h = (u.indexOf(c), s[u.indexOf(c) - 1]);
              return (
                void 0 === h &&
                  i.cssMode &&
                  s.forEach(function (e) {
                    !h && c >= e && (h = e);
                  }),
                void 0 !== h &&
                  (l = r.indexOf(h)) < 0 &&
                  (l = this.activeIndex - 1),
                this.slideTo(l, e, t, n)
              );
            },
            slideReset: function (e, t, n) {
              return (
                void 0 === e && (e = this.params.speed),
                void 0 === t && (t = !0),
                this.slideTo(this.activeIndex, e, t, n)
              );
            },
            slideToClosest: function (e, t, n, i) {
              void 0 === e && (e = this.params.speed),
                void 0 === t && (t = !0),
                void 0 === i && (i = 0.5);
              var s = this.activeIndex,
                r = Math.min(this.params.slidesPerGroupSkip, s),
                o = r + Math.floor((s - r) / this.params.slidesPerGroup),
                a = this.rtlTranslate ? this.translate : -this.translate;
              if (a >= this.snapGrid[o]) {
                var l = this.snapGrid[o];
                a - l > (this.snapGrid[o + 1] - l) * i &&
                  (s += this.params.slidesPerGroup);
              } else {
                var c = this.snapGrid[o - 1];
                a - c <= (this.snapGrid[o] - c) * i &&
                  (s -= this.params.slidesPerGroup);
              }
              return (
                (s = Math.max(s, 0)),
                (s = Math.min(s, this.slidesGrid.length - 1)),
                this.slideTo(s, e, t, n)
              );
            },
            slideToClickedSlide: function () {
              var e,
                t = this,
                n = t.params,
                i = t.$wrapperEl,
                s =
                  "auto" === n.slidesPerView
                    ? t.slidesPerViewDynamic()
                    : n.slidesPerView,
                r = t.clickedIndex;
              if (n.loop) {
                if (t.animating) return;
                (e = parseInt(
                  Object(a.a)(t.clickedSlide).attr("data-swiper-slide-index"),
                  10
                )),
                  n.centeredSlides
                    ? r < t.loopedSlides - s / 2 ||
                      r > t.slides.length - t.loopedSlides + s / 2
                      ? (t.loopFix(),
                        (r = i
                          .children(
                            "." +
                              n.slideClass +
                              '[data-swiper-slide-index="' +
                              e +
                              '"]:not(.' +
                              n.slideDuplicateClass +
                              ")"
                          )
                          .eq(0)
                          .index()),
                        Object(l.g)(function () {
                          t.slideTo(r);
                        }))
                      : t.slideTo(r)
                    : r > t.slides.length - s
                    ? (t.loopFix(),
                      (r = i
                        .children(
                          "." +
                            n.slideClass +
                            '[data-swiper-slide-index="' +
                            e +
                            '"]:not(.' +
                            n.slideDuplicateClass +
                            ")"
                        )
                        .eq(0)
                        .index()),
                      Object(l.g)(function () {
                        t.slideTo(r);
                      }))
                    : t.slideTo(r);
              } else t.slideTo(r);
            },
          },
          loop: {
            loopCreate: function () {
              var e = this,
                t = Object(o.a)(),
                n = e.params,
                i = e.$wrapperEl;
              i.children(
                "." + n.slideClass + "." + n.slideDuplicateClass
              ).remove();
              var s = i.children("." + n.slideClass);
              if (n.loopFillGroupWithBlank) {
                var r = n.slidesPerGroup - (s.length % n.slidesPerGroup);
                if (r !== n.slidesPerGroup) {
                  for (var l = 0; l < r; l += 1) {
                    var c = Object(a.a)(t.createElement("div")).addClass(
                      n.slideClass + " " + n.slideBlankClass
                    );
                    i.append(c);
                  }
                  s = i.children("." + n.slideClass);
                }
              }
              "auto" !== n.slidesPerView ||
                n.loopedSlides ||
                (n.loopedSlides = s.length),
                (e.loopedSlides = Math.ceil(
                  parseFloat(n.loopedSlides || n.slidesPerView, 10)
                )),
                (e.loopedSlides += n.loopAdditionalSlides),
                e.loopedSlides > s.length && (e.loopedSlides = s.length);
              var u = [],
                h = [];
              s.each(function (t, n) {
                var i = Object(a.a)(t);
                n < e.loopedSlides && h.push(t),
                  n < s.length && n >= s.length - e.loopedSlides && u.push(t),
                  i.attr("data-swiper-slide-index", n);
              });
              for (var d = 0; d < h.length; d += 1)
                i.append(
                  Object(a.a)(h[d].cloneNode(!0)).addClass(
                    n.slideDuplicateClass
                  )
                );
              for (var p = u.length - 1; p >= 0; p -= 1)
                i.prepend(
                  Object(a.a)(u[p].cloneNode(!0)).addClass(
                    n.slideDuplicateClass
                  )
                );
            },
            loopFix: function () {
              this.emit("beforeLoopFix");
              var e,
                t = this.activeIndex,
                n = this.slides,
                i = this.loopedSlides,
                s = this.allowSlidePrev,
                r = this.allowSlideNext,
                o = this.snapGrid,
                a = this.rtlTranslate;
              (this.allowSlidePrev = !0), (this.allowSlideNext = !0);
              var l = -o[t] - this.getTranslate();
              t < i
                ? ((e = n.length - 3 * i + t),
                  this.slideTo((e += i), 0, !1, !0) &&
                    0 !== l &&
                    this.setTranslate(
                      (a ? -this.translate : this.translate) - l
                    ))
                : t >= n.length - i &&
                  ((e = -n.length + t + i),
                  this.slideTo((e += i), 0, !1, !0) &&
                    0 !== l &&
                    this.setTranslate(
                      (a ? -this.translate : this.translate) - l
                    )),
                (this.allowSlidePrev = s),
                (this.allowSlideNext = r),
                this.emit("loopFix");
            },
            loopDestroy: function () {
              var e = this.params,
                t = this.slides;
              this.$wrapperEl
                .children(
                  "." +
                    e.slideClass +
                    "." +
                    e.slideDuplicateClass +
                    ",." +
                    e.slideClass +
                    "." +
                    e.slideBlankClass
                )
                .remove(),
                t.removeAttr("data-swiper-slide-index");
            },
          },
          grabCursor: {
            setGrabCursor: function (e) {
              if (
                !(
                  this.support.touch ||
                  !this.params.simulateTouch ||
                  (this.params.watchOverflow && this.isLocked) ||
                  this.params.cssMode
                )
              ) {
                var t = this.el;
                (t.style.cursor = "move"),
                  (t.style.cursor = e ? "-webkit-grabbing" : "-webkit-grab"),
                  (t.style.cursor = e ? "-moz-grabbin" : "-moz-grab"),
                  (t.style.cursor = e ? "grabbing" : "grab");
              }
            },
            unsetGrabCursor: function () {
              this.support.touch ||
                (this.params.watchOverflow && this.isLocked) ||
                this.params.cssMode ||
                (this.el.style.cursor = "");
            },
          },
          manipulation: {
            appendSlide: function (e) {
              var t = this.$wrapperEl,
                n = this.params;
              if (
                (n.loop && this.loopDestroy(),
                "object" == typeof e && "length" in e)
              )
                for (var i = 0; i < e.length; i += 1) e[i] && t.append(e[i]);
              else t.append(e);
              n.loop && this.loopCreate(),
                (n.observer && this.support.observer) || this.update();
            },
            prependSlide: function (e) {
              var t = this.params,
                n = this.$wrapperEl,
                i = this.activeIndex;
              t.loop && this.loopDestroy();
              var s = i + 1;
              if ("object" == typeof e && "length" in e) {
                for (var r = 0; r < e.length; r += 1) e[r] && n.prepend(e[r]);
                s = i + e.length;
              } else n.prepend(e);
              t.loop && this.loopCreate(),
                (t.observer && this.support.observer) || this.update(),
                this.slideTo(s, 0, !1);
            },
            addSlide: function (e, t) {
              var n = this.$wrapperEl,
                i = this.params,
                s = this.activeIndex;
              i.loop &&
                ((s -= this.loopedSlides),
                this.loopDestroy(),
                (this.slides = n.children("." + i.slideClass)));
              var r = this.slides.length;
              if (e <= 0) this.prependSlide(t);
              else if (e >= r) this.appendSlide(t);
              else {
                for (
                  var o = s > e ? s + 1 : s, a = [], l = r - 1;
                  l >= e;
                  l -= 1
                ) {
                  var c = this.slides.eq(l);
                  c.remove(), a.unshift(c);
                }
                if ("object" == typeof t && "length" in t) {
                  for (var u = 0; u < t.length; u += 1) t[u] && n.append(t[u]);
                  o = s > e ? s + t.length : s;
                } else n.append(t);
                for (var h = 0; h < a.length; h += 1) n.append(a[h]);
                i.loop && this.loopCreate(),
                  (i.observer && this.support.observer) || this.update(),
                  this.slideTo(i.loop ? o + this.loopedSlides : o, 0, !1);
              }
            },
            removeSlide: function (e) {
              var t = this.params,
                n = this.$wrapperEl,
                i = this.activeIndex;
              t.loop &&
                ((i -= this.loopedSlides),
                this.loopDestroy(),
                (this.slides = n.children("." + t.slideClass)));
              var s,
                r = i;
              if ("object" == typeof e && "length" in e) {
                for (var o = 0; o < e.length; o += 1)
                  this.slides[(s = e[o])] && this.slides.eq(s).remove(),
                    s < r && (r -= 1);
                r = Math.max(r, 0);
              } else
                this.slides[(s = e)] && this.slides.eq(s).remove(),
                  s < r && (r -= 1),
                  (r = Math.max(r, 0));
              t.loop && this.loopCreate(),
                (t.observer && this.support.observer) || this.update(),
                this.slideTo(t.loop ? r + this.loopedSlides : r, 0, !1);
            },
            removeAllSlides: function () {
              for (var e = [], t = 0; t < this.slides.length; t += 1) e.push(t);
              this.removeSlide(e);
            },
          },
          events: {
            attachEvents: function () {
              var e = Object(o.a)(),
                t = this.params,
                n = this.touchEvents,
                i = this.el,
                s = this.wrapperEl,
                r = this.device,
                a = this.support;
              (this.onTouchStart = m.bind(this)),
                (this.onTouchMove = b.bind(this)),
                (this.onTouchEnd = v.bind(this)),
                t.cssMode && (this.onScroll = S.bind(this)),
                (this.onClick = w.bind(this));
              var l = !!t.nested;
              if (!a.touch && a.pointerEvents)
                i.addEventListener(n.start, this.onTouchStart, !1),
                  e.addEventListener(n.move, this.onTouchMove, l),
                  e.addEventListener(n.end, this.onTouchEnd, !1);
              else {
                if (a.touch) {
                  var c = !(
                    "touchstart" !== n.start ||
                    !a.passiveListener ||
                    !t.passiveListeners
                  ) && { passive: !0, capture: !1 };
                  i.addEventListener(n.start, this.onTouchStart, c),
                    i.addEventListener(
                      n.move,
                      this.onTouchMove,
                      a.passiveListener ? { passive: !1, capture: l } : l
                    ),
                    i.addEventListener(n.end, this.onTouchEnd, c),
                    n.cancel &&
                      i.addEventListener(n.cancel, this.onTouchEnd, c),
                    _ || (e.addEventListener("touchstart", C), (_ = !0));
                }
                ((t.simulateTouch && !r.ios && !r.android) ||
                  (t.simulateTouch && !a.touch && r.ios)) &&
                  (i.addEventListener("mousedown", this.onTouchStart, !1),
                  e.addEventListener("mousemove", this.onTouchMove, l),
                  e.addEventListener("mouseup", this.onTouchEnd, !1));
              }
              (t.preventClicks || t.preventClicksPropagation) &&
                i.addEventListener("click", this.onClick, !0),
                t.cssMode && s.addEventListener("scroll", this.onScroll),
                this.on(
                  t.updateOnWindowResize
                    ? r.ios || r.android
                      ? "resize orientationchange observerUpdate"
                      : "resize observerUpdate"
                    : "observerUpdate",
                  y,
                  !0
                );
            },
            detachEvents: function () {
              var e = Object(o.a)(),
                t = this.params,
                n = this.touchEvents,
                i = this.el,
                s = this.wrapperEl,
                r = this.device,
                a = this.support,
                l = !!t.nested;
              if (!a.touch && a.pointerEvents)
                i.removeEventListener(n.start, this.onTouchStart, !1),
                  e.removeEventListener(n.move, this.onTouchMove, l),
                  e.removeEventListener(n.end, this.onTouchEnd, !1);
              else {
                if (a.touch) {
                  var c = !(
                    "onTouchStart" !== n.start ||
                    !a.passiveListener ||
                    !t.passiveListeners
                  ) && { passive: !0, capture: !1 };
                  i.removeEventListener(n.start, this.onTouchStart, c),
                    i.removeEventListener(n.move, this.onTouchMove, l),
                    i.removeEventListener(n.end, this.onTouchEnd, c),
                    n.cancel &&
                      i.removeEventListener(n.cancel, this.onTouchEnd, c);
                }
                ((t.simulateTouch && !r.ios && !r.android) ||
                  (t.simulateTouch && !a.touch && r.ios)) &&
                  (i.removeEventListener("mousedown", this.onTouchStart, !1),
                  e.removeEventListener("mousemove", this.onTouchMove, l),
                  e.removeEventListener("mouseup", this.onTouchEnd, !1));
              }
              (t.preventClicks || t.preventClicksPropagation) &&
                i.removeEventListener("click", this.onClick, !0),
                t.cssMode && s.removeEventListener("scroll", this.onScroll),
                this.off(
                  r.ios || r.android
                    ? "resize orientationchange observerUpdate"
                    : "resize observerUpdate",
                  y
                );
            },
          },
          breakpoints: {
            setBreakpoint: function () {
              var e = this.activeIndex,
                t = this.initialized,
                n = this.loopedSlides,
                i = void 0 === n ? 0 : n,
                s = this.params,
                r = this.$el,
                o = s.breakpoints;
              if (o && (!o || 0 !== Object.keys(o).length)) {
                var a = this.getBreakpoint(
                  o,
                  this.params.breakpointsBase,
                  this.el
                );
                if (a && this.currentBreakpoint !== a) {
                  var c = a in o ? o[a] : void 0;
                  c &&
                    [
                      "slidesPerView",
                      "spaceBetween",
                      "slidesPerGroup",
                      "slidesPerGroupSkip",
                      "slidesPerColumn",
                    ].forEach(function (e) {
                      var t = c[e];
                      void 0 !== t &&
                        (c[e] =
                          "slidesPerView" !== e ||
                          ("AUTO" !== t && "auto" !== t)
                            ? "slidesPerView" === e
                              ? parseFloat(t)
                              : parseInt(t, 10)
                            : "auto");
                    });
                  var u = c || this.originalParams,
                    h = s.slidesPerColumn > 1,
                    d = u.slidesPerColumn > 1,
                    p = s.enabled;
                  h && !d
                    ? (r.removeClass(
                        s.containerModifierClass +
                          "multirow " +
                          s.containerModifierClass +
                          "multirow-column"
                      ),
                      this.emitContainerClasses())
                    : !h &&
                      d &&
                      (r.addClass(s.containerModifierClass + "multirow"),
                      "column" === u.slidesPerColumnFill &&
                        r.addClass(
                          s.containerModifierClass + "multirow-column"
                        ),
                      this.emitContainerClasses());
                  var f = u.direction && u.direction !== s.direction,
                    g = s.loop && (u.slidesPerView !== s.slidesPerView || f);
                  f && t && this.changeDirection(), Object(l.e)(this.params, u);
                  var m = this.params.enabled;
                  Object(l.e)(this, {
                    allowTouchMove: this.params.allowTouchMove,
                    allowSlideNext: this.params.allowSlideNext,
                    allowSlidePrev: this.params.allowSlidePrev,
                  }),
                    p && !m ? this.disable() : !p && m && this.enable(),
                    (this.currentBreakpoint = a),
                    this.emit("_beforeBreakpoint", u),
                    g &&
                      t &&
                      (this.loopDestroy(),
                      this.loopCreate(),
                      this.updateSlides(),
                      this.slideTo(e - i + this.loopedSlides, 0, !1)),
                    this.emit("breakpoint", u);
                }
              }
            },
            getBreakpoint: function (e, t, n) {
              if (
                (void 0 === t && (t = "window"), e && ("container" !== t || n))
              ) {
                var i = !1,
                  s = Object(o.b)(),
                  r = "window" === t ? s.innerWidth : n.clientWidth,
                  a = "window" === t ? s.innerHeight : n.clientHeight,
                  l = Object.keys(e).map(function (e) {
                    if ("string" == typeof e && 0 === e.indexOf("@")) {
                      var t = parseFloat(e.substr(1));
                      return { value: a * t, point: e };
                    }
                    return { value: e, point: e };
                  });
                l.sort(function (e, t) {
                  return parseInt(e.value, 10) - parseInt(t.value, 10);
                });
                for (var c = 0; c < l.length; c += 1) {
                  var u = l[c];
                  u.value <= r && (i = u.point);
                }
                return i || "max";
              }
            },
          },
          checkOverflow: {
            checkOverflow: function () {
              var e = this.params,
                t = this.isLocked,
                n =
                  this.slides.length > 0 &&
                  e.slidesOffsetBefore +
                    e.spaceBetween * (this.slides.length - 1) +
                    this.slides[0].offsetWidth * this.slides.length;
              (this.isLocked =
                e.slidesOffsetBefore && e.slidesOffsetAfter && n
                  ? n <= this.size
                  : 1 === this.snapGrid.length),
                (this.allowSlideNext = !this.isLocked),
                (this.allowSlidePrev = !this.isLocked),
                t !== this.isLocked &&
                  this.emit(this.isLocked ? "lock" : "unlock"),
                t &&
                  t !== this.isLocked &&
                  ((this.isEnd = !1),
                  this.navigation && this.navigation.update());
            },
          },
          classes: {
            addClasses: function () {
              var e,
                t,
                n = this.classNames,
                i = this.params,
                s = this.$el,
                r = this.device,
                o = this.support,
                a =
                  ((e = i.containerModifierClass),
                  (t = []),
                  [
                    "initialized",
                    i.direction,
                    { "pointer-events": o.pointerEvents && !o.touch },
                    { "free-mode": i.freeMode },
                    { autoheight: i.autoHeight },
                    { rtl: this.rtl },
                    { multirow: i.slidesPerColumn > 1 },
                    {
                      "multirow-column":
                        i.slidesPerColumn > 1 &&
                        "column" === i.slidesPerColumnFill,
                    },
                    { android: r.android },
                    { ios: r.ios },
                    { "css-mode": i.cssMode },
                  ].forEach(function (n) {
                    "object" == typeof n
                      ? Object.keys(n).forEach(function (i) {
                          n[i] && t.push(e + i);
                        })
                      : "string" == typeof n && t.push(e + n);
                  }),
                  t);
              n.push.apply(n, a),
                s.addClass([].concat(n).join(" ")),
                this.emitContainerClasses();
            },
            removeClasses: function () {
              this.$el.removeClass(this.classNames.join(" ")),
                this.emitContainerClasses();
            },
          },
          images: {
            loadImage: function (e, t, n, i, s, r) {
              var l,
                c = Object(o.b)();
              function u() {
                r && r();
              }
              Object(a.a)(e).parent("picture")[0] || (e.complete && s)
                ? u()
                : t
                ? (((l = new c.Image()).onload = u),
                  (l.onerror = u),
                  i && (l.sizes = i),
                  n && (l.srcset = n),
                  t && (l.src = t))
                : u();
            },
            preloadImages: function () {
              var e = this;
              function t() {
                null != e &&
                  e &&
                  !e.destroyed &&
                  (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1),
                  e.imagesLoaded === e.imagesToLoad.length &&
                    (e.params.updateOnImagesReady && e.update(),
                    e.emit("imagesReady")));
              }
              e.imagesToLoad = e.$el.find("img");
              for (var n = 0; n < e.imagesToLoad.length; n += 1) {
                var i = e.imagesToLoad[n];
                e.loadImage(
                  i,
                  i.currentSrc || i.getAttribute("src"),
                  i.srcset || i.getAttribute("srcset"),
                  i.sizes || i.getAttribute("sizes"),
                  !0,
                  t
                );
              }
            },
          },
        },
        T = {},
        k = (function () {
          function e() {
            for (
              var t, n, i = arguments.length, s = new Array(i), r = 0;
              r < i;
              r++
            )
              s[r] = arguments[r];
            if (
              (1 === s.length &&
              s[0].constructor &&
              "Object" === Object.prototype.toString.call(s[0]).slice(8, -1)
                ? (n = s[0])
                : ((t = s[0]), (n = s[1])),
              n || (n = {}),
              (n = Object(l.e)({}, n)),
              t && !n.el && (n.el = t),
              n.el && Object(a.a)(n.el).length > 1)
            ) {
              var o = [];
              return (
                Object(a.a)(n.el).each(function (t) {
                  var i = Object(l.e)({}, n, { el: t });
                  o.push(new e(i));
                }),
                o
              );
            }
            var d = this;
            (d.__swiper__ = !0),
              (d.support = c()),
              (d.device = u({ userAgent: n.userAgent })),
              (d.browser = h()),
              (d.eventsListeners = {}),
              (d.eventsAnyListeners = []),
              void 0 === d.modules && (d.modules = {}),
              Object.keys(d.modules).forEach(function (e) {
                var t = d.modules[e];
                if (t.params) {
                  var i = Object.keys(t.params)[0],
                    s = t.params[i];
                  if ("object" != typeof s || null === s) return;
                  if (
                    (["navigation", "pagination", "scrollbar"].indexOf(i) >=
                      0 &&
                      !0 === n[i] &&
                      (n[i] = { auto: !0 }),
                    !(i in n) || !("enabled" in s))
                  )
                    return;
                  !0 === n[i] && (n[i] = { enabled: !0 }),
                    "object" != typeof n[i] ||
                      "enabled" in n[i] ||
                      (n[i].enabled = !0),
                    n[i] || (n[i] = { enabled: !1 });
                }
              });
            var p,
              f,
              g = Object(l.e)({}, E);
            return (
              d.useParams(g),
              (d.params = Object(l.e)({}, g, T, n)),
              (d.originalParams = Object(l.e)({}, d.params)),
              (d.passedParams = Object(l.e)({}, n)),
              d.params &&
                d.params.on &&
                Object.keys(d.params.on).forEach(function (e) {
                  d.on(e, d.params.on[e]);
                }),
              d.params && d.params.onAny && d.onAny(d.params.onAny),
              (d.$ = a.a),
              Object(l.e)(d, {
                enabled: d.params.enabled,
                el: t,
                classNames: [],
                slides: Object(a.a)(),
                slidesGrid: [],
                snapGrid: [],
                slidesSizesGrid: [],
                isHorizontal: function () {
                  return "horizontal" === d.params.direction;
                },
                isVertical: function () {
                  return "vertical" === d.params.direction;
                },
                activeIndex: 0,
                realIndex: 0,
                isBeginning: !0,
                isEnd: !1,
                translate: 0,
                previousTranslate: 0,
                progress: 0,
                velocity: 0,
                animating: !1,
                allowSlideNext: d.params.allowSlideNext,
                allowSlidePrev: d.params.allowSlidePrev,
                touchEvents:
                  ((p = ["touchstart", "touchmove", "touchend", "touchcancel"]),
                  (f = ["mousedown", "mousemove", "mouseup"]),
                  d.support.pointerEvents &&
                    (f = ["pointerdown", "pointermove", "pointerup"]),
                  (d.touchEventsTouch = {
                    start: p[0],
                    move: p[1],
                    end: p[2],
                    cancel: p[3],
                  }),
                  (d.touchEventsDesktop = {
                    start: f[0],
                    move: f[1],
                    end: f[2],
                  }),
                  d.support.touch || !d.params.simulateTouch
                    ? d.touchEventsTouch
                    : d.touchEventsDesktop),
                touchEventsData: {
                  isTouched: void 0,
                  isMoved: void 0,
                  allowTouchCallbacks: void 0,
                  touchStartTime: void 0,
                  isScrolling: void 0,
                  currentTranslate: void 0,
                  startTranslate: void 0,
                  allowThresholdMove: void 0,
                  formElements:
                    "input, select, option, textarea, button, video, label",
                  lastClickTime: Object(l.h)(),
                  clickTimeout: void 0,
                  velocities: [],
                  allowMomentumBounce: void 0,
                  isTouchEvent: void 0,
                  startMoving: void 0,
                },
                allowClick: !0,
                allowTouchMove: d.params.allowTouchMove,
                touches: {
                  startX: 0,
                  startY: 0,
                  currentX: 0,
                  currentY: 0,
                  diff: 0,
                },
                imagesToLoad: [],
                imagesLoaded: 0,
              }),
              d.useModules(),
              d.emit("_swiper"),
              d.params.init && d.init(),
              d
            );
          }
          var t,
            n,
            i = e.prototype;
          return (
            (i.enable = function () {
              this.enabled ||
                ((this.enabled = !0),
                this.params.grabCursor && this.setGrabCursor(),
                this.emit("enable"));
            }),
            (i.disable = function () {
              this.enabled &&
                ((this.enabled = !1),
                this.params.grabCursor && this.unsetGrabCursor(),
                this.emit("disable"));
            }),
            (i.setProgress = function (e, t) {
              e = Math.min(Math.max(e, 0), 1);
              var n = this.minTranslate(),
                i = this.maxTranslate();
              this.translateTo((i - n) * e + n, void 0 === t ? 0 : t),
                this.updateActiveIndex(),
                this.updateSlidesClasses();
            }),
            (i.emitContainerClasses = function () {
              var e = this;
              if (e.params._emitClasses && e.el) {
                var t = e.el.className.split(" ").filter(function (t) {
                  return (
                    0 === t.indexOf("swiper-container") ||
                    0 === t.indexOf(e.params.containerModifierClass)
                  );
                });
                e.emit("_containerClasses", t.join(" "));
              }
            }),
            (i.getSlideClasses = function (e) {
              var t = this;
              return e.className
                .split(" ")
                .filter(function (e) {
                  return (
                    0 === e.indexOf("swiper-slide") ||
                    0 === e.indexOf(t.params.slideClass)
                  );
                })
                .join(" ");
            }),
            (i.emitSlidesClasses = function () {
              var e = this;
              if (e.params._emitClasses && e.el) {
                var t = [];
                e.slides.each(function (n) {
                  var i = e.getSlideClasses(n);
                  t.push({ slideEl: n, classNames: i }),
                    e.emit("_slideClass", n, i);
                }),
                  e.emit("_slideClasses", t);
              }
            }),
            (i.slidesPerViewDynamic = function () {
              var e = this.slides,
                t = this.slidesGrid,
                n = this.size,
                i = this.activeIndex,
                s = 1;
              if (this.params.centeredSlides) {
                for (
                  var r, o = e[i].swiperSlideSize, a = i + 1;
                  a < e.length;
                  a += 1
                )
                  e[a] &&
                    !r &&
                    ((s += 1), (o += e[a].swiperSlideSize) > n && (r = !0));
                for (var l = i - 1; l >= 0; l -= 1)
                  e[l] &&
                    !r &&
                    ((s += 1), (o += e[l].swiperSlideSize) > n && (r = !0));
              } else
                for (var c = i + 1; c < e.length; c += 1)
                  t[c] - t[i] < n && (s += 1);
              return s;
            }),
            (i.update = function () {
              var e = this;
              if (e && !e.destroyed) {
                var t = e.snapGrid,
                  n = e.params;
                n.breakpoints && e.setBreakpoint(),
                  e.updateSize(),
                  e.updateSlides(),
                  e.updateProgress(),
                  e.updateSlidesClasses(),
                  e.params.freeMode
                    ? (i(), e.params.autoHeight && e.updateAutoHeight())
                    : e.slideTo(
                        ("auto" === e.params.slidesPerView ||
                          e.params.slidesPerView > 1) &&
                          e.isEnd &&
                          !e.params.centeredSlides
                          ? e.slides.length - 1
                          : e.activeIndex,
                        0,
                        !1,
                        !0
                      ) || i(),
                  n.watchOverflow && t !== e.snapGrid && e.checkOverflow(),
                  e.emit("update");
              }
              function i() {
                var t = Math.min(
                  Math.max(
                    e.rtlTranslate ? -1 * e.translate : e.translate,
                    e.maxTranslate()
                  ),
                  e.minTranslate()
                );
                e.setTranslate(t),
                  e.updateActiveIndex(),
                  e.updateSlidesClasses();
              }
            }),
            (i.changeDirection = function (e, t) {
              void 0 === t && (t = !0);
              var n = this.params.direction;
              return (
                e || (e = "horizontal" === n ? "vertical" : "horizontal"),
                e === n ||
                  ("horizontal" !== e && "vertical" !== e) ||
                  (this.$el
                    .removeClass("" + this.params.containerModifierClass + n)
                    .addClass("" + this.params.containerModifierClass + e),
                  this.emitContainerClasses(),
                  (this.params.direction = e),
                  this.slides.each(function (t) {
                    "vertical" === e
                      ? (t.style.width = "")
                      : (t.style.height = "");
                  }),
                  this.emit("changeDirection"),
                  t && this.update()),
                this
              );
            }),
            (i.mount = function (e) {
              var t = this;
              if (t.mounted) return !0;
              var n = Object(a.a)(e || t.params.el);
              if (!(e = n[0])) return !1;
              e.swiper = t;
              var i = (function () {
                if (e && e.shadowRoot && e.shadowRoot.querySelector) {
                  var i = Object(a.a)(
                    e.shadowRoot.querySelector("." + t.params.wrapperClass)
                  );
                  return (
                    (i.children = function (e) {
                      return n.children(e);
                    }),
                    i
                  );
                }
                return n.children("." + t.params.wrapperClass);
              })();
              if (0 === i.length && t.params.createElements) {
                var s = Object(o.a)().createElement("div");
                (i = Object(a.a)(s)),
                  (s.className = t.params.wrapperClass),
                  n.append(s),
                  n.children("." + t.params.slideClass).each(function (e) {
                    i.append(e);
                  });
              }
              return (
                Object(l.e)(t, {
                  $el: n,
                  el: e,
                  $wrapperEl: i,
                  wrapperEl: i[0],
                  mounted: !0,
                  rtl:
                    "rtl" === e.dir.toLowerCase() ||
                    "rtl" === n.css("direction"),
                  rtlTranslate:
                    "horizontal" === t.params.direction &&
                    ("rtl" === e.dir.toLowerCase() ||
                      "rtl" === n.css("direction")),
                  wrongRTL: "-webkit-box" === i.css("display"),
                }),
                !0
              );
            }),
            (i.init = function (e) {
              return (
                this.initialized ||
                  !1 === this.mount(e) ||
                  (this.emit("beforeInit"),
                  this.params.breakpoints && this.setBreakpoint(),
                  this.addClasses(),
                  this.params.loop && this.loopCreate(),
                  this.updateSize(),
                  this.updateSlides(),
                  this.params.watchOverflow && this.checkOverflow(),
                  this.params.grabCursor &&
                    this.enabled &&
                    this.setGrabCursor(),
                  this.params.preloadImages && this.preloadImages(),
                  this.slideTo(
                    this.params.loop
                      ? this.params.initialSlide + this.loopedSlides
                      : this.params.initialSlide,
                    0,
                    this.params.runCallbacksOnInit,
                    !1,
                    !0
                  ),
                  this.attachEvents(),
                  (this.initialized = !0),
                  this.emit("init"),
                  this.emit("afterInit")),
                this
              );
            }),
            (i.destroy = function (e, t) {
              void 0 === e && (e = !0), void 0 === t && (t = !0);
              var n = this,
                i = n.params,
                s = n.$el,
                r = n.$wrapperEl,
                o = n.slides;
              return (
                void 0 === n.params ||
                  n.destroyed ||
                  (n.emit("beforeDestroy"),
                  (n.initialized = !1),
                  n.detachEvents(),
                  i.loop && n.loopDestroy(),
                  t &&
                    (n.removeClasses(),
                    s.removeAttr("style"),
                    r.removeAttr("style"),
                    o &&
                      o.length &&
                      o
                        .removeClass(
                          [
                            i.slideVisibleClass,
                            i.slideActiveClass,
                            i.slideNextClass,
                            i.slidePrevClass,
                          ].join(" ")
                        )
                        .removeAttr("style")
                        .removeAttr("data-swiper-slide-index")),
                  n.emit("destroy"),
                  Object.keys(n.eventsListeners).forEach(function (e) {
                    n.off(e);
                  }),
                  !1 !== e && ((n.$el[0].swiper = null), Object(l.d)(n)),
                  (n.destroyed = !0)),
                null
              );
            }),
            (e.extendDefaults = function (e) {
              Object(l.e)(T, e);
            }),
            (e.installModule = function (t) {
              e.prototype.modules || (e.prototype.modules = {});
              var n =
                t.name ||
                Object.keys(e.prototype.modules).length + "_" + Object(l.h)();
              e.prototype.modules[n] = t;
            }),
            (e.use = function (t) {
              return Array.isArray(t)
                ? (t.forEach(function (t) {
                    return e.installModule(t);
                  }),
                  e)
                : (e.installModule(t), e);
            }),
            (t = e),
            (n = [
              {
                key: "extendedDefaults",
                get: function () {
                  return T;
                },
              },
              {
                key: "defaults",
                get: function () {
                  return E;
                },
              },
            ]) && O(t, n),
            e
          );
        })();
      Object.keys(x).forEach(function (e) {
        Object.keys(x[e]).forEach(function (t) {
          k.prototype[t] = x[e][t];
        });
      }),
        k.use([d, g]),
        (t.a = k);
    },
    c2HN: function (e, t, n) {
      "use strict";
      function i(e) {
        return (
          !!e && "function" != typeof e.subscribe && "function" == typeof e.then
        );
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    cKS0: function (e, t, n) {
      "use strict";
      n.d(t, "d", function () {
        return s;
      }),
        n.d(t, "g", function () {
          return r;
        }),
        n.d(t, "h", function () {
          return o;
        }),
        n.d(t, "f", function () {
          return a;
        }),
        n.d(t, "e", function () {
          return c;
        }),
        n.d(t, "a", function () {
          return u;
        }),
        n.d(t, "b", function () {
          return h;
        }),
        n.d(t, "c", function () {
          return d;
        });
      var i = n("/xfr");
      function s(e) {
        var t = e;
        Object.keys(t).forEach(function (e) {
          try {
            t[e] = null;
          } catch (n) {}
          try {
            delete t[e];
          } catch (n) {}
        });
      }
      function r(e, t) {
        return void 0 === t && (t = 0), setTimeout(e, t);
      }
      function o() {
        return Date.now();
      }
      function a(e, t) {
        void 0 === t && (t = "x");
        var n,
          s,
          r,
          o = Object(i.b)(),
          a = (function (e) {
            var t,
              n = Object(i.b)();
            return (
              n.getComputedStyle && (t = n.getComputedStyle(e, null)),
              !t && e.currentStyle && (t = e.currentStyle),
              t || (t = e.style),
              t
            );
          })(e);
        return (
          o.WebKitCSSMatrix
            ? ((s = a.transform || a.webkitTransform).split(",").length > 6 &&
                (s = s
                  .split(", ")
                  .map(function (e) {
                    return e.replace(",", ".");
                  })
                  .join(", ")),
              (r = new o.WebKitCSSMatrix("none" === s ? "" : s)))
            : (n = (r =
                a.MozTransform ||
                a.OTransform ||
                a.MsTransform ||
                a.msTransform ||
                a.transform ||
                a
                  .getPropertyValue("transform")
                  .replace("translate(", "matrix(1, 0, 0, 1,"))
                .toString()
                .split(",")),
          "x" === t &&
            (s = o.WebKitCSSMatrix
              ? r.m41
              : 16 === n.length
              ? parseFloat(n[12])
              : parseFloat(n[4])),
          "y" === t &&
            (s = o.WebKitCSSMatrix
              ? r.m42
              : 16 === n.length
              ? parseFloat(n[13])
              : parseFloat(n[5])),
          s || 0
        );
      }
      function l(e) {
        return (
          "object" == typeof e &&
          null !== e &&
          e.constructor &&
          "Object" === Object.prototype.toString.call(e).slice(8, -1)
        );
      }
      function c() {
        for (
          var e = Object(arguments.length <= 0 ? void 0 : arguments[0]),
            t = ["__proto__", "constructor", "prototype"],
            n = 1;
          n < arguments.length;
          n += 1
        ) {
          var i = n < 0 || arguments.length <= n ? void 0 : arguments[n];
          if (null != i)
            for (
              var s = Object.keys(Object(i)).filter(function (e) {
                  return t.indexOf(e) < 0;
                }),
                r = 0,
                o = s.length;
              r < o;
              r += 1
            ) {
              var a = s[r],
                u = Object.getOwnPropertyDescriptor(i, a);
              void 0 !== u &&
                u.enumerable &&
                (l(e[a]) && l(i[a])
                  ? i[a].__swiper__
                    ? (e[a] = i[a])
                    : c(e[a], i[a])
                  : !l(e[a]) && l(i[a])
                  ? ((e[a] = {}),
                    i[a].__swiper__ ? (e[a] = i[a]) : c(e[a], i[a]))
                  : (e[a] = i[a]));
            }
        }
        return e;
      }
      function u(e, t) {
        Object.keys(t).forEach(function (n) {
          l(t[n]) &&
            Object.keys(t[n]).forEach(function (i) {
              "function" == typeof t[n][i] && (t[n][i] = t[n][i].bind(e));
            }),
            (e[n] = t[n]);
        });
      }
      function h(e) {
        return (
          void 0 === e && (e = ""),
          "." +
            e
              .trim()
              .replace(/([\.:\/])/g, "\\$1")
              .replace(/ /g, ".")
        );
      }
      function d(e, t, n, s) {
        var r = Object(i.a)();
        return (
          n &&
            Object.keys(s).forEach(function (n) {
              if (!t[n] && !0 === t.auto) {
                var i = r.createElement("div");
                (i.className = s[n]), e.append(i), (t[n] = i);
              }
            }),
          t
        );
      }
    },
    cZd9: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var i = n("fXoL"),
        s = n("dAq2"),
        r = n("tyNb"),
        o = n("ofXK");
      function a(e, t) {
        1 & e &&
          (i.Xb(0, "li", 2),
          i.Xb(1, "a", 12),
          i.Xb(2, "div", 4),
          i.Xb(3, "span", 5),
          i.Nc(4, "trending_up"),
          i.Wb(),
          i.Wb(),
          i.Xb(5, "span", 6),
          i.Nc(6, "Trading"),
          i.Wb(),
          i.Wb(),
          i.Wb());
      }
      let l = (() => {
        class e {
          constructor(e) {
            (this.tradingService = e), (this.canAccess = !1);
          }
          ngOnInit() {
            this.tradingService
              .canAccess()
              .subscribe((e) => (this.canAccess = e));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(s.a));
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-sidebar-menu"]],
            decls: 33,
            vars: 1,
            consts: [
              [1, "sidebar"],
              [1, "nav"],
              [1, "nav__item"],
              ["routerLink", "/office/dashboard", "routerLinkActive", "active"],
              [1, "nav__icon"],
              [1, "material-icons"],
              [1, "nav__text"],
              ["routerLink", "/office/shop", "routerLinkActive", "active"],
              ["routerLink", "/office/account", "routerLinkActive", "active"],
              ["class", "nav__item", 4, "ngIf"],
              [
                "routerLink",
                "/office/academy",
                "routerLinkActive",
                "active",
                1,
                "disabled",
              ],
              [1, "coming-soon"],
              ["routerLink", "/office/trading", "routerLinkActive", "active"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "div", 0),
                i.Xb(1, "ul", 1),
                i.Xb(2, "li", 2),
                i.Xb(3, "a", 3),
                i.Xb(4, "div", 4),
                i.Xb(5, "span", 5),
                i.Nc(6, "equalizer"),
                i.Wb(),
                i.Wb(),
                i.Xb(7, "span", 6),
                i.Nc(8, "Dashboard"),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(9, "li", 2),
                i.Xb(10, "a", 7),
                i.Xb(11, "div", 4),
                i.Xb(12, "span", 5),
                i.Nc(13, "shopping_cart"),
                i.Wb(),
                i.Wb(),
                i.Xb(14, "span", 6),
                i.Nc(15, "Shop"),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(16, "li", 2),
                i.Xb(17, "a", 8),
                i.Xb(18, "div", 4),
                i.Xb(19, "span", 5),
                i.Nc(20, "account_balance_wallet"),
                i.Wb(),
                i.Wb(),
                i.Xb(21, "span", 6),
                i.Nc(22, "Account"),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Lc(23, a, 7, 0, "li", 9),
                i.Xb(24, "li", 2),
                i.Xb(25, "a", 10),
                i.Xb(26, "div", 4),
                i.Xb(27, "span", 5),
                i.Nc(28, "school"),
                i.Wb(),
                i.Xb(29, "span", 11),
                i.Nc(30, "soon"),
                i.Wb(),
                i.Wb(),
                i.Xb(31, "span", 6),
                i.Nc(32, "Academy"),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb()),
                2 & e && (i.Eb(23), i.pc("ngIf", t.canAccess));
            },
            directives: [r.j, r.i, o.m],
            styles: [
              ".sidebar[_ngcontent-%COMP%]{height:100%;padding:45px 0 45px 15px}.nav__item[_ngcontent-%COMP%]{width:100%}.nav__item[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:flex;align-items:center;color:#757575}.nav__item[_ngcontent-%COMP%]   a.disabled[_ngcontent-%COMP%]{pointer-events:none;cursor:default;opacity:.7}.nav__item[_ngcontent-%COMP%]   a.active[_ngcontent-%COMP%]{color:#363333;border-right:3px solid}.nav__item[_ngcontent-%COMP%]   a.active[_ngcontent-%COMP%]   .nav__icon[_ngcontent-%COMP%]{background:#f6f6f6;border-bottom:1px solid #ddd}.nav__icon[_ngcontent-%COMP%]{width:55px;min-width:55px;height:55px;display:flex;align-items:center;justify-content:center;position:relative}.nav__icon[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:25px}.nav__icon[_ngcontent-%COMP%]   .coming-soon[_ngcontent-%COMP%]{font-size:12px;font-weight:600;position:absolute;bottom:5px;background:#f5f5f5;padding:0 5px}.nav__text[_ngcontent-%COMP%]{margin-left:10px;font-size:20px}@media (max-width:991px){.sidebar[_ngcontent-%COMP%]{padding-left:0}}",
            ],
          })),
          e
        );
      })();
    },
    cp0P: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var i = n("HDdC"),
        s = n("DH7j"),
        r = n("lJxs"),
        o = n("XoHu"),
        a = n("Cfvw");
      function l(...e) {
        if (1 === e.length) {
          const t = e[0];
          if (Object(s.a)(t)) return c(t, null);
          if (Object(o.a)(t) && Object.getPrototypeOf(t) === Object.prototype) {
            const e = Object.keys(t);
            return c(
              e.map((e) => t[e]),
              e
            );
          }
        }
        if ("function" == typeof e[e.length - 1]) {
          const t = e.pop();
          return c(
            (e = 1 === e.length && Object(s.a)(e[0]) ? e[0] : e),
            null
          ).pipe(Object(r.a)((e) => t(...e)));
        }
        return c(e, null);
      }
      function c(e, t) {
        return new i.a((n) => {
          const i = e.length;
          if (0 === i) return void n.complete();
          const s = new Array(i);
          let r = 0,
            o = 0;
          for (let l = 0; l < i; l++) {
            const c = Object(a.a)(e[l]);
            let u = !1;
            n.add(
              c.subscribe({
                next: (e) => {
                  u || ((u = !0), o++), (s[l] = e);
                },
                error: (e) => n.error(e),
                complete: () => {
                  r++,
                    (r !== i && u) ||
                      (o === i &&
                        n.next(
                          t ? t.reduce((e, t, n) => ((e[t] = s[n]), e), {}) : s
                        ),
                      n.complete());
                },
              })
            );
          }
        });
      }
    },
    dAq2: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("jtHE"),
        s = n("fXoL"),
        r = n("Tdnt");
      let o = (() => {
        class e {
          constructor(e) {
            this.http = e;
          }
          getTradingSubscription() {
            const e = new i.a(1);
            return (
              this.http.get("trading/subscription").subscribe(
                (t) => e.next(t),
                (t) => e.error(t.error || t)
              ),
              e.asObservable()
            );
          }
          createTradingSubscription(e) {
            const t = new i.a(1);
            return (
              this.http.post("trading/subscription", e).subscribe(
                (e) => t.next(e),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          updateTradingSubscription(e) {
            const t = new i.a(1);
            return (
              this.http.patch("trading/subscription", e).subscribe(
                (e) => t.next(e),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
          deleteTradingSubscription() {
            const e = new i.a(1);
            return (
              this.http.delete("trading/subscription").subscribe(
                () => e.next(!0),
                (t) => e.error(t.error || t)
              ),
              e.asObservable()
            );
          }
          getOpenTrades() {
            const e = new i.a(1);
            return (
              this.http.get("trading/trades/open").subscribe(
                (t) => {
                  const n = t.map((e) => ({ data: Object.assign({}, e) }));
                  e.next(n);
                },
                (t) => e.error(t.error || t)
              ),
              e.asObservable()
            );
          }
          getClosedTrades() {
            const e = new i.a(1);
            return (
              this.http.get("trading/trades/closed").subscribe(
                (t) => {
                  const n = t.map((e) => ({ data: Object.assign({}, e) }));
                  e.next(n);
                },
                (t) => e.error(t.error || t)
              ),
              e.asObservable()
            );
          }
          canAccess() {
            const e = new i.a(1);
            return (
              this.http.post("trading/can-access", {}).subscribe(
                ({ haveAccess: t }) => e.next(t),
                (t) => e.error(t.error || t)
              ),
              e.asObservable()
            );
          }
          getVideoSrc() {
            const e = new i.a(1);
            return (
              e.next(this.http.getFullUrl(".mp4", !1)),
              e.asObservable()
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(r.a));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    eIep: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var i = n("l7GE"),
        s = n("51Dv"),
        r = n("ZUHj"),
        o = n("lJxs"),
        a = n("Cfvw");
      function l(e, t) {
        return "function" == typeof t
          ? (n) =>
              n.pipe(
                l((n, i) =>
                  Object(a.a)(e(n, i)).pipe(
                    Object(o.a)((e, s) => t(n, e, i, s))
                  )
                )
              )
          : (t) => t.lift(new c(e));
      }
      class c {
        constructor(e) {
          this.project = e;
        }
        call(e, t) {
          return t.subscribe(new u(e, this.project));
        }
      }
      class u extends i.a {
        constructor(e, t) {
          super(e), (this.project = t), (this.index = 0);
        }
        _next(e) {
          let t;
          const n = this.index++;
          try {
            t = this.project(e, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this._innerSub(t, e, n);
        }
        _innerSub(e, t, n) {
          const i = this.innerSubscription;
          i && i.unsubscribe();
          const o = new s.a(this, t, n),
            a = this.destination;
          a.add(o),
            (this.innerSubscription = Object(r.a)(this, e, void 0, void 0, o)),
            this.innerSubscription !== o && a.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: e } = this;
          (e && !e.closed) || super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = null;
        }
        notifyComplete(e) {
          this.destination.remove(e),
            (this.innerSubscription = null),
            this.isStopped && super._complete();
        }
        notifyNext(e, t, n, i, s) {
          this.destination.next(t);
        }
      }
    },
    fClZ: function (e, t, n) {
      "use strict";
      var i = n("IKEI"),
        s = n("ICY0");
      class r extends s.a {
        populateAttributes() {
          this.attributes = { selectedLanguage: "" };
        }
        get selectedLanguage() {
          return this.attributes.selectedLanguage;
        }
      }
      n.d(t, "a", function () {
        return o;
      });
      let o = (() => {
        class e extends i.a {
          constructor() {
            super(...arguments), (this.models = { [e.STORAGE]: r });
          }
        }
        return (e.STORAGE = "storage"), e;
      })();
    },
    fRWx: function (e, t, n) {
      "use strict";
      n.r(t);
      var i = n("tyNb"),
        s = n("vkgz"),
        r = n("JIr8"),
        o = n("fXoL"),
        a = n("dAq2"),
        l = n("RmEv"),
        c = n("DV8u"),
        u = n("AsfI"),
        h = n("3Pt+"),
        d = n("ly96"),
        p = n("ofXK"),
        f = n("A1Yd"),
        g = n("MM/6");
      function m(e, t) {
        if (1 & e) {
          const e = o.Yb();
          o.Xb(0, "div"),
            o.Xb(1, "div", 4),
            o.Nc(2, "Connected"),
            o.Wb(),
            o.Xb(3, "div", 5),
            o.Xb(4, "div", 6),
            o.Xb(5, "label"),
            o.Nc(6, "Name"),
            o.Wb(),
            o.Xb(7, "span"),
            o.Nc(8),
            o.Wb(),
            o.Wb(),
            o.Xb(9, "div", 6),
            o.Xb(10, "label"),
            o.Nc(11, "Login"),
            o.Wb(),
            o.Xb(12, "span"),
            o.Nc(13),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(14, "div", 7),
            o.Xb(15, "button", 8),
            o.fc("click", function () {
              return o.Ec(e), (o.hc().needUpdate = !0);
            }),
            o.Wb(),
            o.Xb(16, "button", 9),
            o.fc("click", function () {
              return o.Ec(e), o.hc().deleteEvent.emit();
            }),
            o.Wb(),
            o.Wb(),
            o.Wb();
        }
        if (2 & e) {
          const e = o.hc();
          o.Eb(8),
            o.Oc(e.subscription.name),
            o.Eb(5),
            o.Oc(e.subscription.login);
        }
      }
      function b(e, t) {
        if (1 & e) {
          const e = o.Yb();
          o.Xb(0, "div", 13),
            o.Xb(1, "p-overlayPanel", 14, 15),
            o.Xb(3, "div", 16),
            o.Nc(4),
            o.Wb(),
            o.Wb(),
            o.Xb(5, "button", 17),
            o.fc("click", function (t) {
              return o.Ec(e), o.Bc(2).toggle(t);
            }),
            o.Nc(6, "Details"),
            o.Wb(),
            o.Wb();
        }
        if (2 & e) {
          const e = o.hc(2);
          o.Eb(4), o.Oc(e.subscription.errorMessage);
        }
      }
      function v(e, t) {
        if (1 & e) {
          const e = o.Yb();
          o.Xb(0, "div"),
            o.Xb(1, "div", 4),
            o.Nc(2, "Error"),
            o.Wb(),
            o.Xb(3, "div", 10),
            o.Nc(4),
            o.Wb(),
            o.Lc(5, b, 7, 1, "div", 11),
            o.Xb(6, "div", 12),
            o.Xb(7, "div", 6),
            o.Xb(8, "label"),
            o.Nc(9, "Name"),
            o.Wb(),
            o.Xb(10, "span"),
            o.Nc(11),
            o.Wb(),
            o.Wb(),
            o.Xb(12, "div", 6),
            o.Xb(13, "label"),
            o.Nc(14, "Login"),
            o.Wb(),
            o.Xb(15, "span"),
            o.Nc(16),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(17, "div", 7),
            o.Xb(18, "button", 8),
            o.fc("click", function () {
              return o.Ec(e), (o.hc().needUpdate = !0);
            }),
            o.Wb(),
            o.Xb(19, "button", 9),
            o.fc("click", function () {
              return o.Ec(e), o.hc().deleteEvent.emit();
            }),
            o.Wb(),
            o.Wb(),
            o.Wb();
        }
        if (2 & e) {
          const e = o.hc();
          o.Eb(4),
            o.Oc(e.subscription.errorMessage),
            o.Eb(1),
            o.pc("ngIf", e.subscription.errorMessage.length >= 120),
            o.Eb(6),
            o.Oc(e.subscription.name),
            o.Eb(5),
            o.Oc(e.subscription.login);
        }
      }
      function y(e, t) {
        if ((1 & e && (o.Xb(0, "span", 31), o.Nc(1), o.Wb()), 2 & e)) {
          const e = o.hc(2);
          o.Eb(1), o.Oc(e.getErrorMessage("Name", e.name));
        }
      }
      function w(e, t) {
        if ((1 & e && (o.Xb(0, "span", 31), o.Nc(1), o.Wb()), 2 & e)) {
          const e = o.hc(2);
          o.Eb(1), o.Oc(e.getErrorMessage("Login", e.login));
        }
      }
      function S(e, t) {
        if ((1 & e && (o.Xb(0, "span", 31), o.Nc(1), o.Wb()), 2 & e)) {
          const e = o.hc(2);
          o.Eb(1), o.Oc(e.getErrorMessage("Password", e.password));
        }
      }
      function _(e, t) {
        if (1 & e) {
          const e = o.Yb();
          o.Xb(0, "div", 18),
            o.Xb(1, "form", 19),
            o.fc("keyup.enter", function () {
              return o.Ec(e), o.hc().submit();
            }),
            o.Xb(2, "div", 20),
            o.Xb(3, "div", 18),
            o.Xb(4, "div", 21),
            o.Lc(5, y, 2, 1, "span", 22),
            o.Sb(6, "input", 23),
            o.Xb(7, "label", 24),
            o.Nc(8, "Name"),
            o.Xb(9, "span", 25),
            o.Nc(10, "*"),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(11, "div", 20),
            o.Xb(12, "div", 18),
            o.Xb(13, "div", 21),
            o.Lc(14, w, 2, 1, "span", 22),
            o.Sb(15, "input", 26),
            o.Xb(16, "label", 24),
            o.Nc(17, "Login"),
            o.Xb(18, "span", 25),
            o.Nc(19, "*"),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(20, "div", 20),
            o.Xb(21, "div", 18),
            o.Xb(22, "div", 21),
            o.Lc(23, S, 2, 1, "span", 22),
            o.Sb(24, "input", 27),
            o.Xb(25, "label", 24),
            o.Nc(26, "Password"),
            o.Xb(27, "span", 25),
            o.Nc(28, "*"),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(29, "div", 28),
            o.Xb(30, "div", 29),
            o.Xb(31, "button", 30),
            o.fc("click", function () {
              return o.Ec(e), o.hc().submit();
            }),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb();
        }
        if (2 & e) {
          const e = o.hc();
          o.Eb(1),
            o.pc("formGroup", e.form),
            o.Eb(4),
            o.pc("ngIf", e.name.touched && e.name.invalid),
            o.Eb(1),
            o.pc("formControl", e.name),
            o.Eb(8),
            o.pc("ngIf", e.login.touched && e.login.invalid),
            o.Eb(1),
            o.pc("formControl", e.login),
            o.Eb(8),
            o.pc("ngIf", e.password.touched && e.password.invalid),
            o.Eb(1),
            o.pc("formControl", e.password),
            o.Eb(7),
            o.pc("label", e.submitButtonLabel);
        }
      }
      function C(e, t) {
        if ((1 & e && (o.Xb(0, "span", 31), o.Nc(1), o.Wb()), 2 & e)) {
          const e = o.hc(2);
          o.Eb(1), o.Oc(e.getErrorMessage("Name", e.name));
        }
      }
      function E(e, t) {
        if ((1 & e && (o.Xb(0, "span", 31), o.Nc(1), o.Wb()), 2 & e)) {
          const e = o.hc(2);
          o.Eb(1), o.Oc(e.getErrorMessage("Login", e.login));
        }
      }
      function O(e, t) {
        if ((1 & e && (o.Xb(0, "span", 31), o.Nc(1), o.Wb()), 2 & e)) {
          const e = o.hc(2);
          o.Eb(1), o.Oc(e.getErrorMessage("Password", e.password));
        }
      }
      function x(e, t) {
        if (1 & e) {
          const e = o.Yb();
          o.Xb(0, "div", 18),
            o.Xb(1, "form", 19),
            o.fc("keyup.enter", function () {
              return o.Ec(e), o.hc().submit();
            }),
            o.Xb(2, "div", 20),
            o.Xb(3, "div", 18),
            o.Xb(4, "div", 21),
            o.Lc(5, C, 2, 1, "span", 22),
            o.Sb(6, "input", 23),
            o.Xb(7, "label", 24),
            o.Nc(8, "Name"),
            o.Xb(9, "span", 25),
            o.Nc(10, "*"),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(11, "div", 20),
            o.Xb(12, "div", 18),
            o.Xb(13, "div", 21),
            o.Lc(14, E, 2, 1, "span", 22),
            o.Sb(15, "input", 26),
            o.Xb(16, "label", 24),
            o.Nc(17, "Login"),
            o.Xb(18, "span", 25),
            o.Nc(19, "*"),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(20, "div", 20),
            o.Xb(21, "div", 18),
            o.Xb(22, "div", 21),
            o.Lc(23, O, 2, 1, "span", 22),
            o.Sb(24, "input", 27),
            o.Xb(25, "label", 24),
            o.Nc(26, "Password"),
            o.Xb(27, "span", 25),
            o.Nc(28, "*"),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Xb(29, "div", 28),
            o.Xb(30, "div", 29),
            o.Xb(31, "button", 30),
            o.fc("click", function () {
              return o.Ec(e), o.hc().submit();
            }),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb(),
            o.Wb();
        }
        if (2 & e) {
          const e = o.hc();
          o.Eb(1),
            o.pc("formGroup", e.form),
            o.Eb(4),
            o.pc("ngIf", e.name.touched && e.name.invalid),
            o.Eb(1),
            o.pc("formControl", e.name),
            o.Eb(8),
            o.pc("ngIf", e.login.touched && e.login.invalid),
            o.Eb(1),
            o.pc("formControl", e.login),
            o.Eb(8),
            o.pc("ngIf", e.password.touched && e.password.invalid),
            o.Eb(1),
            o.pc("formControl", e.password),
            o.Eb(7),
            o.pc("label", e.submitButtonLabel);
        }
      }
      const T = function (e, t) {
        return { success: e, error: t };
      };
      let k = (() => {
        class e {
          constructor(e) {
            (this.fb = e),
              (this._needUpdate = !1),
              (this.createEvent = new o.o()),
              (this.deleteEvent = new o.o()),
              (this.updateEvent = new o.o());
          }
          set subscription(e) {
            (this._subscription = e), this.createForm(e || {});
          }
          get subscription() {
            return this._subscription;
          }
          get needUpdate() {
            return this._needUpdate;
          }
          set needUpdate(e) {
            this._needUpdate = e;
          }
          get isSubscriptionExist() {
            var e, t;
            return (
              (null === (e = this.subscription) || void 0 === e
                ? void 0
                : e.name) &&
              (null === (t = this.subscription) || void 0 === t
                ? void 0
                : t.login)
            );
          }
          get isSubscriptionActive() {
            var e;
            return (
              "active" ===
              (null === (e = this.subscription) || void 0 === e
                ? void 0
                : e.status)
            );
          }
          get isSubscriptionHasError() {
            var e, t;
            return (
              "error" ===
                (null === (e = this.subscription) || void 0 === e
                  ? void 0
                  : e.status) &&
              (null === (t = this.subscription) || void 0 === t
                ? void 0
                : t.errorMessage)
            );
          }
          get submitButtonLabel() {
            return this.isSubscriptionExist
              ? this.isSubscriptionActive
                ? "Update"
                : "Reconnect"
              : "Connect";
          }
          get name() {
            return this.form.get("name");
          }
          get login() {
            return this.form.get("login");
          }
          get password() {
            return this.form.get("password");
          }
          createForm(e) {
            this.form = this.fb.group({
              name: [e.name || "", [h.t.required]],
              login: [e.login || "", [h.t.required]],
              password: [e.password || "", [h.t.required]],
            });
          }
          submit() {
            if ((d.a.markAllAsTouched(this.form), this.form.valid)) {
              const { value: e } = this.form;
              this.isSubscriptionExist
                ? this.updateEvent.emit(e)
                : this.createEvent.emit(e),
                (this.needUpdate = !1);
            }
          }
          getErrorMessage(e, t) {
            return d.a.getErrorMessage(e, t);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(o.Rb(h.d));
          }),
          (e.ɵcmp = o.Lb({
            type: e,
            selectors: [["app-subscription-form"]],
            inputs: { subscription: "subscription" },
            outputs: {
              createEvent: "createEvent",
              deleteEvent: "deleteEvent",
              updateEvent: "updateEvent",
            },
            decls: 6,
            vars: 8,
            consts: [
              [1, "card", 3, "ngClass"],
              [1, "card-body", "px-4", "pb-4", "pt-0"],
              [4, "ngIf"],
              ["class", "col-12", 4, "ngIf"],
              [1, "status", "my-3"],
              [1, "credentials", "my-5"],
              [1, "credentials__item"],
              [1, "button-wrapper"],
              [
                "pButton",
                "",
                "type",
                "button",
                "label",
                "Edit",
                1,
                "w-100",
                "ui-button-outline",
                3,
                "click",
              ],
              [
                "pButton",
                "",
                "type",
                "button",
                "label",
                "Delete",
                1,
                "mt-3",
                "w-100",
                3,
                "click",
              ],
              [1, "message", "color-red-accent"],
              ["class", "text-end mt-3", 4, "ngIf"],
              [1, "credentials", "mt-3", "mb-5"],
              [1, "text-end", "mt-3"],
              ["appendTo", "body"],
              ["op", ""],
              [2, "max-width", "250px"],
              [1, "details-button", 3, "click"],
              [1, "col-12"],
              [
                "autocomplete",
                "off",
                "novalidate",
                "false",
                1,
                "card-wrapper",
                3,
                "formGroup",
                "keyup.enter",
              ],
              [1, "row"],
              [1, "d-flex", "flex-column-reverse", "mt-4"],
              ["class", "error-message", 4, "ngIf"],
              ["name", "name", 1, "form-control", 3, "formControl"],
              [1, "form-label"],
              [1, "color-red-accent"],
              ["name", "login", 1, "form-control", 3, "formControl"],
              [
                "name",
                "password",
                "type",
                "password",
                "placeholder",
                "**********",
                1,
                "form-control",
                3,
                "formControl",
              ],
              [1, "row", "mt-5"],
              [1, "col-12", "text-end"],
              [
                "pButton",
                "",
                "type",
                "button",
                1,
                "w-100",
                3,
                "label",
                "click",
              ],
              [1, "error-message"],
            ],
            template: function (e, t) {
              1 & e &&
                (o.Xb(0, "div", 0),
                o.Xb(1, "div", 1),
                o.Lc(2, m, 17, 2, "div", 2),
                o.Lc(3, v, 20, 4, "div", 2),
                o.Lc(4, _, 32, 8, "div", 3),
                o.Lc(5, x, 32, 8, "div", 3),
                o.Wb(),
                o.Wb()),
                2 & e &&
                  (o.pc(
                    "ngClass",
                    o.tc(5, T, t.isSubscriptionActive, t.isSubscriptionHasError)
                  ),
                  o.Eb(2),
                  o.pc("ngIf", t.isSubscriptionActive && !t.needUpdate),
                  o.Eb(1),
                  o.pc("ngIf", t.isSubscriptionHasError && !t.needUpdate),
                  o.Eb(1),
                  o.pc("ngIf", !t.subscription),
                  o.Eb(1),
                  o.pc("ngIf", t.needUpdate));
            },
            directives: [p.k, p.m, f.a, g.a, h.v, h.m, h.g, h.c, h.l, h.f],
            styles: [
              '.credentials__item[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#6d7783;font-size:.8em;width:50px;white-space:nowrap}.credentials__item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:1.2em;font-weight:600}.status[_ngcontent-%COMP%]{position:relative;padding-left:20px;font-size:1.2em}.status[_ngcontent-%COMP%]:before{content:"";width:8px;height:8px;border-radius:50%;position:absolute;top:50%;left:0;transform:translateY(-50%)}.details-button[_ngcontent-%COMP%]{text-decoration:underline;font-size:.9em}.message[_ngcontent-%COMP%]{font-size:.8em;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.card[_ngcontent-%COMP%]{border:1px solid transparent;max-width:380px}.card.success[_ngcontent-%COMP%]{border:1px solid #55a555}.card.success[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]:before{background:#55a555}.card.error[_ngcontent-%COMP%]{border:1px solid red}.card.error[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]:before{background:red}@media (max-width:991px){.card[_ngcontent-%COMP%]{max-width:100%}}',
            ],
          })),
          e
        );
      })();
      var M = n("M/UB"),
        I = n("RtSl");
      function P(e, t) {
        if (
          (1 & e &&
            (o.Xb(0, "video", 24),
            o.Sb(1, "source", 25),
            o.Nc(2, "Your browser does not support the video tag."),
            o.Wb()),
          2 & e)
        ) {
          const e = o.hc();
          o.Eb(1), o.pc("src", e.videoSrc, o.Gc);
        }
      }
      function R(e, t) {
        1 & e &&
          (o.Xb(0, "tr"),
          o.Xb(1, "th"),
          o.Nc(2, "Type"),
          o.Wb(),
          o.Xb(3, "th", 26),
          o.Nc(4, "Quantity"),
          o.Wb(),
          o.Xb(5, "th", 27),
          o.Nc(6, "Open Time"),
          o.Wb(),
          o.Xb(7, "th", 26),
          o.Nc(8, "Open Rate"),
          o.Wb(),
          o.Xb(9, "th", 27),
          o.Nc(10, "Close Time"),
          o.Wb(),
          o.Xb(11, "th", 26),
          o.Nc(12, "Stop Loss"),
          o.Wb(),
          o.Xb(13, "th", 26),
          o.Nc(14, "Take Profit"),
          o.Wb(),
          o.Xb(15, "th", 28),
          o.Nc(16, "Profit"),
          o.Wb(),
          o.Wb());
      }
      function N(e, t) {
        if (
          (1 & e &&
            (o.Xb(0, "tr"),
            o.Xb(1, "td"),
            o.Nc(2),
            o.Wb(),
            o.Xb(3, "td", 29),
            o.Nc(4),
            o.Wb(),
            o.Xb(5, "td", 29),
            o.Nc(6),
            o.ic(7, "date"),
            o.Wb(),
            o.Xb(8, "td", 29),
            o.Nc(9),
            o.Wb(),
            o.Xb(10, "td", 29),
            o.Nc(11),
            o.ic(12, "date"),
            o.Wb(),
            o.Xb(13, "td", 29),
            o.Nc(14),
            o.Wb(),
            o.Xb(15, "td", 29),
            o.Nc(16),
            o.Wb(),
            o.Xb(17, "td", 30),
            o.Nc(18),
            o.Wb(),
            o.Wb()),
          2 & e)
        ) {
          const e = t.rowData;
          o.Eb(2),
            o.Oc(e.type),
            o.Eb(2),
            o.Oc(e.quantity),
            o.Eb(2),
            o.Oc(o.kc(7, 8, e.openTime, "dd/MM/yyyy h:mm:ss a")),
            o.Eb(3),
            o.Oc(e.openRate),
            o.Eb(2),
            o.Oc(o.kc(12, 11, e.closeTime, "dd/MM/yyyy h:mm:ss a")),
            o.Eb(3),
            o.Oc(e.stopLoss),
            o.Eb(2),
            o.Oc(e.takeProfit),
            o.Eb(2),
            o.Oc(e.profit);
        }
      }
      function L(e, t) {
        1 & e &&
          (o.Xb(0, "tr"),
          o.Xb(1, "th"),
          o.Nc(2, "Type"),
          o.Wb(),
          o.Xb(3, "th", 26),
          o.Nc(4, "Quantity"),
          o.Wb(),
          o.Xb(5, "th", 27),
          o.Nc(6, "Open Time"),
          o.Wb(),
          o.Xb(7, "th", 26),
          o.Nc(8, "Open Rate"),
          o.Wb(),
          o.Xb(9, "th", 27),
          o.Nc(10, "Close Time"),
          o.Wb(),
          o.Xb(11, "th", 26),
          o.Nc(12, "Stop Loss"),
          o.Wb(),
          o.Xb(13, "th", 26),
          o.Nc(14, "Take Profit"),
          o.Wb(),
          o.Xb(15, "th", 28),
          o.Nc(16, "Profit"),
          o.Wb(),
          o.Wb());
      }
      function A(e, t) {
        if (
          (1 & e &&
            (o.Xb(0, "tr"),
            o.Xb(1, "td"),
            o.Nc(2),
            o.Wb(),
            o.Xb(3, "td", 29),
            o.Nc(4),
            o.Wb(),
            o.Xb(5, "td", 29),
            o.Nc(6),
            o.ic(7, "date"),
            o.Wb(),
            o.Xb(8, "td", 29),
            o.Nc(9),
            o.Wb(),
            o.Xb(10, "td", 29),
            o.Nc(11),
            o.ic(12, "date"),
            o.Wb(),
            o.Xb(13, "td", 29),
            o.Nc(14),
            o.Wb(),
            o.Xb(15, "td", 29),
            o.Nc(16),
            o.Wb(),
            o.Xb(17, "td", 30),
            o.Nc(18),
            o.Wb(),
            o.Wb()),
          2 & e)
        ) {
          const e = t.rowData;
          o.Eb(2),
            o.Oc(e.type),
            o.Eb(2),
            o.Oc(e.quantity),
            o.Eb(2),
            o.Oc(o.kc(7, 8, e.openTime, "dd/MM/yyyy h:mm:ss a")),
            o.Eb(3),
            o.Oc(e.openRate),
            o.Eb(2),
            o.Oc(o.kc(12, 11, e.closeTime, "dd/MM/yyyy h:mm:ss a")),
            o.Eb(3),
            o.Oc(e.stopLoss),
            o.Eb(2),
            o.Oc(e.takeProfit),
            o.Eb(2),
            o.Oc(e.profit);
        }
      }
      const D = [
        {
          path: "",
          component: (() => {
            class e {
              constructor(e, t, n) {
                (this.tradingService = e),
                  (this.router = t),
                  (this.snack = n),
                  (this.loading = !0),
                  (this.videoSrc = null),
                  (this.openTrades = []),
                  (this.closedTrades = []);
              }
              ngOnInit() {
                this.canAccess();
              }
              canAccess() {
                this.tradingService.canAccess().subscribe(
                  (e) => {
                    e || this.router.navigate(["/office"]),
                      this.getVideoSrc(),
                      this.getTradingSubscription(),
                      this.getOpenTrades(),
                      this.getClosedTrades();
                  },
                  () => this.router.navigate(["/office"])
                );
              }
              getVideoSrc() {
                this.tradingService
                  .getVideoSrc()
                  .subscribe((e) => (this.videoSrc = e));
              }
              getTradingSubscription() {
                (this.loading = !0),
                  this.tradingService
                    .getTradingSubscription()
                    .pipe(
                      Object(s.a)((e) => (this.tradingSubscription = e)),
                      Object(r.a)(() => null)
                    )
                    .subscribe(() => (this.loading = !1));
              }
              createTradingSubscription(e) {
                (this.loading = !0),
                  this.tradingService
                    .createTradingSubscription(e)
                    .pipe(
                      Object(s.a)((e) => {
                        (this.tradingSubscription = e),
                          this.snack.success(
                            "Trade subscription successfully created!"
                          );
                      }),
                      Object(r.a)(() => null)
                    )
                    .subscribe(() => (this.loading = !1));
              }
              getOpenTrades() {
                (this.loading = !0),
                  this.tradingService
                    .getOpenTrades()
                    .pipe(
                      Object(s.a)((e) => (this.openTrades = e)),
                      Object(r.a)(() => null)
                    )
                    .subscribe(() => (this.loading = !1));
              }
              getClosedTrades() {
                (this.loading = !0),
                  this.tradingService
                    .getClosedTrades()
                    .pipe(
                      Object(s.a)((e) => (this.closedTrades = e)),
                      Object(r.a)(() => null)
                    )
                    .subscribe(() => (this.loading = !1));
              }
              deleteTradingSubscription() {
                (this.loading = !0),
                  this.tradingService
                    .deleteTradingSubscription()
                    .pipe(
                      Object(s.a)(() => {
                        (this.tradingSubscription = null),
                          this.snack.success(
                            "Trade subscription successfully deleted!"
                          );
                      }),
                      Object(r.a)(() => null)
                    )
                    .subscribe(() => (this.loading = !1));
              }
              updateTradingSubscription(e) {
                (this.loading = !0),
                  this.tradingService
                    .updateTradingSubscription(e)
                    .pipe(
                      Object(s.a)((e) => {
                        (this.tradingSubscription = e),
                          this.snack.success(
                            "Trade subscription successfully updated!"
                          );
                      }),
                      Object(r.a)(() => null)
                    )
                    .subscribe(() => (this.loading = !1));
              }
            }
            return (
              (e.ɵfac = function (t) {
                return new (t || e)(o.Rb(a.a), o.Rb(i.g), o.Rb(l.a));
              }),
              (e.ɵcmp = o.Lb({
                type: e,
                selectors: [["app-trading"]],
                decls: 49,
                vars: 6,
                consts: [
                  [3, "hidden"],
                  [1, "container-fluid"],
                  [1, "row", "mb-5"],
                  [1, "col-12"],
                  [1, "row", "justify-content-md-center", "mb-5"],
                  [1, "col-lg-7"],
                  [1, "col-lg-5"],
                  [3, "refLink"],
                  [1, "row"],
                  [1, "col-12", "col-lg-4"],
                  [1, "mb-4"],
                  [
                    3,
                    "subscription",
                    "createEvent",
                    "updateEvent",
                    "deleteEvent",
                  ],
                  [1, "col-12", "col-lg-4", "mt-4", "mt-lg-0"],
                  ["width", "100%", "controls", "", 4, "ngIf"],
                  [1, "col-12", "mt-5"],
                  [1, "table", "mt-3"],
                  [1, "card", 2, "min-width", "1000px"],
                  [1, "card-body"],
                  [1, "table__title"],
                  [1, "divider"],
                  [1, "table__main", 3, "value"],
                  ["pTemplate", "header"],
                  ["pTemplate", "body"],
                  [1, "col-12", "mt-3"],
                  ["width", "100%", "controls", ""],
                  ["type", "video/mp4", 3, "src"],
                  [1, "text-center"],
                  [1, "w-150px", "text-center"],
                  [1, "text-end"],
                  [1, "text-center", "fw-bolder"],
                  [1, "text-end", "fw-bolder"],
                ],
                template: function (e, t) {
                  1 & e &&
                    (o.Sb(0, "app-progress-spinner", 0),
                    o.Xb(1, "div", 1),
                    o.Xb(2, "div", 2),
                    o.Xb(3, "div", 3),
                    o.Xb(4, "h2"),
                    o.Nc(5, "Trading"),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Xb(6, "div", 4),
                    o.Sb(7, "div", 5),
                    o.Xb(8, "div", 6),
                    o.Sb(9, "app-referral-link", 7),
                    o.Wb(),
                    o.Wb(),
                    o.Xb(10, "div", 8),
                    o.Xb(11, "div", 9),
                    o.Xb(12, "h5", 10),
                    o.Nc(13, "Connect to Platform"),
                    o.Wb(),
                    o.Xb(14, "app-subscription-form", 11),
                    o.fc("createEvent", function (e) {
                      return t.createTradingSubscription(e);
                    })("updateEvent", function (e) {
                      return t.updateTradingSubscription(e);
                    })("deleteEvent", function () {
                      return t.deleteTradingSubscription();
                    }),
                    o.Wb(),
                    o.Wb(),
                    o.Xb(15, "div", 12),
                    o.Xb(16, "h5", 10),
                    o.Nc(17, "How to"),
                    o.Wb(),
                    o.Xb(18, "p"),
                    o.Nc(
                      19,
                      "Lorem ipsum dolor sit amet, consectetur adipisicing elit. In laudantium maxime neque nisi nulla vero."
                    ),
                    o.Wb(),
                    o.Xb(20, "p"),
                    o.Nc(
                      21,
                      "Lorem ipsum dolor sit amet, consectetur adipisicing elit. In laudantium maxime neque nisi nulla vero."
                    ),
                    o.Wb(),
                    o.Xb(22, "p"),
                    o.Nc(
                      23,
                      "Lorem ipsum dolor sit amet, consectetur adipisicing elit. In laudantium maxime neque nisi nulla vero."
                    ),
                    o.Wb(),
                    o.Wb(),
                    o.Xb(24, "div", 12),
                    o.Xb(25, "h5", 10),
                    o.Nc(26, "Tutorial"),
                    o.Wb(),
                    o.Lc(27, P, 3, 1, "video", 13),
                    o.Wb(),
                    o.Wb(),
                    o.Xb(28, "div", 8),
                    o.Xb(29, "div", 14),
                    o.Xb(30, "div", 15),
                    o.Xb(31, "div", 16),
                    o.Xb(32, "div", 17),
                    o.Xb(33, "p", 18),
                    o.Nc(34, "Open trades"),
                    o.Wb(),
                    o.Sb(35, "div", 19),
                    o.Xb(36, "p-treeTable", 20),
                    o.Lc(37, R, 17, 0, "ng-template", 21),
                    o.Lc(38, N, 19, 14, "ng-template", 22),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Xb(39, "div", 23),
                    o.Xb(40, "div", 15),
                    o.Xb(41, "div", 16),
                    o.Xb(42, "div", 17),
                    o.Xb(43, "p", 18),
                    o.Nc(44, "Closed trades"),
                    o.Wb(),
                    o.Sb(45, "div", 19),
                    o.Xb(46, "p-treeTable", 20),
                    o.Lc(47, L, 17, 0, "ng-template", 21),
                    o.Lc(48, A, 19, 14, "ng-template", 22),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Wb(),
                    o.Wb()),
                    2 & e &&
                      (o.pc("hidden", !t.loading),
                      o.Eb(9),
                      o.pc(
                        "refLink",
                        "https://gbebrokers.com/de/account/individual-account/?mid=QwBVADQAMgA5AA%3D%3D&utm_source=broker&utm_medium=live&utm_campaign=CU429&utm_term=2333_MarketVision&utm_content=de"
                      ),
                      o.Eb(5),
                      o.pc("subscription", t.tradingSubscription),
                      o.Eb(13),
                      o.pc("ngIf", t.videoSrc),
                      o.Eb(9),
                      o.pc("value", t.openTrades),
                      o.Eb(10),
                      o.pc("value", t.closedTrades));
                },
                directives: [c.a, u.a, k, p.m, M.a, I.d],
                pipes: [p.f],
                encapsulation: 2,
              })),
              e
            );
          })(),
        },
      ];
      let j = (() => {
        class e {}
        return (
          (e.ɵmod = o.Pb({ type: e })),
          (e.ɵinj = o.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[i.k.forChild(D)], i.k],
          })),
          e
        );
      })();
      var F = n("M0ag"),
        V = n("lY0W");
      n.d(t, "TradingModule", function () {
        return W;
      });
      let W = (() => {
        class e {}
        return (
          (e.ɵmod = o.Pb({ type: e })),
          (e.ɵinj = o.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [a.a],
            imports: [[V.a, F.a, j]],
          })),
          e
        );
      })();
    },
    fXoL: function (e, t, n) {
      "use strict";
      var i = n("XNiG"),
        s = n("quSY"),
        r = n("HDdC"),
        o = n("VRyK"),
        a = n("7o/Q");
      function l() {
        return function (e) {
          return e.lift(new c(e));
        };
      }
      class c {
        constructor(e) {
          this.connectable = e;
        }
        call(e, t) {
          const { connectable: n } = this;
          n._refCount++;
          const i = new u(e, n),
            s = t.subscribe(i);
          return i.closed || (i.connection = n.connect()), s;
        }
      }
      class u extends a.a {
        constructor(e, t) {
          super(e), (this.connectable = t);
        }
        _unsubscribe() {
          const { connectable: e } = this;
          if (!e) return void (this.connection = null);
          this.connectable = null;
          const t = e._refCount;
          if (t <= 0) return void (this.connection = null);
          if (((e._refCount = t - 1), t > 1))
            return void (this.connection = null);
          const { connection: n } = this,
            i = e._connection;
          (this.connection = null), !i || (n && i !== n) || i.unsubscribe();
        }
      }
      class h extends r.a {
        constructor(e, t) {
          super(),
            (this.source = e),
            (this.subjectFactory = t),
            (this._refCount = 0),
            (this._isComplete = !1);
        }
        _subscribe(e) {
          return this.getSubject().subscribe(e);
        }
        getSubject() {
          const e = this._subject;
          return (
            (e && !e.isStopped) || (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        connect() {
          let e = this._connection;
          return (
            e ||
              ((this._isComplete = !1),
              (e = this._connection = new s.a()),
              e.add(this.source.subscribe(new p(this.getSubject(), this))),
              e.closed && ((this._connection = null), (e = s.a.EMPTY))),
            e
          );
        }
        refCount() {
          return l()(this);
        }
      }
      const d = (() => {
        const e = h.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: e._subscribe },
          _isComplete: { value: e._isComplete, writable: !0 },
          getSubject: { value: e.getSubject },
          connect: { value: e.connect },
          refCount: { value: e.refCount },
        };
      })();
      class p extends i.c {
        constructor(e, t) {
          super(e), (this.connectable = t);
        }
        _error(e) {
          this._unsubscribe(), super._error(e);
        }
        _complete() {
          (this.connectable._isComplete = !0),
            this._unsubscribe(),
            super._complete();
        }
        _unsubscribe() {
          const e = this.connectable;
          if (e) {
            this.connectable = null;
            const t = e._connection;
            (e._refCount = 0),
              (e._subject = null),
              (e._connection = null),
              t && t.unsubscribe();
          }
        }
      }
      function f() {
        return new i.b();
      }
      function g(e) {
        return { toString: e }.toString();
      }
      function m(e) {
        return function (...t) {
          if (e) {
            const n = e(...t);
            for (const e in n) this[e] = n[e];
          }
        };
      }
      function b(e, t, n) {
        return g(() => {
          const i = m(t);
          function s(...e) {
            if (this instanceof s) return i.apply(this, e), this;
            const t = new s(...e);
            return (n.annotation = t), n;
            function n(e, n, i) {
              const s = e.hasOwnProperty("__parameters__")
                ? e.__parameters__
                : Object.defineProperty(e, "__parameters__", { value: [] })
                    .__parameters__;
              for (; s.length <= i; ) s.push(null);
              return (s[i] = s[i] || []).push(t), e;
            }
          }
          return (
            n && (s.prototype = Object.create(n.prototype)),
            (s.prototype.ngMetadataName = e),
            (s.annotationCls = s),
            s
          );
        });
      }
      function v(e, t, n, i) {
        return g(() => {
          const s = m(t);
          function r(...e) {
            if (this instanceof r) return s.apply(this, e), this;
            const t = new r(...e);
            return function (n, s) {
              const r = n.constructor,
                o = r.hasOwnProperty("__prop__metadata__")
                  ? r.__prop__metadata__
                  : Object.defineProperty(r, "__prop__metadata__", {
                      value: {},
                    }).__prop__metadata__;
              (o[s] = (o.hasOwnProperty(s) && o[s]) || []),
                o[s].unshift(t),
                i && i(n, s, ...e);
            };
          }
          return (
            n && (r.prototype = Object.create(n.prototype)),
            (r.prototype.ngMetadataName = e),
            (r.annotationCls = r),
            r
          );
        });
      }
      n.d(t, "a", function () {
        return kr;
      }),
        n.d(t, "b", function () {
          return dc;
        }),
        n.d(t, "c", function () {
          return ac;
        }),
        n.d(t, "d", function () {
          return rc;
        }),
        n.d(t, "e", function () {
          return oc;
        }),
        n.d(t, "f", function () {
          return su;
        }),
        n.d(t, "g", function () {
          return qc;
        }),
        n.d(t, "h", function () {
          return Ec;
        }),
        n.d(t, "i", function () {
          return hr;
        }),
        n.d(t, "j", function () {
          return Cc;
        }),
        n.d(t, "k", function () {
          return wa;
        }),
        n.d(t, "l", function () {
          return gc;
        }),
        n.d(t, "m", function () {
          return Sa;
        }),
        n.d(t, "n", function () {
          return xn;
        }),
        n.d(t, "o", function () {
          return Dl;
        }),
        n.d(t, "p", function () {
          return te;
        }),
        n.d(t, "q", function () {
          return y;
        }),
        n.d(t, "r", function () {
          return ee;
        }),
        n.d(t, "s", function () {
          return Tr;
        }),
        n.d(t, "t", function () {
          return sc;
        }),
        n.d(t, "u", function () {
          return Wa;
        }),
        n.d(t, "v", function () {
          return za;
        }),
        n.d(t, "w", function () {
          return fc;
        }),
        n.d(t, "x", function () {
          return me;
        }),
        n.d(t, "y", function () {
          return Yc;
        }),
        n.d(t, "z", function () {
          return ge;
        }),
        n.d(t, "A", function () {
          return Bc;
        }),
        n.d(t, "B", function () {
          return Tc;
        }),
        n.d(t, "C", function () {
          return w;
        }),
        n.d(t, "D", function () {
          return hc;
        }),
        n.d(t, "E", function () {
          return uc;
        }),
        n.d(t, "F", function () {
          return Oa;
        }),
        n.d(t, "G", function () {
          return Ca;
        }),
        n.d(t, "H", function () {
          return Ea;
        }),
        n.d(t, "I", function () {
          return Ta;
        }),
        n.d(t, "J", function () {
          return pi;
        }),
        n.d(t, "K", function () {
          return _;
        }),
        n.d(t, "L", function () {
          return Jc;
        }),
        n.d(t, "M", function () {
          return Ua;
        }),
        n.d(t, "N", function () {
          return Ac;
        }),
        n.d(t, "O", function () {
          return ka;
        }),
        n.d(t, "P", function () {
          return Ir;
        }),
        n.d(t, "Q", function () {
          return $a;
        }),
        n.d(t, "R", function () {
          return Oe;
        }),
        n.d(t, "S", function () {
          return Fr;
        }),
        n.d(t, "T", function () {
          return Hc;
        }),
        n.d(t, "U", function () {
          return Hn;
        }),
        n.d(t, "V", function () {
          return V;
        }),
        n.d(t, "W", function () {
          return Uc;
        }),
        n.d(t, "X", function () {
          return he;
        }),
        n.d(t, "Y", function () {
          return Bn;
        }),
        n.d(t, "Z", function () {
          return nu;
        }),
        n.d(t, "ab", function () {
          return Fc;
        }),
        n.d(t, "bb", function () {
          return pc;
        }),
        n.d(t, "cb", function () {
          return pr;
        }),
        n.d(t, "db", function () {
          return cl;
        }),
        n.d(t, "eb", function () {
          return hi;
        }),
        n.d(t, "fb", function () {
          return mi;
        }),
        n.d(t, "gb", function () {
          return qn;
        }),
        n.d(t, "hb", function () {
          return Ln;
        }),
        n.d(t, "ib", function () {
          return Dn;
        }),
        n.d(t, "jb", function () {
          return Wn;
        }),
        n.d(t, "kb", function () {
          return Fn;
        }),
        n.d(t, "lb", function () {
          return jn;
        }),
        n.d(t, "mb", function () {
          return Vn;
        }),
        n.d(t, "nb", function () {
          return rl;
        }),
        n.d(t, "ob", function () {
          return tu;
        }),
        n.d(t, "pb", function () {
          return ol;
        }),
        n.d(t, "qb", function () {
          return al;
        }),
        n.d(t, "rb", function () {
          return An;
        }),
        n.d(t, "sb", function () {
          return G;
        }),
        n.d(t, "tb", function () {
          return Vr;
        }),
        n.d(t, "ub", function () {
          return uo;
        }),
        n.d(t, "vb", function () {
          return co;
        }),
        n.d(t, "wb", function () {
          return jr;
        }),
        n.d(t, "xb", function () {
          return sl;
        }),
        n.d(t, "yb", function () {
          return Ke;
        }),
        n.d(t, "zb", function () {
          return D;
        }),
        n.d(t, "Ab", function () {
          return Nn;
        }),
        n.d(t, "Bb", function () {
          return ta;
        }),
        n.d(t, "Cb", function () {
          return aa;
        }),
        n.d(t, "Db", function () {
          return ba;
        }),
        n.d(t, "Eb", function () {
          return Fi;
        }),
        n.d(t, "Fb", function () {
          return $r;
        }),
        n.d(t, "Gb", function () {
          return Do;
        }),
        n.d(t, "Hb", function () {
          return Qo;
        }),
        n.d(t, "Ib", function () {
          return No;
        }),
        n.d(t, "Jb", function () {
          return Zl;
        }),
        n.d(t, "Kb", function () {
          return wi;
        }),
        n.d(t, "Lb", function () {
          return Me;
        }),
        n.d(t, "Mb", function () {
          return De;
        }),
        n.d(t, "Nb", function () {
          return x;
        }),
        n.d(t, "Ob", function () {
          return T;
        }),
        n.d(t, "Pb", function () {
          return Ne;
        }),
        n.d(t, "Qb", function () {
          return je;
        }),
        n.d(t, "Rb", function () {
          return Zr;
        }),
        n.d(t, "Sb", function () {
          return so;
        }),
        n.d(t, "Tb", function () {
          return ao;
        }),
        n.d(t, "Ub", function () {
          return oo;
        }),
        n.d(t, "Vb", function () {
          return ro;
        }),
        n.d(t, "Wb", function () {
          return io;
        }),
        n.d(t, "Xb", function () {
          return no;
        }),
        n.d(t, "Yb", function () {
          return lo;
        }),
        n.d(t, "Zb", function () {
          return _n;
        }),
        n.d(t, "ac", function () {
          return Jo;
        }),
        n.d(t, "bc", function () {
          return ue;
        }),
        n.d(t, "cc", function () {
          return Qr;
        }),
        n.d(t, "dc", function () {
          return ic;
        }),
        n.d(t, "ec", function () {
          return Jr;
        }),
        n.d(t, "fc", function () {
          return ho;
        }),
        n.d(t, "gc", function () {
          return Ql;
        }),
        n.d(t, "hc", function () {
          return go;
        }),
        n.d(t, "ic", function () {
          return Ml;
        }),
        n.d(t, "jc", function () {
          return Il;
        }),
        n.d(t, "kc", function () {
          return Pl;
        }),
        n.d(t, "lc", function () {
          return Rl;
        }),
        n.d(t, "mc", function () {
          return Nl;
        }),
        n.d(t, "nc", function () {
          return vo;
        }),
        n.d(t, "oc", function () {
          return bo;
        }),
        n.d(t, "pc", function () {
          return eo;
        }),
        n.d(t, "qc", function () {
          return yo;
        }),
        n.d(t, "rc", function () {
          return gl;
        }),
        n.d(t, "sc", function () {
          return ml;
        }),
        n.d(t, "tc", function () {
          return bl;
        }),
        n.d(t, "uc", function () {
          return vl;
        }),
        n.d(t, "vc", function () {
          return yl;
        }),
        n.d(t, "wc", function () {
          return wl;
        }),
        n.d(t, "xc", function () {
          return Sl;
        }),
        n.d(t, "yc", function () {
          return _l;
        }),
        n.d(t, "zc", function () {
          return Cl;
        }),
        n.d(t, "Ac", function () {
          return $l;
        }),
        n.d(t, "Bc", function () {
          return Yr;
        }),
        n.d(t, "Cc", function () {
          return sn;
        }),
        n.d(t, "Dc", function () {
          return nn;
        }),
        n.d(t, "Ec", function () {
          return ft;
        }),
        n.d(t, "Fc", function () {
          return bi;
        }),
        n.d(t, "Gc", function () {
          return yi;
        }),
        n.d(t, "Hc", function () {
          return Le;
        }),
        n.d(t, "Ic", function () {
          return ql;
        }),
        n.d(t, "Jc", function () {
          return Lo;
        }),
        n.d(t, "Kc", function () {
          return Ro;
        }),
        n.d(t, "Lc", function () {
          return Kr;
        }),
        n.d(t, "Mc", function () {
          return nc;
        }),
        n.d(t, "Nc", function () {
          return Ko;
        }),
        n.d(t, "Oc", function () {
          return Yo;
        }),
        n.d(t, "Pc", function () {
          return Zo;
        }),
        n.d(t, "Qc", function () {
          return Kl;
        });
      const y = b("Inject", (e) => ({ token: e })),
        w = b("Optional"),
        S = b("Self"),
        _ = b("SkipSelf");
      var C = (function (e) {
        return (
          (e[(e.Default = 0)] = "Default"),
          (e[(e.Host = 1)] = "Host"),
          (e[(e.Self = 2)] = "Self"),
          (e[(e.SkipSelf = 4)] = "SkipSelf"),
          (e[(e.Optional = 8)] = "Optional"),
          e
        );
      })({});
      function E(e) {
        for (let t in e) if (e[t] === E) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function O(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function x(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function T(e) {
        return {
          factory: e.factory,
          providers: e.providers || [],
          imports: e.imports || [],
        };
      }
      function k(e) {
        return M(e, e[P]) || M(e, e[L]);
      }
      function M(e, t) {
        return t && t.token === e ? t : null;
      }
      function I(e) {
        return e && (e.hasOwnProperty(R) || e.hasOwnProperty(A)) ? e[R] : null;
      }
      const P = E({ "\u0275prov": E }),
        R = E({ "\u0275inj": E }),
        N = E({ "\u0275provFallback": E }),
        L = E({ ngInjectableDef: E }),
        A = E({ ngInjectorDef: E });
      function D(e) {
        if ("string" == typeof e) return e;
        if (Array.isArray(e)) return "[" + e.map(D).join(", ") + "]";
        if (null == e) return "" + e;
        if (e.overriddenName) return "" + e.overriddenName;
        if (e.name) return "" + e.name;
        const t = e.toString();
        if (null == t) return "" + t;
        const n = t.indexOf("\n");
        return -1 === n ? t : t.substring(0, n);
      }
      function j(e, t) {
        return null == e || "" === e
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? e
          : e + " " + t;
      }
      const F = E({ __forward_ref__: E });
      function V(e) {
        return (
          (e.__forward_ref__ = V),
          (e.toString = function () {
            return D(this());
          }),
          e
        );
      }
      function W(e) {
        return z(e) ? e() : e;
      }
      function z(e) {
        return (
          "function" == typeof e &&
          e.hasOwnProperty(F) &&
          e.__forward_ref__ === V
        );
      }
      const X = "undefined" != typeof globalThis && globalThis,
        B = "undefined" != typeof window && window,
        H =
          "undefined" != typeof self &&
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        U = "undefined" != typeof global && global,
        G = X || U || B || H,
        $ = E({ "\u0275cmp": E }),
        q = E({ "\u0275dir": E }),
        K = E({ "\u0275pipe": E }),
        Y = E({ "\u0275mod": E }),
        Z = E({ "\u0275loc": E }),
        Q = E({ "\u0275fac": E }),
        J = E({ __NG_ELEMENT_ID__: E });
      class ee {
        constructor(e, t) {
          (this._desc = e),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof t
              ? (this.__NG_ELEMENT_ID__ = t)
              : void 0 !== t &&
                (this.ɵprov = x({
                  token: this,
                  providedIn: t.providedIn || "root",
                  factory: t.factory,
                }));
        }
        toString() {
          return "InjectionToken " + this._desc;
        }
      }
      const te = new ee("INJECTOR", -1),
        ne = {},
        ie = /\n/gm,
        se = E({ provide: String, useValue: E });
      let re,
        oe = void 0;
      function ae(e) {
        const t = oe;
        return (oe = e), t;
      }
      function le(e) {
        const t = re;
        return (re = e), t;
      }
      function ce(e, t = C.Default) {
        if (void 0 === oe)
          throw new Error("inject() must be called from an injection context");
        return null === oe
          ? de(e, void 0, t)
          : oe.get(e, t & C.Optional ? null : void 0, t);
      }
      function ue(e, t = C.Default) {
        return (re || ce)(W(e), t);
      }
      const he = ue;
      function de(e, t, n) {
        const i = k(e);
        if (i && "root" == i.providedIn)
          return void 0 === i.value ? (i.value = i.factory()) : i.value;
        if (n & C.Optional) return null;
        if (void 0 !== t) return t;
        throw new Error(`Injector: NOT_FOUND [${D(e)}]`);
      }
      function pe(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const i = W(e[n]);
          if (Array.isArray(i)) {
            if (0 === i.length)
              throw new Error("Arguments array must have arguments.");
            let e = void 0,
              n = C.Default;
            for (let t = 0; t < i.length; t++) {
              const s = i[t];
              s instanceof w || "Optional" === s.ngMetadataName || s === w
                ? (n |= C.Optional)
                : s instanceof _ || "SkipSelf" === s.ngMetadataName || s === _
                ? (n |= C.SkipSelf)
                : s instanceof S || "Self" === s.ngMetadataName || s === S
                ? (n |= C.Self)
                : (e = s instanceof y || s === y ? s.token : s);
            }
            t.push(ue(e, n));
          } else t.push(ue(i));
        }
        return t;
      }
      class fe {
        get(e, t = ne) {
          if (t === ne) {
            const t = new Error(`NullInjectorError: No provider for ${D(e)}!`);
            throw ((t.name = "NullInjectorError"), t);
          }
          return t;
        }
      }
      class ge {}
      class me {}
      function be(e, t) {
        e.forEach((e) => (Array.isArray(e) ? be(e, t) : t(e)));
      }
      function ve(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function ye(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function we(e, t) {
        const n = [];
        for (let i = 0; i < e; i++) n.push(t);
        return n;
      }
      function Se(e, t, n) {
        let i = Ce(e, t);
        return (
          i >= 0
            ? (e[1 | i] = n)
            : ((i = ~i),
              (function (e, t, n, i) {
                let s = e.length;
                if (s == t) e.push(n, i);
                else if (1 === s) e.push(i, e[0]), (e[0] = n);
                else {
                  for (s--, e.push(e[s - 1], e[s]); s > t; )
                    (e[s] = e[s - 2]), s--;
                  (e[t] = n), (e[t + 1] = i);
                }
              })(e, i, t, n)),
          i
        );
      }
      function _e(e, t) {
        const n = Ce(e, t);
        if (n >= 0) return e[1 | n];
      }
      function Ce(e, t) {
        return (function (e, t, n) {
          let i = 0,
            s = e.length >> 1;
          for (; s !== i; ) {
            const n = i + ((s - i) >> 1),
              r = e[n << 1];
            if (t === r) return n << 1;
            r > t ? (s = n) : (i = n + 1);
          }
          return ~(s << 1);
        })(e, t);
      }
      const Ee = (function () {
          var e = { OnPush: 0, Default: 1 };
          return (e[e.OnPush] = "OnPush"), (e[e.Default] = "Default"), e;
        })(),
        Oe = (function () {
          var e = { Emulated: 0, Native: 1, None: 2, ShadowDom: 3 };
          return (
            (e[e.Emulated] = "Emulated"),
            (e[e.Native] = "Native"),
            (e[e.None] = "None"),
            (e[e.ShadowDom] = "ShadowDom"),
            e
          );
        })(),
        xe = {},
        Te = [];
      let ke = 0;
      function Me(e) {
        return g(() => {
          const t = e.type,
            n = t.prototype,
            i = {},
            s = {
              type: t,
              providersResolver: null,
              decls: e.decls,
              vars: e.vars,
              factory: null,
              template: e.template || null,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              hostBindings: e.hostBindings || null,
              hostVars: e.hostVars || 0,
              hostAttrs: e.hostAttrs || null,
              contentQueries: e.contentQueries || null,
              declaredInputs: i,
              inputs: null,
              outputs: null,
              exportAs: e.exportAs || null,
              onChanges: null,
              onInit: n.ngOnInit || null,
              doCheck: n.ngDoCheck || null,
              afterContentInit: n.ngAfterContentInit || null,
              afterContentChecked: n.ngAfterContentChecked || null,
              afterViewInit: n.ngAfterViewInit || null,
              afterViewChecked: n.ngAfterViewChecked || null,
              onDestroy: n.ngOnDestroy || null,
              onPush: e.changeDetection === Ee.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: e.selectors || Te,
              viewQuery: e.viewQuery || null,
              features: e.features || null,
              data: e.data || {},
              encapsulation: e.encapsulation || Oe.Emulated,
              id: "c",
              styles: e.styles || Te,
              _: null,
              setInput: null,
              schemas: e.schemas || null,
              tView: null,
            },
            r = e.directives,
            o = e.features,
            a = e.pipes;
          return (
            (s.id += ke++),
            (s.inputs = Ae(e.inputs, i)),
            (s.outputs = Ae(e.outputs)),
            o && o.forEach((e) => e(s)),
            (s.directiveDefs = r
              ? () => ("function" == typeof r ? r() : r).map(Ie)
              : null),
            (s.pipeDefs = a
              ? () => ("function" == typeof a ? a() : a).map(Pe)
              : null),
            s
          );
        });
      }
      function Ie(e) {
        return (
          Fe(e) ||
          (function (e) {
            return e[q] || null;
          })(e)
        );
      }
      function Pe(e) {
        return (function (e) {
          return e[K] || null;
        })(e);
      }
      const Re = {};
      function Ne(e) {
        const t = {
          type: e.type,
          bootstrap: e.bootstrap || Te,
          declarations: e.declarations || Te,
          imports: e.imports || Te,
          exports: e.exports || Te,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        };
        return (
          null != e.id &&
            g(() => {
              Re[e.id] = e.type;
            }),
          t
        );
      }
      function Le(e, t) {
        return g(() => {
          const n = We(e, !0);
          (n.declarations = t.declarations || Te),
            (n.imports = t.imports || Te),
            (n.exports = t.exports || Te);
        });
      }
      function Ae(e, t) {
        if (null == e) return xe;
        const n = {};
        for (const i in e)
          if (e.hasOwnProperty(i)) {
            let s = e[i],
              r = s;
            Array.isArray(s) && ((r = s[1]), (s = s[0])),
              (n[s] = i),
              t && (t[s] = r);
          }
        return n;
      }
      const De = Me;
      function je(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function Fe(e) {
        return e[$] || null;
      }
      function Ve(e, t) {
        return e.hasOwnProperty(Q) ? e[Q] : null;
      }
      function We(e, t) {
        const n = e[Y] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${D(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function ze(e) {
        return Array.isArray(e) && "object" == typeof e[1];
      }
      function Xe(e) {
        return Array.isArray(e) && !0 === e[1];
      }
      function Be(e) {
        return 0 != (8 & e.flags);
      }
      function He(e) {
        return 2 == (2 & e.flags);
      }
      function Ue(e) {
        return 1 == (1 & e.flags);
      }
      function Ge(e) {
        return null !== e.template;
      }
      function $e(e) {
        return 0 != (512 & e[2]);
      }
      let qe = void 0;
      function Ke(e) {
        qe = e;
      }
      function Ye() {
        return void 0 !== qe
          ? qe
          : "undefined" != typeof document
          ? document
          : void 0;
      }
      function Ze(e) {
        return !!e.listen;
      }
      const Qe = { createRenderer: (e, t) => Ye() };
      function Je(e) {
        for (; Array.isArray(e); ) e = e[0];
        return e;
      }
      function et(e, t) {
        return Je(t[e + 19]);
      }
      function tt(e, t) {
        return Je(t[e.index]);
      }
      function nt(e, t) {
        return e.data[t + 19];
      }
      function it(e, t) {
        return e[t + 19];
      }
      function st(e, t) {
        const n = t[e];
        return ze(n) ? n : n[0];
      }
      function rt(e) {
        const t = (function (e) {
          return e.__ngContext__ || null;
        })(e);
        return t ? (Array.isArray(t) ? t : t.lView) : null;
      }
      function ot(e) {
        return 4 == (4 & e[2]);
      }
      function at(e) {
        return 128 == (128 & e[2]);
      }
      function lt(e, t) {
        return null === e || null == t ? null : e[t];
      }
      function ct(e) {
        e[18] = 0;
      }
      const ut = {
        lFrame: It(null),
        bindingsEnabled: !0,
        checkNoChangesMode: !1,
      };
      function ht() {
        return ut.bindingsEnabled;
      }
      function dt() {
        return ut.lFrame.lView;
      }
      function pt() {
        return ut.lFrame.tView;
      }
      function ft(e) {
        ut.lFrame.contextLView = e;
      }
      function gt() {
        return ut.lFrame.previousOrParentTNode;
      }
      function mt(e, t) {
        (ut.lFrame.previousOrParentTNode = e), (ut.lFrame.isParent = t);
      }
      function bt() {
        return ut.lFrame.isParent;
      }
      function vt() {
        ut.lFrame.isParent = !1;
      }
      function yt() {
        return ut.checkNoChangesMode;
      }
      function wt(e) {
        ut.checkNoChangesMode = e;
      }
      function St() {
        const e = ut.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function _t() {
        return ut.lFrame.bindingIndex++;
      }
      function Ct(e) {
        const t = ut.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function Et(e, t) {
        const n = ut.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e),
          (n.currentDirectiveIndex = t);
      }
      function Ot() {
        return ut.lFrame.currentQueryIndex;
      }
      function xt(e) {
        ut.lFrame.currentQueryIndex = e;
      }
      function Tt(e, t) {
        const n = Mt();
        (ut.lFrame = n), (n.previousOrParentTNode = t), (n.lView = e);
      }
      function kt(e, t) {
        const n = Mt(),
          i = e[1];
        (ut.lFrame = n),
          (n.previousOrParentTNode = t),
          (n.lView = e),
          (n.tView = i),
          (n.contextLView = e),
          (n.bindingIndex = i.bindingStartIndex);
      }
      function Mt() {
        const e = ut.lFrame,
          t = null === e ? null : e.child;
        return null === t ? It(e) : t;
      }
      function It(e) {
        const t = {
          previousOrParentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: 0,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentSanitizer: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
        };
        return null !== e && (e.child = t), t;
      }
      function Pt() {
        const e = ut.lFrame;
        return (
          (ut.lFrame = e.parent),
          (e.previousOrParentTNode = null),
          (e.lView = null),
          e
        );
      }
      const Rt = Pt;
      function Nt() {
        const e = Pt();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = 0),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.currentSanitizer = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function Lt() {
        return ut.lFrame.selectedIndex;
      }
      function At(e) {
        ut.lFrame.selectedIndex = e;
      }
      function Dt() {
        const e = ut.lFrame;
        return nt(e.tView, e.selectedIndex);
      }
      function jt(e, t) {
        for (let n = t.directiveStart, i = t.directiveEnd; n < i; n++) {
          const t = e.data[n];
          t.afterContentInit &&
            (e.contentHooks || (e.contentHooks = [])).push(
              -n,
              t.afterContentInit
            ),
            t.afterContentChecked &&
              ((e.contentHooks || (e.contentHooks = [])).push(
                n,
                t.afterContentChecked
              ),
              (e.contentCheckHooks || (e.contentCheckHooks = [])).push(
                n,
                t.afterContentChecked
              )),
            t.afterViewInit &&
              (e.viewHooks || (e.viewHooks = [])).push(-n, t.afterViewInit),
            t.afterViewChecked &&
              ((e.viewHooks || (e.viewHooks = [])).push(n, t.afterViewChecked),
              (e.viewCheckHooks || (e.viewCheckHooks = [])).push(
                n,
                t.afterViewChecked
              )),
            null != t.onDestroy &&
              (e.destroyHooks || (e.destroyHooks = [])).push(n, t.onDestroy);
        }
      }
      function Ft(e, t, n) {
        zt(e, t, 3, n);
      }
      function Vt(e, t, n, i) {
        (3 & e[2]) === n && zt(e, t, n, i);
      }
      function Wt(e, t) {
        let n = e[2];
        (3 & n) === t && ((n &= 1023), (n += 1), (e[2] = n));
      }
      function zt(e, t, n, i) {
        const s = null != i ? i : -1;
        let r = 0;
        for (let o = void 0 !== i ? 65535 & e[18] : 0; o < t.length; o++)
          if ("number" == typeof t[o + 1]) {
            if (((r = t[o]), null != i && r >= i)) break;
          } else
            t[o] < 0 && (e[18] += 65536),
              (r < s || -1 == s) &&
                (Xt(e, n, t, o), (e[18] = (4294901760 & e[18]) + o + 2)),
              o++;
      }
      function Xt(e, t, n, i) {
        const s = n[i] < 0,
          r = n[i + 1],
          o = e[s ? -n[i] : n[i]];
        s
          ? e[2] >> 10 < e[18] >> 16 &&
            (3 & e[2]) === t &&
            ((e[2] += 1024), r.call(o))
          : r.call(o);
      }
      class Bt {
        constructor(e, t, n) {
          (this.factory = e),
            (this.resolving = !1),
            (this.canSeeViewProviders = t),
            (this.injectImpl = n);
        }
      }
      function Ht(e, t, n) {
        const i = Ze(e);
        let s = 0;
        for (; s < n.length; ) {
          const r = n[s];
          if ("number" == typeof r) {
            if (0 !== r) break;
            s++;
            const o = n[s++],
              a = n[s++],
              l = n[s++];
            i ? e.setAttribute(t, a, l, o) : t.setAttributeNS(o, a, l);
          } else {
            const o = r,
              a = n[++s];
            Gt(o)
              ? i && e.setProperty(t, o, a)
              : i
              ? e.setAttribute(t, o, a)
              : t.setAttribute(o, a),
              s++;
          }
        }
        return s;
      }
      function Ut(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function Gt(e) {
        return 64 === e.charCodeAt(0);
      }
      function $t(e, t) {
        if (null === t || 0 === t.length);
        else if (null === e || 0 === e.length) e = t.slice();
        else {
          let n = -1;
          for (let i = 0; i < t.length; i++) {
            const s = t[i];
            "number" == typeof s
              ? (n = s)
              : 0 === n ||
                qt(e, n, s, null, -1 === n || 2 === n ? t[++i] : null);
          }
        }
        return e;
      }
      function qt(e, t, n, i, s) {
        let r = 0,
          o = e.length;
        if (-1 === t) o = -1;
        else
          for (; r < e.length; ) {
            const n = e[r++];
            if ("number" == typeof n) {
              if (n === t) {
                o = -1;
                break;
              }
              if (n > t) {
                o = r - 1;
                break;
              }
            }
          }
        for (; r < e.length; ) {
          const t = e[r];
          if ("number" == typeof t) break;
          if (t === n) {
            if (null === i) return void (null !== s && (e[r + 1] = s));
            if (i === e[r + 1]) return void (e[r + 2] = s);
          }
          r++, null !== i && r++, null !== s && r++;
        }
        -1 !== o && (e.splice(o, 0, t), (r = o + 1)),
          e.splice(r++, 0, n),
          null !== i && e.splice(r++, 0, i),
          null !== s && e.splice(r++, 0, s);
      }
      function Kt(e) {
        return -1 !== e;
      }
      function Yt(e) {
        return 32767 & e;
      }
      function Zt(e) {
        return e >> 16;
      }
      function Qt(e, t) {
        let n = Zt(e),
          i = t;
        for (; n > 0; ) (i = i[15]), n--;
        return i;
      }
      function Jt(e) {
        return "string" == typeof e ? e : null == e ? "" : "" + e;
      }
      function en(e) {
        return "function" == typeof e
          ? e.name || e.toString()
          : "object" == typeof e && null != e && "function" == typeof e.type
          ? e.type.name || e.type.toString()
          : Jt(e);
      }
      const tn = (() =>
        (
          ("undefined" != typeof requestAnimationFrame &&
            requestAnimationFrame) ||
          setTimeout
        ).bind(G))();
      function nn(e) {
        return { name: "window", target: e.ownerDocument.defaultView };
      }
      function sn(e) {
        return { name: "document", target: e.ownerDocument };
      }
      function rn(e) {
        return e instanceof Function ? e() : e;
      }
      let on = !0;
      function an(e) {
        const t = on;
        return (on = e), t;
      }
      let ln = 0;
      function cn(e, t) {
        const n = hn(e, t);
        if (-1 !== n) return n;
        const i = t[1];
        i.firstCreatePass &&
          ((e.injectorIndex = t.length),
          un(i.data, e),
          un(t, null),
          un(i.blueprint, null));
        const s = dn(e, t),
          r = e.injectorIndex;
        if (Kt(s)) {
          const e = Yt(s),
            n = Qt(s, t),
            i = n[1].data;
          for (let s = 0; s < 8; s++) t[r + s] = n[e + s] | i[e + s];
        }
        return (t[r + 8] = s), r;
      }
      function un(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function hn(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null == t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function dn(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = t[6],
          i = 1;
        for (; n && -1 === n.injectorIndex; )
          (n = (t = t[15]) ? t[6] : null), i++;
        return n ? n.injectorIndex | (i << 16) : -1;
      }
      function pn(e, t, n) {
        !(function (e, t, n) {
          let i = "string" != typeof n ? n[J] : n.charCodeAt(0) || 0;
          null == i && (i = n[J] = ln++);
          const s = 255 & i,
            r = 1 << s,
            o = 64 & s,
            a = 32 & s,
            l = t.data;
          128 & s
            ? o
              ? a
                ? (l[e + 7] |= r)
                : (l[e + 6] |= r)
              : a
              ? (l[e + 5] |= r)
              : (l[e + 4] |= r)
            : o
            ? a
              ? (l[e + 3] |= r)
              : (l[e + 2] |= r)
            : a
            ? (l[e + 1] |= r)
            : (l[e] |= r);
        })(e, t, n);
      }
      function fn(e, t, n, i = C.Default, s) {
        if (null !== e) {
          const s = (function (e) {
            if ("string" == typeof e) return e.charCodeAt(0) || 0;
            const t = e[J];
            return "number" == typeof t && t > 0 ? 255 & t : t;
          })(n);
          if ("function" == typeof s) {
            Tt(t, e);
            try {
              const e = s();
              if (null != e || i & C.Optional) return e;
              throw new Error(`No provider for ${en(n)}!`);
            } finally {
              Rt();
            }
          } else if ("number" == typeof s) {
            if (-1 === s) return new Sn(e, t);
            let r = null,
              o = hn(e, t),
              a = -1,
              l = i & C.Host ? t[16][6] : null;
            for (
              (-1 === o || i & C.SkipSelf) &&
              ((a = -1 === o ? dn(e, t) : t[o + 8]),
              wn(i, !1) ? ((r = t[1]), (o = Yt(a)), (t = Qt(a, t))) : (o = -1));
              -1 !== o;

            ) {
              a = t[o + 8];
              const e = t[1];
              if (yn(s, o, e.data)) {
                const e = mn(o, t, n, r, i, l);
                if (e !== gn) return e;
              }
              wn(i, t[1].data[o + 8] === l) && yn(s, o, t)
                ? ((r = e), (o = Yt(a)), (t = Qt(a, t)))
                : (o = -1);
            }
          }
        }
        if (
          (i & C.Optional && void 0 === s && (s = null),
          0 == (i & (C.Self | C.Host)))
        ) {
          const e = t[9],
            r = le(void 0);
          try {
            return e ? e.get(n, s, i & C.Optional) : de(n, s, i & C.Optional);
          } finally {
            le(r);
          }
        }
        if (i & C.Optional) return s;
        throw new Error(`NodeInjector: NOT_FOUND [${en(n)}]`);
      }
      const gn = {};
      function mn(e, t, n, i, s, r) {
        const o = t[1],
          a = o.data[e + 8],
          l = bn(
            a,
            o,
            n,
            null == i ? He(a) && on : i != o && 3 === a.type,
            s & C.Host && r === a
          );
        return null !== l ? vn(t, o, l, a) : gn;
      }
      function bn(e, t, n, i, s) {
        const r = e.providerIndexes,
          o = t.data,
          a = 65535 & r,
          l = e.directiveStart,
          c = r >> 16,
          u = s ? a + c : e.directiveEnd;
        for (let h = i ? a : a + c; h < u; h++) {
          const e = o[h];
          if ((h < l && n === e) || (h >= l && e.type === n)) return h;
        }
        if (s) {
          const e = o[l];
          if (e && Ge(e) && e.type === n) return l;
        }
        return null;
      }
      function vn(e, t, n, i) {
        let s = e[n];
        const r = t.data;
        if (s instanceof Bt) {
          const o = s;
          if (o.resolving) throw new Error("Circular dep for " + en(r[n]));
          const a = an(o.canSeeViewProviders);
          let l;
          (o.resolving = !0), o.injectImpl && (l = le(o.injectImpl)), Tt(e, i);
          try {
            (s = e[n] = o.factory(void 0, r, e, i)),
              t.firstCreatePass &&
                n >= i.directiveStart &&
                (function (e, t, n) {
                  const { onChanges: i, onInit: s, doCheck: r } = t;
                  i &&
                    ((n.preOrderHooks || (n.preOrderHooks = [])).push(e, i),
                    (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(
                      e,
                      i
                    )),
                    s &&
                      (n.preOrderHooks || (n.preOrderHooks = [])).push(-e, s),
                    r &&
                      ((n.preOrderHooks || (n.preOrderHooks = [])).push(e, r),
                      (
                        n.preOrderCheckHooks || (n.preOrderCheckHooks = [])
                      ).push(e, r));
                })(n, r[n], t);
          } finally {
            o.injectImpl && le(l), an(a), (o.resolving = !1), Rt();
          }
        }
        return s;
      }
      function yn(e, t, n) {
        const i = 64 & e,
          s = 32 & e;
        let r;
        return (
          (r =
            128 & e
              ? i
                ? s
                  ? n[t + 7]
                  : n[t + 6]
                : s
                ? n[t + 5]
                : n[t + 4]
              : i
              ? s
                ? n[t + 3]
                : n[t + 2]
              : s
              ? n[t + 1]
              : n[t]),
          !!(r & (1 << e))
        );
      }
      function wn(e, t) {
        return !(e & C.Self || (e & C.Host && t));
      }
      class Sn {
        constructor(e, t) {
          (this._tNode = e), (this._lView = t);
        }
        get(e, t) {
          return fn(this._tNode, this._lView, e, void 0, t);
        }
      }
      function _n(e) {
        return g(() => {
          const t = Object.getPrototypeOf(e.prototype).constructor,
            n =
              t[Q] ||
              (function e(t) {
                const n = t;
                if (z(t))
                  return () => {
                    const t = e(W(n));
                    return t ? t() : null;
                  };
                let i = Ve(n);
                if (null === i) {
                  const e = I(n);
                  i = e && e.factory;
                }
                return i || null;
              })(t);
          return null !== n ? n : (e) => new e();
        });
      }
      function Cn(e) {
        return e.ngDebugContext;
      }
      function En(e) {
        return e.ngOriginalError;
      }
      function On(e, ...t) {
        e.error(...t);
      }
      class xn {
        constructor() {
          this._console = console;
        }
        handleError(e) {
          const t = this._findOriginalError(e),
            n = this._findContext(e),
            i = (function (e) {
              return e.ngErrorLogger || On;
            })(e);
          i(this._console, "ERROR", e),
            t && i(this._console, "ORIGINAL ERROR", t),
            n && i(this._console, "ERROR CONTEXT", n);
        }
        _findContext(e) {
          return e ? (Cn(e) ? Cn(e) : this._findContext(En(e))) : null;
        }
        _findOriginalError(e) {
          let t = En(e);
          for (; t && En(t); ) t = En(t);
          return t;
        }
      }
      class Tn {
        constructor(e) {
          this.changingThisBreaksApplicationSecurity = e;
        }
        toString() {
          return (
            "SafeValue must use [property]=binding: " +
            this.changingThisBreaksApplicationSecurity +
            " (see http://g.co/ng/security#xss)"
          );
        }
      }
      class kn extends Tn {
        getTypeName() {
          return "HTML";
        }
      }
      class Mn extends Tn {
        getTypeName() {
          return "Style";
        }
      }
      class In extends Tn {
        getTypeName() {
          return "Script";
        }
      }
      class Pn extends Tn {
        getTypeName() {
          return "URL";
        }
      }
      class Rn extends Tn {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function Nn(e) {
        return e instanceof Tn ? e.changingThisBreaksApplicationSecurity : e;
      }
      function Ln(e, t) {
        const n = An(e);
        if (null != n && n !== t) {
          if ("ResourceURL" === n && "URL" === t) return !0;
          throw new Error(
            `Required a safe ${t}, got a ${n} (see http://g.co/ng/security#xss)`
          );
        }
        return n === t;
      }
      function An(e) {
        return (e instanceof Tn && e.getTypeName()) || null;
      }
      function Dn(e) {
        return new kn(e);
      }
      function jn(e) {
        return new Mn(e);
      }
      function Fn(e) {
        return new In(e);
      }
      function Vn(e) {
        return new Pn(e);
      }
      function Wn(e) {
        return new Rn(e);
      }
      let zn = !0,
        Xn = !1;
      function Bn() {
        return (Xn = !0), zn;
      }
      function Hn() {
        if (Xn)
          throw new Error("Cannot enable prod mode after platform setup.");
        zn = !1;
      }
      class Un {
        constructor(e) {
          (this.defaultDoc = e),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              ));
          let t = this.inertDocument.body;
          if (null == t) {
            const e = this.inertDocument.createElement("html");
            this.inertDocument.appendChild(e),
              (t = this.inertDocument.createElement("body")),
              e.appendChild(t);
          }
          (t.innerHTML =
            '<svg><g onload="this.parentNode.remove()"></g></svg>'),
            !t.querySelector || t.querySelector("svg")
              ? ((t.innerHTML =
                  '<svg><p><style><img src="</style><img src=x onerror=alert(1)//">'),
                (this.getInertBodyElement =
                  t.querySelector &&
                  t.querySelector("svg img") &&
                  (function () {
                    try {
                      return !!window.DOMParser;
                    } catch (e) {
                      return !1;
                    }
                  })()
                    ? this.getInertBodyElement_DOMParser
                    : this.getInertBodyElement_InertDocument))
              : (this.getInertBodyElement = this.getInertBodyElement_XHR);
        }
        getInertBodyElement_XHR(e) {
          e = "<body><remove></remove>" + e + "</body>";
          try {
            e = encodeURI(e);
          } catch (i) {
            return null;
          }
          const t = new XMLHttpRequest();
          (t.responseType = "document"),
            t.open("GET", "data:text/html;charset=utf-8," + e, !1),
            t.send(void 0);
          const n = t.response.body;
          return n.removeChild(n.firstChild), n;
        }
        getInertBodyElement_DOMParser(e) {
          e = "<body><remove></remove>" + e + "</body>";
          try {
            const t = new window.DOMParser().parseFromString(
              e,
              "text/html"
            ).body;
            return t.removeChild(t.firstChild), t;
          } catch (t) {
            return null;
          }
        }
        getInertBodyElement_InertDocument(e) {
          const t = this.inertDocument.createElement("template");
          if ("content" in t) return (t.innerHTML = e), t;
          const n = this.inertDocument.createElement("body");
          return (
            (n.innerHTML = e),
            this.defaultDoc.documentMode && this.stripCustomNsAttrs(n),
            n
          );
        }
        stripCustomNsAttrs(e) {
          const t = e.attributes;
          for (let i = t.length - 1; 0 < i; i--) {
            const n = t.item(i).name;
            ("xmlns:ns1" !== n && 0 !== n.indexOf("ns1:")) ||
              e.removeAttribute(n);
          }
          let n = e.firstChild;
          for (; n; )
            n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n),
              (n = n.nextSibling);
        }
      }
      const Gn = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
        $n =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function qn(e) {
        return (e = String(e)).match(Gn) || e.match($n)
          ? e
          : (Bn() &&
              console.warn(
                `WARNING: sanitizing unsafe URL value ${e} (see http://g.co/ng/security#xss)`
              ),
            "unsafe:" + e);
      }
      function Kn(e) {
        const t = {};
        for (const n of e.split(",")) t[n] = !0;
        return t;
      }
      function Yn(...e) {
        const t = {};
        for (const n of e)
          for (const e in n) n.hasOwnProperty(e) && (t[e] = !0);
        return t;
      }
      const Zn = Kn("area,br,col,hr,img,wbr"),
        Qn = Kn("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        Jn = Kn("rp,rt"),
        ei = Yn(Jn, Qn),
        ti = Yn(
          Zn,
          Yn(
            Qn,
            Kn(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          Yn(
            Jn,
            Kn(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          ei
        ),
        ni = Kn("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        ii = Kn("srcset"),
        si = Yn(
          ni,
          ii,
          Kn(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          Kn(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        ri = Kn("script,style,template");
      class oi {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(e) {
          let t = e.firstChild,
            n = !0;
          for (; t; )
            if (
              (t.nodeType === Node.ELEMENT_NODE
                ? (n = this.startElement(t))
                : t.nodeType === Node.TEXT_NODE
                ? this.chars(t.nodeValue)
                : (this.sanitizedSomething = !0),
              n && t.firstChild)
            )
              t = t.firstChild;
            else
              for (; t; ) {
                t.nodeType === Node.ELEMENT_NODE && this.endElement(t);
                let e = this.checkClobberedElement(t, t.nextSibling);
                if (e) {
                  t = e;
                  break;
                }
                t = this.checkClobberedElement(t, t.parentNode);
              }
          return this.buf.join("");
        }
        startElement(e) {
          const t = e.nodeName.toLowerCase();
          if (!ti.hasOwnProperty(t))
            return (this.sanitizedSomething = !0), !ri.hasOwnProperty(t);
          this.buf.push("<"), this.buf.push(t);
          const n = e.attributes;
          for (let s = 0; s < n.length; s++) {
            const e = n.item(s),
              t = e.name,
              r = t.toLowerCase();
            if (!si.hasOwnProperty(r)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let o = e.value;
            ni[r] && (o = qn(o)),
              ii[r] &&
                ((i = o),
                (o = (i = String(i))
                  .split(",")
                  .map((e) => qn(e.trim()))
                  .join(", "))),
              this.buf.push(" ", t, '="', ci(o), '"');
          }
          var i;
          return this.buf.push(">"), !0;
        }
        endElement(e) {
          const t = e.nodeName.toLowerCase();
          ti.hasOwnProperty(t) &&
            !Zn.hasOwnProperty(t) &&
            (this.buf.push("</"), this.buf.push(t), this.buf.push(">"));
        }
        chars(e) {
          this.buf.push(ci(e));
        }
        checkClobberedElement(e, t) {
          if (
            t &&
            (e.compareDocumentPosition(t) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              "Failed to sanitize html because the element is clobbered: " +
                e.outerHTML
            );
          return t;
        }
      }
      const ai = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        li = /([^\#-~ |!])/g;
      function ci(e) {
        return e
          .replace(/&/g, "&amp;")
          .replace(ai, function (e) {
            return (
              "&#" +
              (1024 * (e.charCodeAt(0) - 55296) +
                (e.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(li, function (e) {
            return "&#" + e.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let ui;
      function hi(e, t) {
        let n = null;
        try {
          ui = ui || new Un(e);
          let i = t ? String(t) : "";
          n = ui.getInertBodyElement(i);
          let s = 5,
            r = i;
          do {
            if (0 === s)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            s--, (i = r), (r = n.innerHTML), (n = ui.getInertBodyElement(i));
          } while (i !== r);
          const o = new oi(),
            a = o.sanitizeChildren(di(n) || n);
          return (
            Bn() &&
              o.sanitizedSomething &&
              console.warn(
                "WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss"
              ),
            a
          );
        } finally {
          if (n) {
            const e = di(n) || n;
            for (; e.firstChild; ) e.removeChild(e.firstChild);
          }
        }
      }
      function di(e) {
        return "content" in e &&
          (function (e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      const pi = (function () {
          var e = {
            NONE: 0,
            HTML: 1,
            STYLE: 2,
            SCRIPT: 3,
            URL: 4,
            RESOURCE_URL: 5,
          };
          return (
            (e[e.NONE] = "NONE"),
            (e[e.HTML] = "HTML"),
            (e[e.STYLE] = "STYLE"),
            (e[e.SCRIPT] = "SCRIPT"),
            (e[e.URL] = "URL"),
            (e[e.RESOURCE_URL] = "RESOURCE_URL"),
            e
          );
        })(),
        fi = new RegExp(
          "^([-,.\"'%_!# a-zA-Z0-9]+|(?:(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?|(?:rgb|hsl)a?|(?:repeating-)?(?:linear|radial)-gradient|(?:attr|calc|var))\\([-0-9.%, #a-zA-Z]+\\))$",
          "g"
        ),
        gi = /^url\(([^)]+)\)$/;
      function mi(e) {
        if (!(e = String(e).trim())) return "";
        const t = e.match(gi);
        return (t && qn(t[1]) === t[1]) ||
          (e.match(fi) &&
            (function (e) {
              let t = !0,
                n = !0;
              for (let i = 0; i < e.length; i++) {
                const s = e.charAt(i);
                "'" === s && n ? (t = !t) : '"' === s && t && (n = !n);
              }
              return t && n;
            })(e))
          ? e
          : (Bn() &&
              console.warn(
                `WARNING: sanitizing unsafe style value ${e} (see http://g.co/ng/security#xss).`
              ),
            "unsafe");
      }
      function bi(e) {
        const t = _i();
        return t
          ? t.sanitize(pi.HTML, e) || ""
          : Ln(e, "HTML")
          ? Nn(e)
          : hi(Ye(), Jt(e));
      }
      function vi(e) {
        const t = _i();
        return t
          ? t.sanitize(pi.STYLE, e) || ""
          : Ln(e, "Style")
          ? Nn(e)
          : mi(Jt(e));
      }
      function yi(e) {
        const t = _i();
        return t
          ? t.sanitize(pi.URL, e) || ""
          : Ln(e, "URL")
          ? Nn(e)
          : qn(Jt(e));
      }
      const wi = function (e, t, n) {
        if (void 0 === t && void 0 === n) return vi(e);
        let i = !0;
        return 1 & (n = n || 3) && (i = Si(e)), 2 & n ? (i ? vi(t) : Nn(t)) : i;
      };
      function Si(e) {
        return (
          "background-image" === e ||
          "backgroundImage" === e ||
          "background" === e ||
          "border-image" === e ||
          "borderImage" === e ||
          "border-image-source" === e ||
          "borderImageSource" === e ||
          "filter" === e ||
          "list-style" === e ||
          "listStyle" === e ||
          "list-style-image" === e ||
          "listStyleImage" === e ||
          "clip-path" === e ||
          "clipPath" === e
        );
      }
      function _i() {
        const e = dt();
        return e && e[12];
      }
      function Ci(e, t) {
        e.__ngContext__ = t;
      }
      function Ei(e) {
        throw new Error(
          "Multiple components match node with tagname " + e.tagName
        );
      }
      function Oi() {
        throw new Error("Cannot mix multi providers and regular providers");
      }
      function xi(e, t, n) {
        let i = e.length;
        for (;;) {
          const s = e.indexOf(t, n);
          if (-1 === s) return s;
          if (0 === s || e.charCodeAt(s - 1) <= 32) {
            const n = t.length;
            if (s + n === i || e.charCodeAt(s + n) <= 32) return s;
          }
          n = s + 1;
        }
      }
      function Ti(e, t, n) {
        let i = 0;
        for (; i < e.length; ) {
          let s = e[i++];
          if (n && "class" === s) {
            if (((s = e[i]), -1 !== xi(s.toLowerCase(), t, 0))) return !0;
          } else if (1 === s) {
            for (; i < e.length && "string" == typeof (s = e[i++]); )
              if (s.toLowerCase() === t) return !0;
            return !1;
          }
        }
        return !1;
      }
      function ki(e, t, n) {
        return t === (0 !== e.type || n ? e.tagName : "ng-template");
      }
      function Mi(e, t, n) {
        let i = 4;
        const s = e.attrs || [],
          r = (function (e) {
            for (let t = 0; t < e.length; t++) if (Ut(e[t])) return t;
            return e.length;
          })(s);
        let o = !1;
        for (let a = 0; a < t.length; a++) {
          const l = t[a];
          if ("number" != typeof l) {
            if (!o)
              if (4 & i) {
                if (
                  ((i = 2 | (1 & i)),
                  ("" !== l && !ki(e, l, n)) || ("" === l && 1 === t.length))
                ) {
                  if (Ii(i)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & i ? l : t[++a];
                if (8 & i && null !== e.attrs) {
                  if (!Ti(e.attrs, c, n)) {
                    if (Ii(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const u = Pi(
                  8 & i ? "class" : l,
                  s,
                  0 == e.type && "ng-template" !== e.tagName,
                  n
                );
                if (-1 === u) {
                  if (Ii(i)) return !1;
                  o = !0;
                  continue;
                }
                if ("" !== c) {
                  let e;
                  e = u > r ? "" : s[u + 1].toLowerCase();
                  const t = 8 & i ? e : null;
                  if ((t && -1 !== xi(t, c, 0)) || (2 & i && c !== e)) {
                    if (Ii(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !Ii(i) && !Ii(l)) return !1;
            if (o && Ii(l)) continue;
            (o = !1), (i = l | (1 & i));
          }
        }
        return Ii(i) || o;
      }
      function Ii(e) {
        return 0 == (1 & e);
      }
      function Pi(e, t, n, i) {
        if (null === t) return -1;
        let s = 0;
        if (i || !n) {
          let n = !1;
          for (; s < t.length; ) {
            const i = t[s];
            if (i === e) return s;
            if (3 === i || 6 === i) n = !0;
            else {
              if (1 === i || 2 === i) {
                let e = t[++s];
                for (; "string" == typeof e; ) e = t[++s];
                continue;
              }
              if (4 === i) break;
              if (0 === i) {
                s += 4;
                continue;
              }
            }
            s += n ? 1 : 2;
          }
          return -1;
        }
        return (function (e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              if (e[n] === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function Ri(e, t, n = !1) {
        for (let i = 0; i < t.length; i++) if (Mi(e, t[i], n)) return !0;
        return !1;
      }
      function Ni(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const i = t[n];
          if (e.length === i.length) {
            for (let t = 0; t < e.length; t++) if (e[t] !== i[t]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function Li(e, t) {
        return e ? ":not(" + t.trim() + ")" : t;
      }
      function Ai(e) {
        let t = e[0],
          n = 1,
          i = 2,
          s = "",
          r = !1;
        for (; n < e.length; ) {
          let o = e[n];
          if ("string" == typeof o)
            if (2 & i) {
              const t = e[++n];
              s += "[" + o + (t.length > 0 ? '="' + t + '"' : "") + "]";
            } else 8 & i ? (s += "." + o) : 4 & i && (s += " " + o);
          else
            "" === s || Ii(o) || ((t += Li(r, s)), (s = "")),
              (i = o),
              (r = r || !Ii(i));
          n++;
        }
        return "" !== s && (t += Li(r, s)), t;
      }
      const Di = {};
      function ji(e) {
        const t = e[3];
        return Xe(t) ? t[3] : t;
      }
      function Fi(e) {
        Vi(pt(), dt(), Lt() + e, yt());
      }
      function Vi(e, t, n, i) {
        if (!i)
          if (3 == (3 & t[2])) {
            const i = e.preOrderCheckHooks;
            null !== i && Ft(t, i, n);
          } else {
            const i = e.preOrderHooks;
            null !== i && Vt(t, i, 0, n);
          }
        At(n);
      }
      function Wi(e, t) {
        return (e << 17) | (t << 2);
      }
      function zi(e) {
        return (e >> 17) & 32767;
      }
      function Xi(e) {
        return 2 | e;
      }
      function Bi(e) {
        return (131068 & e) >> 2;
      }
      function Hi(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function Ui(e) {
        return 1 | e;
      }
      function Gi(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const s = n[i],
              r = n[i + 1];
            if (-1 !== r) {
              const n = e.data[r];
              xt(s), n.contentQueries(2, t[r], r);
            }
          }
      }
      function $i(e, t, n) {
        return Ze(t)
          ? t.createElement(e, n)
          : null === n
          ? t.createElement(e)
          : t.createElementNS(n, e);
      }
      function qi(e, t, n, i, s, r, o, a, l, c) {
        const u = t.blueprint.slice();
        return (
          (u[0] = s),
          (u[2] = 140 | i),
          ct(u),
          (u[3] = u[15] = e),
          (u[8] = n),
          (u[10] = o || (e && e[10])),
          (u[11] = a || (e && e[11])),
          (u[12] = l || (e && e[12]) || null),
          (u[9] = c || (e && e[9]) || null),
          (u[6] = r),
          (u[16] = 2 == t.type ? e[16] : u),
          u
        );
      }
      function Ki(e, t, n, i, s, r) {
        const o = n + 19,
          a =
            e.data[o] ||
            (function (e, t, n, i, s, r) {
              const o = gt(),
                a = bt(),
                l = a ? o : o && o.parent,
                c = (e.data[n] = rs(0, l && l !== t ? l : null, i, n, s, r));
              return (
                null === e.firstChild && (e.firstChild = c),
                o &&
                  (!a || null != o.child || (null === c.parent && 2 !== o.type)
                    ? a || (o.next = c)
                    : (o.child = c)),
                c
              );
            })(e, t, o, i, s, r);
        return mt(a, !0), a;
      }
      function Yi(e, t, n) {
        kt(t, t[6]);
        try {
          const i = e.viewQuery;
          null !== i && ks(1, i, n);
          const s = e.template;
          null !== s && Ji(e, t, s, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && Gi(e, t),
            e.staticViewQueries && ks(2, e.viewQuery, n);
          const r = e.components;
          null !== r &&
            (function (e, t) {
              for (let n = 0; n < t.length; n++) Cs(e, t[n]);
            })(t, r);
        } finally {
          (t[2] &= -5), Nt();
        }
      }
      function Zi(e, t, n, i) {
        const s = t[2];
        if (256 == (256 & s)) return;
        kt(t, t[6]);
        const r = yt();
        try {
          ct(t),
            (ut.lFrame.bindingIndex = e.bindingStartIndex),
            null !== n && Ji(e, t, n, 2, i);
          const o = 3 == (3 & s);
          if (!r)
            if (o) {
              const n = e.preOrderCheckHooks;
              null !== n && Ft(t, n, null);
            } else {
              const n = e.preOrderHooks;
              null !== n && Vt(t, n, 0, null), Wt(t, 0);
            }
          if (
            ((function (e) {
              let t = e[13];
              for (; null !== t; ) {
                let n;
                if (Xe(t) && (n = t[2]) >> 1 == -1) {
                  for (let e = 9; e < t.length; e++) {
                    const n = t[e],
                      i = n[1];
                    at(n) && Zi(i, n, i.template, n[8]);
                  }
                  0 != (1 & n) && Ss(t, e[16]);
                }
                t = t[4];
              }
            })(t),
            null !== e.contentQueries && Gi(e, t),
            !r)
          )
            if (o) {
              const n = e.contentCheckHooks;
              null !== n && Ft(t, n);
            } else {
              const n = e.contentHooks;
              null !== n && Vt(t, n, 1), Wt(t, 1);
            }
          !(function (e, t) {
            try {
              const n = e.expandoInstructions;
              if (null !== n) {
                let i = e.expandoStartIndex,
                  s = -1,
                  r = -1;
                for (let e = 0; e < n.length; e++) {
                  const o = n[e];
                  "number" == typeof o
                    ? o <= 0
                      ? ((r = 0 - o), At(r), (i += 9 + n[++e]), (s = i))
                      : (i += o)
                    : (null !== o && (Et(i, s), o(2, t[s])), s++);
                }
              }
            } finally {
              At(-1);
            }
          })(e, t);
          const a = e.components;
          null !== a &&
            (function (e, t) {
              for (let n = 0; n < t.length; n++) _s(e, t[n]);
            })(t, a);
          const l = e.viewQuery;
          if ((null !== l && ks(2, l, i), !r))
            if (o) {
              const n = e.viewCheckHooks;
              null !== n && Ft(t, n);
            } else {
              const n = e.viewHooks;
              null !== n && Vt(t, n, 2), Wt(t, 2);
            }
          !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
            r || (t[2] &= -73);
        } finally {
          Nt();
        }
      }
      function Qi(e, t, n, i) {
        const s = t[10],
          r = !yt(),
          o = ot(t);
        try {
          r && !o && s.begin && s.begin(), o && Yi(e, t, i), Zi(e, t, n, i);
        } finally {
          r && !o && s.end && s.end();
        }
      }
      function Ji(e, t, n, i, s) {
        const r = Lt();
        try {
          At(-1), 2 & i && t.length > 19 && Vi(e, t, 0, yt()), n(i, s);
        } finally {
          At(r);
        }
      }
      function es(e, t, n) {
        if (Be(t)) {
          const i = t.directiveEnd;
          for (let s = t.directiveStart; s < i; s++) {
            const t = e.data[s];
            t.contentQueries && t.contentQueries(1, n[s], s);
          }
        }
      }
      function ts(e, t, n) {
        ht() &&
          ((function (e, t, n, i) {
            const s = n.directiveStart,
              r = n.directiveEnd;
            e.firstCreatePass || cn(n, t), Ci(i, t);
            const o = n.initialInputs;
            for (let a = s; a < r; a++) {
              const i = e.data[a],
                r = Ge(i);
              r && bs(t, n, i);
              const l = vn(t, e, a, n);
              Ci(l, t),
                null !== o && vs(0, a - s, l, i, 0, o),
                r && (st(n.index, t)[8] = l);
            }
          })(e, t, n, tt(n, t)),
          128 == (128 & n.flags) &&
            (function (e, t, n) {
              const i = n.directiveStart,
                s = n.directiveEnd,
                r = e.expandoInstructions,
                o = e.firstCreatePass,
                a = n.index - 19;
              try {
                At(a);
                for (let n = i; n < s; n++) {
                  const i = e.data[n],
                    s = t[n];
                  null !== i.hostBindings ||
                  0 !== i.hostVars ||
                  null !== i.hostAttrs
                    ? hs(i, s)
                    : o && r.push(null);
                }
              } finally {
                At(-1);
              }
            })(e, t, n));
      }
      function ns(e, t, n = tt) {
        const i = t.localNames;
        if (null !== i) {
          let s = t.index + 1;
          for (let r = 0; r < i.length; r += 2) {
            const o = i[r + 1],
              a = -1 === o ? n(t, e) : e[o];
            e[s++] = a;
          }
        }
      }
      function is(e) {
        return (
          e.tView ||
          (e.tView = ss(
            1,
            -1,
            e.template,
            e.decls,
            e.vars,
            e.directiveDefs,
            e.pipeDefs,
            e.viewQuery,
            e.schemas,
            e.consts
          ))
        );
      }
      function ss(e, t, n, i, s, r, o, a, l, c) {
        const u = 19 + i,
          h = u + s,
          d = (function (e, t) {
            const n = [];
            for (let i = 0; i < t; i++) n.push(i < e ? null : Di);
            return n;
          })(u, h);
        return (d[1] = {
          type: e,
          id: t,
          blueprint: d,
          template: n,
          queries: null,
          viewQuery: a,
          node: null,
          data: d.slice().fill(null, u),
          bindingStartIndex: u,
          expandoStartIndex: h,
          expandoInstructions: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof r ? r() : r,
          pipeRegistry: "function" == typeof o ? o() : o,
          firstChild: null,
          schemas: l,
          consts: c,
        });
      }
      function rs(e, t, n, i, s, r) {
        return {
          type: n,
          index: i,
          injectorIndex: t ? t.injectorIndex : -1,
          directiveStart: -1,
          directiveEnd: -1,
          directiveStylingLast: -1,
          propertyBindings: null,
          flags: 0,
          providerIndexes: 0,
          tagName: s,
          attrs: r,
          mergedAttrs: null,
          localNames: null,
          initialInputs: void 0,
          inputs: null,
          outputs: null,
          tViews: null,
          next: null,
          projectionNext: null,
          child: null,
          parent: t,
          projection: null,
          styles: null,
          residualStyles: void 0,
          classes: null,
          residualClasses: void 0,
          classBindings: 0,
          styleBindings: 0,
        };
      }
      function os(e, t, n) {
        for (let i in e)
          if (e.hasOwnProperty(i)) {
            const s = e[i];
            (n = null === n ? {} : n).hasOwnProperty(i)
              ? n[i].push(t, s)
              : (n[i] = [t, s]);
          }
        return n;
      }
      function as(e, t, n, i, s, r, o, a) {
        const l = tt(t, n);
        let c,
          u = t.inputs;
        var h;
        !a && null != u && (c = u[i])
          ? (Ns(e, n, c, i, s),
            He(t) &&
              (function (e, t) {
                const n = st(t, e);
                16 & n[2] || (n[2] |= 64);
              })(n, t.index))
          : 3 === t.type &&
            ((i =
              "class" === (h = i)
                ? "className"
                : "for" === h
                ? "htmlFor"
                : "formaction" === h
                ? "formAction"
                : "innerHtml" === h
                ? "innerHTML"
                : "readonly" === h
                ? "readOnly"
                : "tabindex" === h
                ? "tabIndex"
                : h),
            (s = null != o ? o(s, t.tagName || "", i) : s),
            Ze(r)
              ? r.setProperty(l, i, s)
              : Gt(i) || (l.setProperty ? l.setProperty(i, s) : (l[i] = s)));
      }
      function ls(e, t, n, i) {
        let s = !1;
        if (ht()) {
          const r = (function (e, t, n) {
              const i = e.directiveRegistry;
              let s = null;
              if (i)
                for (let r = 0; r < i.length; r++) {
                  const o = i[r];
                  Ri(n, o.selectors, !1) &&
                    (s || (s = []),
                    pn(cn(n, t), e, o.type),
                    Ge(o)
                      ? (2 & n.flags && Ei(n), ps(e, n), s.unshift(o))
                      : s.push(o));
                }
              return s;
            })(e, t, n),
            o = null === i ? null : { "": -1 };
          if (null !== r) {
            let i = 0;
            (s = !0), gs(n, e.data.length, r.length);
            for (let e = 0; e < r.length; e++) {
              const t = r[e];
              t.providersResolver && t.providersResolver(t);
            }
            ds(e, n, r.length);
            let a = !1,
              l = !1;
            for (let s = 0; s < r.length; s++) {
              const c = r[s];
              (n.mergedAttrs = $t(n.mergedAttrs, c.hostAttrs)),
                ms(e, t, c),
                fs(e.data.length - 1, c, o),
                null !== c.contentQueries && (n.flags |= 8),
                (null === c.hostBindings &&
                  null === c.hostAttrs &&
                  0 === c.hostVars) ||
                  (n.flags |= 128),
                !a &&
                  (c.onChanges || c.onInit || c.doCheck) &&
                  ((e.preOrderHooks || (e.preOrderHooks = [])).push(
                    n.index - 19
                  ),
                  (a = !0)),
                l ||
                  (!c.onChanges && !c.doCheck) ||
                  ((e.preOrderCheckHooks || (e.preOrderCheckHooks = [])).push(
                    n.index - 19
                  ),
                  (l = !0)),
                cs(e, c),
                (i += c.hostVars);
            }
            !(function (e, t) {
              const n = t.directiveEnd,
                i = e.data,
                s = t.attrs,
                r = [];
              let o = null,
                a = null;
              for (let l = t.directiveStart; l < n; l++) {
                const e = i[l],
                  t = e.inputs;
                r.push(null !== s ? ys(t, s) : null),
                  (o = os(t, l, o)),
                  (a = os(e.outputs, l, a));
              }
              null !== o &&
                (o.hasOwnProperty("class") && (t.flags |= 16),
                o.hasOwnProperty("style") && (t.flags |= 32)),
                (t.initialInputs = r),
                (t.inputs = o),
                (t.outputs = a);
            })(e, n),
              us(e, t, i);
          }
          o &&
            (function (e, t, n) {
              if (t) {
                const i = (e.localNames = []);
                for (let e = 0; e < t.length; e += 2) {
                  const s = n[t[e + 1]];
                  if (null == s)
                    throw new Error(`Export of name '${t[e + 1]}' not found!`);
                  i.push(t[e], s);
                }
              }
            })(n, i, o);
        }
        return (n.mergedAttrs = $t(n.mergedAttrs, n.attrs)), s;
      }
      function cs(e, t) {
        const n = e.expandoInstructions;
        n.push(t.hostBindings), 0 !== t.hostVars && n.push(t.hostVars);
      }
      function us(e, t, n) {
        for (let i = 0; i < n; i++)
          t.push(Di), e.blueprint.push(Di), e.data.push(null);
      }
      function hs(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function ds(e, t, n) {
        const i = 19 - t.index,
          s = e.data.length - (65535 & t.providerIndexes);
        (e.expandoInstructions || (e.expandoInstructions = [])).push(i, s, n);
      }
      function ps(e, t) {
        (t.flags |= 2), (e.components || (e.components = [])).push(t.index);
      }
      function fs(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let i = 0; i < t.exportAs.length; i++) n[t.exportAs[i]] = e;
          Ge(t) && (n[""] = e);
        }
      }
      function gs(e, t, n) {
        (e.flags |= 1),
          (e.directiveStart = t),
          (e.directiveEnd = t + n),
          (e.providerIndexes = t);
      }
      function ms(e, t, n) {
        e.data.push(n);
        const i = n.factory || (n.factory = Ve(n.type)),
          s = new Bt(i, Ge(n), null);
        e.blueprint.push(s), t.push(s);
      }
      function bs(e, t, n) {
        const i = tt(t, e),
          s = is(n),
          r = e[10],
          o = Es(
            e,
            qi(e, s, null, n.onPush ? 64 : 16, i, t, r, r.createRenderer(i, n))
          );
        e[t.index] = o;
      }
      function vs(e, t, n, i, s, r) {
        const o = r[t];
        if (null !== o) {
          const e = i.setInput;
          for (let t = 0; t < o.length; ) {
            const s = o[t++],
              r = o[t++],
              a = o[t++];
            null !== e ? i.setInput(n, a, s, r) : (n[r] = a);
          }
        }
      }
      function ys(e, t) {
        let n = null,
          i = 0;
        for (; i < t.length; ) {
          const s = t[i];
          if (0 !== s)
            if (5 !== s) {
              if ("number" == typeof s) break;
              e.hasOwnProperty(s) &&
                (null === n && (n = []), n.push(s, e[s], t[i + 1])),
                (i += 2);
            } else i += 2;
          else i += 4;
        }
        return n;
      }
      function ws(e, t, n, i) {
        return new Array(e, !0, -2, t, null, null, i, n, null);
      }
      function Ss(e, t) {
        const n = e[5];
        for (let i = 0; i < n.length; i++) {
          const e = n[i],
            s = e[3][3][16];
          if (s !== t && 0 == (16 & s[2])) {
            const t = e[1];
            Zi(t, e, t.template, e[8]);
          }
        }
      }
      function _s(e, t) {
        const n = st(t, e);
        if (at(n) && 80 & n[2]) {
          const e = n[1];
          Zi(e, n, e.template, n[8]);
        }
      }
      function Cs(e, t) {
        const n = st(t, e),
          i = n[1];
        !(function (e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(i, n),
          Yi(i, n, n[8]);
      }
      function Es(e, t) {
        return e[13] ? (e[14][4] = t) : (e[13] = t), (e[14] = t), t;
      }
      function Os(e) {
        for (; e; ) {
          e[2] |= 64;
          const t = ji(e);
          if ($e(e) && !t) return e;
          e = t;
        }
        return null;
      }
      function xs(e, t, n) {
        const i = t[10];
        i.begin && i.begin();
        try {
          Zi(e, t, e.template, n);
        } catch (s) {
          throw (Rs(t, s), s);
        } finally {
          i.end && i.end();
        }
      }
      function Ts(e) {
        !(function (e) {
          for (let t = 0; t < e.components.length; t++) {
            const n = e.components[t],
              i = rt(n),
              s = i[1];
            Qi(s, i, s.template, n);
          }
        })(e[8]);
      }
      function ks(e, t, n) {
        xt(0), t(e, n);
      }
      const Ms = (() => Promise.resolve(null))();
      function Is(e) {
        return e[7] || (e[7] = []);
      }
      function Ps(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function Rs(e, t) {
        const n = e[9],
          i = n ? n.get(xn, null) : null;
        i && i.handleError(t);
      }
      function Ns(e, t, n, i, s) {
        for (let r = 0; r < n.length; ) {
          const o = n[r++],
            a = n[r++],
            l = t[o],
            c = e.data[o];
          null !== c.setInput ? c.setInput(l, s, i, a) : (l[a] = s);
        }
      }
      function Ls(e, t) {
        const n = t[3];
        return -1 === e.index ? (Xe(n) ? n : null) : n;
      }
      function As(e, t) {
        const n = Ls(e, t);
        return n ? $s(t[11], n[7]) : null;
      }
      function Ds(e, t, n, i, s) {
        if (null != i) {
          let r,
            o = !1;
          Xe(i) ? (r = i) : ze(i) && ((o = !0), (i = i[0]));
          const a = Je(i);
          0 === e && null !== n
            ? null == s
              ? Us(t, n, a)
              : Hs(t, n, a, s || null)
            : 1 === e && null !== n
            ? Hs(t, n, a, s || null)
            : 2 === e
            ? (function (e, t, n) {
                const i = $s(e, t);
                i &&
                  (function (e, t, n, i) {
                    Ze(e) ? e.removeChild(t, n, i) : t.removeChild(n);
                  })(e, i, t, n);
              })(t, a, o)
            : 3 === e && t.destroyNode(a),
            null != r &&
              (function (e, t, n, i, s) {
                const r = n[7];
                r !== Je(n) && Ds(t, e, i, r, s);
                for (let o = 9; o < n.length; o++) {
                  const s = n[o];
                  Qs(s[1], s, e, t, i, r);
                }
              })(t, e, r, n, s);
        }
      }
      function js(e, t, n, i) {
        const s = As(e.node, t);
        s && Qs(e, t, t[11], n ? 1 : 2, s, i);
      }
      function Fs(e, t) {
        const n = e[5],
          i = n.indexOf(t);
        n.splice(i, 1);
      }
      function Vs(e, t) {
        if (e.length <= 9) return;
        const n = 9 + t,
          i = e[n];
        if (i) {
          const s = i[17];
          null !== s && s !== e && Fs(s, i), t > 0 && (e[n - 1][4] = i[4]);
          const r = ye(e, 9 + t);
          js(i[1], i, !1, null);
          const o = r[5];
          null !== o && o.detachView(r[1]),
            (i[3] = null),
            (i[4] = null),
            (i[2] &= -129);
        }
        return i;
      }
      function Ws(e, t) {
        if (!(256 & t[2])) {
          const n = t[11];
          Ze(n) && n.destroyNode && Qs(e, t, n, 3, null, null),
            (function (e) {
              let t = e[13];
              if (!t) return Xs(e[1], e);
              for (; t; ) {
                let n = null;
                if (ze(t)) n = t[13];
                else {
                  const e = t[9];
                  e && (n = e);
                }
                if (!n) {
                  for (; t && !t[4] && t !== e; )
                    ze(t) && Xs(t[1], t), (t = zs(t, e));
                  null === t && (t = e), ze(t) && Xs(t[1], t), (n = t && t[4]);
                }
                t = n;
              }
            })(t);
        }
      }
      function zs(e, t) {
        let n;
        return ze(e) && (n = e[6]) && 2 === n.type
          ? Ls(n, e)
          : e[3] === t
          ? null
          : e[3];
      }
      function Xs(e, t) {
        if (!(256 & t[2])) {
          (t[2] &= -129),
            (t[2] |= 256),
            (function (e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const e = t[n[i]];
                  e instanceof Bt || n[i + 1].call(e);
                }
            })(e, t),
            (function (e, t) {
              const n = e.cleanup;
              if (null !== n) {
                const e = t[7];
                for (let i = 0; i < n.length - 1; i += 2)
                  if ("string" == typeof n[i]) {
                    const s = n[i + 1],
                      r = "function" == typeof s ? s(t) : Je(t[s]),
                      o = e[n[i + 2]],
                      a = n[i + 3];
                    "boolean" == typeof a
                      ? r.removeEventListener(n[i], o, a)
                      : a >= 0
                      ? e[a]()
                      : e[-a].unsubscribe(),
                      (i += 2);
                  } else n[i].call(e[n[i + 1]]);
                t[7] = null;
              }
            })(e, t);
          const n = t[6];
          n && 3 === n.type && Ze(t[11]) && t[11].destroy();
          const i = t[17];
          if (null !== i && Xe(t[3])) {
            i !== t[3] && Fs(i, t);
            const n = t[5];
            null !== n && n.detachView(e);
          }
        }
      }
      function Bs(e, t, n) {
        let i = t.parent;
        for (; null != i && (4 === i.type || 5 === i.type); )
          i = (t = i).parent;
        if (null == i) {
          const e = n[6];
          return 2 === e.type ? As(e, n) : n[0];
        }
        if (t && 5 === t.type && 4 & t.flags) return tt(t, n).parentNode;
        if (2 & i.flags) {
          const t = e.data,
            n = t[t[i.index].directiveStart].encapsulation;
          if (n !== Oe.ShadowDom && n !== Oe.Native) return null;
        }
        return tt(i, n);
      }
      function Hs(e, t, n, i) {
        Ze(e) ? e.insertBefore(t, n, i) : t.insertBefore(n, i, !0);
      }
      function Us(e, t, n) {
        Ze(e) ? e.appendChild(t, n) : t.appendChild(n);
      }
      function Gs(e, t, n, i) {
        null !== i ? Hs(e, t, n, i) : Us(e, t, n);
      }
      function $s(e, t) {
        return Ze(e) ? e.parentNode(t) : t.parentNode;
      }
      function qs(e, t) {
        if (2 === e.type) {
          const n = Ls(e, t);
          return null === n ? null : Ys(n.indexOf(t, 9) - 9, n);
        }
        return 4 === e.type || 5 === e.type ? tt(e, t) : null;
      }
      function Ks(e, t, n, i) {
        const s = Bs(e, i, t);
        if (null != s) {
          const e = t[11],
            r = qs(i.parent || t[6], t);
          if (Array.isArray(n))
            for (let t = 0; t < n.length; t++) Gs(e, s, n[t], r);
          else Gs(e, s, n, r);
        }
      }
      function Ys(e, t) {
        const n = 9 + e + 1;
        if (n < t.length) {
          const e = t[n],
            i = e[1].firstChild;
          if (null !== i)
            return (function e(t, n) {
              if (null !== n) {
                const i = n.type;
                if (3 === i) return tt(n, t);
                if (0 === i) return Ys(-1, t[n.index]);
                if (4 === i || 5 === i) {
                  const i = n.child;
                  if (null !== i) return e(t, i);
                  {
                    const e = t[n.index];
                    return Xe(e) ? Ys(-1, e) : Je(e);
                  }
                }
                {
                  const i = t[16],
                    s = i[6],
                    r = ji(i),
                    o = s.projection[n.projection];
                  return null != o ? e(r, o) : e(t, n.next);
                }
              }
              return null;
            })(e, i);
        }
        return t[7];
      }
      function Zs(e, t, n, i, s, r, o) {
        for (; null != n; ) {
          const a = i[n.index],
            l = n.type;
          o && 0 === t && (a && Ci(Je(a), i), (n.flags |= 4)),
            64 != (64 & n.flags) &&
              (4 === l || 5 === l
                ? (Zs(e, t, n.child, i, s, r, !1), Ds(t, e, s, a, r))
                : 1 === l
                ? Js(e, t, i, n, s, r)
                : Ds(t, e, s, a, r)),
            (n = o ? n.projectionNext : n.next);
        }
      }
      function Qs(e, t, n, i, s, r) {
        Zs(n, i, e.node.child, t, s, r, !1);
      }
      function Js(e, t, n, i, s, r) {
        const o = n[16],
          a = o[6].projection[i.projection];
        if (Array.isArray(a))
          for (let l = 0; l < a.length; l++) Ds(t, e, s, a[l], r);
        else Zs(e, t, a, o[3], s, r, !0);
      }
      function er(e, t, n) {
        Ze(e) ? e.setAttribute(t, "style", n) : (t.style.cssText = n);
      }
      function tr(e, t, n) {
        Ze(e)
          ? "" === n
            ? e.removeAttribute(t, "class")
            : e.setAttribute(t, "class", n)
          : (t.className = n);
      }
      class nr {
        constructor(e, t) {
          (this._lView = e),
            (this._cdRefInjectingView = t),
            (this._appRef = null),
            (this._viewContainerRef = null),
            (this._tViewNode = null);
        }
        get rootNodes() {
          const e = this._lView;
          return null == e[0]
            ? (function e(t, n, i, s, r = !1) {
                for (; null !== i; ) {
                  const o = n[i.index];
                  if ((null !== o && s.push(Je(o)), Xe(o)))
                    for (let t = 9; t < o.length; t++) {
                      const n = o[t],
                        i = n[1].firstChild;
                      null !== i && e(n[1], n, i, s);
                    }
                  const a = i.type;
                  if (4 === a || 5 === a) e(t, n, i.child, s);
                  else if (1 === a) {
                    const t = n[16],
                      r = t[6],
                      o = ji(t);
                    let a = r.projection[i.projection];
                    null !== a && null !== o && e(o[1], o, a, s, !0);
                  }
                  i = r ? i.projectionNext : i.next;
                }
                return s;
              })(e[1], e, e[6].child, [])
            : [];
        }
        get context() {
          return this._lView[8];
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._viewContainerRef) {
            const e = this._viewContainerRef.indexOf(this);
            e > -1 && this._viewContainerRef.detach(e),
              (this._viewContainerRef = null);
          }
          Ws(this._lView[1], this._lView);
        }
        onDestroy(e) {
          var t, n, i;
          (t = this._lView[1]),
            (i = e),
            Is((n = this._lView)).push(i),
            t.firstCreatePass && Ps(t).push(n[7].length - 1, null);
        }
        markForCheck() {
          Os(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          xs(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (e, t, n) {
            wt(!0);
            try {
              xs(e, t, n);
            } finally {
              wt(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef(e) {
          if (this._appRef)
            throw new Error(
              "This view is already attached directly to the ApplicationRef!"
            );
          this._viewContainerRef = e;
        }
        detachFromAppRef() {
          var e;
          (this._appRef = null),
            Qs(this._lView[1], (e = this._lView), e[11], 2, null, null);
        }
        attachToAppRef(e) {
          if (this._viewContainerRef)
            throw new Error(
              "This view is already attached to a ViewContainer!"
            );
          this._appRef = e;
        }
      }
      class ir extends nr {
        constructor(e) {
          super(e), (this._view = e);
        }
        detectChanges() {
          Ts(this._view);
        }
        checkNoChanges() {
          !(function (e) {
            wt(!0);
            try {
              Ts(e);
            } finally {
              wt(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      let sr, rr, or;
      function ar(e, t, n) {
        return sr || (sr = class extends e {}), new sr(tt(t, n));
      }
      function lr(e, t, n, i) {
        return (
          rr ||
            (rr = class extends e {
              constructor(e, t, n) {
                super(),
                  (this._declarationView = e),
                  (this._declarationTContainer = t),
                  (this.elementRef = n);
              }
              createEmbeddedView(e) {
                const t = this._declarationTContainer.tViews,
                  n = qi(this._declarationView, t, e, 16, null, t.node);
                n[17] =
                  this._declarationView[this._declarationTContainer.index];
                const i = this._declarationView[5];
                null !== i && (n[5] = i.createEmbeddedView(t)), Yi(t, n, e);
                const s = new nr(n);
                return (s._tViewNode = n[6]), s;
              }
            }),
          0 === n.type ? new rr(i, n, ar(t, n, i)) : null
        );
      }
      function cr(e, t, n, i) {
        let s;
        or ||
          (or = class extends e {
            constructor(e, t, n) {
              super(),
                (this._lContainer = e),
                (this._hostTNode = t),
                (this._hostView = n);
            }
            get element() {
              return ar(t, this._hostTNode, this._hostView);
            }
            get injector() {
              return new Sn(this._hostTNode, this._hostView);
            }
            get parentInjector() {
              const e = dn(this._hostTNode, this._hostView),
                t = Qt(e, this._hostView),
                n = (function (e, t, n) {
                  if (n.parent && -1 !== n.parent.injectorIndex) {
                    const e = n.parent.injectorIndex;
                    let t = n.parent;
                    for (; null != t.parent && e == t.parent.injectorIndex; )
                      t = t.parent;
                    return t;
                  }
                  let i = Zt(e),
                    s = t,
                    r = t[6];
                  for (; i > 1; ) (s = s[15]), (r = s[6]), i--;
                  return r;
                })(e, this._hostView, this._hostTNode);
              return Kt(e) && null != n
                ? new Sn(n, t)
                : new Sn(null, this._hostView);
            }
            clear() {
              for (; this.length > 0; ) this.remove(this.length - 1);
            }
            get(e) {
              return (
                (null !== this._lContainer[8] && this._lContainer[8][e]) || null
              );
            }
            get length() {
              return this._lContainer.length - 9;
            }
            createEmbeddedView(e, t, n) {
              const i = e.createEmbeddedView(t || {});
              return this.insert(i, n), i;
            }
            createComponent(e, t, n, i, s) {
              const r = n || this.parentInjector;
              if (!s && null == e.ngModule && r) {
                const e = r.get(ge, null);
                e && (s = e);
              }
              const o = e.create(r, i, void 0, s);
              return this.insert(o.hostView, t), o;
            }
            insert(e, t) {
              const n = e._lView,
                i = n[1];
              if (e.destroyed)
                throw new Error(
                  "Cannot insert a destroyed View in a ViewContainer!"
                );
              if ((this.allocateContainerIfNeeded(), Xe(n[3]))) {
                const t = this.indexOf(e);
                if (-1 !== t) this.detach(t);
                else {
                  const t = n[3],
                    i = new or(t, t[6], t[3]);
                  i.detach(i.indexOf(e));
                }
              }
              const s = this._adjustIndex(t);
              return (
                (function (e, t, n, i) {
                  const s = 9 + i,
                    r = n.length;
                  i > 0 && (n[s - 1][4] = t),
                    i < r - 9
                      ? ((t[4] = n[s]), ve(n, 9 + i, t))
                      : (n.push(t), (t[4] = null)),
                    (t[3] = n);
                  const o = t[17];
                  null !== o &&
                    n !== o &&
                    (function (e, t) {
                      const n = e[5],
                        i = t[3][3][16];
                      16 != (16 & i[2]) && t[16] !== i && (e[2] |= 1),
                        null === n ? (e[5] = [t]) : n.push(t);
                    })(o, t);
                  const a = t[5];
                  null !== a && a.insertView(e), (t[2] |= 128);
                })(i, n, this._lContainer, s),
                js(i, n, !0, Ys(s, this._lContainer)),
                e.attachToViewContainerRef(this),
                ve(this._lContainer[8], s, e),
                e
              );
            }
            move(e, t) {
              if (e.destroyed)
                throw new Error(
                  "Cannot move a destroyed View in a ViewContainer!"
                );
              return this.insert(e, t);
            }
            indexOf(e) {
              const t = this._lContainer[8];
              return null !== t ? t.indexOf(e) : -1;
            }
            remove(e) {
              this.allocateContainerIfNeeded();
              const t = this._adjustIndex(e, -1);
              (function (e, t) {
                const n = Vs(e, t);
                n && Ws(n[1], n);
              })(this._lContainer, t),
                ye(this._lContainer[8], t);
            }
            detach(e) {
              this.allocateContainerIfNeeded();
              const t = this._adjustIndex(e, -1),
                n = Vs(this._lContainer, t);
              return n && null != ye(this._lContainer[8], t) ? new nr(n) : null;
            }
            _adjustIndex(e, t = 0) {
              return null == e ? this.length + t : e;
            }
            allocateContainerIfNeeded() {
              null === this._lContainer[8] && (this._lContainer[8] = []);
            }
          });
        const r = i[n.index];
        if (Xe(r))
          (s = r),
            (function (e, t) {
              e[2] = -2;
            })(s);
        else {
          let e;
          if (4 === n.type) e = Je(r);
          else if (((e = i[11].createComment("")), $e(i))) {
            const t = i[11],
              s = tt(n, i);
            Hs(
              t,
              $s(t, s),
              e,
              (function (e, t) {
                return Ze(e) ? e.nextSibling(t) : t.nextSibling;
              })(t, s)
            );
          } else Ks(i[1], i, e, n);
          (i[n.index] = s = ws(r, i, e, n)), Es(i, s);
        }
        return new or(s, n, i);
      }
      function ur(e = !1) {
        return (function (e, t, n) {
          if (!n && He(e)) {
            const n = st(e.index, t);
            return new nr(n, n);
          }
          return 3 === e.type || 0 === e.type || 4 === e.type || 5 === e.type
            ? new nr(t[16], t)
            : null;
        })(gt(), dt(), e);
      }
      let hr = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => dr()), e;
      })();
      const dr = ur,
        pr = new ee("Set Injector scope."),
        fr = {},
        gr = {},
        mr = [];
      let br = void 0;
      function vr() {
        return void 0 === br && (br = new fe()), br;
      }
      function yr(e, t = null, n = null, i) {
        return new wr(e, n, t || vr(), i);
      }
      class wr {
        constructor(e, t, n, i = null) {
          (this.parent = n),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const s = [];
          t && be(t, (n) => this.processProvider(n, e, t)),
            be([e], (e) => this.processInjectorType(e, [], s)),
            this.records.set(te, Cr(void 0, this));
          const r = this.records.get(pr);
          (this.scope = null != r ? r.value : null),
            (this.source = i || ("object" == typeof e ? null : D(e)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((e) => e.ngOnDestroy());
          } finally {
            this.records.clear(),
              this.onDestroy.clear(),
              this.injectorDefTypes.clear();
          }
        }
        get(e, t = ne, n = C.Default) {
          this.assertNotDestroyed();
          const i = ae(this);
          try {
            if (!(n & C.SkipSelf)) {
              let t = this.records.get(e);
              if (void 0 === t) {
                const n =
                  ("function" == typeof (s = e) ||
                    ("object" == typeof s && s instanceof ee)) &&
                  k(e);
                (t = n && this.injectableDefInScope(n) ? Cr(Sr(e), fr) : null),
                  this.records.set(e, t);
              }
              if (null != t) return this.hydrate(e, t);
            }
            return (n & C.Self ? vr() : this.parent).get(
              e,
              (t = n & C.Optional && t === ne ? null : t)
            );
          } catch (r) {
            if ("NullInjectorError" === r.name) {
              if (
                ((r.ngTempTokenPath = r.ngTempTokenPath || []).unshift(D(e)), i)
              )
                throw r;
              return (function (e, t, n, i) {
                const s = e.ngTempTokenPath;
                throw (
                  (t.__source && s.unshift(t.__source),
                  (e.message = (function (e, t, n, i = null) {
                    e =
                      e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1)
                        ? e.substr(2)
                        : e;
                    let s = D(t);
                    if (Array.isArray(t)) s = t.map(D).join(" -> ");
                    else if ("object" == typeof t) {
                      let e = [];
                      for (let n in t)
                        if (t.hasOwnProperty(n)) {
                          let i = t[n];
                          e.push(
                            n +
                              ":" +
                              ("string" == typeof i ? JSON.stringify(i) : D(i))
                          );
                        }
                      s = `{${e.join(", ")}}`;
                    }
                    return `${n}${i ? "(" + i + ")" : ""}[${s}]: ${e.replace(
                      ie,
                      "\n  "
                    )}`;
                  })("\n" + e.message, s, n, i)),
                  (e.ngTokenPath = s),
                  (e.ngTempTokenPath = null),
                  e)
                );
              })(r, e, "R3InjectorError", this.source);
            }
            throw r;
          } finally {
            ae(i);
          }
          var s;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((e) => this.get(e));
        }
        toString() {
          const e = [];
          return (
            this.records.forEach((t, n) => e.push(D(n))),
            `R3Injector[${e.join(", ")}]`
          );
        }
        assertNotDestroyed() {
          if (this._destroyed)
            throw new Error("Injector has already been destroyed.");
        }
        processInjectorType(e, t, n) {
          if (!(e = W(e))) return !1;
          let i = I(e);
          const s = (null == i && e.ngModule) || void 0,
            r = void 0 === s ? e : s,
            o = -1 !== n.indexOf(r);
          if ((void 0 !== s && (i = I(s)), null == i)) return !1;
          if (null != i.imports && !o) {
            let e;
            n.push(r);
            try {
              be(i.imports, (i) => {
                this.processInjectorType(i, t, n) &&
                  (void 0 === e && (e = []), e.push(i));
              });
            } finally {
            }
            if (void 0 !== e)
              for (let t = 0; t < e.length; t++) {
                const { ngModule: n, providers: i } = e[t];
                be(i, (e) => this.processProvider(e, n, i || mr));
              }
          }
          this.injectorDefTypes.add(r), this.records.set(r, Cr(i.factory, fr));
          const a = i.providers;
          if (null != a && !o) {
            const t = e;
            be(a, (e) => this.processProvider(e, t, a));
          }
          return void 0 !== s && void 0 !== e.providers;
        }
        processProvider(e, t, n) {
          let i = Or((e = W(e))) ? e : W(e && e.provide);
          const s = (function (e, t, n) {
            return Er(e) ? Cr(void 0, e.useValue) : Cr(_r(e, t, n), fr);
          })(e, t, n);
          if (Or(e) || !0 !== e.multi) {
            const e = this.records.get(i);
            e && void 0 !== e.multi && Oi();
          } else {
            let t = this.records.get(i);
            t
              ? void 0 === t.multi && Oi()
              : ((t = Cr(void 0, fr, !0)),
                (t.factory = () => pe(t.multi)),
                this.records.set(i, t)),
              (i = e),
              t.multi.push(e);
          }
          this.records.set(i, s);
        }
        hydrate(e, t) {
          var n;
          return (
            t.value === gr
              ? (function (e) {
                  throw new Error("Cannot instantiate cyclic dependency! " + e);
                })(D(e))
              : t.value === fr && ((t.value = gr), (t.value = t.factory())),
            "object" == typeof t.value &&
              t.value &&
              null !== (n = t.value) &&
              "object" == typeof n &&
              "function" == typeof n.ngOnDestroy &&
              this.onDestroy.add(t.value),
            t.value
          );
        }
        injectableDefInScope(e) {
          return (
            !!e.providedIn &&
            ("string" == typeof e.providedIn
              ? "any" === e.providedIn || e.providedIn === this.scope
              : this.injectorDefTypes.has(e.providedIn))
          );
        }
      }
      function Sr(e) {
        const t = k(e),
          n = null !== t ? t.factory : Ve(e);
        if (null !== n) return n;
        const i = I(e);
        if (null !== i) return i.factory;
        if (e instanceof ee)
          throw new Error(`Token ${D(e)} is missing a \u0275prov definition.`);
        if (e instanceof Function)
          return (function (e) {
            const t = e.length;
            if (t > 0) {
              const n = we(t, "?");
              throw new Error(
                `Can't resolve all parameters for ${D(e)}: (${n.join(", ")}).`
              );
            }
            const n = (function (e) {
              const t = e && (e[P] || e[L] || (e[N] && e[N]()));
              if (t) {
                const n = (function (e) {
                  if (e.hasOwnProperty("name")) return e.name;
                  const t = ("" + e).match(/^function\s*([^\s(]+)/);
                  return null === t ? "" : t[1];
                })(e);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in v10. Please add @Injectable() to the "${n}" class.`
                  ),
                  t
                );
              }
              return null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Error("unreachable");
      }
      function _r(e, t, n) {
        let i = void 0;
        if (Or(e)) {
          const t = W(e);
          return Ve(t) || Sr(t);
        }
        if (Er(e)) i = () => W(e.useValue);
        else if ((s = e) && s.useFactory)
          i = () => e.useFactory(...pe(e.deps || []));
        else if (
          (function (e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          i = () => ue(W(e.useExisting));
        else {
          const s = W(e && (e.useClass || e.provide));
          if (
            (s ||
              (function (e, t, n) {
                let i = "";
                throw (
                  (e &&
                    t &&
                    (i = ` - only instances of Provider and Type are allowed, got: [${t
                      .map((e) => (e == n ? "?" + n + "?" : "..."))
                      .join(", ")}]`),
                  new Error(`Invalid provider for the NgModule '${D(e)}'` + i))
                );
              })(t, n, e),
            !(function (e) {
              return !!e.deps;
            })(e))
          )
            return Ve(s) || Sr(s);
          i = () => new s(...pe(e.deps));
        }
        var s;
        return i;
      }
      function Cr(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function Er(e) {
        return null !== e && "object" == typeof e && se in e;
      }
      function Or(e) {
        return "function" == typeof e;
      }
      const xr = function (e, t, n) {
        return (function (e, t = null, n = null, i) {
          const s = yr(e, t, n, i);
          return s._resolveInjectorDefTypes(), s;
        })({ name: n }, t, e, n);
      };
      let Tr = (() => {
        class e {
          static create(e, t) {
            return Array.isArray(e)
              ? xr(e, t, "")
              : xr(e.providers, e.parent, e.name || "");
          }
        }
        return (
          (e.THROW_IF_NOT_FOUND = ne),
          (e.NULL = new fe()),
          (e.ɵprov = x({ token: e, providedIn: "any", factory: () => ue(te) })),
          (e.__NG_ELEMENT_ID__ = -1),
          e
        );
      })();
      const kr = new ee("AnalyzeForEntryComponents");
      class Mr {}
      const Ir = v(
        "ViewChild",
        (e, t) =>
          Object.assign(
            { selector: e, first: !0, isViewQuery: !0, descendants: !0 },
            t
          ),
        Mr
      );
      let Pr = new Map();
      const Rr = new Set();
      function Nr(e) {
        return "string" == typeof e ? e : e.text();
      }
      function Lr(e, t) {
        let n = e.styles,
          i = e.classes,
          s = 0;
        for (let r = 0; r < t.length; r++) {
          const e = t[r];
          "number" == typeof e
            ? (s = e)
            : 1 == s
            ? (i = j(i, e))
            : 2 == s && (n = j(n, e + ": " + t[++r] + ";"));
        }
        null !== n && (e.styles = n), null !== i && (e.classes = i);
      }
      let Ar = null;
      function Dr() {
        if (!Ar) {
          const e = G.Symbol;
          if (e && e.iterator) Ar = e.iterator;
          else {
            const e = Object.getOwnPropertyNames(Map.prototype);
            for (let t = 0; t < e.length; ++t) {
              const n = e[t];
              "entries" !== n &&
                "size" !== n &&
                Map.prototype[n] === Map.prototype.entries &&
                (Ar = n);
            }
          }
        }
        return Ar;
      }
      function jr(e, t) {
        return (
          e === t ||
          ("number" == typeof e && "number" == typeof t && isNaN(e) && isNaN(t))
        );
      }
      class Fr {
        constructor(e) {
          this.wrapped = e;
        }
        static wrap(e) {
          return new Fr(e);
        }
        static unwrap(e) {
          return Fr.isWrapped(e) ? e.wrapped : e;
        }
        static isWrapped(e) {
          return e instanceof Fr;
        }
      }
      function Vr(e) {
        return (
          !!Wr(e) && (Array.isArray(e) || (!(e instanceof Map) && Dr() in e))
        );
      }
      function Wr(e) {
        return null !== e && ("function" == typeof e || "object" == typeof e);
      }
      function zr(e, t, n) {
        return (e[t] = n);
      }
      function Xr(e, t) {
        return e[t];
      }
      function Br(e, t, n) {
        return !Object.is(e[t], n) && ((e[t] = n), !0);
      }
      function Hr(e, t, n, i) {
        const s = Br(e, t, n);
        return Br(e, t + 1, i) || s;
      }
      function Ur(e, t, n, i, s) {
        const r = Hr(e, t, n, i);
        return Br(e, t + 2, s) || r;
      }
      function Gr(e, t, n, i, s, r) {
        const o = Hr(e, t, n, i);
        return Hr(e, t + 2, s, r) || o;
      }
      function $r(e, t, n, i) {
        const s = dt();
        return (
          Br(s, _t(), t) &&
            (pt(),
            (function (e, t, n, i, s, r) {
              const o = tt(e, t),
                a = t[11];
              if (null == i)
                Ze(a) ? a.removeAttribute(o, n, r) : o.removeAttribute(n);
              else {
                const t = null == s ? Jt(i) : s(i, e.tagName || "", n);
                Ze(a)
                  ? a.setAttribute(o, n, t, r)
                  : r
                  ? o.setAttributeNS(r, n, t)
                  : o.setAttribute(n, t);
              }
            })(Dt(), s, e, t, n, i)),
          $r
        );
      }
      function qr(e, t, n, i) {
        return Br(e, _t(), n) ? t + Jt(n) + i : Di;
      }
      function Kr(e, t, n, i, s, r, o, a) {
        const l = dt(),
          c = pt(),
          u = e + 19,
          h = c.firstCreatePass
            ? (function (e, t, n, i, s, r, o, a, l) {
                const c = t.consts,
                  u = Ki(t, n[6], e, 0, o || null, lt(c, a));
                ls(t, n, u, lt(c, l)), jt(t, u);
                const h = (u.tViews = ss(
                    2,
                    -1,
                    i,
                    s,
                    r,
                    t.directiveRegistry,
                    t.pipeRegistry,
                    null,
                    t.schemas,
                    c
                  )),
                  d = rs(0, null, 2, -1, null, null);
                return (
                  (d.injectorIndex = u.injectorIndex),
                  (h.node = d),
                  null !== t.queries &&
                    (t.queries.template(t, u),
                    (h.queries = t.queries.embeddedTView(u))),
                  u
                );
              })(e, c, l, t, n, i, s, r, o)
            : c.data[u];
        mt(h, !1);
        const d = l[11].createComment("");
        Ks(c, l, d, h),
          Ci(d, l),
          Es(l, (l[u] = ws(d, l, d, h))),
          Ue(h) && ts(c, l, h),
          null != o && ns(l, h, a);
      }
      function Yr(e) {
        return it(ut.lFrame.contextLView, e);
      }
      function Zr(e, t = C.Default) {
        const n = dt();
        return null == n ? ue(e, t) : fn(gt(), n, W(e), t);
      }
      function Qr(e) {
        return (function (e, t) {
          if ("class" === t) return e.classes;
          if ("style" === t) return e.styles;
          const n = e.attrs;
          if (n) {
            const e = n.length;
            let i = 0;
            for (; i < e; ) {
              const s = n[i];
              if (Ut(s)) break;
              if (0 === s) i += 2;
              else if ("number" == typeof s)
                for (i++; i < e && "string" == typeof n[i]; ) i++;
              else {
                if (s === t) return n[i + 1];
                i += 2;
              }
            }
          }
          return null;
        })(gt(), e);
      }
      function Jr() {
        throw new Error("invalid");
      }
      function eo(e, t, n) {
        const i = dt();
        return Br(i, _t(), t) && as(pt(), Dt(), i, e, t, i[11], n, !1), eo;
      }
      function to(e, t, n, i, s) {
        const r = s ? "class" : "style";
        Ns(e, n, t.inputs[r], r, i);
      }
      function no(e, t, n, i) {
        const s = dt(),
          r = pt(),
          o = 19 + e,
          a = s[11],
          l = (s[o] = $i(t, a, ut.lFrame.currentNamespace)),
          c = r.firstCreatePass
            ? (function (e, t, n, i, s, r, o) {
                const a = t.consts,
                  l = lt(a, r),
                  c = Ki(t, n[6], e, 3, s, l);
                return (
                  ls(t, n, c, lt(a, o)),
                  null !== c.mergedAttrs && Lr(c, c.mergedAttrs),
                  null !== t.queries && t.queries.elementStart(t, c),
                  c
                );
              })(e, r, s, 0, t, n, i)
            : r.data[o];
        mt(c, !0);
        const u = c.mergedAttrs;
        null !== u && Ht(a, l, u);
        const h = c.classes;
        null !== h && tr(a, l, h);
        const d = c.styles;
        null !== d && er(a, l, d),
          Ks(r, s, l, c),
          0 === ut.lFrame.elementDepthCount && Ci(l, s),
          ut.lFrame.elementDepthCount++,
          Ue(c) && (ts(r, s, c), es(r, c, s)),
          null !== i && ns(s, c);
      }
      function io() {
        let e = gt();
        bt() ? vt() : ((e = e.parent), mt(e, !1));
        const t = e;
        ut.lFrame.elementDepthCount--;
        const n = pt();
        n.firstCreatePass && (jt(n, e), Be(e) && n.queries.elementEnd(e)),
          null !== t.classes &&
            (function (e) {
              return 0 != (16 & e.flags);
            })(t) &&
            to(n, t, dt(), t.classes, !0),
          null !== t.styles &&
            (function (e) {
              return 0 != (32 & e.flags);
            })(t) &&
            to(n, t, dt(), t.styles, !1);
      }
      function so(e, t, n, i) {
        no(e, t, n, i), io();
      }
      function ro(e, t, n) {
        const i = dt(),
          s = pt(),
          r = e + 19,
          o = s.firstCreatePass
            ? (function (e, t, n, i, s) {
                const r = t.consts,
                  o = lt(r, i),
                  a = Ki(t, n[6], e, 4, "ng-container", o);
                return (
                  null !== o && Lr(a, o),
                  ls(t, n, a, lt(r, s)),
                  null !== t.queries && t.queries.elementStart(t, a),
                  a
                );
              })(e, s, i, t, n)
            : s.data[r];
        mt(o, !0);
        const a = (i[r] = i[11].createComment(""));
        Ks(s, i, a, o),
          Ci(a, i),
          Ue(o) && (ts(s, i, o), es(s, o, i)),
          null != n && ns(i, o);
      }
      function oo() {
        let e = gt();
        const t = pt();
        bt() ? vt() : ((e = e.parent), mt(e, !1)),
          t.firstCreatePass && (jt(t, e), Be(e) && t.queries.elementEnd(e));
      }
      function ao(e, t, n) {
        ro(e, t, n), oo();
      }
      function lo() {
        return dt();
      }
      function co(e) {
        return !!e && "function" == typeof e.then;
      }
      function uo(e) {
        return !!e && "function" == typeof e.subscribe;
      }
      function ho(e, t, n = !1, i) {
        const s = dt(),
          r = pt(),
          o = gt();
        return (
          (function (e, t, n, i, s, r, o = !1, a) {
            const l = Ue(i),
              c = e.firstCreatePass && (e.cleanup || (e.cleanup = [])),
              u = Is(t);
            let h = !0;
            if (3 === i.type) {
              const d = tt(i, t),
                p = a ? a(d) : xe,
                f = p.target || d,
                g = u.length,
                m = a ? (e) => a(Je(e[i.index])).target : i.index;
              if (Ze(n)) {
                let o = null;
                if (
                  (!a &&
                    l &&
                    (o = (function (e, t, n, i) {
                      const s = e.cleanup;
                      if (null != s)
                        for (let r = 0; r < s.length - 1; r += 2) {
                          const e = s[r];
                          if (e === n && s[r + 1] === i) {
                            const e = t[7],
                              n = s[r + 2];
                            return e.length > n ? e[n] : null;
                          }
                          "string" == typeof e && (r += 2);
                        }
                      return null;
                    })(e, t, s, i.index)),
                  null !== o)
                )
                  ((o.__ngLastListenerFn__ || o).__ngNextListenerFn__ = r),
                    (o.__ngLastListenerFn__ = r),
                    (h = !1);
                else {
                  r = fo(i, t, r, !1);
                  const e = n.listen(p.name || f, s, r);
                  u.push(r, e), c && c.push(s, m, g, g + 1);
                }
              } else
                (r = fo(i, t, r, !0)),
                  f.addEventListener(s, r, o),
                  u.push(r),
                  c && c.push(s, m, g, o);
            }
            const d = i.outputs;
            let p;
            if (h && null !== d && (p = d[s])) {
              const e = p.length;
              if (e)
                for (let n = 0; n < e; n += 2) {
                  const e = t[p[n]][p[n + 1]].subscribe(r),
                    o = u.length;
                  u.push(r, e), c && c.push(s, i.index, o, -(o + 1));
                }
            }
          })(r, s, s[11], o, e, t, n, i),
          ho
        );
      }
      function po(e, t, n) {
        try {
          return !1 !== t(n);
        } catch (i) {
          return Rs(e, i), !1;
        }
      }
      function fo(e, t, n, i) {
        return function s(r) {
          if (r === Function) return n;
          const o = 2 & e.flags ? st(e.index, t) : t;
          0 == (32 & t[2]) && Os(o);
          let a = po(t, n, r),
            l = s.__ngNextListenerFn__;
          for (; l; ) (a = po(t, l, r) && a), (l = l.__ngNextListenerFn__);
          return i && !1 === a && (r.preventDefault(), (r.returnValue = !1)), a;
        };
      }
      function go(e = 1) {
        return (function (e) {
          return (ut.lFrame.contextLView = (function (e, t) {
            for (; e > 0; ) (t = t[15]), e--;
            return t;
          })(e, ut.lFrame.contextLView))[8];
        })(e);
      }
      function mo(e, t) {
        let n = null;
        const i = (function (e) {
          const t = e.attrs;
          if (null != t) {
            const e = t.indexOf(5);
            if (0 == (1 & e)) return t[e + 1];
          }
          return null;
        })(e);
        for (let s = 0; s < t.length; s++) {
          const r = t[s];
          if ("*" !== r) {
            if (null === i ? Ri(e, r, !0) : Ni(i, r)) return s;
          } else n = s;
        }
        return n;
      }
      function bo(e) {
        const t = dt()[16][6];
        if (!t.projection) {
          const n = (t.projection = we(e ? e.length : 1, null)),
            i = n.slice();
          let s = t.child;
          for (; null !== s; ) {
            const t = e ? mo(s, e) : 0;
            null !== t &&
              (i[t] ? (i[t].projectionNext = s) : (n[t] = s), (i[t] = s)),
              (s = s.next);
          }
        }
      }
      function vo(e, t = 0, n) {
        const i = dt(),
          s = pt(),
          r = Ki(s, i[6], e, 1, null, n || null);
        null === r.projection && (r.projection = t),
          vt(),
          (function (e, t, n) {
            Js(t[11], 0, t, n, Bs(e, n, t), qs(n.parent || t[6], t));
          })(s, i, r);
      }
      function yo(e, t, n, i, s) {
        const r = dt(),
          o = qr(r, t, n, i);
        return o !== Di && as(pt(), Dt(), r, e, o, r[11], s, !1), yo;
      }
      const wo = [];
      function So(e, t, n, i, s) {
        const r = e[n + 1],
          o = null === t;
        let a = i ? zi(r) : Bi(r),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const n = e[a + 1];
          _o(e[a], t) && ((l = !0), (e[a + 1] = i ? Ui(n) : Xi(n))),
            (a = i ? zi(n) : Bi(n));
        }
        l && (e[n + 1] = i ? Xi(r) : Ui(r));
      }
      function _o(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || "string" != typeof t) && Ce(e, t) >= 0)
        );
      }
      const Co = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Eo(e) {
        return e.substring(Co.key, Co.keyEnd);
      }
      function Oo(e) {
        return e.substring(Co.value, Co.valueEnd);
      }
      function xo(e, t) {
        const n = Co.textEnd;
        return n === t
          ? -1
          : ((t = Co.keyEnd =
              (function (e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; ) t++;
                return t;
              })(e, (Co.key = t), n)),
            Mo(e, t, n));
      }
      function To(e, t) {
        const n = Co.textEnd;
        let i = (Co.key = Mo(e, t, n));
        return n === i
          ? -1
          : ((i = Co.keyEnd =
              (function (e, t, n) {
                let i;
                for (
                  ;
                  t < n &&
                  (45 === (i = e.charCodeAt(t)) ||
                    95 === i ||
                    ((-33 & i) >= 65 && (-33 & i) <= 90));

                )
                  t++;
                return t;
              })(e, i, n)),
            (i = Io(e, i, n)),
            (i = Co.value = Mo(e, i, n)),
            (i = Co.valueEnd =
              (function (e, t, n) {
                let i = -1,
                  s = -1,
                  r = -1,
                  o = t,
                  a = o;
                for (; o < n; ) {
                  const l = e.charCodeAt(o++);
                  if (59 === l) return a;
                  34 === l || 39 === l
                    ? (a = o = Po(e, l, o, n))
                    : t === o - 4 &&
                      85 === r &&
                      82 === s &&
                      76 === i &&
                      40 === l
                    ? (a = o = Po(e, 41, o, n))
                    : l > 32 && (a = o),
                    (r = s),
                    (s = i),
                    (i = -33 & l);
                }
                return a;
              })(e, i, n)),
            Io(e, i, n));
      }
      function ko(e) {
        (Co.key = 0),
          (Co.keyEnd = 0),
          (Co.value = 0),
          (Co.valueEnd = 0),
          (Co.textEnd = e.length);
      }
      function Mo(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function Io(e, t, n, i) {
        return (t = Mo(e, t, n)) < n && t++, t;
      }
      function Po(e, t, n, i) {
        let s = -1,
          r = n;
        for (; r < i; ) {
          const n = e.charCodeAt(r++);
          if (n == t && 92 !== s) return r;
          s = 92 == n && 92 === s ? 0 : n;
        }
        throw new Error();
      }
      function Ro(e, t, n) {
        return Fo(e, t, n, !1), Ro;
      }
      function No(e, t) {
        return Fo(e, t, null, !0), No;
      }
      function Lo(e) {
        Vo(Ho, Ao, e, !1);
      }
      function Ao(e, t) {
        for (
          let n = (function (e) {
            return ko(e), To(e, Mo(e, 0, Co.textEnd));
          })(t);
          n >= 0;
          n = To(t, n)
        )
          Ho(e, Eo(t), Oo(t));
      }
      function Do(e) {
        Vo(Se, jo, e, !0);
      }
      function jo(e, t) {
        for (
          let n = (function (e) {
            return ko(e), xo(e, Mo(e, 0, Co.textEnd));
          })(t);
          n >= 0;
          n = xo(t, n)
        )
          Se(e, Eo(t), !0);
      }
      function Fo(e, t, n, i) {
        const s = dt(),
          r = pt(),
          o = Ct(2);
        if ((r.firstUpdatePass && zo(r, e, o, i), t !== Di && Br(s, o, t))) {
          let a;
          null == n &&
            (a = (function () {
              const e = ut.lFrame;
              return null === e ? null : e.currentSanitizer;
            })()) &&
            (n = a),
            Uo(
              r,
              r.data[Lt() + 19],
              s,
              s[11],
              e,
              (s[o + 1] = (function (e, t) {
                return (
                  null == e ||
                    ("function" == typeof t
                      ? (e = t(e))
                      : "string" == typeof t
                      ? (e += t)
                      : "object" == typeof e && (e = D(Nn(e)))),
                  e
                );
              })(t, n)),
              i,
              o
            );
        }
      }
      function Vo(e, t, n, i) {
        const s = pt(),
          r = Ct(2);
        s.firstUpdatePass && zo(s, null, r, i);
        const o = dt();
        if (n !== Di && Br(o, r, n)) {
          const a = s.data[Lt() + 19];
          if (qo(a, i) && !Wo(s, r)) {
            let e = i ? a.classes : a.styles;
            null !== e && (n = j(e, n || "")), to(s, a, o, n, i);
          } else
            !(function (e, t, n, i, s, r, o, a) {
              s === Di && (s = wo);
              let l = 0,
                c = 0,
                u = 0 < s.length ? s[0] : null,
                h = 0 < r.length ? r[0] : null;
              for (; null !== u || null !== h; ) {
                const d = l < s.length ? s[l + 1] : void 0,
                  p = c < r.length ? r[c + 1] : void 0;
                let f = null,
                  g = void 0;
                u === h
                  ? ((l += 2), (c += 2), d !== p && ((f = h), (g = p)))
                  : null === h || (null !== u && u < h)
                  ? ((l += 2), (f = u))
                  : ((c += 2), (f = h), (g = p)),
                  null !== f && Uo(e, t, n, i, f, g, o, a),
                  (u = l < s.length ? s[l] : null),
                  (h = c < r.length ? r[c] : null);
              }
            })(
              s,
              a,
              o,
              o[11],
              o[r + 1],
              (o[r + 1] = (function (e, t, n) {
                if (null == n || "" === n) return wo;
                const i = [],
                  s = Nn(n);
                if (Array.isArray(s))
                  for (let r = 0; r < s.length; r++) e(i, s[r], !0);
                else if ("object" == typeof s)
                  for (const r in s) s.hasOwnProperty(r) && e(i, r, s[r]);
                else "string" == typeof s && t(i, s);
                return i;
              })(e, t, n)),
              i,
              r
            );
        }
      }
      function Wo(e, t) {
        return t >= e.expandoStartIndex;
      }
      function zo(e, t, n, i) {
        const s = e.data;
        if (null === s[n + 1]) {
          const r = s[Lt() + 19],
            o = Wo(e, n);
          qo(r, i) && null === t && !o && (t = !1),
            (t = (function (e, t, n, i) {
              const s = (function (e) {
                const t = ut.lFrame.currentDirectiveIndex;
                return -1 === t ? null : e[t];
              })(e);
              let r = i ? t.residualClasses : t.residualStyles;
              if (null === s)
                0 === (i ? t.classBindings : t.styleBindings) &&
                  ((n = Bo((n = Xo(null, e, t, n, i)), t.attrs, i)),
                  (r = null));
              else {
                const o = t.directiveStylingLast;
                if (-1 === o || e[o] !== s)
                  if (((n = Xo(s, e, t, n, i)), null === r)) {
                    let n = (function (e, t, n) {
                      const i = n ? t.classBindings : t.styleBindings;
                      if (0 !== Bi(i)) return e[zi(i)];
                    })(e, t, i);
                    void 0 !== n &&
                      Array.isArray(n) &&
                      ((n = Xo(null, e, t, n[1], i)),
                      (n = Bo(n, t.attrs, i)),
                      (function (e, t, n, i) {
                        e[zi(n ? t.classBindings : t.styleBindings)] = i;
                      })(e, t, i, n));
                  } else
                    r = (function (e, t, n) {
                      let i = void 0;
                      const s = t.directiveEnd;
                      for (let r = 1 + t.directiveStylingLast; r < s; r++)
                        i = Bo(i, e[r].hostAttrs, n);
                      return Bo(i, t.attrs, n);
                    })(e, t, i);
              }
              return (
                void 0 !== r &&
                  (i ? (t.residualClasses = r) : (t.residualStyles = r)),
                n
              );
            })(s, r, t, i)),
            (function (e, t, n, i, s, r) {
              let o = r ? t.classBindings : t.styleBindings,
                a = zi(o),
                l = Bi(o);
              e[i] = n;
              let c,
                u = !1;
              if (Array.isArray(n)) {
                const e = n;
                (c = e[1]), (null === c || Ce(e, c) > 0) && (u = !0);
              } else c = n;
              if (s)
                if (0 !== l) {
                  const t = zi(e[a + 1]);
                  (e[i + 1] = Wi(t, a)),
                    0 !== t && (e[t + 1] = Hi(e[t + 1], i)),
                    (e[a + 1] = (131071 & e[a + 1]) | (i << 17));
                } else
                  (e[i + 1] = Wi(a, 0)),
                    0 !== a && (e[a + 1] = Hi(e[a + 1], i)),
                    (a = i);
              else
                (e[i + 1] = Wi(l, 0)),
                  0 === a ? (a = i) : (e[l + 1] = Hi(e[l + 1], i)),
                  (l = i);
              u && (e[i + 1] = Xi(e[i + 1])),
                So(e, c, i, !0),
                So(e, c, i, !1),
                (function (e, t, n, i, s) {
                  const r = s ? e.residualClasses : e.residualStyles;
                  null != r &&
                    "string" == typeof t &&
                    Ce(r, t) >= 0 &&
                    (n[i + 1] = Ui(n[i + 1]));
                })(t, c, e, i, r),
                (o = Wi(a, l)),
                r ? (t.classBindings = o) : (t.styleBindings = o);
            })(s, r, t, n, o, i);
        }
      }
      function Xo(e, t, n, i, s) {
        let r = null;
        const o = n.directiveEnd;
        let a = n.directiveStylingLast;
        for (
          -1 === a ? (a = n.directiveStart) : a++;
          a < o && ((r = t[a]), (i = Bo(i, r.hostAttrs, s)), r !== e);

        )
          a++;
        return null !== e && (n.directiveStylingLast = a), i;
      }
      function Bo(e, t, n) {
        const i = n ? 1 : 2;
        let s = -1;
        if (null !== t)
          for (let r = 0; r < t.length; r++) {
            const o = t[r];
            "number" == typeof o
              ? (s = o)
              : s === i &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]),
                Se(e, o, !!n || t[++r]));
          }
        return void 0 === e ? null : e;
      }
      function Ho(e, t, n) {
        Si(t) && (n = vi(n)), Se(e, t, n);
      }
      function Uo(e, t, n, i, s, r, o, a) {
        if (3 !== t.type) return;
        const l = e.data,
          c = l[a + 1];
        $o(1 == (1 & c) ? Go(l, t, n, s, Bi(c), o) : void 0) ||
          ($o(r) ||
            ((function (e) {
              return 2 == (2 & e);
            })(c) &&
              (r = Go(l, null, n, s, a, o))),
          (function (e, t, n, i, s) {
            const r = Ze(e);
            if (t)
              s
                ? r
                  ? e.addClass(n, i)
                  : n.classList.add(i)
                : r
                ? e.removeClass(n, i)
                : n.classList.remove(i);
            else {
              const t = -1 == i.indexOf("-") ? void 0 : 2;
              null == s
                ? r
                  ? e.removeStyle(n, i, t)
                  : n.style.removeProperty(i)
                : r
                ? e.setStyle(n, i, s, t)
                : n.style.setProperty(i, s);
            }
          })(i, o, et(Lt(), n), s, r));
      }
      function Go(e, t, n, i, s, r) {
        const o = null === t;
        let a = void 0;
        for (; s > 0; ) {
          const t = e[s],
            r = Array.isArray(t),
            l = r ? t[1] : t,
            c = null === l;
          let u = n[s + 1];
          u === Di && (u = c ? wo : void 0);
          let h = c ? _e(u, i) : l === i ? u : void 0;
          if ((r && !$o(h) && (h = _e(t, i)), $o(h) && ((a = h), o))) return a;
          const d = e[s + 1];
          s = o ? zi(d) : Bi(d);
        }
        if (null !== t) {
          let e = r ? t.residualClasses : t.residualStyles;
          null != e && (a = _e(e, i));
        }
        return a;
      }
      function $o(e) {
        return void 0 !== e;
      }
      function qo(e, t) {
        return 0 != (e.flags & (t ? 16 : 32));
      }
      function Ko(e, t = "") {
        const n = dt(),
          i = pt(),
          s = e + 19,
          r = i.firstCreatePass ? Ki(i, n[6], e, 3, null, null) : i.data[s],
          o = (n[s] = (function (e, t) {
            return Ze(t) ? t.createText(e) : t.createTextNode(e);
          })(t, n[11]));
        Ks(i, n, o, r), mt(r, !1);
      }
      function Yo(e) {
        return Zo("", e, ""), Yo;
      }
      function Zo(e, t, n) {
        const i = dt(),
          s = qr(i, e, t, n);
        return (
          s !== Di &&
            (function (e, t, n) {
              const i = et(t, e),
                s = e[11];
              Ze(s) ? s.setValue(i, n) : (i.textContent = n);
            })(i, Lt(), s),
          Zo
        );
      }
      function Qo(e, t, n) {
        Vo(Se, jo, qr(dt(), e, t, n), !0);
      }
      function Jo(e, t, n) {
        const i = dt();
        return Br(i, _t(), t) && as(pt(), Dt(), i, e, t, i[11], n, !0), Jo;
      }
      function ea(e, t) {
        const n = rt(e)[1],
          i = n.data.length - 1;
        jt(n, { directiveStart: i, directiveEnd: i + 1 });
      }
      function ta(e) {
        let t = Object.getPrototypeOf(e.type.prototype).constructor,
          n = !0;
        const i = [e];
        for (; t; ) {
          let s = void 0;
          if (Ge(e)) s = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Error("Directives cannot inherit Components");
            s = t.ɵdir;
          }
          if (s) {
            if (n) {
              i.push(s);
              const t = e;
              (t.inputs = na(e.inputs)),
                (t.declaredInputs = na(e.declaredInputs)),
                (t.outputs = na(e.outputs));
              const n = s.hostBindings;
              n && ra(e, n);
              const r = s.viewQuery,
                o = s.contentQueries;
              if (
                (r && ia(e, r),
                o && sa(e, o),
                O(e.inputs, s.inputs),
                O(e.declaredInputs, s.declaredInputs),
                O(e.outputs, s.outputs),
                Ge(s) && s.data.animation)
              ) {
                const t = e.data;
                t.animation = (t.animation || []).concat(s.data.animation);
              }
              (t.afterContentChecked =
                t.afterContentChecked || s.afterContentChecked),
                (t.afterContentInit = e.afterContentInit || s.afterContentInit),
                (t.afterViewChecked = e.afterViewChecked || s.afterViewChecked),
                (t.afterViewInit = e.afterViewInit || s.afterViewInit),
                (t.doCheck = e.doCheck || s.doCheck),
                (t.onDestroy = e.onDestroy || s.onDestroy),
                (t.onInit = e.onInit || s.onInit);
            }
            const t = s.features;
            if (t)
              for (let i = 0; i < t.length; i++) {
                const s = t[i];
                s && s.ngInherit && s(e), s === ta && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function (e) {
          let t = 0,
            n = null;
          for (let i = e.length - 1; i >= 0; i--) {
            const s = e[i];
            (s.hostVars = t += s.hostVars),
              (s.hostAttrs = $t(s.hostAttrs, (n = $t(n, s.hostAttrs))));
          }
        })(i);
      }
      function na(e) {
        return e === xe ? {} : e === Te ? [] : e;
      }
      function ia(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (e, i) => {
              t(e, i), n(e, i);
            }
          : t;
      }
      function sa(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (e, i, s) => {
              t(e, i, s), n(e, i, s);
            }
          : t;
      }
      function ra(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (e, i) => {
              t(e, i), n(e, i);
            }
          : t;
      }
      class oa {
        constructor(e, t, n) {
          (this.previousValue = e),
            (this.currentValue = t),
            (this.firstChange = n);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function aa(e) {
        e.type.prototype.ngOnChanges &&
          ((e.setInput = la),
          (e.onChanges = function () {
            const e = ca(this),
              t = e && e.current;
            if (t) {
              const n = e.previous;
              if (n === xe) e.previous = t;
              else for (let e in t) n[e] = t[e];
              (e.current = null), this.ngOnChanges(t);
            }
          }));
      }
      function la(e, t, n, i) {
        const s =
            ca(e) ||
            (function (e, t) {
              return (e.__ngSimpleChanges__ = t);
            })(e, { previous: xe, current: null }),
          r = s.current || (s.current = {}),
          o = s.previous,
          a = this.declaredInputs[n],
          l = o[a];
        (r[a] = new oa(l && l.currentValue, t, o === xe)), (e[i] = t);
      }
      function ca(e) {
        return e.__ngSimpleChanges__ || null;
      }
      function ua(e, t, n, i, s) {
        if (((e = W(e)), Array.isArray(e)))
          for (let r = 0; r < e.length; r++) ua(e[r], t, n, i, s);
        else {
          const r = pt(),
            o = dt();
          let a = Or(e) ? e : W(e.provide),
            l = _r(e);
          const c = gt(),
            u = 65535 & c.providerIndexes,
            h = c.directiveStart,
            d = c.providerIndexes >> 16;
          if (Or(e) || !e.multi) {
            const i = new Bt(l, s, Zr),
              p = pa(a, t, s ? u : u + d, h);
            -1 === p
              ? (pn(cn(c, o), r, a),
                ha(r, e, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                s && (c.providerIndexes += 65536),
                n.push(i),
                o.push(i))
              : ((n[p] = i), (o[p] = i));
          } else {
            const p = pa(a, t, u + d, h),
              f = pa(a, t, u, u + d),
              g = p >= 0 && n[p],
              m = f >= 0 && n[f];
            if ((s && !m) || (!s && !g)) {
              pn(cn(c, o), r, a);
              const u = (function (e, t, n, i, s) {
                const r = new Bt(e, n, Zr);
                return (
                  (r.multi = []),
                  (r.index = t),
                  (r.componentProviders = 0),
                  da(r, s, i && !n),
                  r
                );
              })(s ? ga : fa, n.length, s, i, l);
              !s && m && (n[f].providerFactory = u),
                ha(r, e, t.length),
                t.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                s && (c.providerIndexes += 65536),
                n.push(u),
                o.push(u);
            } else ha(r, e, p > -1 ? p : f), da(n[s ? f : p], l, !s && i);
            !s && i && m && n[f].componentProviders++;
          }
        }
      }
      function ha(e, t, n) {
        if (Or(t) || t.useClass) {
          const i = (t.useClass || t).prototype.ngOnDestroy;
          i && (e.destroyHooks || (e.destroyHooks = [])).push(n, i);
        }
      }
      function da(e, t, n) {
        e.multi.push(t), n && e.componentProviders++;
      }
      function pa(e, t, n, i) {
        for (let s = n; s < i; s++) if (t[s] === e) return s;
        return -1;
      }
      function fa(e, t, n, i) {
        return ma(this.multi, []);
      }
      function ga(e, t, n, i) {
        const s = this.multi;
        let r;
        if (this.providerFactory) {
          const e = this.providerFactory.componentProviders,
            t = vn(n, n[1], this.providerFactory.index, i);
          (r = t.slice(0, e)), ma(s, r);
          for (let n = e; n < t.length; n++) r.push(t[n]);
        } else (r = []), ma(s, r);
        return r;
      }
      function ma(e, t) {
        for (let n = 0; n < e.length; n++) t.push((0, e[n])());
        return t;
      }
      function ba(e, t = []) {
        return (n) => {
          n.providersResolver = (n, i) =>
            (function (e, t, n) {
              const i = pt();
              if (i.firstCreatePass) {
                const s = Ge(e);
                ua(n, i.data, i.blueprint, s, !0),
                  ua(t, i.data, i.blueprint, s, !1);
              }
            })(n, i ? i(e) : e, t);
        };
      }
      aa.ngInherit = !0;
      class va {}
      class ya {
        resolveComponentFactory(e) {
          throw (function (e) {
            const t = Error(
              `No component factory found for ${D(
                e
              )}. Did you add it to @NgModule.entryComponents?`
            );
            return (t.ngComponent = e), t;
          })(e);
        }
      }
      let wa = (() => {
          class e {}
          return (e.NULL = new ya()), e;
        })(),
        Sa = (() => {
          class e {
            constructor(e) {
              this.nativeElement = e;
            }
          }
          return (e.__NG_ELEMENT_ID__ = () => _a(e)), e;
        })();
      const _a = function (e) {
        return ar(e, gt(), dt());
      };
      class Ca {}
      const Ea = (function () {
        var e = { Important: 1, DashCase: 2 };
        return (e[e.Important] = "Important"), (e[e.DashCase] = "DashCase"), e;
      })();
      let Oa = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => xa()), e;
      })();
      const xa = function () {
        const e = dt(),
          t = st(gt().index, e);
        return (function (e) {
          const t = e[11];
          if (Ze(t)) return t;
          throw new Error(
            "Cannot inject Renderer2 when the application uses Renderer3!"
          );
        })(ze(t) ? t : e);
      };
      let Ta = (() => {
        class e {}
        return (
          (e.ɵprov = x({ token: e, providedIn: "root", factory: () => null })),
          e
        );
      })();
      class ka {
        constructor(e) {
          (this.full = e),
            (this.major = e.split(".")[0]),
            (this.minor = e.split(".")[1]),
            (this.patch = e.split(".").slice(2).join("."));
        }
      }
      const Ma = new ka("9.0.7");
      class Ia {
        constructor() {}
        supports(e) {
          return Vr(e);
        }
        create(e) {
          return new Ra(e);
        }
      }
      const Pa = (e, t) => t;
      class Ra {
        constructor(e) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = e || Pa);
        }
        forEachItem(e) {
          let t;
          for (t = this._itHead; null !== t; t = t._next) e(t);
        }
        forEachOperation(e) {
          let t = this._itHead,
            n = this._removalsHead,
            i = 0,
            s = null;
          for (; t || n; ) {
            const r = !n || (t && t.currentIndex < Da(n, i, s)) ? t : n,
              o = Da(r, i, s),
              a = r.currentIndex;
            if (r === n) i--, (n = n._nextRemoved);
            else if (((t = t._next), null == r.previousIndex)) i++;
            else {
              s || (s = []);
              const e = o - i,
                t = a - i;
              if (e != t) {
                for (let n = 0; n < e; n++) {
                  const i = n < s.length ? s[n] : (s[n] = 0),
                    r = i + n;
                  t <= r && r < e && (s[n] = i + 1);
                }
                s[r.previousIndex] = t - e;
              }
            }
            o !== a && e(r, o, a);
          }
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousItHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachMovedItem(e) {
          let t;
          for (t = this._movesHead; null !== t; t = t._nextMoved) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        forEachIdentityChange(e) {
          let t;
          for (
            t = this._identityChangesHead;
            null !== t;
            t = t._nextIdentityChange
          )
            e(t);
        }
        diff(e) {
          if ((null == e && (e = []), !Vr(e)))
            throw new Error(
              `Error trying to diff '${D(
                e
              )}'. Only arrays and iterables are allowed`
            );
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let t,
            n,
            i,
            s = this._itHead,
            r = !1;
          if (Array.isArray(e)) {
            this.length = e.length;
            for (let t = 0; t < this.length; t++)
              (n = e[t]),
                (i = this._trackByFn(t, n)),
                null !== s && jr(s.trackById, i)
                  ? (r && (s = this._verifyReinsertion(s, n, i, t)),
                    jr(s.item, n) || this._addIdentityChange(s, n))
                  : ((s = this._mismatch(s, n, i, t)), (r = !0)),
                (s = s._next);
          } else
            (t = 0),
              (function (e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Dr()]();
                  let i;
                  for (; !(i = n.next()).done; ) t(i.value);
                }
              })(e, (e) => {
                (i = this._trackByFn(t, e)),
                  null !== s && jr(s.trackById, i)
                    ? (r && (s = this._verifyReinsertion(s, e, i, t)),
                      jr(s.item, e) || this._addIdentityChange(s, e))
                    : ((s = this._mismatch(s, e, i, t)), (r = !0)),
                  (s = s._next),
                  t++;
              }),
              (this.length = t);
          return this._truncate(s), (this.collection = e), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let e, t;
            for (
              e = this._previousItHead = this._itHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._additionsHead; null !== e; e = e._nextAdded)
              e.previousIndex = e.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                e = this._movesHead;
              null !== e;
              e = t
            )
              (e.previousIndex = e.currentIndex), (t = e._nextMoved);
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(e, t, n, i) {
          let s;
          return (
            null === e ? (s = this._itTail) : ((s = e._prev), this._remove(e)),
            null !==
            (e =
              null === this._linkedRecords
                ? null
                : this._linkedRecords.get(n, i))
              ? (jr(e.item, t) || this._addIdentityChange(e, t),
                this._moveAfter(e, s, i))
              : null !==
                (e =
                  null === this._unlinkedRecords
                    ? null
                    : this._unlinkedRecords.get(n, null))
              ? (jr(e.item, t) || this._addIdentityChange(e, t),
                this._reinsertAfter(e, s, i))
              : (e = this._addAfter(new Na(t, n), s, i)),
            e
          );
        }
        _verifyReinsertion(e, t, n, i) {
          let s =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(n, null);
          return (
            null !== s
              ? (e = this._reinsertAfter(s, e._prev, i))
              : e.currentIndex != i &&
                ((e.currentIndex = i), this._addToMoves(e, i)),
            e
          );
        }
        _truncate(e) {
          for (; null !== e; ) {
            const t = e._next;
            this._addToRemovals(this._unlink(e)), (e = t);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(e, t, n) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(e);
          const i = e._prevRemoved,
            s = e._nextRemoved;
          return (
            null === i ? (this._removalsHead = s) : (i._nextRemoved = s),
            null === s ? (this._removalsTail = i) : (s._prevRemoved = i),
            this._insertAfter(e, t, n),
            this._addToMoves(e, n),
            e
          );
        }
        _moveAfter(e, t, n) {
          return (
            this._unlink(e),
            this._insertAfter(e, t, n),
            this._addToMoves(e, n),
            e
          );
        }
        _addAfter(e, t, n) {
          return (
            this._insertAfter(e, t, n),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = e)
                : (this._additionsTail._nextAdded = e)),
            e
          );
        }
        _insertAfter(e, t, n) {
          const i = null === t ? this._itHead : t._next;
          return (
            (e._next = i),
            (e._prev = t),
            null === i ? (this._itTail = e) : (i._prev = e),
            null === t ? (this._itHead = e) : (t._next = e),
            null === this._linkedRecords && (this._linkedRecords = new Aa()),
            this._linkedRecords.put(e),
            (e.currentIndex = n),
            e
          );
        }
        _remove(e) {
          return this._addToRemovals(this._unlink(e));
        }
        _unlink(e) {
          null !== this._linkedRecords && this._linkedRecords.remove(e);
          const t = e._prev,
            n = e._next;
          return (
            null === t ? (this._itHead = n) : (t._next = n),
            null === n ? (this._itTail = t) : (n._prev = t),
            e
          );
        }
        _addToMoves(e, t) {
          return (
            e.previousIndex === t ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = e)
                  : (this._movesTail._nextMoved = e)),
            e
          );
        }
        _addToRemovals(e) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Aa()),
            this._unlinkedRecords.put(e),
            (e.currentIndex = null),
            (e._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = e),
                (e._prevRemoved = null))
              : ((e._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = e)),
            e
          );
        }
        _addIdentityChange(e, t) {
          return (
            (e.item = t),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = e)
                : (this._identityChangesTail._nextIdentityChange = e)),
            e
          );
        }
      }
      class Na {
        constructor(e, t) {
          (this.item = e),
            (this.trackById = t),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class La {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(e) {
          null === this._head
            ? ((this._head = this._tail = e),
              (e._nextDup = null),
              (e._prevDup = null))
            : ((this._tail._nextDup = e),
              (e._prevDup = this._tail),
              (e._nextDup = null),
              (this._tail = e));
        }
        get(e, t) {
          let n;
          for (n = this._head; null !== n; n = n._nextDup)
            if ((null === t || t <= n.currentIndex) && jr(n.trackById, e))
              return n;
          return null;
        }
        remove(e) {
          const t = e._prevDup,
            n = e._nextDup;
          return (
            null === t ? (this._head = n) : (t._nextDup = n),
            null === n ? (this._tail = t) : (n._prevDup = t),
            null === this._head
          );
        }
      }
      class Aa {
        constructor() {
          this.map = new Map();
        }
        put(e) {
          const t = e.trackById;
          let n = this.map.get(t);
          n || ((n = new La()), this.map.set(t, n)), n.add(e);
        }
        get(e, t) {
          const n = this.map.get(e);
          return n ? n.get(e, t) : null;
        }
        remove(e) {
          const t = e.trackById;
          return this.map.get(t).remove(e) && this.map.delete(t), e;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Da(e, t, n) {
        const i = e.previousIndex;
        if (null === i) return i;
        let s = 0;
        return n && i < n.length && (s = n[i]), i + t + s;
      }
      class ja {
        constructor() {}
        supports(e) {
          return e instanceof Map || Wr(e);
        }
        create() {
          return new Fa();
        }
      }
      class Fa {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(e) {
          let t;
          for (t = this._mapHead; null !== t; t = t._next) e(t);
        }
        forEachPreviousItem(e) {
          let t;
          for (t = this._previousMapHead; null !== t; t = t._nextPrevious) e(t);
        }
        forEachChangedItem(e) {
          let t;
          for (t = this._changesHead; null !== t; t = t._nextChanged) e(t);
        }
        forEachAddedItem(e) {
          let t;
          for (t = this._additionsHead; null !== t; t = t._nextAdded) e(t);
        }
        forEachRemovedItem(e) {
          let t;
          for (t = this._removalsHead; null !== t; t = t._nextRemoved) e(t);
        }
        diff(e) {
          if (e) {
            if (!(e instanceof Map || Wr(e)))
              throw new Error(
                `Error trying to diff '${D(
                  e
                )}'. Only maps and objects are allowed`
              );
          } else e = new Map();
          return this.check(e) ? this : null;
        }
        onDestroy() {}
        check(e) {
          this._reset();
          let t = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(e, (e, n) => {
              if (t && t.key === n)
                this._maybeAddToChanges(t, e),
                  (this._appendAfter = t),
                  (t = t._next);
              else {
                const i = this._getOrCreateRecordForKey(n, e);
                t = this._insertBeforeOrAppend(t, i);
              }
            }),
            t)
          ) {
            t._prev && (t._prev._next = null), (this._removalsHead = t);
            for (let e = t; null !== e; e = e._nextRemoved)
              e === this._mapHead && (this._mapHead = null),
                this._records.delete(e.key),
                (e._nextRemoved = e._next),
                (e.previousValue = e.currentValue),
                (e.currentValue = null),
                (e._prev = null),
                (e._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(e, t) {
          if (e) {
            const n = e._prev;
            return (
              (t._next = e),
              (t._prev = n),
              (e._prev = t),
              n && (n._next = t),
              e === this._mapHead && (this._mapHead = t),
              (this._appendAfter = e),
              e
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = t), (t._prev = this._appendAfter))
              : (this._mapHead = t),
            (this._appendAfter = t),
            null
          );
        }
        _getOrCreateRecordForKey(e, t) {
          if (this._records.has(e)) {
            const n = this._records.get(e);
            this._maybeAddToChanges(n, t);
            const i = n._prev,
              s = n._next;
            return (
              i && (i._next = s),
              s && (s._prev = i),
              (n._next = null),
              (n._prev = null),
              n
            );
          }
          const n = new Va(e);
          return (
            this._records.set(e, n),
            (n.currentValue = t),
            this._addToAdditions(n),
            n
          );
        }
        _reset() {
          if (this.isDirty) {
            let e;
            for (
              this._previousMapHead = this._mapHead, e = this._previousMapHead;
              null !== e;
              e = e._next
            )
              e._nextPrevious = e._next;
            for (e = this._changesHead; null !== e; e = e._nextChanged)
              e.previousValue = e.currentValue;
            for (e = this._additionsHead; null != e; e = e._nextAdded)
              e.previousValue = e.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(e, t) {
          jr(t, e.currentValue) ||
            ((e.previousValue = e.currentValue),
            (e.currentValue = t),
            this._addToChanges(e));
        }
        _addToAdditions(e) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = e)
            : ((this._additionsTail._nextAdded = e), (this._additionsTail = e));
        }
        _addToChanges(e) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = e)
            : ((this._changesTail._nextChanged = e), (this._changesTail = e));
        }
        _forEach(e, t) {
          e instanceof Map
            ? e.forEach(t)
            : Object.keys(e).forEach((n) => t(e[n], n));
        }
      }
      class Va {
        constructor(e) {
          (this.key = e),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      let Wa = (() => {
          class e {
            constructor(e) {
              this.factories = e;
            }
            static create(t, n) {
              if (null != n) {
                const e = n.factories.slice();
                t = t.concat(e);
              }
              return new e(t);
            }
            static extend(t) {
              return {
                provide: e,
                useFactory: (n) => {
                  if (!n)
                    throw new Error(
                      "Cannot extend IterableDiffers without a parent injector"
                    );
                  return e.create(t, n);
                },
                deps: [[e, new _(), new w()]],
              };
            }
            find(e) {
              const t = this.factories.find((t) => t.supports(e));
              if (null != t) return t;
              throw new Error(
                `Cannot find a differ supporting object '${e}' of type '${
                  ((n = e), n.name || typeof n)
                }'`
              );
              var n;
            }
          }
          return (
            (e.ɵprov = x({
              token: e,
              providedIn: "root",
              factory: () => new e([new Ia()]),
            })),
            e
          );
        })(),
        za = (() => {
          class e {
            constructor(e) {
              this.factories = e;
            }
            static create(t, n) {
              if (n) {
                const e = n.factories.slice();
                t = t.concat(e);
              }
              return new e(t);
            }
            static extend(t) {
              return {
                provide: e,
                useFactory: (n) => {
                  if (!n)
                    throw new Error(
                      "Cannot extend KeyValueDiffers without a parent injector"
                    );
                  return e.create(t, n);
                },
                deps: [[e, new _(), new w()]],
              };
            }
            find(e) {
              const t = this.factories.find((t) => t.supports(e));
              if (t) return t;
              throw new Error(`Cannot find a differ supporting object '${e}'`);
            }
          }
          return (
            (e.ɵprov = x({
              token: e,
              providedIn: "root",
              factory: () => new e([new ja()]),
            })),
            e
          );
        })();
      const Xa = [new ja()],
        Ba = new Wa([new Ia()]),
        Ha = new za(Xa);
      let Ua = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => Ga(e, Sa)), e;
      })();
      const Ga = function (e, t) {
        return lr(e, t, gt(), dt());
      };
      let $a = (() => {
        class e {}
        return (e.__NG_ELEMENT_ID__ = () => qa(e, Sa)), e;
      })();
      const qa = function (e, t) {
          return cr(e, t, gt(), dt());
        },
        Ka = {};
      class Ya extends wa {
        constructor(e) {
          super(), (this.ngModule = e);
        }
        resolveComponentFactory(e) {
          const t = Fe(e);
          return new Ja(t, this.ngModule);
        }
      }
      function Za(e) {
        const t = [];
        for (let n in e)
          e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n });
        return t;
      }
      const Qa = new ee("SCHEDULER_TOKEN", {
        providedIn: "root",
        factory: () => tn,
      });
      class Ja extends va {
        constructor(e, t) {
          super(),
            (this.componentDef = e),
            (this.ngModule = t),
            (this.componentType = e.type),
            (this.selector = e.selectors.map(Ai).join(",")),
            (this.ngContentSelectors = e.ngContentSelectors
              ? e.ngContentSelectors
              : []),
            (this.isBoundToModule = !!t);
        }
        get inputs() {
          return Za(this.componentDef.inputs);
        }
        get outputs() {
          return Za(this.componentDef.outputs);
        }
        create(e, t, n, i) {
          const s = (i = i || this.ngModule)
              ? (function (e, t) {
                  return {
                    get: (n, i, s) => {
                      const r = e.get(n, Ka, s);
                      return r !== Ka || i === Ka ? r : t.get(n, i, s);
                    },
                  };
                })(e, i.injector)
              : e,
            r = s.get(Ca, Qe),
            o = s.get(Ta, null),
            a = r.createRenderer(null, this.componentDef),
            l = this.componentDef.selectors[0][0] || "div",
            c = n
              ? (function (e, t, n) {
                  if (Ze(e)) return e.selectRootElement(t, n === Oe.ShadowDom);
                  let i = "string" == typeof t ? e.querySelector(t) : t;
                  return (i.textContent = ""), i;
                })(a, n, this.componentDef.encapsulation)
              : $i(
                  l,
                  r.createRenderer(null, this.componentDef),
                  (function (e) {
                    const t = e.toLowerCase();
                    return "svg" === t
                      ? "http://www.w3.org/2000/svg"
                      : "math" === t
                      ? "http://www.w3.org/1998/MathML/"
                      : null;
                  })(l)
                ),
            u = this.componentDef.onPush ? 576 : 528,
            h =
              "string" == typeof n && /^#root-ng-internal-isolated-\d+/.test(n),
            d = {
              components: [],
              scheduler: tn,
              clean: Ms,
              playerHandler: null,
              flags: 0,
            },
            p = ss(0, -1, null, 1, 0, null, null, null, null, null),
            f = qi(null, p, d, u, null, null, r, a, o, s);
          let g, m;
          kt(f, null);
          try {
            const e = (function (e, t, n, i, s, r) {
              const o = n[1];
              n[19] = e;
              const a = Ki(o, null, 0, 3, null, null),
                l = (a.mergedAttrs = t.hostAttrs);
              null !== l &&
                (Lr(a, l),
                null !== e &&
                  (Ht(s, e, l),
                  null !== a.classes && tr(s, e, a.classes),
                  null !== a.styles && er(s, e, a.styles)));
              const c = i.createRenderer(e, t),
                u = qi(
                  n,
                  is(t),
                  null,
                  t.onPush ? 64 : 16,
                  n[19],
                  a,
                  i,
                  c,
                  void 0
                );
              return (
                o.firstCreatePass &&
                  (pn(cn(a, n), o, t.type), ps(o, a), gs(a, n.length, 1)),
                Es(n, u),
                (n[19] = u)
              );
            })(c, this.componentDef, f, r, a);
            if (c)
              if (n) Ht(a, c, ["ng-version", Ma.full]);
              else {
                const { attrs: e, classes: t } = (function (e) {
                  const t = [],
                    n = [];
                  let i = 1,
                    s = 2;
                  for (; i < e.length; ) {
                    let r = e[i];
                    if ("string" == typeof r)
                      2 === s
                        ? "" !== r && t.push(r, e[++i])
                        : 8 === s && n.push(r);
                    else {
                      if (!Ii(s)) break;
                      s = r;
                    }
                    i++;
                  }
                  return { attrs: t, classes: n };
                })(this.componentDef.selectors[0]);
                e && Ht(a, c, e), t && t.length > 0 && tr(a, c, t.join(" "));
              }
            (m = nt(f[1], 0)),
              t && (m.projection = t.map((e) => Array.from(e))),
              (g = (function (e, t, n, i, s) {
                const r = n[1],
                  o = (function (e, t, n) {
                    const i = gt();
                    e.firstCreatePass &&
                      (n.providersResolver && n.providersResolver(n),
                      ds(e, i, 1),
                      ms(e, t, n));
                    const s = vn(t, e, t.length - 1, i);
                    Ci(s, t);
                    const r = tt(i, t);
                    return r && Ci(r, t), s;
                  })(r, n, t);
                i.components.push(o),
                  (e[8] = o),
                  s && s.forEach((e) => e(o, t)),
                  t.contentQueries && t.contentQueries(1, o, n.length - 1);
                const a = gt();
                if (
                  r.firstCreatePass &&
                  (null !== t.hostBindings || null !== t.hostAttrs)
                ) {
                  At(a.index - 19);
                  const e = n[1];
                  cs(e, t), us(e, n, t.hostVars), hs(t, o);
                }
                return o;
              })(e, this.componentDef, f, d, [ea])),
              Yi(p, f, null);
          } finally {
            Nt();
          }
          const b = new el(this.componentType, g, ar(Sa, m, f), f, m);
          return (n && !h) || (b.hostView._tViewNode.child = m), b;
        }
      }
      class el extends class {} {
        constructor(e, t, n, i, s) {
          super(),
            (this.location = n),
            (this._rootLView = i),
            (this._tNode = s),
            (this.destroyCbs = []),
            (this.instance = t),
            (this.hostView = this.changeDetectorRef = new ir(i)),
            (this.hostView._tViewNode = (function (e, t, n, i) {
              let s = e.node;
              return (
                null == s && (e.node = s = rs(0, null, 2, -1, null, null)),
                (i[6] = s)
              );
            })(i[1], 0, 0, i)),
            (this.componentType = e);
        }
        get injector() {
          return new Sn(this._tNode, this._rootLView);
        }
        destroy() {
          this.destroyCbs &&
            (this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null),
            !this.hostView.destroyed && this.hostView.destroy());
        }
        onDestroy(e) {
          this.destroyCbs && this.destroyCbs.push(e);
        }
      }
      const tl = void 0;
      var nl = [
        "en",
        [["a", "p"], ["AM", "PM"], tl],
        [["AM", "PM"], tl, tl],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        tl,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        tl,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", tl, "{1} 'at' {0}", tl],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        function (e) {
          let t = Math.floor(Math.abs(e)),
            n = e.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === t && 0 === n ? 1 : 5;
        },
      ];
      let il = {};
      function sl(e, t, n) {
        "string" != typeof t && ((n = t), (t = e[cl.LocaleId])),
          (t = t.toLowerCase().replace(/_/g, "-")),
          (il[t] = e),
          n && (il[t][cl.ExtraData] = n);
      }
      function rl(e) {
        const t = (function (e) {
          return e.toLowerCase().replace(/_/g, "-");
        })(e);
        let n = ll(t);
        if (n) return n;
        const i = t.split("-")[0];
        if (((n = ll(i)), n)) return n;
        if ("en" === i) return nl;
        throw new Error(`Missing locale data for the locale "${e}".`);
      }
      function ol(e) {
        return rl(e)[cl.CurrencyCode] || null;
      }
      function al(e) {
        return rl(e)[cl.PluralCase];
      }
      function ll(e) {
        return (
          e in il ||
            (il[e] =
              G.ng &&
              G.ng.common &&
              G.ng.common.locales &&
              G.ng.common.locales[e]),
          il[e]
        );
      }
      const cl = (function () {
        var e = {
          LocaleId: 0,
          DayPeriodsFormat: 1,
          DayPeriodsStandalone: 2,
          DaysFormat: 3,
          DaysStandalone: 4,
          MonthsFormat: 5,
          MonthsStandalone: 6,
          Eras: 7,
          FirstDayOfWeek: 8,
          WeekendRange: 9,
          DateFormat: 10,
          TimeFormat: 11,
          DateTimeFormat: 12,
          NumberSymbols: 13,
          NumberFormats: 14,
          CurrencyCode: 15,
          CurrencySymbol: 16,
          CurrencyName: 17,
          Currencies: 18,
          PluralCase: 19,
          ExtraData: 20,
        };
        return (
          (e[e.LocaleId] = "LocaleId"),
          (e[e.DayPeriodsFormat] = "DayPeriodsFormat"),
          (e[e.DayPeriodsStandalone] = "DayPeriodsStandalone"),
          (e[e.DaysFormat] = "DaysFormat"),
          (e[e.DaysStandalone] = "DaysStandalone"),
          (e[e.MonthsFormat] = "MonthsFormat"),
          (e[e.MonthsStandalone] = "MonthsStandalone"),
          (e[e.Eras] = "Eras"),
          (e[e.FirstDayOfWeek] = "FirstDayOfWeek"),
          (e[e.WeekendRange] = "WeekendRange"),
          (e[e.DateFormat] = "DateFormat"),
          (e[e.TimeFormat] = "TimeFormat"),
          (e[e.DateTimeFormat] = "DateTimeFormat"),
          (e[e.NumberSymbols] = "NumberSymbols"),
          (e[e.NumberFormats] = "NumberFormats"),
          (e[e.CurrencyCode] = "CurrencyCode"),
          (e[e.CurrencySymbol] = "CurrencySymbol"),
          (e[e.CurrencyName] = "CurrencyName"),
          (e[e.Currencies] = "Currencies"),
          (e[e.PluralCase] = "PluralCase"),
          (e[e.ExtraData] = "ExtraData"),
          e
        );
      })();
      let ul = "en-US";
      function hl(e) {
        var t, n;
        (n = "Expected localeId to be defined"),
          null == (t = e) &&
            (function (e, t, n, i) {
              throw new Error(
                "ASSERTION ERROR: " + e + ` [Expected=> null != ${t} <=Actual]`
              );
            })(n, t),
          "string" == typeof e && (ul = e.toLowerCase().replace(/_/g, "-"));
      }
      const dl = new Map();
      class pl extends ge {
        constructor(e, t) {
          super(),
            (this._parent = t),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new Ya(this));
          const n = We(e),
            i = e[Z] || null;
          i && hl(i),
            (this._bootstrapComponents = rn(n.bootstrap)),
            (this._r3Injector = yr(
              e,
              t,
              [
                { provide: ge, useValue: this },
                { provide: wa, useValue: this.componentFactoryResolver },
              ],
              D(e)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(e));
        }
        get(e, t = Tr.THROW_IF_NOT_FOUND, n = C.Default) {
          return e === Tr || e === ge || e === te
            ? this
            : this._r3Injector.get(e, t, n);
        }
        destroy() {
          const e = this._r3Injector;
          !e.destroyed && e.destroy(),
            this.destroyCbs.forEach((e) => e()),
            (this.destroyCbs = null);
        }
        onDestroy(e) {
          this.destroyCbs.push(e);
        }
      }
      class fl extends me {
        constructor(e) {
          super(),
            (this.moduleType = e),
            null !== We(e) &&
              (function e(t) {
                if (null !== t.ɵmod.id) {
                  const e = t.ɵmod.id;
                  (function (e, t, n) {
                    if (t && t !== n)
                      throw new Error(
                        `Duplicate module registered for ${e} - ${D(t)} vs ${D(
                          t.name
                        )}`
                      );
                  })(e, dl.get(e), t),
                    dl.set(e, t);
                }
                let n = t.ɵmod.imports;
                n instanceof Function && (n = n()), n && n.forEach((t) => e(t));
              })(e);
        }
        create(e) {
          return new pl(this.moduleType, e);
        }
      }
      function gl(e, t, n) {
        const i = St() + e,
          s = dt();
        return s[i] === Di ? zr(s, i, n ? t.call(n) : t()) : Xr(s, i);
      }
      function ml(e, t, n, i) {
        return Ol(dt(), St(), e, t, n, i);
      }
      function bl(e, t, n, i, s) {
        return xl(dt(), St(), e, t, n, i, s);
      }
      function vl(e, t, n, i, s, r) {
        return Tl(dt(), St(), e, t, n, i, s, r);
      }
      function yl(e, t, n, i, s, r, o) {
        return kl(dt(), St(), e, t, n, i, s, r, o);
      }
      function wl(e, t, n, i, s, r, o, a) {
        const l = St() + e,
          c = dt(),
          u = Gr(c, l, n, i, s, r);
        return Br(c, l + 4, o) || u
          ? zr(c, l + 5, a ? t.call(a, n, i, s, r, o) : t(n, i, s, r, o))
          : Xr(c, l + 5);
      }
      function Sl(e, t, n, i, s, r, o, a, l) {
        const c = St() + e,
          u = dt(),
          h = Gr(u, c, n, i, s, r);
        return Hr(u, c + 4, o, a) || h
          ? zr(u, c + 6, l ? t.call(l, n, i, s, r, o, a) : t(n, i, s, r, o, a))
          : Xr(u, c + 6);
      }
      function _l(e, t, n, i, s, r, o, a, l, c) {
        const u = St() + e,
          h = dt();
        let d = Gr(h, u, n, i, s, r);
        return Ur(h, u + 4, o, a, l) || d
          ? zr(
              h,
              u + 7,
              c ? t.call(c, n, i, s, r, o, a, l) : t(n, i, s, r, o, a, l)
            )
          : Xr(h, u + 7);
      }
      function Cl(e, t, n, i) {
        return (function (e, t, n, i, s, r) {
          let o = t + n,
            a = !1;
          for (let l = 0; l < s.length; l++) Br(e, o++, s[l]) && (a = !0);
          return a ? zr(e, o, i.apply(r, s)) : El(e, o);
        })(dt(), St(), e, t, n, i);
      }
      function El(e, t) {
        const n = e[t];
        return n === Di ? void 0 : n;
      }
      function Ol(e, t, n, i, s, r) {
        const o = t + n;
        return Br(e, o, s)
          ? zr(e, o + 1, r ? i.call(r, s) : i(s))
          : El(e, o + 1);
      }
      function xl(e, t, n, i, s, r, o) {
        const a = t + n;
        return Hr(e, a, s, r)
          ? zr(e, a + 2, o ? i.call(o, s, r) : i(s, r))
          : El(e, a + 2);
      }
      function Tl(e, t, n, i, s, r, o, a) {
        const l = t + n;
        return Ur(e, l, s, r, o)
          ? zr(e, l + 3, a ? i.call(a, s, r, o) : i(s, r, o))
          : El(e, l + 3);
      }
      function kl(e, t, n, i, s, r, o, a, l) {
        const c = t + n;
        return Gr(e, c, s, r, o, a)
          ? zr(e, c + 4, l ? i.call(l, s, r, o, a) : i(s, r, o, a))
          : El(e, c + 4);
      }
      function Ml(e, t) {
        const n = pt();
        let i;
        const s = e + 19;
        n.firstCreatePass
          ? ((i = (function (e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const i = t[n];
                  if (e === i.name) return i;
                }
              throw new Error(`The pipe '${e}' could not be found!`);
            })(t, n.pipeRegistry)),
            (n.data[s] = i),
            i.onDestroy &&
              (n.destroyHooks || (n.destroyHooks = [])).push(s, i.onDestroy))
          : (i = n.data[s]);
        const r = i.factory || (i.factory = Ve(i.type)),
          o = le(Zr),
          a = r();
        return (
          le(o),
          (function (e, t, n, i) {
            const s = n + 19;
            s >= e.data.length && ((e.data[s] = null), (e.blueprint[s] = null)),
              (t[s] = i);
          })(n, dt(), e, a),
          a
        );
      }
      function Il(e, t, n) {
        const i = dt(),
          s = it(i, e);
        return Al(
          i,
          Ll(i, e) ? Ol(i, St(), t, s.transform, n, s) : s.transform(n)
        );
      }
      function Pl(e, t, n, i) {
        const s = dt(),
          r = it(s, e);
        return Al(
          s,
          Ll(s, e) ? xl(s, St(), t, r.transform, n, i, r) : r.transform(n, i)
        );
      }
      function Rl(e, t, n, i, s) {
        const r = dt(),
          o = it(r, e);
        return Al(
          r,
          Ll(r, e)
            ? Tl(r, St(), t, o.transform, n, i, s, o)
            : o.transform(n, i, s)
        );
      }
      function Nl(e, t, n, i, s, r) {
        const o = dt(),
          a = it(o, e);
        return Al(
          o,
          Ll(o, e)
            ? kl(o, St(), t, a.transform, n, i, s, r, a)
            : a.transform(n, i, s, r)
        );
      }
      function Ll(e, t) {
        return e[1].data[t + 19].pure;
      }
      function Al(e, t) {
        return (
          Fr.isWrapped(t) &&
            ((t = Fr.unwrap(t)), (e[ut.lFrame.bindingIndex] = Di)),
          t
        );
      }
      class Dl extends i.b {
        constructor(e = !1) {
          super(), (this.__isAsync = e);
        }
        emit(e) {
          super.next(e);
        }
        subscribe(e, t, n) {
          let i,
            r = (e) => null,
            o = () => null;
          e && "object" == typeof e
            ? ((i = this.__isAsync
                ? (t) => {
                    setTimeout(() => e.next(t));
                  }
                : (t) => {
                    e.next(t);
                  }),
              e.error &&
                (r = this.__isAsync
                  ? (t) => {
                      setTimeout(() => e.error(t));
                    }
                  : (t) => {
                      e.error(t);
                    }),
              e.complete &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => e.complete());
                    }
                  : () => {
                      e.complete();
                    }))
            : ((i = this.__isAsync
                ? (t) => {
                    setTimeout(() => e(t));
                  }
                : (t) => {
                    e(t);
                  }),
              t &&
                (r = this.__isAsync
                  ? (e) => {
                      setTimeout(() => t(e));
                    }
                  : (e) => {
                      t(e);
                    }),
              n &&
                (o = this.__isAsync
                  ? () => {
                      setTimeout(() => n());
                    }
                  : () => {
                      n();
                    }));
          const a = super.subscribe(i, r, o);
          return e instanceof s.a && e.add(a), a;
        }
      }
      function jl() {
        return this._results[Dr()]();
      }
      class Fl {
        constructor() {
          (this.dirty = !0),
            (this._results = []),
            (this.changes = new Dl()),
            (this.length = 0);
          const e = Dr(),
            t = Fl.prototype;
          t[e] || (t[e] = jl);
        }
        map(e) {
          return this._results.map(e);
        }
        filter(e) {
          return this._results.filter(e);
        }
        find(e) {
          return this._results.find(e);
        }
        reduce(e, t) {
          return this._results.reduce(e, t);
        }
        forEach(e) {
          this._results.forEach(e);
        }
        some(e) {
          return this._results.some(e);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(e) {
          (this._results = (function e(t, n) {
            void 0 === n && (n = t);
            for (let i = 0; i < t.length; i++) {
              let s = t[i];
              Array.isArray(s)
                ? (n === t && (n = t.slice(0, i)), e(s, n))
                : n !== t && n.push(s);
            }
            return n;
          })(e)),
            (this.dirty = !1),
            (this.length = this._results.length),
            (this.last = this._results[this.length - 1]),
            (this.first = this._results[0]);
        }
        notifyOnChanges() {
          this.changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      class Vl {
        constructor(e) {
          (this.queryList = e), (this.matches = null);
        }
        clone() {
          return new Vl(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class Wl {
        constructor(e = []) {
          this.queries = e;
        }
        createEmbeddedView(e) {
          const t = e.queries;
          if (null !== t) {
            const n =
                null !== e.contentQueries ? e.contentQueries[0] : t.length,
              i = [];
            for (let e = 0; e < n; e++) {
              const n = t.getByIndex(e);
              i.push(this.queries[n.indexInDeclarationView].clone());
            }
            return new Wl(i);
          }
          return null;
        }
        insertView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        detachView(e) {
          this.dirtyQueriesWithMatches(e);
        }
        dirtyQueriesWithMatches(e) {
          for (let t = 0; t < this.queries.length; t++)
            null !== tc(e, t).matches && this.queries[t].setDirty();
        }
      }
      class zl {
        constructor(e, t, n, i = null) {
          (this.predicate = e),
            (this.descendants = t),
            (this.isStatic = n),
            (this.read = i);
        }
      }
      class Xl {
        constructor(e = []) {
          this.queries = e;
        }
        elementStart(e, t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementStart(e, t);
        }
        elementEnd(e) {
          for (let t = 0; t < this.queries.length; t++)
            this.queries[t].elementEnd(e);
        }
        embeddedTView(e) {
          let t = null;
          for (let n = 0; n < this.length; n++) {
            const i = null !== t ? t.length : 0,
              s = this.getByIndex(n).embeddedTView(e, i);
            s &&
              ((s.indexInDeclarationView = n),
              null !== t ? t.push(s) : (t = [s]));
          }
          return null !== t ? new Xl(t) : null;
        }
        template(e, t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].template(e, t);
        }
        getByIndex(e) {
          return this.queries[e];
        }
        get length() {
          return this.queries.length;
        }
        track(e) {
          this.queries.push(e);
        }
      }
      class Bl {
        constructor(e, t = -1) {
          (this.metadata = e),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = t);
        }
        elementStart(e, t) {
          this.isApplyingToNode(t) && this.matchTNode(e, t);
        }
        elementEnd(e) {
          this._declarationNodeIndex === e.index &&
            (this._appliesToNextNode = !1);
        }
        template(e, t) {
          this.elementStart(e, t);
        }
        embeddedTView(e, t) {
          return this.isApplyingToNode(e)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-e.index, t),
              new Bl(this.metadata))
            : null;
        }
        isApplyingToNode(e) {
          if (this._appliesToNextNode && !1 === this.metadata.descendants) {
            const t = this._declarationNodeIndex;
            let n = e.parent;
            for (; null !== n && 4 === n.type && n.index !== t; ) n = n.parent;
            return t === (null !== n ? n.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(e, t) {
          if (Array.isArray(this.metadata.predicate)) {
            const n = this.metadata.predicate;
            for (let i = 0; i < n.length; i++)
              this.matchTNodeWithReadOption(e, t, Hl(t, n[i]));
          } else {
            const n = this.metadata.predicate;
            n === Ua
              ? 0 === t.type && this.matchTNodeWithReadOption(e, t, -1)
              : this.matchTNodeWithReadOption(e, t, bn(t, e, n, !1, !1));
          }
        }
        matchTNodeWithReadOption(e, t, n) {
          if (null !== n) {
            const i = this.metadata.read;
            if (null !== i)
              if (i === Sa || i === $a || (i === Ua && 0 === t.type))
                this.addMatch(t.index, -2);
              else {
                const n = bn(t, e, i, !1, !1);
                null !== n && this.addMatch(t.index, n);
              }
            else this.addMatch(t.index, n);
          }
        }
        addMatch(e, t) {
          null === this.matches
            ? (this.matches = [e, t])
            : this.matches.push(e, t);
        }
      }
      function Hl(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) if (n[i] === t) return n[i + 1];
        return null;
      }
      function Ul(e, t, n, i) {
        return -1 === n
          ? (function (e, t) {
              return 3 === e.type || 4 === e.type
                ? ar(Sa, e, t)
                : 0 === e.type
                ? lr(Ua, Sa, e, t)
                : null;
            })(t, e)
          : -2 === n
          ? (function (e, t, n) {
              return n === Sa
                ? ar(Sa, t, e)
                : n === Ua
                ? lr(Ua, Sa, t, e)
                : n === $a
                ? cr($a, Sa, t, e)
                : void 0;
            })(e, t, i)
          : vn(e, e[1], n, t);
      }
      function Gl(e, t, n, i) {
        const s = t[5].queries[i];
        if (null === s.matches) {
          const i = e.data,
            r = n.matches,
            o = [];
          for (let e = 0; e < r.length; e += 2) {
            const s = r[e];
            o.push(s < 0 ? null : Ul(t, i[s], r[e + 1], n.metadata.read));
          }
          s.matches = o;
        }
        return s.matches;
      }
      function $l(e) {
        const t = dt(),
          n = pt(),
          i = Ot();
        xt(i + 1);
        const s = tc(n, i);
        if (e.dirty && ot(t) === s.metadata.isStatic) {
          if (null === s.matches) e.reset([]);
          else {
            const r = s.crossesNgTemplate
              ? (function e(t, n, i, s) {
                  const r = t.queries.getByIndex(i),
                    o = r.matches;
                  if (null !== o) {
                    const a = Gl(t, n, r, i);
                    for (let t = 0; t < o.length; t += 2) {
                      const i = o[t];
                      if (i > 0) s.push(a[t / 2]);
                      else {
                        const r = o[t + 1],
                          a = n[-i];
                        for (let t = 9; t < a.length; t++) {
                          const n = a[t];
                          n[17] === n[3] && e(n[1], n, r, s);
                        }
                        if (null !== a[5]) {
                          const t = a[5];
                          for (let n = 0; n < t.length; n++) {
                            const i = t[n];
                            e(i[1], i, r, s);
                          }
                        }
                      }
                    }
                  }
                  return s;
                })(n, t, i, [])
              : Gl(n, t, s, i);
            e.reset(r), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function ql(e, t, n) {
        Yl(pt(), dt(), e, t, n, !0);
      }
      function Kl(e, t, n) {
        Yl(pt(), dt(), e, t, n, !1);
      }
      function Yl(e, t, n, i, s, r) {
        e.firstCreatePass &&
          (ec(e, new zl(n, i, r, s), -1), r && (e.staticViewQueries = !0)),
          Jl(e, t);
      }
      function Zl(e, t, n, i) {
        !(function (e, t, n, i, s, r, o, a) {
          e.firstCreatePass &&
            (ec(e, new zl(n, i, !1, s), o.index),
            (function (e, t) {
              const n = e.contentQueries || (e.contentQueries = []);
              t !== (e.contentQueries.length ? n[n.length - 1] : -1) &&
                n.push(e.queries.length - 1, t);
            })(e, a)),
            Jl(e, t);
        })(pt(), dt(), t, n, i, 0, gt(), e);
      }
      function Ql() {
        return (e = dt()), (t = Ot()), e[5].queries[t].queryList;
        var e, t;
      }
      function Jl(e, t) {
        const n = new Fl();
        !(function (e, t, n, i) {
          const s = Is(t);
          s.push(n), e.firstCreatePass && Ps(e).push(i, s.length - 1);
        })(e, t, n, n.destroy),
          null === t[5] && (t[5] = new Wl()),
          t[5].queries.push(new Vl(n));
      }
      function ec(e, t, n) {
        null === e.queries && (e.queries = new Xl()),
          e.queries.track(new Bl(t, n));
      }
      function tc(e, t) {
        return e.queries.getByIndex(t);
      }
      function nc(e, t) {
        return lr(Ua, Sa, e, t);
      }
      function ic(e = C.Default) {
        const t = ur(!0);
        if (null != t || e & C.Optional) return t;
        throw new Error("No provider for ChangeDetectorRef!");
      }
      const sc = v("Input", (e) => ({ bindingPropertyName: e })),
        rc = new ee("Application Initializer");
      let oc = (() => {
        class e {
          constructor(e) {
            (this.appInits = e),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((e, t) => {
                (this.resolve = e), (this.reject = t);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const e = [],
              t = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let n = 0; n < this.appInits.length; n++) {
                const t = this.appInits[n]();
                co(t) && e.push(t);
              }
            Promise.all(e)
              .then(() => {
                t();
              })
              .catch((e) => {
                this.reject(e);
              }),
              0 === e.length && t(),
              (this.initialized = !0);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(ue(rc, 8));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const ac = new ee("AppId"),
        lc = {
          provide: ac,
          useFactory: function () {
            return `${cc()}${cc()}${cc()}`;
          },
          deps: [],
        };
      function cc() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const uc = new ee("Platform Initializer"),
        hc = new ee("Platform ID"),
        dc = new ee("appBootstrapListener");
      let pc = (() => {
        class e {
          log(e) {
            console.log(e);
          }
          warn(e) {
            console.warn(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const fc = new ee("LocaleId"),
        gc = new ee("DefaultCurrencyCode");
      class mc {
        constructor(e, t) {
          (this.ngModuleFactory = e), (this.componentFactories = t);
        }
      }
      const bc = function (e) {
          return new fl(e);
        },
        vc = bc,
        yc = function (e) {
          return Promise.resolve(bc(e));
        },
        wc = function (e) {
          const t = bc(e),
            n = rn(We(e).declarations).reduce((e, t) => {
              const n = Fe(t);
              return n && e.push(new Ja(n)), e;
            }, []);
          return new mc(t, n);
        },
        Sc = wc,
        _c = function (e) {
          return Promise.resolve(wc(e));
        };
      let Cc = (() => {
        class e {
          constructor() {
            (this.compileModuleSync = vc),
              (this.compileModuleAsync = yc),
              (this.compileModuleAndAllComponentsSync = Sc),
              (this.compileModuleAndAllComponentsAsync = _c);
          }
          clearCache() {}
          clearCacheFor(e) {}
          getModuleId(e) {}
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const Ec = new ee("compilerOptions"),
        Oc = (() => Promise.resolve(0))();
      function xc(e) {
        "undefined" == typeof Zone
          ? Oc.then(() => {
              e && e.apply(null, null);
            })
          : Zone.current.scheduleMicroTask("scheduleMicrotask", e);
      }
      class Tc {
        constructor({
          enableLongStackTrace: e = !1,
          shouldCoalesceEventChangeDetection: t = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Dl(!1)),
            (this.onMicrotaskEmpty = new Dl(!1)),
            (this.onStable = new Dl(!1)),
            (this.onError = new Dl(!1)),
            "undefined" == typeof Zone)
          )
            throw new Error("In this configuration Angular requires Zone.js");
          Zone.assertZonePatched(),
            (this._nesting = 0),
            (this._outer = this._inner = Zone.current),
            Zone.wtfZoneSpec &&
              (this._inner = this._inner.fork(Zone.wtfZoneSpec)),
            Zone.TaskTrackingZoneSpec &&
              (this._inner = this._inner.fork(new Zone.TaskTrackingZoneSpec())),
            e &&
              Zone.longStackTraceZoneSpec &&
              (this._inner = this._inner.fork(Zone.longStackTraceZoneSpec)),
            (this.shouldCoalesceEventChangeDetection = t),
            (this.lastRequestAnimationFrameId = -1),
            (this.nativeRequestAnimationFrame = (function () {
              let e = G.requestAnimationFrame,
                t = G.cancelAnimationFrame;
              if ("undefined" != typeof Zone && e && t) {
                const n = e[Zone.__symbol__("OriginalDelegate")];
                n && (e = n);
                const i = t[Zone.__symbol__("OriginalDelegate")];
                i && (t = i);
              }
              return {
                nativeRequestAnimationFrame: e,
                nativeCancelAnimationFrame: t,
              };
            })().nativeRequestAnimationFrame),
            (function (e) {
              const t =
                !!e.shouldCoalesceEventChangeDetection &&
                e.nativeRequestAnimationFrame &&
                (() => {
                  !(function (e) {
                    -1 === e.lastRequestAnimationFrameId &&
                      ((e.lastRequestAnimationFrameId =
                        e.nativeRequestAnimationFrame.call(G, () => {
                          (e.lastRequestAnimationFrameId = -1), Pc(e), Ic(e);
                        })),
                      Pc(e));
                  })(e);
                });
              e._inner = e._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0, maybeDelayChangeDetection: t },
                onInvokeTask: (n, i, s, r, o, a) => {
                  try {
                    return Rc(e), n.invokeTask(s, r, o, a);
                  } finally {
                    t && "eventTask" === r.type && t(), Nc(e);
                  }
                },
                onInvoke: (t, n, i, s, r, o, a) => {
                  try {
                    return Rc(e), t.invoke(i, s, r, o, a);
                  } finally {
                    Nc(e);
                  }
                },
                onHasTask: (t, n, i, s) => {
                  t.hasTask(i, s),
                    n === i &&
                      ("microTask" == s.change
                        ? ((e._hasPendingMicrotasks = s.microTask),
                          Pc(e),
                          Ic(e))
                        : "macroTask" == s.change &&
                          (e.hasPendingMacrotasks = s.macroTask));
                },
                onHandleError: (t, n, i, s) => (
                  t.handleError(i, s),
                  e.runOutsideAngular(() => e.onError.emit(s)),
                  !1
                ),
              });
            })(this);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Tc.isInAngularZone())
            throw new Error("Expected to be in Angular Zone, but it is not!");
        }
        static assertNotInAngularZone() {
          if (Tc.isInAngularZone())
            throw new Error("Expected to not be in Angular Zone, but it is!");
        }
        run(e, t, n) {
          return this._inner.run(e, t, n);
        }
        runTask(e, t, n, i) {
          const s = this._inner,
            r = s.scheduleEventTask("NgZoneEvent: " + i, e, Mc, kc, kc);
          try {
            return s.runTask(r, t, n);
          } finally {
            s.cancelTask(r);
          }
        }
        runGuarded(e, t, n) {
          return this._inner.runGuarded(e, t, n);
        }
        runOutsideAngular(e) {
          return this._outer.run(e);
        }
      }
      function kc() {}
      const Mc = {};
      function Ic(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function Pc(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          (e.shouldCoalesceEventChangeDetection &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function Rc(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function Nc(e) {
        e._nesting--, Ic(e);
      }
      class Lc {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Dl()),
            (this.onMicrotaskEmpty = new Dl()),
            (this.onStable = new Dl()),
            (this.onError = new Dl());
        }
        run(e, t, n) {
          return e.apply(t, n);
        }
        runGuarded(e, t, n) {
          return e.apply(t, n);
        }
        runOutsideAngular(e) {
          return e();
        }
        runTask(e, t, n, i) {
          return e.apply(t, n);
        }
      }
      let Ac = (() => {
          class e {
            constructor(e) {
              (this._ngZone = e),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                e.run(() => {
                  this.taskTrackingZone =
                    "undefined" == typeof Zone
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Tc.assertNotInAngularZone(),
                        xc(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                xc(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let e = this._callbacks.pop();
                    clearTimeout(e.timeoutId), e.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let e = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (t) =>
                    !t.updateCb ||
                    !t.updateCb(e) ||
                    (clearTimeout(t.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((e) => ({
                    source: e.source,
                    creationLocation: e.creationLocation,
                    data: e.data,
                  }))
                : [];
            }
            addCallback(e, t, n) {
              let i = -1;
              t &&
                t > 0 &&
                (i = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (e) => e.timeoutId !== i
                  )),
                    e(this._didWork, this.getPendingTasks());
                }, t)),
                this._callbacks.push({ doneCb: e, timeoutId: i, updateCb: n });
            }
            whenStable(e, t, n) {
              if (n && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?'
                );
              this.addCallback(e, t, n), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(e, t, n) {
              return [];
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(ue(Tc));
            }),
            (e.ɵprov = x({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Dc = (() => {
          class e {
            constructor() {
              (this._applications = new Map()), Wc.addToWindow(this);
            }
            registerApplication(e, t) {
              this._applications.set(e, t);
            }
            unregisterApplication(e) {
              this._applications.delete(e);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(e) {
              return this._applications.get(e) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(e, t = !0) {
              return Wc.findTestabilityInTree(this, e, t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = x({ token: e, factory: e.ɵfac })),
            e
          );
        })();
      class jc {
        addToWindow(e) {}
        findTestabilityInTree(e, t, n) {
          return null;
        }
      }
      function Fc(e) {
        Wc = e;
      }
      let Vc,
        Wc = new jc(),
        zc = function (e, t, n) {
          const i = new fl(n);
          if (0 === Pr.size) return Promise.resolve(i);
          const s = (function (e) {
            const t = [];
            return e.forEach((e) => e && t.push(...e)), t;
          })(
            e
              .get(Ec, [])
              .concat(t)
              .map((e) => e.providers)
          );
          if (0 === s.length) return Promise.resolve(i);
          const r = (function () {
              const e = G.ng;
              if (!e || !e.ɵcompilerFacade)
                throw new Error(
                  "Angular JIT compilation failed: '@angular/compiler' not loaded!\n  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\n  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\n  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping."
                );
              return e.ɵcompilerFacade;
            })(),
            o = Tr.create({ providers: s }).get(r.ResourceLoader);
          return (function (e) {
            const t = [],
              n = new Map();
            function i(e) {
              let t = n.get(e);
              if (!t) {
                const i = ((e) => Promise.resolve(o.get(e)))(e);
                n.set(e, (t = i.then(Nr)));
              }
              return t;
            }
            return (
              Pr.forEach((e, n) => {
                const s = [];
                e.templateUrl &&
                  s.push(
                    i(e.templateUrl).then((t) => {
                      e.template = t;
                    })
                  );
                const r = e.styleUrls,
                  o = e.styles || (e.styles = []),
                  a = e.styles.length;
                r &&
                  r.forEach((t, n) => {
                    o.push(""),
                      s.push(
                        i(t).then((i) => {
                          (o[a + n] = i),
                            r.splice(r.indexOf(t), 1),
                            0 == r.length && (e.styleUrls = void 0);
                        })
                      );
                  });
                const l = Promise.all(s).then(() =>
                  (function (e) {
                    Rr.delete(e);
                  })(n)
                );
                t.push(l);
              }),
              (Pr = new Map()),
              Promise.all(t).then(() => {})
            );
          })().then(() => i);
        };
      const Xc = new ee("AllowMultipleToken");
      class Bc {
        constructor(e, t) {
          (this.name = e), (this.token = t);
        }
      }
      function Hc(e, t, n = []) {
        const i = "Platform: " + t,
          s = new ee(i);
        return (t = []) => {
          let r = Uc();
          if (!r || r.injector.get(Xc, !1))
            if (e) e(n.concat(t).concat({ provide: s, useValue: !0 }));
            else {
              const e = n
                .concat(t)
                .concat(
                  { provide: s, useValue: !0 },
                  { provide: pr, useValue: "platform" }
                );
              !(function (e) {
                if (Vc && !Vc.destroyed && !Vc.injector.get(Xc, !1))
                  throw new Error(
                    "There can be only one platform. Destroy the previous one to create a new one."
                  );
                Vc = e.get(Gc);
                const t = e.get(uc, null);
                t && t.forEach((e) => e());
              })(Tr.create({ providers: e, name: i }));
            }
          return (function (e) {
            const t = Uc();
            if (!t) throw new Error("No platform exists!");
            if (!t.injector.get(e, null))
              throw new Error(
                "A platform with a different configuration has been created. Please destroy it first."
              );
            return t;
          })(s);
        };
      }
      function Uc() {
        return Vc && !Vc.destroyed ? Vc : null;
      }
      let Gc = (() => {
        class e {
          constructor(e) {
            (this._injector = e),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(e, t) {
            const n = (function (e, t) {
                let n;
                return (
                  (n =
                    "noop" === e
                      ? new Lc()
                      : ("zone.js" === e ? void 0 : e) ||
                        new Tc({
                          enableLongStackTrace: Bn(),
                          shouldCoalesceEventChangeDetection: t,
                        })),
                  n
                );
              })(t ? t.ngZone : void 0, (t && t.ngZoneEventCoalescing) || !1),
              i = [{ provide: Tc, useValue: n }];
            return n.run(() => {
              const t = Tr.create({
                  providers: i,
                  parent: this.injector,
                  name: e.moduleType.name,
                }),
                s = e.create(t),
                r = s.injector.get(xn, null);
              if (!r)
                throw new Error(
                  "No ErrorHandler. Is platform module (BrowserModule) included?"
                );
              return (
                s.onDestroy(() => Kc(this._modules, s)),
                n.runOutsideAngular(() =>
                  n.onError.subscribe({
                    next: (e) => {
                      r.handleError(e);
                    },
                  })
                ),
                (function (e, t, n) {
                  try {
                    const i = n();
                    return co(i)
                      ? i.catch((n) => {
                          throw (
                            (t.runOutsideAngular(() => e.handleError(n)), n)
                          );
                        })
                      : i;
                  } catch (i) {
                    throw (t.runOutsideAngular(() => e.handleError(i)), i);
                  }
                })(r, n, () => {
                  const e = s.injector.get(oc);
                  return (
                    e.runInitializers(),
                    e.donePromise.then(
                      () => (
                        hl(s.injector.get(fc, "en-US") || "en-US"),
                        this._moduleDoBootstrap(s),
                        s
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(e, t = []) {
            const n = $c({}, t);
            return zc(this.injector, n, e).then((e) =>
              this.bootstrapModuleFactory(e, n)
            );
          }
          _moduleDoBootstrap(e) {
            const t = e.injector.get(qc);
            if (e._bootstrapComponents.length > 0)
              e._bootstrapComponents.forEach((e) => t.bootstrap(e));
            else {
              if (!e.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${D(
                    e.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
                );
              e.instance.ngDoBootstrap(t);
            }
            this._modules.push(e);
          }
          onDestroy(e) {
            this._destroyListeners.push(e);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed)
              throw new Error("The platform has already been destroyed!");
            this._modules.slice().forEach((e) => e.destroy()),
              this._destroyListeners.forEach((e) => e()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(ue(Tr));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function $c(e, t) {
        return Array.isArray(t)
          ? t.reduce($c, e)
          : Object.assign(Object.assign({}, e), t);
      }
      let qc = (() => {
        class e {
          constructor(e, t, n, i, s, a) {
            (this._zone = e),
              (this._console = t),
              (this._injector = n),
              (this._exceptionHandler = i),
              (this._componentFactoryResolver = s),
              (this._initStatus = a),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._enforceNoNewChanges = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._enforceNoNewChanges = Bn()),
              this._zone.onMicrotaskEmpty.subscribe({
                next: () => {
                  this._zone.run(() => {
                    this.tick();
                  });
                },
              });
            const c = new r.a((e) => {
                (this._stable =
                  this._zone.isStable &&
                  !this._zone.hasPendingMacrotasks &&
                  !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    e.next(this._stable), e.complete();
                  });
              }),
              u = new r.a((e) => {
                let t;
                this._zone.runOutsideAngular(() => {
                  t = this._zone.onStable.subscribe(() => {
                    Tc.assertNotInAngularZone(),
                      xc(() => {
                        this._stable ||
                          this._zone.hasPendingMacrotasks ||
                          this._zone.hasPendingMicrotasks ||
                          ((this._stable = !0), e.next(!0));
                      });
                  });
                });
                const n = this._zone.onUnstable.subscribe(() => {
                  Tc.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        e.next(!1);
                      }));
                });
                return () => {
                  t.unsubscribe(), n.unsubscribe();
                };
              });
            this.isStable = Object(o.a)(
              c,
              u.pipe((e) => {
                return l()(
                  ((t = f),
                  function (e) {
                    let n;
                    n =
                      "function" == typeof t
                        ? t
                        : function () {
                            return t;
                          };
                    const i = Object.create(e, d);
                    return (i.source = e), (i.subjectFactory = n), i;
                  })(e)
                );
                var t;
              })
            );
          }
          bootstrap(e, t) {
            if (!this._initStatus.done)
              throw new Error(
                "Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module."
              );
            let n;
            (n =
              e instanceof va
                ? e
                : this._componentFactoryResolver.resolveComponentFactory(e)),
              this.componentTypes.push(n.componentType);
            const i = n.isBoundToModule ? void 0 : this._injector.get(ge),
              s = n.create(Tr.NULL, [], t || n.selector, i);
            s.onDestroy(() => {
              this._unloadComponent(s);
            });
            const r = s.injector.get(Ac, null);
            return (
              r &&
                s.injector
                  .get(Dc)
                  .registerApplication(s.location.nativeElement, r),
              this._loadComponent(s),
              Bn() &&
                this._console.log(
                  "Angular is running in the development mode. Call enableProdMode() to enable the production mode."
                ),
              s
            );
          }
          tick() {
            if (this._runningTick)
              throw new Error("ApplicationRef.tick is called recursively");
            try {
              this._runningTick = !0;
              for (let e of this._views) e.detectChanges();
              if (this._enforceNoNewChanges)
                for (let e of this._views) e.checkNoChanges();
            } catch (e) {
              this._zone.runOutsideAngular(() =>
                this._exceptionHandler.handleError(e)
              );
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(e) {
            const t = e;
            this._views.push(t), t.attachToAppRef(this);
          }
          detachView(e) {
            const t = e;
            Kc(this._views, t), t.detachFromAppRef();
          }
          _loadComponent(e) {
            this.attachView(e.hostView),
              this.tick(),
              this.components.push(e),
              this._injector
                .get(dc, [])
                .concat(this._bootstrapListeners)
                .forEach((t) => t(e));
          }
          _unloadComponent(e) {
            this.detachView(e.hostView), Kc(this.components, e);
          }
          ngOnDestroy() {
            this._views.slice().forEach((e) => e.destroy());
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(ue(Tc), ue(pc), ue(Tr), ue(xn), ue(wa), ue(oc));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function Kc(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      class Yc {}
      class Zc {}
      const Qc = { factoryPathPrefix: "", factoryPathSuffix: ".ngfactory" };
      let Jc = (() => {
        class e {
          constructor(e, t) {
            (this._compiler = e), (this._config = t || Qc);
          }
          load(e) {
            return this.loadAndCompile(e);
          }
          loadAndCompile(e) {
            let [t, i] = e.split("#");
            return (
              void 0 === i && (i = "default"),
              n("zn8P")(t)
                .then((e) => e[i])
                .then((e) => eu(e, t, i))
                .then((e) => this._compiler.compileModuleAsync(e))
            );
          }
          loadFactory(e) {
            let [t, i] = e.split("#"),
              s = "NgFactory";
            return (
              void 0 === i && ((i = "default"), (s = "")),
              n("zn8P")(
                this._config.factoryPathPrefix +
                  t +
                  this._config.factoryPathSuffix
              )
                .then((e) => e[i + s])
                .then((e) => eu(e, t, i))
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(ue(Cc), ue(Zc, 8));
          }),
          (e.ɵprov = x({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function eu(e, t, n) {
        if (!e) throw new Error(`Cannot find '${n}' in '${t}'`);
        return e;
      }
      const tu = function (e) {
          return null;
        },
        nu = Hc(null, "core", [
          { provide: hc, useValue: "unknown" },
          { provide: Gc, deps: [Tr] },
          { provide: Dc, deps: [] },
          { provide: pc, deps: [] },
        ]),
        iu = [
          { provide: qc, useClass: qc, deps: [Tc, pc, Tr, xn, wa, oc] },
          {
            provide: Qa,
            deps: [Tc],
            useFactory: function (e) {
              let t = [];
              return (
                e.onStable.subscribe(() => {
                  for (; t.length; ) t.pop()();
                }),
                function (e) {
                  t.push(e);
                }
              );
            },
          },
          { provide: oc, useClass: oc, deps: [[new w(), rc]] },
          { provide: Cc, useClass: Cc, deps: [] },
          lc,
          {
            provide: Wa,
            useFactory: function () {
              return Ba;
            },
            deps: [],
          },
          {
            provide: za,
            useFactory: function () {
              return Ha;
            },
            deps: [],
          },
          {
            provide: fc,
            useFactory: function (e) {
              return (
                hl(
                  (e =
                    e ||
                    ("undefined" != typeof $localize && $localize.locale) ||
                    "en-US")
                ),
                e
              );
            },
            deps: [[new y(fc), new w(), new _()]],
          },
          { provide: gc, useValue: "USD" },
        ];
      let su = (() => {
        class e {
          constructor(e) {}
        }
        return (
          (e.ɵmod = Ne({ type: e })),
          (e.ɵinj = T({
            factory: function (t) {
              return new (t || e)(ue(qc));
            },
            providers: iu,
          })),
          e
        );
      })();
    },
    gRHU: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("2fFW"),
        s = n("NJ4a");
      const r = {
        closed: !0,
        next(e) {},
        error(e) {
          if (i.a.useDeprecatedSynchronousErrorHandling) throw e;
          Object(s.a)(e);
        },
        complete() {},
      };
    },
    hPAK: function (e, t, n) {
      "use strict";
      var i = n("bTu8"),
        s = n("Jq2x"),
        r = n("cKS0");
      function o() {
        return (o =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var i in n)
                Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
            }
            return e;
          }).apply(this, arguments);
      }
      var a = {
          update: function () {
            var e = this.rtl,
              t = this.params.pagination;
            if (
              t.el &&
              this.pagination.el &&
              this.pagination.$el &&
              0 !== this.pagination.$el.length
            ) {
              var n,
                i =
                  this.virtual && this.params.virtual.enabled
                    ? this.virtual.slides.length
                    : this.slides.length,
                o = this.pagination.$el,
                a = this.params.loop
                  ? Math.ceil(
                      (i - 2 * this.loopedSlides) / this.params.slidesPerGroup
                    )
                  : this.snapGrid.length;
              if (
                (this.params.loop
                  ? ((n = Math.ceil(
                      (this.activeIndex - this.loopedSlides) /
                        this.params.slidesPerGroup
                    )) >
                      i - 1 - 2 * this.loopedSlides &&
                      (n -= i - 2 * this.loopedSlides),
                    n > a - 1 && (n -= a),
                    n < 0 &&
                      "bullets" !== this.params.paginationType &&
                      (n = a + n))
                  : (n =
                      void 0 !== this.snapIndex
                        ? this.snapIndex
                        : this.activeIndex || 0),
                "bullets" === t.type &&
                  this.pagination.bullets &&
                  this.pagination.bullets.length > 0)
              ) {
                var l,
                  c,
                  u,
                  h = this.pagination.bullets;
                if (
                  (t.dynamicBullets &&
                    ((this.pagination.bulletSize = h
                      .eq(0)
                      [this.isHorizontal() ? "outerWidth" : "outerHeight"](!0)),
                    o.css(
                      this.isHorizontal() ? "width" : "height",
                      this.pagination.bulletSize * (t.dynamicMainBullets + 4) +
                        "px"
                    ),
                    t.dynamicMainBullets > 1 &&
                      void 0 !== this.previousIndex &&
                      ((this.pagination.dynamicBulletIndex +=
                        n - this.previousIndex),
                      this.pagination.dynamicBulletIndex >
                      t.dynamicMainBullets - 1
                        ? (this.pagination.dynamicBulletIndex =
                            t.dynamicMainBullets - 1)
                        : this.pagination.dynamicBulletIndex < 0 &&
                          (this.pagination.dynamicBulletIndex = 0)),
                    (u =
                      ((c =
                        (l = n - this.pagination.dynamicBulletIndex) +
                        (Math.min(h.length, t.dynamicMainBullets) - 1)) +
                        l) /
                      2)),
                  h.removeClass(
                    t.bulletActiveClass +
                      " " +
                      t.bulletActiveClass +
                      "-next " +
                      t.bulletActiveClass +
                      "-next-next " +
                      t.bulletActiveClass +
                      "-prev " +
                      t.bulletActiveClass +
                      "-prev-prev " +
                      t.bulletActiveClass +
                      "-main"
                  ),
                  o.length > 1)
                )
                  h.each(function (e) {
                    var i = Object(s.a)(e),
                      r = i.index();
                    r === n && i.addClass(t.bulletActiveClass),
                      t.dynamicBullets &&
                        (r >= l &&
                          r <= c &&
                          i.addClass(t.bulletActiveClass + "-main"),
                        r === l &&
                          i
                            .prev()
                            .addClass(t.bulletActiveClass + "-prev")
                            .prev()
                            .addClass(t.bulletActiveClass + "-prev-prev"),
                        r === c &&
                          i
                            .next()
                            .addClass(t.bulletActiveClass + "-next")
                            .next()
                            .addClass(t.bulletActiveClass + "-next-next"));
                  });
                else {
                  var d = h.eq(n),
                    p = d.index();
                  if ((d.addClass(t.bulletActiveClass), t.dynamicBullets)) {
                    for (var f = h.eq(l), g = h.eq(c), m = l; m <= c; m += 1)
                      h.eq(m).addClass(t.bulletActiveClass + "-main");
                    if (this.params.loop)
                      if (p >= h.length - t.dynamicMainBullets) {
                        for (var b = t.dynamicMainBullets; b >= 0; b -= 1)
                          h.eq(h.length - b).addClass(
                            t.bulletActiveClass + "-main"
                          );
                        h.eq(h.length - t.dynamicMainBullets - 1).addClass(
                          t.bulletActiveClass + "-prev"
                        );
                      } else
                        f
                          .prev()
                          .addClass(t.bulletActiveClass + "-prev")
                          .prev()
                          .addClass(t.bulletActiveClass + "-prev-prev"),
                          g
                            .next()
                            .addClass(t.bulletActiveClass + "-next")
                            .next()
                            .addClass(t.bulletActiveClass + "-next-next");
                    else
                      f
                        .prev()
                        .addClass(t.bulletActiveClass + "-prev")
                        .prev()
                        .addClass(t.bulletActiveClass + "-prev-prev"),
                        g
                          .next()
                          .addClass(t.bulletActiveClass + "-next")
                          .next()
                          .addClass(t.bulletActiveClass + "-next-next");
                  }
                }
                if (t.dynamicBullets) {
                  var v = Math.min(h.length, t.dynamicMainBullets + 4),
                    y =
                      (this.pagination.bulletSize * v -
                        this.pagination.bulletSize) /
                        2 -
                      u * this.pagination.bulletSize,
                    w = e ? "right" : "left";
                  h.css(this.isHorizontal() ? w : "top", y + "px");
                }
              }
              if (
                ("fraction" === t.type &&
                  (o
                    .find(Object(r.b)(t.currentClass))
                    .text(t.formatFractionCurrent(n + 1)),
                  o
                    .find(Object(r.b)(t.totalClass))
                    .text(t.formatFractionTotal(a))),
                "progressbar" === t.type)
              ) {
                var S;
                S = t.progressbarOpposite
                  ? this.isHorizontal()
                    ? "vertical"
                    : "horizontal"
                  : this.isHorizontal()
                  ? "horizontal"
                  : "vertical";
                var _ = (n + 1) / a,
                  C = 1,
                  E = 1;
                "horizontal" === S ? (C = _) : (E = _),
                  o
                    .find(Object(r.b)(t.progressbarFillClass))
                    .transform(
                      "translate3d(0,0,0) scaleX(" + C + ") scaleY(" + E + ")"
                    )
                    .transition(this.params.speed);
              }
              "custom" === t.type && t.renderCustom
                ? (o.html(t.renderCustom(this, n + 1, a)),
                  this.emit("paginationRender", o[0]))
                : this.emit("paginationUpdate", o[0]),
                this.params.watchOverflow &&
                  this.enabled &&
                  o[this.isLocked ? "addClass" : "removeClass"](t.lockClass);
            }
          },
          render: function () {
            var e = this.params.pagination;
            if (
              e.el &&
              this.pagination.el &&
              this.pagination.$el &&
              0 !== this.pagination.$el.length
            ) {
              var t =
                  this.virtual && this.params.virtual.enabled
                    ? this.virtual.slides.length
                    : this.slides.length,
                n = this.pagination.$el,
                i = "";
              if ("bullets" === e.type) {
                var s = this.params.loop
                  ? Math.ceil(
                      (t - 2 * this.loopedSlides) / this.params.slidesPerGroup
                    )
                  : this.snapGrid.length;
                this.params.freeMode && !this.params.loop && s > t && (s = t);
                for (var o = 0; o < s; o += 1)
                  i += e.renderBullet
                    ? e.renderBullet.call(this, o, e.bulletClass)
                    : "<" +
                      e.bulletElement +
                      ' class="' +
                      e.bulletClass +
                      '"></' +
                      e.bulletElement +
                      ">";
                n.html(i),
                  (this.pagination.bullets = n.find(
                    Object(r.b)(e.bulletClass)
                  ));
              }
              "fraction" === e.type &&
                ((i = e.renderFraction
                  ? e.renderFraction.call(this, e.currentClass, e.totalClass)
                  : '<span class="' +
                    e.currentClass +
                    '"></span> / <span class="' +
                    e.totalClass +
                    '"></span>'),
                n.html(i)),
                "progressbar" === e.type &&
                  ((i = e.renderProgressbar
                    ? e.renderProgressbar.call(this, e.progressbarFillClass)
                    : '<span class="' + e.progressbarFillClass + '"></span>'),
                  n.html(i)),
                "custom" !== e.type &&
                  this.emit("paginationRender", this.pagination.$el[0]);
            }
          },
          init: function () {
            var e = this;
            e.params.pagination = Object(r.c)(
              e.$el,
              e.params.pagination,
              e.params.createElements,
              { el: "swiper-pagination" }
            );
            var t = e.params.pagination;
            if (t.el) {
              var n = Object(s.a)(t.el);
              0 !== n.length &&
                (e.params.uniqueNavElements &&
                  "string" == typeof t.el &&
                  n.length > 1 &&
                  (n = e.$el.find(t.el)),
                "bullets" === t.type &&
                  t.clickable &&
                  n.addClass(t.clickableClass),
                n.addClass(t.modifierClass + t.type),
                "bullets" === t.type &&
                  t.dynamicBullets &&
                  (n.addClass("" + t.modifierClass + t.type + "-dynamic"),
                  (e.pagination.dynamicBulletIndex = 0),
                  t.dynamicMainBullets < 1 && (t.dynamicMainBullets = 1)),
                "progressbar" === t.type &&
                  t.progressbarOpposite &&
                  n.addClass(t.progressbarOppositeClass),
                t.clickable &&
                  n.on("click", Object(r.b)(t.bulletClass), function (t) {
                    t.preventDefault();
                    var n = Object(s.a)(this).index() * e.params.slidesPerGroup;
                    e.params.loop && (n += e.loopedSlides), e.slideTo(n);
                  }),
                Object(r.e)(e.pagination, { $el: n, el: n[0] }),
                e.enabled || n.addClass(t.lockClass));
            }
          },
          destroy: function () {
            var e = this.params.pagination;
            if (
              e.el &&
              this.pagination.el &&
              this.pagination.$el &&
              0 !== this.pagination.$el.length
            ) {
              var t = this.pagination.$el;
              t.removeClass(e.hiddenClass),
                t.removeClass(e.modifierClass + e.type),
                this.pagination.bullets &&
                  this.pagination.bullets.removeClass(e.bulletActiveClass),
                e.clickable && t.off("click", Object(r.b)(e.bulletClass));
            }
          },
        },
        l = {
          name: "pagination",
          params: {
            pagination: {
              el: null,
              bulletElement: "span",
              clickable: !1,
              hideOnClick: !1,
              renderBullet: null,
              renderProgressbar: null,
              renderFraction: null,
              renderCustom: null,
              progressbarOpposite: !1,
              type: "bullets",
              dynamicBullets: !1,
              dynamicMainBullets: 1,
              formatFractionCurrent: function (e) {
                return e;
              },
              formatFractionTotal: function (e) {
                return e;
              },
              bulletClass: "swiper-pagination-bullet",
              bulletActiveClass: "swiper-pagination-bullet-active",
              modifierClass: "swiper-pagination-",
              currentClass: "swiper-pagination-current",
              totalClass: "swiper-pagination-total",
              hiddenClass: "swiper-pagination-hidden",
              progressbarFillClass: "swiper-pagination-progressbar-fill",
              progressbarOppositeClass:
                "swiper-pagination-progressbar-opposite",
              clickableClass: "swiper-pagination-clickable",
              lockClass: "swiper-pagination-lock",
            },
          },
          create: function () {
            Object(r.a)(this, { pagination: o({ dynamicBulletIndex: 0 }, a) });
          },
          on: {
            init: function (e) {
              e.pagination.init(), e.pagination.render(), e.pagination.update();
            },
            activeIndexChange: function (e) {
              (e.params.loop || void 0 === e.snapIndex) &&
                e.pagination.update();
            },
            snapIndexChange: function (e) {
              e.params.loop || e.pagination.update();
            },
            slidesLengthChange: function (e) {
              e.params.loop && (e.pagination.render(), e.pagination.update());
            },
            snapGridLengthChange: function (e) {
              e.params.loop || (e.pagination.render(), e.pagination.update());
            },
            destroy: function (e) {
              e.pagination.destroy();
            },
            "enable disable": function (e) {
              var t = e.pagination.$el;
              t &&
                t[e.enabled ? "removeClass" : "addClass"](
                  e.params.pagination.lockClass
                );
            },
            click: function (e, t) {
              var n = t.target;
              if (
                e.params.pagination.el &&
                e.params.pagination.hideOnClick &&
                e.pagination.$el.length > 0 &&
                !Object(s.a)(n).hasClass(e.params.pagination.bulletClass)
              ) {
                if (
                  e.navigation &&
                  ((e.navigation.nextEl && n === e.navigation.nextEl) ||
                    (e.navigation.prevEl && n === e.navigation.prevEl))
                )
                  return;
                var i = e.pagination.$el.hasClass(
                  e.params.pagination.hiddenClass
                );
                e.emit(!0 === i ? "paginationShow" : "paginationHide"),
                  e.pagination.$el.toggleClass(e.params.pagination.hiddenClass);
              }
            },
          },
        };
      function c() {
        return (c =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var n = arguments[t];
              for (var i in n)
                Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
            }
            return e;
          }).apply(this, arguments);
      }
      var u = {
          toggleEl: function (e, t) {
            e[t ? "addClass" : "removeClass"](
              this.params.navigation.disabledClass
            ),
              e[0] && "BUTTON" === e[0].tagName && (e[0].disabled = t);
          },
          update: function () {
            var e = this.params.navigation,
              t = this.navigation.toggleEl;
            if (!this.params.loop) {
              var n = this.navigation,
                i = n.$nextEl,
                s = n.$prevEl;
              s &&
                s.length > 0 &&
                (t(s, !!this.isBeginning),
                this.params.watchOverflow &&
                  this.enabled &&
                  s[this.isLocked ? "addClass" : "removeClass"](e.lockClass)),
                i &&
                  i.length > 0 &&
                  (t(i, !!this.isEnd),
                  this.params.watchOverflow &&
                    this.enabled &&
                    i[this.isLocked ? "addClass" : "removeClass"](e.lockClass));
            }
          },
          onPrevClick: function (e) {
            e.preventDefault(),
              (this.isBeginning && !this.params.loop) || this.slidePrev();
          },
          onNextClick: function (e) {
            e.preventDefault(),
              (this.isEnd && !this.params.loop) || this.slideNext();
          },
          init: function () {
            var e,
              t,
              n = this.params.navigation;
            (this.params.navigation = Object(r.c)(
              this.$el,
              this.params.navigation,
              this.params.createElements,
              { nextEl: "swiper-button-next", prevEl: "swiper-button-prev" }
            )),
              (n.nextEl || n.prevEl) &&
                (n.nextEl &&
                  ((e = Object(s.a)(n.nextEl)),
                  this.params.uniqueNavElements &&
                    "string" == typeof n.nextEl &&
                    e.length > 1 &&
                    1 === this.$el.find(n.nextEl).length &&
                    (e = this.$el.find(n.nextEl))),
                n.prevEl &&
                  ((t = Object(s.a)(n.prevEl)),
                  this.params.uniqueNavElements &&
                    "string" == typeof n.prevEl &&
                    t.length > 1 &&
                    1 === this.$el.find(n.prevEl).length &&
                    (t = this.$el.find(n.prevEl))),
                e && e.length > 0 && e.on("click", this.navigation.onNextClick),
                t && t.length > 0 && t.on("click", this.navigation.onPrevClick),
                Object(r.e)(this.navigation, {
                  $nextEl: e,
                  nextEl: e && e[0],
                  $prevEl: t,
                  prevEl: t && t[0],
                }),
                this.enabled ||
                  (e && e.addClass(n.lockClass), t && t.addClass(n.lockClass)));
          },
          destroy: function () {
            var e = this.navigation,
              t = e.$nextEl,
              n = e.$prevEl;
            t &&
              t.length &&
              (t.off("click", this.navigation.onNextClick),
              t.removeClass(this.params.navigation.disabledClass)),
              n &&
                n.length &&
                (n.off("click", this.navigation.onPrevClick),
                n.removeClass(this.params.navigation.disabledClass));
          },
        },
        h = {
          name: "navigation",
          params: {
            navigation: {
              nextEl: null,
              prevEl: null,
              hideOnClick: !1,
              disabledClass: "swiper-button-disabled",
              hiddenClass: "swiper-button-hidden",
              lockClass: "swiper-button-lock",
            },
          },
          create: function () {
            Object(r.a)(this, { navigation: c({}, u) });
          },
          on: {
            init: function (e) {
              e.navigation.init(), e.navigation.update();
            },
            toEdge: function (e) {
              e.navigation.update();
            },
            fromEdge: function (e) {
              e.navigation.update();
            },
            destroy: function (e) {
              e.navigation.destroy();
            },
            "enable disable": function (e) {
              var t = e.navigation,
                n = t.$nextEl,
                i = t.$prevEl;
              n &&
                n[e.enabled ? "removeClass" : "addClass"](
                  e.params.navigation.lockClass
                ),
                i &&
                  i[e.enabled ? "removeClass" : "addClass"](
                    e.params.navigation.lockClass
                  );
            },
            click: function (e, t) {
              var n = e.navigation,
                i = n.$nextEl,
                r = n.$prevEl,
                o = t.target;
              if (
                e.params.navigation.hideOnClick &&
                !Object(s.a)(o).is(r) &&
                !Object(s.a)(o).is(i)
              ) {
                if (
                  e.pagination &&
                  e.params.pagination &&
                  e.params.pagination.clickable &&
                  (e.pagination.el === o || e.pagination.el.contains(o))
                )
                  return;
                var a;
                i
                  ? (a = i.hasClass(e.params.navigation.hiddenClass))
                  : r && (a = r.hasClass(e.params.navigation.hiddenClass)),
                  e.emit(!0 === a ? "navigationShow" : "navigationHide"),
                  i && i.toggleClass(e.params.navigation.hiddenClass),
                  r && r.toggleClass(e.params.navigation.hiddenClass);
              }
            },
          },
        },
        d = n("fXoL"),
        p = n("UMfn");
      function f(e, t) {
        1 & e &&
          (d.Xb(0, "div", 2),
          d.Sb(1, "span", 3),
          d.Xb(2, "p", 4),
          d.Nc(3, "Security"),
          d.Wb(),
          d.Xb(4, "p", 5),
          d.Nc(
            5,
            "We only recommend partner exchanges and brokers which are reputable, secure and have a good history and reputation in the past."
          ),
          d.Wb(),
          d.Wb());
      }
      function g(e, t) {
        1 & e &&
          (d.Xb(0, "div", 2),
          d.Sb(1, "span", 6),
          d.Xb(2, "p", 4),
          d.Nc(3, "Control"),
          d.Wb(),
          d.Xb(4, "p", 5),
          d.Nc(
            5,
            "Your money will stay on your personal broker account verified by you."
          ),
          d.Wb(),
          d.Wb());
      }
      function m(e, t) {
        1 & e &&
          (d.Xb(0, "div", 2),
          d.Sb(1, "span", 7),
          d.Xb(2, "p", 4),
          d.Nc(3, "Transparency"),
          d.Wb(),
          d.Xb(4, "p", 5),
          d.Nc(5, "You have full access to all charts and trades 24/7."),
          d.Wb(),
          d.Wb());
      }
      n.d(t, "a", function () {
        return b;
      }),
        i.a.use([l, h]);
      let b = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = d.Lb({
            type: e,
            selectors: [["app-features-swiper"]],
            decls: 4,
            vars: 3,
            consts: [
              [3, "pagination", "navigation", "loop"],
              ["swiperSlide", ""],
              [1, "features-swiper__slide", "text-center"],
              [0, "icon", "icon-ic_point", "mb-2", "mb-lg-4"],
              [1, "title"],
              [1, "text"],
              [0, "icon", "icon-ic_map", "mb-2", "mb-lg-4"],
              [0, "icon", "icon-ic_hand", "mb-2", "mb-lg-4"],
            ],
            template: function (e, t) {
              1 & e &&
                (d.Xb(0, "swiper", 0),
                d.Lc(1, f, 6, 0, "ng-template", 1),
                d.Lc(2, g, 6, 0, "ng-template", 1),
                d.Lc(3, m, 6, 0, "ng-template", 1),
                d.Wb()),
                2 & e && d.pc("pagination", !0)("navigation", !0)("loop", !0);
            },
            directives: [p.a, p.c],
            styles: [
              '.features-swiper__slide{padding:40px 20px 20px}.features-swiper__slide .title{font-size:22px;font-weight:600}.features-swiper__slide .text{font-size:14px;color:#6d7783}.features-swiper__slide .icon{font-size:75px;display:inline-block}.swiper-container{width:215px;height:450px;position:absolute;top:60px;right:70px;border-radius:20px;padding:10px}.swiper-container:after{content:"";position:absolute;top:0;left:5%;right:0;background:#fff;border-radius:20px;height:85%;box-shadow:0 10px 20px rgba(0,0,0,.2);width:90%}.swiper-slide{text-align:center;font-size:18px;display:flex;justify-content:center;overflow:hidden}.swiper-wrapper{height:85%}.swiper-pagination-bullet{width:6px;height:6px;background:transparent;opacity:1;border:1px solid #222a41}.swiper-pagination-bullet-active{background:#222a41}.swiper-button-next,.swiper-button-prev{color:#222a41;top:auto;bottom:10px;width:20px;height:20px;margin-top:0;z-index:11}.swiper-button-next:after,.swiper-button-prev:after{font-size:16px}.swiper-button-next,.swiper-container-rtl .swiper-button-prev{right:45px}.swiper-button-prev,.swiper-container-rtl .swiper-button-next{left:45px}@media (max-width:991px){.swiper-container{width:180px;height:370px;top:30px;right:50px;border-radius:15px}.features-swiper__slide{padding:10px}.features-swiper__slide .title{margin-bottom:8px}.features-swiper__slide .text{line-height:18px}}',
            ],
            encapsulation: 2,
          })),
          e
        );
      })();
    },
    jZKg: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return r;
      });
      var i = n("HDdC"),
        s = n("quSY");
      function r(e, t) {
        return new i.a((n) => {
          const i = new s.a();
          let r = 0;
          return (
            i.add(
              t.schedule(function () {
                r !== e.length
                  ? (n.next(e[r++]), n.closed || i.add(this.schedule()))
                  : n.complete();
              })
            ),
            i
          );
        });
      }
    },
    jhN1: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return j;
      }),
        n.d(t, "b", function () {
          return P;
        }),
        n.d(t, "c", function () {
          return A;
        }),
        n.d(t, "d", function () {
          return S;
        });
      var i = n("ofXK"),
        s = n("fXoL");
      class r extends i.y {
        constructor() {
          super();
        }
        supportsDOMEvents() {
          return !0;
        }
      }
      class o extends r {
        static makeCurrent() {
          Object(i.C)(new o());
        }
        getProperty(e, t) {
          return e[t];
        }
        log(e) {
          window.console && window.console.log && window.console.log(e);
        }
        logGroup(e) {
          window.console && window.console.group && window.console.group(e);
        }
        logGroupEnd() {
          window.console &&
            window.console.groupEnd &&
            window.console.groupEnd();
        }
        onAndCancel(e, t, n) {
          return (
            e.addEventListener(t, n, !1),
            () => {
              e.removeEventListener(t, n, !1);
            }
          );
        }
        dispatchEvent(e, t) {
          e.dispatchEvent(t);
        }
        remove(e) {
          return e.parentNode && e.parentNode.removeChild(e), e;
        }
        getValue(e) {
          return e.value;
        }
        createElement(e, t) {
          return (t = t || this.getDefaultDocument()).createElement(e);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(e) {
          return e.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(e) {
          return e instanceof DocumentFragment;
        }
        getGlobalEventTarget(e, t) {
          return "window" === t
            ? window
            : "document" === t
            ? e
            : "body" === t
            ? e.body
            : null;
        }
        getHistory() {
          return window.history;
        }
        getLocation() {
          return window.location;
        }
        getBaseHref(e) {
          const t =
            l || ((l = document.querySelector("base")), l)
              ? l.getAttribute("href")
              : null;
          return null == t
            ? null
            : ((n = t),
              a || (a = document.createElement("a")),
              a.setAttribute("href", n),
              "/" === a.pathname.charAt(0) ? a.pathname : "/" + a.pathname);
          var n;
        }
        resetBaseElement() {
          l = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        performanceNow() {
          return window.performance && window.performance.now
            ? window.performance.now()
            : new Date().getTime();
        }
        supportsCookies() {
          return !0;
        }
        getCookie(e) {
          return Object(i.B)(document.cookie, e);
        }
      }
      let a,
        l = null;
      const c = new s.r("TRANSITION_ID"),
        u = [
          {
            provide: s.d,
            useFactory: function (e, t, n) {
              return () => {
                n.get(s.e).donePromise.then(() => {
                  const n = Object(i.A)();
                  Array.prototype.slice
                    .apply(t.querySelectorAll("style[ng-transition]"))
                    .filter((t) => t.getAttribute("ng-transition") === e)
                    .forEach((e) => n.remove(e));
                });
              };
            },
            deps: [c, i.e, s.s],
            multi: !0,
          },
        ];
      class h {
        static init() {
          Object(s.ab)(new h());
        }
        addToWindow(e) {
          (s.sb.getAngularTestability = (t, n = !0) => {
            const i = e.findTestabilityInTree(t, n);
            if (null == i)
              throw new Error("Could not find testability for element.");
            return i;
          }),
            (s.sb.getAllAngularTestabilities = () => e.getAllTestabilities()),
            (s.sb.getAllAngularRootElements = () => e.getAllRootElements()),
            s.sb.frameworkStabilizers || (s.sb.frameworkStabilizers = []),
            s.sb.frameworkStabilizers.push((e) => {
              const t = s.sb.getAllAngularTestabilities();
              let n = t.length,
                i = !1;
              const r = function (t) {
                (i = i || t), n--, 0 == n && e(i);
              };
              t.forEach(function (e) {
                e.whenStable(r);
              });
            });
        }
        findTestabilityInTree(e, t, n) {
          if (null == t) return null;
          const s = e.getTestability(t);
          return null != s
            ? s
            : n
            ? Object(i.A)().isShadowRoot(t)
              ? this.findTestabilityInTree(e, t.host, !0)
              : this.findTestabilityInTree(e, t.parentElement, !0)
            : null;
        }
      }
      const d = new s.r("EventManagerPlugins");
      let p = (() => {
        class e {
          constructor(e, t) {
            (this._zone = t),
              (this._eventNameToPlugin = new Map()),
              e.forEach((e) => (e.manager = this)),
              (this._plugins = e.slice().reverse());
          }
          addEventListener(e, t, n) {
            return this._findPluginFor(t).addEventListener(e, t, n);
          }
          addGlobalEventListener(e, t, n) {
            return this._findPluginFor(t).addGlobalEventListener(e, t, n);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(e) {
            const t = this._eventNameToPlugin.get(e);
            if (t) return t;
            const n = this._plugins;
            for (let i = 0; i < n.length; i++) {
              const t = n[i];
              if (t.supports(e)) return this._eventNameToPlugin.set(e, t), t;
            }
            throw new Error("No event manager plugin found for event " + e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(d), s.bc(s.B));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      class f {
        constructor(e) {
          this._doc = e;
        }
        addGlobalEventListener(e, t, n) {
          const s = Object(i.A)().getGlobalEventTarget(this._doc, e);
          if (!s)
            throw new Error(`Unsupported event target ${s} for event ${t}`);
          return this.addEventListener(s, t, n);
        }
      }
      let g = (() => {
          class e {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(e) {
              const t = new Set();
              e.forEach((e) => {
                this._stylesSet.has(e) || (this._stylesSet.add(e), t.add(e));
              }),
                this.onStylesAdded(t);
            }
            onStylesAdded(e) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        m = (() => {
          class e extends g {
            constructor(e) {
              super(),
                (this._doc = e),
                (this._hostNodes = new Set()),
                (this._styleNodes = new Set()),
                this._hostNodes.add(e.head);
            }
            _addStylesToHost(e, t) {
              e.forEach((e) => {
                const n = this._doc.createElement("style");
                (n.textContent = e), this._styleNodes.add(t.appendChild(n));
              });
            }
            addHost(e) {
              this._addStylesToHost(this._stylesSet, e), this._hostNodes.add(e);
            }
            removeHost(e) {
              this._hostNodes.delete(e);
            }
            onStylesAdded(e) {
              this._hostNodes.forEach((t) => this._addStylesToHost(e, t));
            }
            ngOnDestroy() {
              this._styleNodes.forEach((e) => Object(i.A)().remove(e));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(s.bc(i.e));
            }),
            (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })();
      const b = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
        },
        v = /%COMP%/g;
      function y(e, t, n) {
        for (let i = 0; i < t.length; i++) {
          let s = t[i];
          Array.isArray(s) ? y(e, s, n) : ((s = s.replace(v, e)), n.push(s));
        }
        return n;
      }
      function w(e) {
        return (t) => {
          if ("__ngUnwrap__" === t) return e;
          !1 === e(t) && (t.preventDefault(), (t.returnValue = !1));
        };
      }
      let S = (() => {
        class e {
          constructor(e, t, n) {
            (this.eventManager = e),
              (this.sharedStylesHost = t),
              (this.appId = n),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new _(e));
          }
          createRenderer(e, t) {
            if (!e || !t) return this.defaultRenderer;
            switch (t.encapsulation) {
              case s.R.Emulated: {
                let n = this.rendererByCompId.get(t.id);
                return (
                  n ||
                    ((n = new C(
                      this.eventManager,
                      this.sharedStylesHost,
                      t,
                      this.appId
                    )),
                    this.rendererByCompId.set(t.id, n)),
                  n.applyToHost(e),
                  n
                );
              }
              case s.R.Native:
              case s.R.ShadowDom:
                return new E(this.eventManager, this.sharedStylesHost, e, t);
              default:
                if (!this.rendererByCompId.has(t.id)) {
                  const e = y(t.id, t.styles, []);
                  this.sharedStylesHost.addStyles(e),
                    this.rendererByCompId.set(t.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(p), s.bc(m), s.bc(s.c));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      class _ {
        constructor(e) {
          (this.eventManager = e), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(e, t) {
          return t
            ? document.createElementNS(b[t] || t, e)
            : document.createElement(e);
        }
        createComment(e) {
          return document.createComment(e);
        }
        createText(e) {
          return document.createTextNode(e);
        }
        appendChild(e, t) {
          e.appendChild(t);
        }
        insertBefore(e, t, n) {
          e && e.insertBefore(t, n);
        }
        removeChild(e, t) {
          e && e.removeChild(t);
        }
        selectRootElement(e, t) {
          let n = "string" == typeof e ? document.querySelector(e) : e;
          if (!n)
            throw new Error(`The selector "${e}" did not match any elements`);
          return t || (n.textContent = ""), n;
        }
        parentNode(e) {
          return e.parentNode;
        }
        nextSibling(e) {
          return e.nextSibling;
        }
        setAttribute(e, t, n, i) {
          if (i) {
            t = i + ":" + t;
            const s = b[i];
            s ? e.setAttributeNS(s, t, n) : e.setAttribute(t, n);
          } else e.setAttribute(t, n);
        }
        removeAttribute(e, t, n) {
          if (n) {
            const i = b[n];
            i ? e.removeAttributeNS(i, t) : e.removeAttribute(`${n}:${t}`);
          } else e.removeAttribute(t);
        }
        addClass(e, t) {
          e.classList.add(t);
        }
        removeClass(e, t) {
          e.classList.remove(t);
        }
        setStyle(e, t, n, i) {
          i & s.H.DashCase
            ? e.style.setProperty(t, n, i & s.H.Important ? "important" : "")
            : (e.style[t] = n);
        }
        removeStyle(e, t, n) {
          n & s.H.DashCase ? e.style.removeProperty(t) : (e.style[t] = "");
        }
        setProperty(e, t, n) {
          e[t] = n;
        }
        setValue(e, t) {
          e.nodeValue = t;
        }
        listen(e, t, n) {
          return "string" == typeof e
            ? this.eventManager.addGlobalEventListener(e, t, w(n))
            : this.eventManager.addEventListener(e, t, w(n));
        }
      }
      class C extends _ {
        constructor(e, t, n, i) {
          super(e), (this.component = n);
          const s = y(i + "-" + n.id, n.styles, []);
          t.addStyles(s),
            (this.contentAttr = "_ngcontent-%COMP%".replace(v, i + "-" + n.id)),
            (this.hostAttr = (function (e) {
              return "_nghost-%COMP%".replace(v, e);
            })(i + "-" + n.id));
        }
        applyToHost(e) {
          super.setAttribute(e, this.hostAttr, "");
        }
        createElement(e, t) {
          const n = super.createElement(e, t);
          return super.setAttribute(n, this.contentAttr, ""), n;
        }
      }
      class E extends _ {
        constructor(e, t, n, i) {
          super(e),
            (this.sharedStylesHost = t),
            (this.hostEl = n),
            (this.component = i),
            (this.shadowRoot =
              i.encapsulation === s.R.ShadowDom
                ? n.attachShadow({ mode: "open" })
                : n.createShadowRoot()),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const r = y(i.id, i.styles, []);
          for (let s = 0; s < r.length; s++) {
            const e = document.createElement("style");
            (e.textContent = r[s]), this.shadowRoot.appendChild(e);
          }
        }
        nodeOrShadowRoot(e) {
          return e === this.hostEl ? this.shadowRoot : e;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(e, t) {
          return super.appendChild(this.nodeOrShadowRoot(e), t);
        }
        insertBefore(e, t, n) {
          return super.insertBefore(this.nodeOrShadowRoot(e), t, n);
        }
        removeChild(e, t) {
          return super.removeChild(this.nodeOrShadowRoot(e), t);
        }
        parentNode(e) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(e))
          );
        }
      }
      let O = (() => {
        class e extends f {
          constructor(e) {
            super(e);
          }
          supports(e) {
            return !0;
          }
          addEventListener(e, t, n) {
            return (
              e.addEventListener(t, n, !1),
              () => this.removeEventListener(e, t, n)
            );
          }
          removeEventListener(e, t, n) {
            return e.removeEventListener(t, n);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(i.e));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const x = ["alt", "control", "meta", "shift"],
        T = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        k = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "\x90": "NumLock",
        },
        M = {
          alt: (e) => e.altKey,
          control: (e) => e.ctrlKey,
          meta: (e) => e.metaKey,
          shift: (e) => e.shiftKey,
        };
      let I = (() => {
          class e extends f {
            constructor(e) {
              super(e);
            }
            supports(t) {
              return null != e.parseEventName(t);
            }
            addEventListener(t, n, s) {
              const r = e.parseEventName(n),
                o = e.eventCallback(r.fullKey, s, this.manager.getZone());
              return this.manager
                .getZone()
                .runOutsideAngular(() =>
                  Object(i.A)().onAndCancel(t, r.domEventName, o)
                );
            }
            static parseEventName(t) {
              const n = t.toLowerCase().split("."),
                i = n.shift();
              if (0 === n.length || ("keydown" !== i && "keyup" !== i))
                return null;
              const s = e._normalizeKey(n.pop());
              let r = "";
              if (
                (x.forEach((e) => {
                  const t = n.indexOf(e);
                  t > -1 && (n.splice(t, 1), (r += e + "."));
                }),
                (r += s),
                0 != n.length || 0 === s.length)
              )
                return null;
              const o = {};
              return (o.domEventName = i), (o.fullKey = r), o;
            }
            static getEventFullKey(e) {
              let t = "",
                n = (function (e) {
                  let t = e.key;
                  if (null == t) {
                    if (((t = e.keyIdentifier), null == t))
                      return "Unidentified";
                    t.startsWith("U+") &&
                      ((t = String.fromCharCode(parseInt(t.substring(2), 16))),
                      3 === e.location && k.hasOwnProperty(t) && (t = k[t]));
                  }
                  return T[t] || t;
                })(e);
              return (
                (n = n.toLowerCase()),
                " " === n ? (n = "space") : "." === n && (n = "dot"),
                x.forEach((i) => {
                  i != n && (0, M[i])(e) && (t += i + ".");
                }),
                (t += n),
                t
              );
            }
            static eventCallback(t, n, i) {
              return (s) => {
                e.getEventFullKey(s) === t && i.runGuarded(() => n(s));
              };
            }
            static _normalizeKey(e) {
              switch (e) {
                case "esc":
                  return "escape";
                default:
                  return e;
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(s.bc(i.e));
            }),
            (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        P = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = Object(s.Nb)({
              factory: function () {
                return Object(s.bc)(N);
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })();
      function R(e) {
        return new N(e.get(i.e));
      }
      let N = (() => {
        class e extends P {
          constructor(e) {
            super(), (this._doc = e);
          }
          sanitize(e, t) {
            if (null == t) return null;
            switch (e) {
              case s.J.NONE:
                return t;
              case s.J.HTML:
                return Object(s.hb)(t, "HTML")
                  ? Object(s.Ab)(t)
                  : Object(s.eb)(this._doc, String(t));
              case s.J.STYLE:
                return Object(s.hb)(t, "Style")
                  ? Object(s.Ab)(t)
                  : Object(s.fb)(t);
              case s.J.SCRIPT:
                if (Object(s.hb)(t, "Script")) return Object(s.Ab)(t);
                throw new Error("unsafe value used in a script context");
              case s.J.URL:
                return (
                  Object(s.rb)(t),
                  Object(s.hb)(t, "URL")
                    ? Object(s.Ab)(t)
                    : Object(s.gb)(String(t))
                );
              case s.J.RESOURCE_URL:
                if (Object(s.hb)(t, "ResourceURL")) return Object(s.Ab)(t);
                throw new Error(
                  "unsafe value used in a resource URL context (see http://g.co/ng/security#xss)"
                );
              default:
                throw new Error(
                  `Unexpected SecurityContext ${e} (see http://g.co/ng/security#xss)`
                );
            }
          }
          bypassSecurityTrustHtml(e) {
            return Object(s.ib)(e);
          }
          bypassSecurityTrustStyle(e) {
            return Object(s.lb)(e);
          }
          bypassSecurityTrustScript(e) {
            return Object(s.kb)(e);
          }
          bypassSecurityTrustUrl(e) {
            return Object(s.mb)(e);
          }
          bypassSecurityTrustResourceUrl(e) {
            return Object(s.jb)(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(i.e));
          }),
          (e.ɵprov = Object(s.Nb)({
            factory: function () {
              return R(Object(s.bc)(s.p));
            },
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      const L = [
          { provide: s.D, useValue: i.z },
          {
            provide: s.E,
            useValue: function () {
              o.makeCurrent(), h.init();
            },
            multi: !0,
          },
          {
            provide: i.e,
            useFactory: function () {
              return Object(s.yb)(document), document;
            },
            deps: [],
          },
        ],
        A = Object(s.T)(s.Z, "browser", L),
        D = [
          [],
          { provide: s.cb, useValue: "root" },
          {
            provide: s.n,
            useFactory: function () {
              return new s.n();
            },
            deps: [],
          },
          { provide: d, useClass: O, multi: !0, deps: [i.e, s.B, s.D] },
          { provide: d, useClass: I, multi: !0, deps: [i.e] },
          [],
          { provide: S, useClass: S, deps: [p, m, s.c] },
          { provide: s.G, useExisting: S },
          { provide: g, useExisting: m },
          { provide: m, useClass: m, deps: [i.e] },
          { provide: s.N, useClass: s.N, deps: [s.B] },
          { provide: p, useClass: p, deps: [d, s.B] },
          [],
        ];
      let j = (() => {
        class e {
          constructor(e) {
            if (e)
              throw new Error(
                "BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead."
              );
          }
          static withServerTransition(t) {
            return {
              ngModule: e,
              providers: [
                { provide: s.c, useValue: t.appId },
                { provide: c, useExisting: s.c },
                u,
              ],
            };
          }
        }
        return (
          (e.ɵmod = s.Pb({ type: e })),
          (e.ɵinj = s.Ob({
            factory: function (t) {
              return new (t || e)(s.bc(e, 12));
            },
            providers: D,
            imports: [i.c, s.f],
          })),
          e
        );
      })();
      "undefined" != typeof window && window;
    },
    jtHE: function (e, t, n) {
      "use strict";
      var i = n("XNiG"),
        s = n("3N8a");
      class r extends s.a {
        constructor(e, t) {
          super(e, t), (this.scheduler = e), (this.work = t);
        }
        schedule(e, t = 0) {
          return t > 0
            ? super.schedule(e, t)
            : ((this.delay = t),
              (this.state = e),
              this.scheduler.flush(this),
              this);
        }
        execute(e, t) {
          return t > 0 || this.closed
            ? super.execute(e, t)
            : this._execute(e, t);
        }
        requestAsyncId(e, t, n = 0) {
          return (null !== n && n > 0) || (null === n && this.delay > 0)
            ? super.requestAsyncId(e, t, n)
            : e.flush(this);
        }
      }
      var o = n("IjjT");
      class a extends o.a {}
      const l = new a(r);
      var c = n("quSY"),
        u = n("7o/Q"),
        h = n("EY2u"),
        d = n("LRne"),
        p = n("z6cu");
      let f = (() => {
        class e {
          constructor(e, t, n) {
            (this.kind = e),
              (this.value = t),
              (this.error = n),
              (this.hasValue = "N" === e);
          }
          observe(e) {
            switch (this.kind) {
              case "N":
                return e.next && e.next(this.value);
              case "E":
                return e.error && e.error(this.error);
              case "C":
                return e.complete && e.complete();
            }
          }
          do(e, t, n) {
            switch (this.kind) {
              case "N":
                return e && e(this.value);
              case "E":
                return t && t(this.error);
              case "C":
                return n && n();
            }
          }
          accept(e, t, n) {
            return e && "function" == typeof e.next
              ? this.observe(e)
              : this.do(e, t, n);
          }
          toObservable() {
            switch (this.kind) {
              case "N":
                return Object(d.a)(this.value);
              case "E":
                return Object(p.a)(this.error);
              case "C":
                return Object(h.b)();
            }
            throw new Error("unexpected notification kind value");
          }
          static createNext(t) {
            return void 0 !== t ? new e("N", t) : e.undefinedValueNotification;
          }
          static createError(t) {
            return new e("E", void 0, t);
          }
          static createComplete() {
            return e.completeNotification;
          }
        }
        return (
          (e.completeNotification = new e("C")),
          (e.undefinedValueNotification = new e("N", void 0)),
          e
        );
      })();
      class g extends u.a {
        constructor(e, t, n = 0) {
          super(e), (this.scheduler = t), (this.delay = n);
        }
        static dispatch(e) {
          const { notification: t, destination: n } = e;
          t.observe(n), this.unsubscribe();
        }
        scheduleMessage(e) {
          this.destination.add(
            this.scheduler.schedule(
              g.dispatch,
              this.delay,
              new m(e, this.destination)
            )
          );
        }
        _next(e) {
          this.scheduleMessage(f.createNext(e));
        }
        _error(e) {
          this.scheduleMessage(f.createError(e)), this.unsubscribe();
        }
        _complete() {
          this.scheduleMessage(f.createComplete()), this.unsubscribe();
        }
      }
      class m {
        constructor(e, t) {
          (this.notification = e), (this.destination = t);
        }
      }
      var b = n("9ppp"),
        v = n("Ylt2");
      n.d(t, "a", function () {
        return y;
      });
      class y extends i.b {
        constructor(
          e = Number.POSITIVE_INFINITY,
          t = Number.POSITIVE_INFINITY,
          n
        ) {
          super(),
            (this.scheduler = n),
            (this._events = []),
            (this._infiniteTimeWindow = !1),
            (this._bufferSize = e < 1 ? 1 : e),
            (this._windowTime = t < 1 ? 1 : t),
            t === Number.POSITIVE_INFINITY
              ? ((this._infiniteTimeWindow = !0),
                (this.next = this.nextInfiniteTimeWindow))
              : (this.next = this.nextTimeWindow);
        }
        nextInfiniteTimeWindow(e) {
          const t = this._events;
          t.push(e), t.length > this._bufferSize && t.shift(), super.next(e);
        }
        nextTimeWindow(e) {
          this._events.push(new w(this._getNow(), e)),
            this._trimBufferThenGetEvents(),
            super.next(e);
        }
        _subscribe(e) {
          const t = this._infiniteTimeWindow,
            n = t ? this._events : this._trimBufferThenGetEvents(),
            i = this.scheduler,
            s = n.length;
          let r;
          if (this.closed) throw new b.a();
          if (
            (this.isStopped || this.hasError
              ? (r = c.a.EMPTY)
              : (this.observers.push(e), (r = new v.a(this, e))),
            i && e.add((e = new g(e, i))),
            t)
          )
            for (let o = 0; o < s && !e.closed; o++) e.next(n[o]);
          else for (let o = 0; o < s && !e.closed; o++) e.next(n[o].value);
          return (
            this.hasError
              ? e.error(this.thrownError)
              : this.isStopped && e.complete(),
            r
          );
        }
        _getNow() {
          return (this.scheduler || l).now();
        }
        _trimBufferThenGetEvents() {
          const e = this._getNow(),
            t = this._bufferSize,
            n = this._windowTime,
            i = this._events,
            s = i.length;
          let r = 0;
          for (; r < s && !(e - i[r].time < n); ) r++;
          return s > t && (r = Math.max(r, s - t)), r > 0 && i.splice(0, r), i;
        }
      }
      class w {
        constructor(e, t) {
          (this.time = e), (this.value = t);
        }
      }
    },
    kJWO: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (() =>
        ("function" == typeof Symbol && Symbol.observable) || "@@observable")();
    },
    l7GE: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("7o/Q");
      class s extends i.a {
        notifyNext(e, t, n, i, s) {
          this.destination.next(t);
        }
        notifyError(e, t) {
          this.destination.error(e);
        }
        notifyComplete(e) {
          this.destination.complete();
        }
      }
    },
    lJxs: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("7o/Q");
      function s(e, t) {
        return function (n) {
          if ("function" != typeof e)
            throw new TypeError(
              "argument is not a function. Are you looking for `mapTo()`?"
            );
          return n.lift(new r(e, t));
        };
      }
      class r {
        constructor(e, t) {
          (this.project = e), (this.thisArg = t);
        }
        call(e, t) {
          return t.subscribe(new o(e, this.project, this.thisArg));
        }
      }
      class o extends i.a {
        constructor(e, t, n) {
          super(e),
            (this.project = t),
            (this.count = 0),
            (this.thisArg = n || this);
        }
        _next(e) {
          let t;
          try {
            t = this.project.call(this.thisArg, e, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
    },
    lY0W: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var i = n("AcyG"),
        s = n("6T7H"),
        r = n("SScL"),
        o = n("Ytcc"),
        a = n("fClZ"),
        l = n("fXoL");
      let c = (() => {
        class e {}
        return (
          (e.ɵmod = l.Pb({ type: e })),
          (e.ɵinj = l.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [r.a, o.a, a.a],
            imports: [[i.d.forFeature([s.a])]],
          })),
          e
        );
      })();
    },
    ly96: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      class i {
        static markAllAsTouched(e) {
          const { controls: t } = e,
            n = Object.keys(t);
          for (const i of n) t.hasOwnProperty(i) && t[i].markAsTouched();
        }
        static getErrorMessage(e, t) {
          let n;
          switch (!0) {
            case t.hasError("required"):
              n = "You must enter a value";
              break;
            case t.hasError("email"):
              n = "Invalid email";
              break;
            case t.hasError("url"):
            case t.hasError("pattern"):
              n = "Invalid value format";
              break;
            case t.hasError("valuesNotMatch"):
              n = `${e} not match with NewPassword. Current value: ${t.errors.valuesNotMatch.value}`;
              break;
            case t.hasError("valuesMatch"):
              n = `${e} match with OldPassword. Current value: ${t.errors.valuesMatch.value}`;
              break;
            case t.hasError("minlength"):
              n = `${e} should be minimum ${t.errors.minlength.requiredLength} characters long,\n          actual length ${t.errors.minlength.actualLength}`;
              break;
            case t.hasError("maxlength"):
              n = `${e} should be maximum ${t.errors.maxlength.requiredLength} characters long,\n          actual length ${t.errors.maxlength.actualLength}`;
              break;
            default:
              n = "something went wrong";
          }
          return n;
        }
      }
    },
    mCNh: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      }),
        n.d(t, "b", function () {
          return r;
        });
      var i = n("SpAZ");
      function s(...e) {
        return r(e);
      }
      function r(e) {
        return 0 === e.length
          ? i.a
          : 1 === e.length
          ? e[0]
          : function (t) {
              return e.reduce((e, t) => t(e), t);
            };
      }
    },
    mQ6H: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      class i {
        static getMinDate() {
          return new Date(new Date().getFullYear() - 18 - 100, 0, 1);
        }
        static getMaxDate() {
          return new Date(new Date().getFullYear() - 18, 0, 1);
        }
        static getYearRange() {
          return `${i.getMinDate().getFullYear()}:${i
            .getMaxDate()
            .getFullYear()}`;
        }
      }
    },
    mrSG: function (e, t, n) {
      "use strict";
      function i(e, t, n, i) {
        var s,
          r = arguments.length,
          o =
            r < 3
              ? t
              : null === i
              ? (i = Object.getOwnPropertyDescriptor(t, n))
              : i;
        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
          o = Reflect.decorate(e, t, n, i);
        else
          for (var a = e.length - 1; a >= 0; a--)
            (s = e[a]) &&
              (o = (r < 3 ? s(o) : r > 3 ? s(t, n, o) : s(t, n)) || o);
        return r > 3 && o && Object.defineProperty(t, n, o), o;
      }
      function s(e, t) {
        if ("object" == typeof Reflect && "function" == typeof Reflect.metadata)
          return Reflect.metadata(e, t);
      }
      function r(e, t, n, i) {
        return new (n || (n = Promise))(function (s, r) {
          function o(e) {
            try {
              l(i.next(e));
            } catch (t) {
              r(t);
            }
          }
          function a(e) {
            try {
              l(i.throw(e));
            } catch (t) {
              r(t);
            }
          }
          function l(e) {
            var t;
            e.done
              ? s(e.value)
              : ((t = e.value),
                t instanceof n
                  ? t
                  : new n(function (e) {
                      e(t);
                    })).then(o, a);
          }
          l((i = i.apply(e, t || [])).next());
        });
      }
      n.d(t, "b", function () {
        return i;
      }),
        n.d(t, "c", function () {
          return s;
        }),
        n.d(t, "a", function () {
          return r;
        });
    },
    n6bG: function (e, t, n) {
      "use strict";
      function i(e) {
        return "function" == typeof e;
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    nAdJ: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var i = n("jtHE"),
        s = n("TkeJ"),
        r = n("fXoL"),
        o = n("AcyG");
      let a = (() => {
        class e {
          constructor(e) {
            this.store = e;
          }
          canActivate() {
            return this.isAuthorized();
          }
          canActivateChild() {
            return this.isAuthorized();
          }
          isAuthorized() {
            const e = new i.a(1);
            return (
              this.store
                .selectOnce((e) => e.auth.isAuthorized)
                .subscribe((t) => {
                  t || this.store.dispatch([new s.a(["/"])]), e.next(t);
                }),
              e.asObservable()
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(r.bc(o.h));
          }),
          (e.ɵprov = r.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    ngJS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (e) => (t) => {
        for (let n = 0, i = e.length; n < i && !t.closed; n++) t.next(e[n]);
        t.complete();
      };
    },
    oHij: function (e, t, n) {
      "use strict";
      var i;
      n.d(t, "a", function () {
        return i;
      }),
        (function (e) {
          class t {}
          (t.type = "[i18n] GetLanguages"), (e.GetLanguages = t);
          class n {}
          (n.type = "[i18n] GetLanguagesSuccess"), (e.GetLanguagesSuccess = n);
          class i {
            constructor(e) {
              this.error = e;
            }
          }
          (i.type = "[i18n] GetLanguagesFailed"), (e.GetLanguagesFailed = i);
          class s {
            constructor(e) {
              this.payload = e;
            }
          }
          (s.type = "[i18n] GetNewTranslates"), (e.GetNewTranslates = s);
          class r {}
          (r.type = "[i18n] GetNewTranslatesSuccess"),
            (e.GetNewTranslatesSuccess = r);
          class o {
            constructor(e) {
              this.error = e;
            }
          }
          (o.type = "[i18n] GetNewTranslatesFailed"),
            (e.GetNewTranslatesFailed = o);
          class a {
            constructor(e) {
              this.payload = e;
            }
          }
          (a.type = "[i18n] ChangeLocale"), (e.ChangeLocale = a);
          class l {
            constructor(e) {
              this.payload = e;
            }
          }
          (l.type = "[i18n] ChangeActiveTranslates"),
            (e.ChangeActiveTranslates = l);
        })(i || (i = {}));
    },
    ofXK: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return w;
      }),
        n.d(t, "b", function () {
          return Oe;
        }),
        n.d(t, "c", function () {
          return Me;
        }),
        n.d(t, "d", function () {
          return Te;
        }),
        n.d(t, "e", function () {
          return l;
        }),
        n.d(t, "f", function () {
          return xe;
        }),
        n.d(t, "g", function () {
          return _;
        }),
        n.d(t, "h", function () {
          return h;
        }),
        n.d(t, "i", function () {
          return C;
        }),
        n.d(t, "j", function () {
          return v;
        }),
        n.d(t, "k", function () {
          return ae;
        }),
        n.d(t, "l", function () {
          return ce;
        }),
        n.d(t, "m", function () {
          return he;
        }),
        n.d(t, "n", function () {
          return ve;
        }),
        n.d(t, "o", function () {
          return ge;
        }),
        n.d(t, "p", function () {
          return me;
        }),
        n.d(t, "q", function () {
          return be;
        }),
        n.d(t, "r", function () {
          return ye;
        }),
        n.d(t, "s", function () {
          return S;
        }),
        n.d(t, "t", function () {
          return c;
        }),
        n.d(t, "u", function () {
          return ke;
        }),
        n.d(t, "v", function () {
          return Ne;
        }),
        n.d(t, "w", function () {
          return Pe;
        }),
        n.d(t, "x", function () {
          return Re;
        }),
        n.d(t, "y", function () {
          return a;
        }),
        n.d(t, "z", function () {
          return Ie;
        }),
        n.d(t, "A", function () {
          return r;
        }),
        n.d(t, "B", function () {
          return oe;
        }),
        n.d(t, "C", function () {
          return o;
        });
      var i = n("fXoL");
      let s = null;
      function r() {
        return s;
      }
      function o(e) {
        s || (s = e);
      }
      class a {}
      const l = new i.r("DocumentToken");
      let c = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = Object(i.Nb)({
            factory: u,
            token: e,
            providedIn: "platform",
          })),
          e
        );
      })();
      function u() {
        return Object(i.bc)(d);
      }
      const h = new i.r("Location Initialized");
      let d = (() => {
        class e extends c {
          constructor(e) {
            super(), (this._doc = e), this._init();
          }
          _init() {
            (this.location = r().getLocation()),
              (this._history = r().getHistory());
          }
          getBaseHrefFromDOM() {
            return r().getBaseHref(this._doc);
          }
          onPopState(e) {
            r()
              .getGlobalEventTarget(this._doc, "window")
              .addEventListener("popstate", e, !1);
          }
          onHashChange(e) {
            r()
              .getGlobalEventTarget(this._doc, "window")
              .addEventListener("hashchange", e, !1);
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(e) {
            this.location.pathname = e;
          }
          pushState(e, t, n) {
            p() ? this._history.pushState(e, t, n) : (this.location.hash = n);
          }
          replaceState(e, t, n) {
            p()
              ? this._history.replaceState(e, t, n)
              : (this.location.hash = n);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(l));
          }),
          (e.ɵprov = Object(i.Nb)({
            factory: f,
            token: e,
            providedIn: "platform",
          })),
          e
        );
      })();
      function p() {
        return !!window.history.pushState;
      }
      function f() {
        return new d(Object(i.bc)(l));
      }
      function g(e, t) {
        if (0 == e.length) return t;
        if (0 == t.length) return e;
        let n = 0;
        return (
          e.endsWith("/") && n++,
          t.startsWith("/") && n++,
          2 == n ? e + t.substring(1) : 1 == n ? e + t : e + "/" + t
        );
      }
      function m(e) {
        const t = e.match(/#|\?|$/),
          n = (t && t.index) || e.length;
        return e.slice(0, n - ("/" === e[n - 1] ? 1 : 0)) + e.slice(n);
      }
      function b(e) {
        return e && "?" !== e[0] ? "?" + e : e;
      }
      let v = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = Object(i.Nb)({
            factory: y,
            token: e,
            providedIn: "root",
          })),
          e
        );
      })();
      function y(e) {
        const t = Object(i.bc)(l).location;
        return new S(Object(i.bc)(c), (t && t.origin) || "");
      }
      const w = new i.r("appBaseHref");
      let S = (() => {
          class e extends v {
            constructor(e, t) {
              if (
                (super(),
                (this._platformLocation = e),
                null == t && (t = this._platformLocation.getBaseHrefFromDOM()),
                null == t)
              )
                throw new Error(
                  "No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document."
                );
              this._baseHref = t;
            }
            onPopState(e) {
              this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e);
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(e) {
              return g(this._baseHref, e);
            }
            path(e = !1) {
              const t =
                  this._platformLocation.pathname +
                  b(this._platformLocation.search),
                n = this._platformLocation.hash;
              return n && e ? `${t}${n}` : t;
            }
            pushState(e, t, n, i) {
              const s = this.prepareExternalUrl(n + b(i));
              this._platformLocation.pushState(e, t, s);
            }
            replaceState(e, t, n, i) {
              const s = this.prepareExternalUrl(n + b(i));
              this._platformLocation.replaceState(e, t, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(c), i.bc(w, 8));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        _ = (() => {
          class e extends v {
            constructor(e, t) {
              super(),
                (this._platformLocation = e),
                (this._baseHref = ""),
                null != t && (this._baseHref = t);
            }
            onPopState(e) {
              this._platformLocation.onPopState(e),
                this._platformLocation.onHashChange(e);
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(e = !1) {
              let t = this._platformLocation.hash;
              return null == t && (t = "#"), t.length > 0 ? t.substring(1) : t;
            }
            prepareExternalUrl(e) {
              const t = g(this._baseHref, e);
              return t.length > 0 ? "#" + t : t;
            }
            pushState(e, t, n, i) {
              let s = this.prepareExternalUrl(n + b(i));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.pushState(e, t, s);
            }
            replaceState(e, t, n, i) {
              let s = this.prepareExternalUrl(n + b(i));
              0 == s.length && (s = this._platformLocation.pathname),
                this._platformLocation.replaceState(e, t, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(c), i.bc(w, 8));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        C = (() => {
          class e {
            constructor(e, t) {
              (this._subject = new i.o()),
                (this._urlChangeListeners = []),
                (this._platformStrategy = e);
              const n = this._platformStrategy.getBaseHref();
              (this._platformLocation = t),
                (this._baseHref = m(O(n))),
                this._platformStrategy.onPopState((e) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: e.state,
                    type: e.type,
                  });
                });
            }
            path(e = !1) {
              return this.normalize(this._platformStrategy.path(e));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(e, t = "") {
              return this.path() == this.normalize(e + b(t));
            }
            normalize(t) {
              return e.stripTrailingSlash(
                (function (e, t) {
                  return e && t.startsWith(e) ? t.substring(e.length) : t;
                })(this._baseHref, O(t))
              );
            }
            prepareExternalUrl(e) {
              return (
                e && "/" !== e[0] && (e = "/" + e),
                this._platformStrategy.prepareExternalUrl(e)
              );
            }
            go(e, t = "", n = null) {
              this._platformStrategy.pushState(n, "", e, t),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + b(t)),
                  n
                );
            }
            replaceState(e, t = "", n = null) {
              this._platformStrategy.replaceState(n, "", e, t),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(e + b(t)),
                  n
                );
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            onUrlChange(e) {
              this._urlChangeListeners.push(e),
                this.subscribe((e) => {
                  this._notifyUrlChangeListeners(e.url, e.state);
                });
            }
            _notifyUrlChangeListeners(e = "", t) {
              this._urlChangeListeners.forEach((n) => n(e, t));
            }
            subscribe(e, t, n) {
              return this._subject.subscribe({
                next: e,
                error: t,
                complete: n,
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(v), i.bc(c));
            }),
            (e.normalizeQueryParams = b),
            (e.joinWithSlash = g),
            (e.stripTrailingSlash = m),
            (e.ɵprov = Object(i.Nb)({
              factory: E,
              token: e,
              providedIn: "root",
            })),
            e
          );
        })();
      function E() {
        return new C(Object(i.bc)(v), Object(i.bc)(c));
      }
      function O(e) {
        return e.replace(/\/index.html$/, "");
      }
      const x = {
          ADP: [void 0, void 0, 0],
          AFN: [void 0, void 0, 0],
          ALL: [void 0, void 0, 0],
          AMD: [void 0, void 0, 2],
          AOA: [void 0, "Kz"],
          ARS: [void 0, "$"],
          AUD: ["A$", "$"],
          BAM: [void 0, "KM"],
          BBD: [void 0, "$"],
          BDT: [void 0, "\u09f3"],
          BHD: [void 0, void 0, 3],
          BIF: [void 0, void 0, 0],
          BMD: [void 0, "$"],
          BND: [void 0, "$"],
          BOB: [void 0, "Bs"],
          BRL: ["R$"],
          BSD: [void 0, "$"],
          BWP: [void 0, "P"],
          BYN: [void 0, "\u0440.", 2],
          BYR: [void 0, void 0, 0],
          BZD: [void 0, "$"],
          CAD: ["CA$", "$", 2],
          CHF: [void 0, void 0, 2],
          CLF: [void 0, void 0, 4],
          CLP: [void 0, "$", 0],
          CNY: ["CN\xa5", "\xa5"],
          COP: [void 0, "$", 2],
          CRC: [void 0, "\u20a1", 2],
          CUC: [void 0, "$"],
          CUP: [void 0, "$"],
          CZK: [void 0, "K\u010d", 2],
          DJF: [void 0, void 0, 0],
          DKK: [void 0, "kr", 2],
          DOP: [void 0, "$"],
          EGP: [void 0, "E\xa3"],
          ESP: [void 0, "\u20a7", 0],
          EUR: ["\u20ac"],
          FJD: [void 0, "$"],
          FKP: [void 0, "\xa3"],
          GBP: ["\xa3"],
          GEL: [void 0, "\u20be"],
          GIP: [void 0, "\xa3"],
          GNF: [void 0, "FG", 0],
          GTQ: [void 0, "Q"],
          GYD: [void 0, "$", 2],
          HKD: ["HK$", "$"],
          HNL: [void 0, "L"],
          HRK: [void 0, "kn"],
          HUF: [void 0, "Ft", 2],
          IDR: [void 0, "Rp", 2],
          ILS: ["\u20aa"],
          INR: ["\u20b9"],
          IQD: [void 0, void 0, 0],
          IRR: [void 0, void 0, 0],
          ISK: [void 0, "kr", 0],
          ITL: [void 0, void 0, 0],
          JMD: [void 0, "$"],
          JOD: [void 0, void 0, 3],
          JPY: ["\xa5", void 0, 0],
          KHR: [void 0, "\u17db"],
          KMF: [void 0, "CF", 0],
          KPW: [void 0, "\u20a9", 0],
          KRW: ["\u20a9", void 0, 0],
          KWD: [void 0, void 0, 3],
          KYD: [void 0, "$"],
          KZT: [void 0, "\u20b8"],
          LAK: [void 0, "\u20ad", 0],
          LBP: [void 0, "L\xa3", 0],
          LKR: [void 0, "Rs"],
          LRD: [void 0, "$"],
          LTL: [void 0, "Lt"],
          LUF: [void 0, void 0, 0],
          LVL: [void 0, "Ls"],
          LYD: [void 0, void 0, 3],
          MGA: [void 0, "Ar", 0],
          MGF: [void 0, void 0, 0],
          MMK: [void 0, "K", 0],
          MNT: [void 0, "\u20ae", 2],
          MRO: [void 0, void 0, 0],
          MUR: [void 0, "Rs", 2],
          MXN: ["MX$", "$"],
          MYR: [void 0, "RM"],
          NAD: [void 0, "$"],
          NGN: [void 0, "\u20a6"],
          NIO: [void 0, "C$"],
          NOK: [void 0, "kr", 2],
          NPR: [void 0, "Rs"],
          NZD: ["NZ$", "$"],
          OMR: [void 0, void 0, 3],
          PHP: [void 0, "\u20b1"],
          PKR: [void 0, "Rs", 2],
          PLN: [void 0, "z\u0142"],
          PYG: [void 0, "\u20b2", 0],
          RON: [void 0, "lei"],
          RSD: [void 0, void 0, 0],
          RUB: [void 0, "\u20bd"],
          RUR: [void 0, "\u0440."],
          RWF: [void 0, "RF", 0],
          SBD: [void 0, "$"],
          SEK: [void 0, "kr", 2],
          SGD: [void 0, "$"],
          SHP: [void 0, "\xa3"],
          SLL: [void 0, void 0, 0],
          SOS: [void 0, void 0, 0],
          SRD: [void 0, "$"],
          SSP: [void 0, "\xa3"],
          STD: [void 0, void 0, 0],
          STN: [void 0, "Db"],
          SYP: [void 0, "\xa3", 0],
          THB: [void 0, "\u0e3f"],
          TMM: [void 0, void 0, 0],
          TND: [void 0, void 0, 3],
          TOP: [void 0, "T$"],
          TRL: [void 0, void 0, 0],
          TRY: [void 0, "\u20ba"],
          TTD: [void 0, "$"],
          TWD: ["NT$", "$", 2],
          TZS: [void 0, void 0, 2],
          UAH: [void 0, "\u20b4"],
          UGX: [void 0, void 0, 0],
          USD: ["$"],
          UYI: [void 0, void 0, 0],
          UYU: [void 0, "$"],
          UYW: [void 0, void 0, 4],
          UZS: [void 0, void 0, 2],
          VEF: [void 0, "Bs", 2],
          VND: ["\u20ab", void 0, 0],
          VUV: [void 0, void 0, 0],
          XAF: ["FCFA", void 0, 0],
          XCD: ["EC$", "$"],
          XOF: ["CFA", void 0, 0],
          XPF: ["CFPF", void 0, 0],
          XXX: ["\xa4"],
          YER: [void 0, void 0, 0],
          ZAR: [void 0, "R"],
          ZMK: [void 0, void 0, 0],
          ZMW: [void 0, "ZK"],
          ZWD: [void 0, void 0, 0],
        },
        T = (function () {
          var e = { Decimal: 0, Percent: 1, Currency: 2, Scientific: 3 };
          return (
            (e[e.Decimal] = "Decimal"),
            (e[e.Percent] = "Percent"),
            (e[e.Currency] = "Currency"),
            (e[e.Scientific] = "Scientific"),
            e
          );
        })(),
        k = (function () {
          var e = { Zero: 0, One: 1, Two: 2, Few: 3, Many: 4, Other: 5 };
          return (
            (e[e.Zero] = "Zero"),
            (e[e.One] = "One"),
            (e[e.Two] = "Two"),
            (e[e.Few] = "Few"),
            (e[e.Many] = "Many"),
            (e[e.Other] = "Other"),
            e
          );
        })(),
        M = (function () {
          var e = { Format: 0, Standalone: 1 };
          return (e[e.Format] = "Format"), (e[e.Standalone] = "Standalone"), e;
        })(),
        I = (function () {
          var e = { Narrow: 0, Abbreviated: 1, Wide: 2, Short: 3 };
          return (
            (e[e.Narrow] = "Narrow"),
            (e[e.Abbreviated] = "Abbreviated"),
            (e[e.Wide] = "Wide"),
            (e[e.Short] = "Short"),
            e
          );
        })(),
        P = (function () {
          var e = { Short: 0, Medium: 1, Long: 2, Full: 3 };
          return (
            (e[e.Short] = "Short"),
            (e[e.Medium] = "Medium"),
            (e[e.Long] = "Long"),
            (e[e.Full] = "Full"),
            e
          );
        })(),
        R = (function () {
          var e = {
            Decimal: 0,
            Group: 1,
            List: 2,
            PercentSign: 3,
            PlusSign: 4,
            MinusSign: 5,
            Exponential: 6,
            SuperscriptingExponent: 7,
            PerMille: 8,
            Infinity: 9,
            NaN: 10,
            TimeSeparator: 11,
            CurrencyDecimal: 12,
            CurrencyGroup: 13,
          };
          return (
            (e[e.Decimal] = "Decimal"),
            (e[e.Group] = "Group"),
            (e[e.List] = "List"),
            (e[e.PercentSign] = "PercentSign"),
            (e[e.PlusSign] = "PlusSign"),
            (e[e.MinusSign] = "MinusSign"),
            (e[e.Exponential] = "Exponential"),
            (e[e.SuperscriptingExponent] = "SuperscriptingExponent"),
            (e[e.PerMille] = "PerMille"),
            (e[e.Infinity] = "Infinity"),
            (e[e.NaN] = "NaN"),
            (e[e.TimeSeparator] = "TimeSeparator"),
            (e[e.CurrencyDecimal] = "CurrencyDecimal"),
            (e[e.CurrencyGroup] = "CurrencyGroup"),
            e
          );
        })();
      function N(e, t) {
        return V(Object(i.nb)(e)[i.db.DateFormat], t);
      }
      function L(e, t) {
        return V(Object(i.nb)(e)[i.db.TimeFormat], t);
      }
      function A(e, t) {
        return V(Object(i.nb)(e)[i.db.DateTimeFormat], t);
      }
      function D(e, t) {
        const n = Object(i.nb)(e),
          s = n[i.db.NumberSymbols][t];
        if (void 0 === s) {
          if (t === R.CurrencyDecimal) return n[i.db.NumberSymbols][R.Decimal];
          if (t === R.CurrencyGroup) return n[i.db.NumberSymbols][R.Group];
        }
        return s;
      }
      const j = i.qb;
      function F(e) {
        if (!e[i.db.ExtraData])
          throw new Error(
            `Missing extra locale data for the locale "${
              e[i.db.LocaleId]
            }". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`
          );
      }
      function V(e, t) {
        for (let n = t; n > -1; n--) if (void 0 !== e[n]) return e[n];
        throw new Error("Locale data API: locale data undefined");
      }
      function W(e) {
        const [t, n] = e.split(":");
        return { hours: +t, minutes: +n };
      }
      const z =
          /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
        X = {},
        B =
          /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/,
        H = (function () {
          var e = { Short: 0, ShortGMT: 1, Long: 2, Extended: 3 };
          return (
            (e[e.Short] = "Short"),
            (e[e.ShortGMT] = "ShortGMT"),
            (e[e.Long] = "Long"),
            (e[e.Extended] = "Extended"),
            e
          );
        })(),
        U = (function () {
          var e = {
            FullYear: 0,
            Month: 1,
            Date: 2,
            Hours: 3,
            Minutes: 4,
            Seconds: 5,
            FractionalSeconds: 6,
            Day: 7,
          };
          return (
            (e[e.FullYear] = "FullYear"),
            (e[e.Month] = "Month"),
            (e[e.Date] = "Date"),
            (e[e.Hours] = "Hours"),
            (e[e.Minutes] = "Minutes"),
            (e[e.Seconds] = "Seconds"),
            (e[e.FractionalSeconds] = "FractionalSeconds"),
            (e[e.Day] = "Day"),
            e
          );
        })(),
        G = (function () {
          var e = { DayPeriods: 0, Days: 1, Months: 2, Eras: 3 };
          return (
            (e[e.DayPeriods] = "DayPeriods"),
            (e[e.Days] = "Days"),
            (e[e.Months] = "Months"),
            (e[e.Eras] = "Eras"),
            e
          );
        })();
      function $(e, t) {
        return (
          t &&
            (e = e.replace(/\{([^}]+)}/g, function (e, n) {
              return null != t && n in t ? t[n] : e;
            })),
          e
        );
      }
      function q(e, t, n = "-", i, s) {
        let r = "";
        (e < 0 || (s && e <= 0)) && (s ? (e = 1 - e) : ((e = -e), (r = n)));
        let o = String(e);
        for (; o.length < t; ) o = "0" + o;
        return i && (o = o.substr(o.length - t)), r + o;
      }
      function K(e, t, n = 0, i = !1, s = !1) {
        return function (r, o) {
          let a = (function (e, t) {
            switch (e) {
              case U.FullYear:
                return t.getFullYear();
              case U.Month:
                return t.getMonth();
              case U.Date:
                return t.getDate();
              case U.Hours:
                return t.getHours();
              case U.Minutes:
                return t.getMinutes();
              case U.Seconds:
                return t.getSeconds();
              case U.FractionalSeconds:
                return t.getMilliseconds();
              case U.Day:
                return t.getDay();
              default:
                throw new Error(`Unknown DateType value "${e}".`);
            }
          })(e, r);
          if (((n > 0 || a > -n) && (a += n), e === U.Hours))
            0 === a && -12 === n && (a = 12);
          else if (e === U.FractionalSeconds)
            return (l = t), q(a, 3).substr(0, l);
          var l;
          const c = D(o, R.MinusSign);
          return q(a, t, c, i, s);
        };
      }
      function Y(e, t, n = M.Format, s = !1) {
        return function (r, o) {
          return (function (e, t, n, s, r, o) {
            switch (n) {
              case G.Months:
                return (function (e, t, n) {
                  const s = Object(i.nb)(e),
                    r = V([s[i.db.MonthsFormat], s[i.db.MonthsStandalone]], t);
                  return V(r, n);
                })(t, r, s)[e.getMonth()];
              case G.Days:
                return (function (e, t, n) {
                  const s = Object(i.nb)(e),
                    r = V([s[i.db.DaysFormat], s[i.db.DaysStandalone]], t);
                  return V(r, n);
                })(t, r, s)[e.getDay()];
              case G.DayPeriods:
                const a = e.getHours(),
                  l = e.getMinutes();
                if (o) {
                  const e = (function (e) {
                      const t = Object(i.nb)(e);
                      return (
                        F(t),
                        (t[i.db.ExtraData][2] || []).map((e) =>
                          "string" == typeof e ? W(e) : [W(e[0]), W(e[1])]
                        )
                      );
                    })(t),
                    n = (function (e, t, n) {
                      const s = Object(i.nb)(e);
                      F(s);
                      const r =
                        V([s[i.db.ExtraData][0], s[i.db.ExtraData][1]], t) ||
                        [];
                      return V(r, n) || [];
                    })(t, r, s);
                  let o;
                  if (
                    (e.forEach((e, t) => {
                      if (Array.isArray(e)) {
                        const { hours: i, minutes: s } = e[0],
                          { hours: r, minutes: c } = e[1];
                        a >= i &&
                          l >= s &&
                          (a < r || (a === r && l < c)) &&
                          (o = n[t]);
                      } else {
                        const { hours: i, minutes: s } = e;
                        i === a && s === l && (o = n[t]);
                      }
                    }),
                    o)
                  )
                    return o;
                }
                return (function (e, t, n) {
                  const s = Object(i.nb)(e),
                    r = V(
                      [s[i.db.DayPeriodsFormat], s[i.db.DayPeriodsStandalone]],
                      t
                    );
                  return V(r, n);
                })(t, r, s)[a < 12 ? 0 : 1];
              case G.Eras:
                return (function (e, t) {
                  return V(Object(i.nb)(e)[i.db.Eras], t);
                })(t, s)[e.getFullYear() <= 0 ? 0 : 1];
              default:
                throw new Error("unexpected translation type " + n);
            }
          })(r, o, e, t, n, s);
        };
      }
      function Z(e) {
        return function (t, n, i) {
          const s = -1 * i,
            r = D(n, R.MinusSign),
            o = s > 0 ? Math.floor(s / 60) : Math.ceil(s / 60);
          switch (e) {
            case H.Short:
              return (
                (s >= 0 ? "+" : "") + q(o, 2, r) + q(Math.abs(s % 60), 2, r)
              );
            case H.ShortGMT:
              return "GMT" + (s >= 0 ? "+" : "") + q(o, 1, r);
            case H.Long:
              return (
                "GMT" +
                (s >= 0 ? "+" : "") +
                q(o, 2, r) +
                ":" +
                q(Math.abs(s % 60), 2, r)
              );
            case H.Extended:
              return 0 === i
                ? "Z"
                : (s >= 0 ? "+" : "") +
                    q(o, 2, r) +
                    ":" +
                    q(Math.abs(s % 60), 2, r);
            default:
              throw new Error(`Unknown zone width "${e}"`);
          }
        };
      }
      function Q(e, t = !1) {
        return function (n, i) {
          let s;
          if (t) {
            const e = new Date(n.getFullYear(), n.getMonth(), 1).getDay() - 1,
              t = n.getDate();
            s = 1 + Math.floor((t + e) / 7);
          } else {
            const e = (function (e) {
                const t = new Date(e, 0, 1).getDay();
                return new Date(e, 0, 1 + (t <= 4 ? 4 : 11) - t);
              })(n.getFullYear()),
              t =
                ((r = n),
                new Date(
                  r.getFullYear(),
                  r.getMonth(),
                  r.getDate() + (4 - r.getDay())
                )).getTime() - e.getTime();
            s = 1 + Math.round(t / 6048e5);
          }
          var r;
          return q(s, e, D(i, R.MinusSign));
        };
      }
      const J = {};
      function ee(e, t) {
        e = e.replace(/:/g, "");
        const n = Date.parse("Jan 01, 1970 00:00:00 " + e) / 6e4;
        return isNaN(n) ? t : n;
      }
      function te(e) {
        return e instanceof Date && !isNaN(e.valueOf());
      }
      const ne = /^(\d+)?\.((\d+)(-(\d+))?)?$/;
      function ie(e) {
        const t = parseInt(e);
        if (isNaN(t))
          throw new Error("Invalid integer literal when parsing " + e);
        return t;
      }
      class se {}
      let re = (() => {
        class e extends se {
          constructor(e) {
            super(), (this.locale = e);
          }
          getPluralCategory(e, t) {
            switch (j(t || this.locale)(e)) {
              case k.Zero:
                return "zero";
              case k.One:
                return "one";
              case k.Two:
                return "two";
              case k.Few:
                return "few";
              case k.Many:
                return "many";
              default:
                return "other";
            }
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(i.w));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function oe(e, t) {
        t = encodeURIComponent(t);
        for (const n of e.split(";")) {
          const e = n.indexOf("="),
            [i, s] = -1 == e ? [n, ""] : [n.slice(0, e), n.slice(e + 1)];
          if (i.trim() === t) return decodeURIComponent(s);
        }
        return null;
      }
      let ae = (() => {
        class e {
          constructor(e, t, n, i) {
            (this._iterableDiffers = e),
              (this._keyValueDiffers = t),
              (this._ngEl = n),
              (this._renderer = i),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(e) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses =
                "string" == typeof e ? e.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(e) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = "string" == typeof e ? e.split(/\s+/) : e),
              this._rawClass &&
                (Object(i.tb)(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers
                      .find(this._rawClass)
                      .create())
                  : (this._keyValueDiffer = this._keyValueDiffers
                      .find(this._rawClass)
                      .create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const e = this._iterableDiffer.diff(this._rawClass);
              e && this._applyIterableChanges(e);
            } else if (this._keyValueDiffer) {
              const e = this._keyValueDiffer.diff(this._rawClass);
              e && this._applyKeyValueChanges(e);
            }
          }
          _applyKeyValueChanges(e) {
            e.forEachAddedItem((e) => this._toggleClass(e.key, e.currentValue)),
              e.forEachChangedItem((e) =>
                this._toggleClass(e.key, e.currentValue)
              ),
              e.forEachRemovedItem((e) => {
                e.previousValue && this._toggleClass(e.key, !1);
              });
          }
          _applyIterableChanges(e) {
            e.forEachAddedItem((e) => {
              if ("string" != typeof e.item)
                throw new Error(
                  "NgClass can only toggle CSS classes expressed as strings, got " +
                    Object(i.zb)(e.item)
                );
              this._toggleClass(e.item, !0);
            }),
              e.forEachRemovedItem((e) => this._toggleClass(e.item, !1));
          }
          _applyClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((e) => this._toggleClass(e, !0))
                : Object.keys(e).forEach((t) => this._toggleClass(t, !!e[t])));
          }
          _removeClasses(e) {
            e &&
              (Array.isArray(e) || e instanceof Set
                ? e.forEach((e) => this._toggleClass(e, !1))
                : Object.keys(e).forEach((e) => this._toggleClass(e, !1)));
          }
          _toggleClass(e, t) {
            (e = e.trim()) &&
              e.split(/\s+/g).forEach((e) => {
                t
                  ? this._renderer.addClass(this._ngEl.nativeElement, e)
                  : this._renderer.removeClass(this._ngEl.nativeElement, e);
              });
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(i.u), i.Rb(i.v), i.Rb(i.m), i.Rb(i.F));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
          })),
          e
        );
      })();
      class le {
        constructor(e, t, n, i) {
          (this.$implicit = e),
            (this.ngForOf = t),
            (this.index = n),
            (this.count = i);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let ce = (() => {
        class e {
          constructor(e, t, n) {
            (this._viewContainer = e),
              (this._template = t),
              (this._differs = n),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(e) {
            (this._ngForOf = e), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(e) {
            Object(i.Y)() &&
              null != e &&
              "function" != typeof e &&
              console &&
              console.warn &&
              console.warn(
                `trackBy must be a function, but received ${JSON.stringify(
                  e
                )}. See https://angular.io/api/common/NgForOf#change-propagation for more information.`
              ),
              (this._trackByFn = e);
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(e) {
            e && (this._template = e);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const n = this._ngForOf;
              if (!this._differ && n)
                try {
                  this._differ = this._differs
                    .find(n)
                    .create(this.ngForTrackBy);
                } catch (t) {
                  throw new Error(
                    `Cannot find a differ supporting object '${n}' of type '${
                      ((e = n), e.name || typeof e)
                    }'. NgFor only supports binding to Iterables such as Arrays.`
                  );
                }
            }
            var e;
            if (this._differ) {
              const e = this._differ.diff(this._ngForOf);
              e && this._applyChanges(e);
            }
          }
          _applyChanges(e) {
            const t = [];
            e.forEachOperation((e, n, i) => {
              if (null == e.previousIndex) {
                const n = this._viewContainer.createEmbeddedView(
                    this._template,
                    new le(null, this._ngForOf, -1, -1),
                    null === i ? void 0 : i
                  ),
                  s = new ue(e, n);
                t.push(s);
              } else if (null == i)
                this._viewContainer.remove(null === n ? void 0 : n);
              else if (null !== n) {
                const s = this._viewContainer.get(n);
                this._viewContainer.move(s, i);
                const r = new ue(e, s);
                t.push(r);
              }
            });
            for (let n = 0; n < t.length; n++)
              this._perViewChange(t[n].view, t[n].record);
            for (let n = 0, i = this._viewContainer.length; n < i; n++) {
              const e = this._viewContainer.get(n);
              (e.context.index = n),
                (e.context.count = i),
                (e.context.ngForOf = this._ngForOf);
            }
            e.forEachIdentityChange((e) => {
              this._viewContainer.get(e.currentIndex).context.$implicit =
                e.item;
            });
          }
          _perViewChange(e, t) {
            e.context.$implicit = t.item;
          }
          static ngTemplateContextGuard(e, t) {
            return !0;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(i.Q), i.Rb(i.M), i.Rb(i.u));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
          })),
          e
        );
      })();
      class ue {
        constructor(e, t) {
          (this.record = e), (this.view = t);
        }
      }
      let he = (() => {
        class e {
          constructor(e, t) {
            (this._viewContainer = e),
              (this._context = new de()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = t);
          }
          set ngIf(e) {
            (this._context.$implicit = this._context.ngIf = e),
              this._updateView();
          }
          set ngIfThen(e) {
            pe("ngIfThen", e),
              (this._thenTemplateRef = e),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(e) {
            pe("ngIfElse", e),
              (this._elseTemplateRef = e),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(e, t) {
            return !0;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(i.Q), i.Rb(i.M));
          }),
          (e.ɵdir = i.Mb({
            type: e,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
          })),
          e
        );
      })();
      class de {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function pe(e, t) {
        if (t && !t.createEmbeddedView)
          throw new Error(
            `${e} must be a TemplateRef, but received '${Object(i.zb)(t)}'.`
          );
      }
      class fe {
        constructor(e, t) {
          (this._viewContainerRef = e),
            (this._templateRef = t),
            (this._created = !1);
        }
        create() {
          (this._created = !0),
            this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(e) {
          e && !this._created
            ? this.create()
            : !e && this._created && this.destroy();
        }
      }
      let ge = (() => {
          class e {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(e) {
              (this._ngSwitch = e),
                0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(e) {
              this._defaultViews || (this._defaultViews = []),
                this._defaultViews.push(e);
            }
            _matchCase(e) {
              const t = e == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || t),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                t
              );
            }
            _updateDefaultCases(e) {
              if (this._defaultViews && e !== this._defaultUsed) {
                this._defaultUsed = e;
                for (let t = 0; t < this._defaultViews.length; t++)
                  this._defaultViews[t].enforceState(e);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "ngSwitch", ""]],
              inputs: { ngSwitch: "ngSwitch" },
            })),
            e
          );
        })(),
        me = (() => {
          class e {
            constructor(e, t, n) {
              (this.ngSwitch = n), n._addCase(), (this._view = new fe(e, t));
            }
            ngDoCheck() {
              this._view.enforceState(
                this.ngSwitch._matchCase(this.ngSwitchCase)
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.Q), i.Rb(i.M), i.Rb(ge, 1));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "ngSwitchCase", ""]],
              inputs: { ngSwitchCase: "ngSwitchCase" },
            })),
            e
          );
        })(),
        be = (() => {
          class e {
            constructor(e, t, n) {
              n._addDefault(new fe(e, t));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.Q), i.Rb(i.M), i.Rb(ge, 1));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "ngSwitchDefault", ""]],
            })),
            e
          );
        })(),
        ve = (() => {
          class e {
            constructor(e, t, n) {
              (this._ngEl = e),
                (this._differs = t),
                (this._renderer = n),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(e) {
              (this._ngStyle = e),
                !this._differ &&
                  e &&
                  (this._differ = this._differs.find(e).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const e = this._differ.diff(this._ngStyle);
                e && this._applyChanges(e);
              }
            }
            _setStyle(e, t) {
              const [n, i] = e.split(".");
              null != (t = null != t && i ? `${t}${i}` : t)
                ? this._renderer.setStyle(this._ngEl.nativeElement, n, t)
                : this._renderer.removeStyle(this._ngEl.nativeElement, n);
            }
            _applyChanges(e) {
              e.forEachRemovedItem((e) => this._setStyle(e.key, null)),
                e.forEachAddedItem((e) =>
                  this._setStyle(e.key, e.currentValue)
                ),
                e.forEachChangedItem((e) =>
                  this._setStyle(e.key, e.currentValue)
                );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.v), i.Rb(i.F));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "ngStyle", ""]],
              inputs: { ngStyle: "ngStyle" },
            })),
            e
          );
        })(),
        ye = (() => {
          class e {
            constructor(e) {
              (this._viewContainerRef = e),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null);
            }
            ngOnChanges(e) {
              if (this._shouldRecreateView(e)) {
                const e = this._viewContainerRef;
                this._viewRef && e.remove(e.indexOf(this._viewRef)),
                  (this._viewRef = this.ngTemplateOutlet
                    ? e.createEmbeddedView(
                        this.ngTemplateOutlet,
                        this.ngTemplateOutletContext
                      )
                    : null);
              } else
                this._viewRef &&
                  this.ngTemplateOutletContext &&
                  this._updateExistingContext(this.ngTemplateOutletContext);
            }
            _shouldRecreateView(e) {
              const t = e.ngTemplateOutletContext;
              return (
                !!e.ngTemplateOutlet || (t && this._hasContextShapeChanged(t))
              );
            }
            _hasContextShapeChanged(e) {
              const t = Object.keys(e.previousValue || {}),
                n = Object.keys(e.currentValue || {});
              if (t.length === n.length) {
                for (let e of n) if (-1 === t.indexOf(e)) return !0;
                return !1;
              }
              return !0;
            }
            _updateExistingContext(e) {
              for (let t of Object.keys(e))
                this._viewRef.context[t] = this.ngTemplateOutletContext[t];
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.Q));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "ngTemplateOutlet", ""]],
              inputs: {
                ngTemplateOutletContext: "ngTemplateOutletContext",
                ngTemplateOutlet: "ngTemplateOutlet",
              },
              features: [i.Cb],
            })),
            e
          );
        })();
      function we(e, t) {
        return Error(
          `InvalidPipeArgument: '${t}' for pipe '${Object(i.zb)(e)}'`
        );
      }
      class Se {
        createSubscription(e, t) {
          return e.subscribe({
            next: t,
            error: (e) => {
              throw e;
            },
          });
        }
        dispose(e) {
          e.unsubscribe();
        }
        onDestroy(e) {
          e.unsubscribe();
        }
      }
      class _e {
        createSubscription(e, t) {
          return e.then(t, (e) => {
            throw e;
          });
        }
        dispose(e) {}
        onDestroy(e) {}
      }
      const Ce = new _e(),
        Ee = new Se();
      let Oe = (() => {
          class e {
            constructor(e) {
              (this._ref = e),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null);
            }
            ngOnDestroy() {
              this._subscription && this._dispose();
            }
            transform(e) {
              return this._obj
                ? e !== this._obj
                  ? (this._dispose(), this.transform(e))
                  : Object(i.wb)(this._latestValue, this._latestReturnedValue)
                  ? this._latestReturnedValue
                  : ((this._latestReturnedValue = this._latestValue),
                    i.S.wrap(this._latestValue))
                : (e && this._subscribe(e),
                  (this._latestReturnedValue = this._latestValue),
                  this._latestValue);
            }
            _subscribe(e) {
              (this._obj = e),
                (this._strategy = this._selectStrategy(e)),
                (this._subscription = this._strategy.createSubscription(
                  e,
                  (t) => this._updateLatestValue(e, t)
                ));
            }
            _selectStrategy(t) {
              if (Object(i.vb)(t)) return Ce;
              if (Object(i.ub)(t)) return Ee;
              throw we(e, t);
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._latestReturnedValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(e, t) {
              e === this._obj &&
                ((this._latestValue = t), this._ref.markForCheck());
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.dc());
            }),
            (e.ɵpipe = i.Qb({ name: "async", type: e, pure: !1 })),
            e
          );
        })(),
        xe = (() => {
          class e {
            constructor(e) {
              this.locale = e;
            }
            transform(t, n = "mediumDate", s, r) {
              if (null == t || "" === t || t != t) return null;
              try {
                return (function (e, t, n, s) {
                  let r = (function (e) {
                    if (te(e)) return e;
                    if ("number" == typeof e && !isNaN(e)) return new Date(e);
                    if ("string" == typeof e) {
                      e = e.trim();
                      const t = parseFloat(e);
                      if (!isNaN(e - t)) return new Date(t);
                      if (/^(\d{4}-\d{1,2}-\d{1,2})$/.test(e)) {
                        const [t, n, i] = e.split("-").map((e) => +e);
                        return new Date(t, n - 1, i);
                      }
                      let n;
                      if ((n = e.match(z)))
                        return (function (e) {
                          const t = new Date(0);
                          let n = 0,
                            i = 0;
                          const s = e[8] ? t.setUTCFullYear : t.setFullYear,
                            r = e[8] ? t.setUTCHours : t.setHours;
                          e[9] &&
                            ((n = Number(e[9] + e[10])),
                            (i = Number(e[9] + e[11]))),
                            s.call(
                              t,
                              Number(e[1]),
                              Number(e[2]) - 1,
                              Number(e[3])
                            );
                          const o = Number(e[4] || 0) - n,
                            a = Number(e[5] || 0) - i,
                            l = Number(e[6] || 0),
                            c = Math.round(
                              1e3 * parseFloat("0." + (e[7] || 0))
                            );
                          return r.call(t, o, a, l, c), t;
                        })(n);
                    }
                    const t = new Date(e);
                    if (!te(t))
                      throw new Error(`Unable to convert "${e}" into a date`);
                    return t;
                  })(e);
                  t =
                    (function e(t, n) {
                      const s = (function (e) {
                        return Object(i.nb)(e)[i.db.LocaleId];
                      })(t);
                      if (((X[s] = X[s] || {}), X[s][n])) return X[s][n];
                      let r = "";
                      switch (n) {
                        case "shortDate":
                          r = N(t, P.Short);
                          break;
                        case "mediumDate":
                          r = N(t, P.Medium);
                          break;
                        case "longDate":
                          r = N(t, P.Long);
                          break;
                        case "fullDate":
                          r = N(t, P.Full);
                          break;
                        case "shortTime":
                          r = L(t, P.Short);
                          break;
                        case "mediumTime":
                          r = L(t, P.Medium);
                          break;
                        case "longTime":
                          r = L(t, P.Long);
                          break;
                        case "fullTime":
                          r = L(t, P.Full);
                          break;
                        case "short":
                          const n = e(t, "shortTime"),
                            i = e(t, "shortDate");
                          r = $(A(t, P.Short), [n, i]);
                          break;
                        case "medium":
                          const s = e(t, "mediumTime"),
                            o = e(t, "mediumDate");
                          r = $(A(t, P.Medium), [s, o]);
                          break;
                        case "long":
                          const a = e(t, "longTime"),
                            l = e(t, "longDate");
                          r = $(A(t, P.Long), [a, l]);
                          break;
                        case "full":
                          const c = e(t, "fullTime"),
                            u = e(t, "fullDate");
                          r = $(A(t, P.Full), [c, u]);
                      }
                      return r && (X[s][n] = r), r;
                    })(n, t) || t;
                  let o,
                    a = [];
                  for (; t; ) {
                    if (((o = B.exec(t)), !o)) {
                      a.push(t);
                      break;
                    }
                    {
                      a = a.concat(o.slice(1));
                      const e = a.pop();
                      if (!e) break;
                      t = e;
                    }
                  }
                  let l = r.getTimezoneOffset();
                  s &&
                    ((l = ee(s, l)),
                    (r = (function (e, t, n) {
                      const i = e.getTimezoneOffset();
                      return (function (e, t) {
                        return (
                          (e = new Date(e.getTime())).setMinutes(
                            e.getMinutes() + t
                          ),
                          e
                        );
                      })(e, -1 * (ee(t, i) - i));
                    })(r, s)));
                  let c = "";
                  return (
                    a.forEach((e) => {
                      const t = (function (e) {
                        if (J[e]) return J[e];
                        let t;
                        switch (e) {
                          case "G":
                          case "GG":
                          case "GGG":
                            t = Y(G.Eras, I.Abbreviated);
                            break;
                          case "GGGG":
                            t = Y(G.Eras, I.Wide);
                            break;
                          case "GGGGG":
                            t = Y(G.Eras, I.Narrow);
                            break;
                          case "y":
                            t = K(U.FullYear, 1, 0, !1, !0);
                            break;
                          case "yy":
                            t = K(U.FullYear, 2, 0, !0, !0);
                            break;
                          case "yyy":
                            t = K(U.FullYear, 3, 0, !1, !0);
                            break;
                          case "yyyy":
                            t = K(U.FullYear, 4, 0, !1, !0);
                            break;
                          case "M":
                          case "L":
                            t = K(U.Month, 1, 1);
                            break;
                          case "MM":
                          case "LL":
                            t = K(U.Month, 2, 1);
                            break;
                          case "MMM":
                            t = Y(G.Months, I.Abbreviated);
                            break;
                          case "MMMM":
                            t = Y(G.Months, I.Wide);
                            break;
                          case "MMMMM":
                            t = Y(G.Months, I.Narrow);
                            break;
                          case "LLL":
                            t = Y(G.Months, I.Abbreviated, M.Standalone);
                            break;
                          case "LLLL":
                            t = Y(G.Months, I.Wide, M.Standalone);
                            break;
                          case "LLLLL":
                            t = Y(G.Months, I.Narrow, M.Standalone);
                            break;
                          case "w":
                            t = Q(1);
                            break;
                          case "ww":
                            t = Q(2);
                            break;
                          case "W":
                            t = Q(1, !0);
                            break;
                          case "d":
                            t = K(U.Date, 1);
                            break;
                          case "dd":
                            t = K(U.Date, 2);
                            break;
                          case "E":
                          case "EE":
                          case "EEE":
                            t = Y(G.Days, I.Abbreviated);
                            break;
                          case "EEEE":
                            t = Y(G.Days, I.Wide);
                            break;
                          case "EEEEE":
                            t = Y(G.Days, I.Narrow);
                            break;
                          case "EEEEEE":
                            t = Y(G.Days, I.Short);
                            break;
                          case "a":
                          case "aa":
                          case "aaa":
                            t = Y(G.DayPeriods, I.Abbreviated);
                            break;
                          case "aaaa":
                            t = Y(G.DayPeriods, I.Wide);
                            break;
                          case "aaaaa":
                            t = Y(G.DayPeriods, I.Narrow);
                            break;
                          case "b":
                          case "bb":
                          case "bbb":
                            t = Y(
                              G.DayPeriods,
                              I.Abbreviated,
                              M.Standalone,
                              !0
                            );
                            break;
                          case "bbbb":
                            t = Y(G.DayPeriods, I.Wide, M.Standalone, !0);
                            break;
                          case "bbbbb":
                            t = Y(G.DayPeriods, I.Narrow, M.Standalone, !0);
                            break;
                          case "B":
                          case "BB":
                          case "BBB":
                            t = Y(G.DayPeriods, I.Abbreviated, M.Format, !0);
                            break;
                          case "BBBB":
                            t = Y(G.DayPeriods, I.Wide, M.Format, !0);
                            break;
                          case "BBBBB":
                            t = Y(G.DayPeriods, I.Narrow, M.Format, !0);
                            break;
                          case "h":
                            t = K(U.Hours, 1, -12);
                            break;
                          case "hh":
                            t = K(U.Hours, 2, -12);
                            break;
                          case "H":
                            t = K(U.Hours, 1);
                            break;
                          case "HH":
                            t = K(U.Hours, 2);
                            break;
                          case "m":
                            t = K(U.Minutes, 1);
                            break;
                          case "mm":
                            t = K(U.Minutes, 2);
                            break;
                          case "s":
                            t = K(U.Seconds, 1);
                            break;
                          case "ss":
                            t = K(U.Seconds, 2);
                            break;
                          case "S":
                            t = K(U.FractionalSeconds, 1);
                            break;
                          case "SS":
                            t = K(U.FractionalSeconds, 2);
                            break;
                          case "SSS":
                            t = K(U.FractionalSeconds, 3);
                            break;
                          case "Z":
                          case "ZZ":
                          case "ZZZ":
                            t = Z(H.Short);
                            break;
                          case "ZZZZZ":
                            t = Z(H.Extended);
                            break;
                          case "O":
                          case "OO":
                          case "OOO":
                          case "z":
                          case "zz":
                          case "zzz":
                            t = Z(H.ShortGMT);
                            break;
                          case "OOOO":
                          case "ZZZZ":
                          case "zzzz":
                            t = Z(H.Long);
                            break;
                          default:
                            return null;
                        }
                        return (J[e] = t), t;
                      })(e);
                      c += t
                        ? t(r, n, l)
                        : "''" === e
                        ? "'"
                        : e.replace(/(^'|'$)/g, "").replace(/''/g, "'");
                    }),
                    c
                  );
                })(t, n, r || this.locale, s);
              } catch (o) {
                throw we(e, o.message);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.w));
            }),
            (e.ɵpipe = i.Qb({ name: "date", type: e, pure: !0 })),
            e
          );
        })(),
        Te = (() => {
          class e {
            constructor(e, t = "USD") {
              (this._locale = e), (this._defaultCurrencyCode = t);
            }
            transform(t, n, s = "symbol", r, o) {
              if (
                (function (e) {
                  return null == e || "" === e || e != e;
                })(t)
              )
                return null;
              (o = o || this._locale),
                "boolean" == typeof s &&
                  (console &&
                    console.warn &&
                    console.warn(
                      'Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are "code", "symbol" or "symbol-narrow".'
                    ),
                  (s = s ? "symbol" : "code"));
              let a = n || this._defaultCurrencyCode;
              "code" !== s &&
                (a =
                  "symbol" === s || "symbol-narrow" === s
                    ? (function (e, t, n = "en") {
                        const s =
                            (function (e) {
                              return Object(i.nb)(e)[i.db.Currencies];
                            })(n)[e] ||
                            x[e] ||
                            [],
                          r = s[1];
                        return "narrow" === t && "string" == typeof r
                          ? r
                          : s[0] || e;
                      })(a, "symbol" === s ? "wide" : "narrow", o)
                    : s);
              try {
                return (function (e, t, n, s, r) {
                  const o = (function (e, t = "-") {
                    const n = {
                        minInt: 1,
                        minFrac: 0,
                        maxFrac: 0,
                        posPre: "",
                        posSuf: "",
                        negPre: "",
                        negSuf: "",
                        gSize: 0,
                        lgSize: 0,
                      },
                      i = e.split(";"),
                      s = i[0],
                      r = i[1],
                      o =
                        -1 !== s.indexOf(".")
                          ? s.split(".")
                          : [
                              s.substring(0, s.lastIndexOf("0") + 1),
                              s.substring(s.lastIndexOf("0") + 1),
                            ],
                      a = o[0],
                      l = o[1] || "";
                    n.posPre = a.substr(0, a.indexOf("#"));
                    for (let u = 0; u < l.length; u++) {
                      const e = l.charAt(u);
                      "0" === e
                        ? (n.minFrac = n.maxFrac = u + 1)
                        : "#" === e
                        ? (n.maxFrac = u + 1)
                        : (n.posSuf += e);
                    }
                    const c = a.split(",");
                    if (
                      ((n.gSize = c[1] ? c[1].length : 0),
                      (n.lgSize = c[2] || c[1] ? (c[2] || c[1]).length : 0),
                      r)
                    ) {
                      const e = s.length - n.posPre.length - n.posSuf.length,
                        t = r.indexOf("#");
                      (n.negPre = r.substr(0, t).replace(/'/g, "")),
                        (n.negSuf = r.substr(t + e).replace(/'/g, ""));
                    } else (n.negPre = t + n.posPre), (n.negSuf = n.posSuf);
                    return n;
                  })(
                    (function (e, t) {
                      return Object(i.nb)(e)[i.db.NumberFormats][t];
                    })(t, T.Currency),
                    D(t, R.MinusSign)
                  );
                  return (
                    (o.minFrac = (function (e) {
                      let t;
                      const n = x[e];
                      return n && (t = n[2]), "number" == typeof t ? t : 2;
                    })(s)),
                    (o.maxFrac = o.minFrac),
                    (function (e, t, n, i, s, r, o = !1) {
                      let a = "",
                        l = !1;
                      if (isFinite(e)) {
                        let c = (function (e) {
                          let t,
                            n,
                            i,
                            s,
                            r,
                            o = Math.abs(e) + "",
                            a = 0;
                          for (
                            (n = o.indexOf(".")) > -1 &&
                              (o = o.replace(".", "")),
                              (i = o.search(/e/i)) > 0
                                ? (n < 0 && (n = i),
                                  (n += +o.slice(i + 1)),
                                  (o = o.substring(0, i)))
                                : n < 0 && (n = o.length),
                              i = 0;
                            "0" === o.charAt(i);
                            i++
                          );
                          if (i === (r = o.length)) (t = [0]), (n = 1);
                          else {
                            for (r--; "0" === o.charAt(r); ) r--;
                            for (n -= i, t = [], s = 0; i <= r; i++, s++)
                              t[s] = Number(o.charAt(i));
                          }
                          return (
                            n > 22 &&
                              ((t = t.splice(0, 21)), (a = n - 1), (n = 1)),
                            { digits: t, exponent: a, integerLen: n }
                          );
                        })(e);
                        o &&
                          (c = (function (e) {
                            if (0 === e.digits[0]) return e;
                            const t = e.digits.length - e.integerLen;
                            return (
                              e.exponent
                                ? (e.exponent += 2)
                                : (0 === t
                                    ? e.digits.push(0, 0)
                                    : 1 === t && e.digits.push(0),
                                  (e.integerLen += 2)),
                              e
                            );
                          })(c));
                        let u = t.minInt,
                          h = t.minFrac,
                          d = t.maxFrac;
                        if (r) {
                          const e = r.match(ne);
                          if (null === e)
                            throw new Error(r + " is not a valid digit info");
                          const t = e[1],
                            n = e[3],
                            i = e[5];
                          null != t && (u = ie(t)),
                            null != n && (h = ie(n)),
                            null != i
                              ? (d = ie(i))
                              : null != n && h > d && (d = h);
                        }
                        !(function (e, t, n) {
                          if (t > n)
                            throw new Error(
                              `The minimum number of digits after fraction (${t}) is higher than the maximum (${n}).`
                            );
                          let i = e.digits,
                            s = i.length - e.integerLen;
                          const r = Math.min(Math.max(t, s), n);
                          let o = r + e.integerLen,
                            a = i[o];
                          if (o > 0) {
                            i.splice(Math.max(e.integerLen, o));
                            for (let e = o; e < i.length; e++) i[e] = 0;
                          } else {
                            (s = Math.max(0, s)),
                              (e.integerLen = 1),
                              (i.length = Math.max(1, (o = r + 1))),
                              (i[0] = 0);
                            for (let e = 1; e < o; e++) i[e] = 0;
                          }
                          if (a >= 5)
                            if (o - 1 < 0) {
                              for (let t = 0; t > o; t--)
                                i.unshift(0), e.integerLen++;
                              i.unshift(1), e.integerLen++;
                            } else i[o - 1]++;
                          for (; s < Math.max(0, r); s++) i.push(0);
                          let l = 0 !== r;
                          const c = t + e.integerLen,
                            u = i.reduceRight(function (e, t, n, i) {
                              return (
                                (i[n] = (t += e) < 10 ? t : t - 10),
                                l &&
                                  (0 === i[n] && n >= c ? i.pop() : (l = !1)),
                                t >= 10 ? 1 : 0
                              );
                            }, 0);
                          u && (i.unshift(u), e.integerLen++);
                        })(c, h, d);
                        let p = c.digits,
                          f = c.integerLen;
                        const g = c.exponent;
                        let m = [];
                        for (l = p.every((e) => !e); f < u; f++) p.unshift(0);
                        for (; f < 0; f++) p.unshift(0);
                        f > 0
                          ? (m = p.splice(f, p.length))
                          : ((m = p), (p = [0]));
                        const b = [];
                        for (
                          p.length >= t.lgSize &&
                          b.unshift(p.splice(-t.lgSize, p.length).join(""));
                          p.length > t.gSize;

                        )
                          b.unshift(p.splice(-t.gSize, p.length).join(""));
                        p.length && b.unshift(p.join("")),
                          (a = b.join(D(n, i))),
                          m.length && (a += D(n, s) + m.join("")),
                          g && (a += D(n, R.Exponential) + "+" + g);
                      } else a = D(n, R.Infinity);
                      return (
                        (a =
                          e < 0 && !l
                            ? t.negPre + a + t.negSuf
                            : t.posPre + a + t.posSuf),
                        a
                      );
                    })(e, o, t, R.CurrencyGroup, R.CurrencyDecimal, r)
                      .replace("\xa4", n)
                      .replace("\xa4", "")
                      .trim()
                  );
                })(
                  (function (e) {
                    if (
                      "string" == typeof e &&
                      !isNaN(Number(e) - parseFloat(e))
                    )
                      return Number(e);
                    if ("number" != typeof e)
                      throw new Error(e + " is not a number");
                    return e;
                  })(t),
                  o,
                  a,
                  n,
                  r
                );
              } catch (l) {
                throw we(e, l.message);
              }
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.w), i.Rb(i.l));
            }),
            (e.ɵpipe = i.Qb({ name: "currency", type: e, pure: !0 })),
            e
          );
        })(),
        ke = (() => {
          class e {
            transform(t, n, i) {
              if (null == t) return t;
              if (!this.supports(t)) throw we(e, t);
              return t.slice(n, i);
            }
            supports(e) {
              return "string" == typeof e || Array.isArray(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵpipe = i.Qb({ name: "slice", type: e, pure: !1 })),
            e
          );
        })(),
        Me = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [{ provide: se, useClass: re }],
            })),
            e
          );
        })();
      const Ie = "browser";
      function Pe(e) {
        return e === Ie;
      }
      function Re(e) {
        return "server" === e;
      }
      let Ne = (() => {
        class e {}
        return (
          (e.ɵprov = Object(i.Nb)({
            token: e,
            providedIn: "root",
            factory: () => new Le(Object(i.bc)(l), window, Object(i.bc)(i.n)),
          })),
          e
        );
      })();
      class Le {
        constructor(e, t, n) {
          (this.document = e),
            (this.window = t),
            (this.errorHandler = n),
            (this.offset = () => [0, 0]);
        }
        setOffset(e) {
          this.offset = Array.isArray(e) ? () => e : e;
        }
        getScrollPosition() {
          return this.supportScrollRestoration()
            ? [this.window.scrollX, this.window.scrollY]
            : [0, 0];
        }
        scrollToPosition(e) {
          this.supportScrollRestoration() && this.window.scrollTo(e[0], e[1]);
        }
        scrollToAnchor(e) {
          if (this.supportScrollRestoration()) {
            e =
              this.window.CSS && this.window.CSS.escape
                ? this.window.CSS.escape(e)
                : e.replace(/(\"|\'\ |:|\.|\[|\]|,|=)/g, "\\$1");
            try {
              const t = this.document.querySelector("#" + e);
              if (t) return void this.scrollToElement(t);
              const n = this.document.querySelector(`[name='${e}']`);
              if (n) return void this.scrollToElement(n);
            } catch (t) {
              this.errorHandler.handleError(t);
            }
          }
        }
        setHistoryScrollRestoration(e) {
          if (this.supportScrollRestoration()) {
            const t = this.window.history;
            t && t.scrollRestoration && (t.scrollRestoration = e);
          }
        }
        scrollToElement(e) {
          const t = e.getBoundingClientRect(),
            n = t.left + this.window.pageXOffset,
            i = t.top + this.window.pageYOffset,
            s = this.offset();
          this.window.scrollTo(n - s[0], i - s[1]);
        }
        supportScrollRestoration() {
          try {
            return !!this.window && !!this.window.scrollTo;
          } catch (e) {
            return !1;
          }
        }
      }
    },
    pLZG: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("7o/Q");
      function s(e, t) {
        return function (n) {
          return n.lift(new r(e, t));
        };
      }
      class r {
        constructor(e, t) {
          (this.predicate = e), (this.thisArg = t);
        }
        call(e, t) {
          return t.subscribe(new o(e, this.predicate, this.thisArg));
        }
      }
      class o extends i.a {
        constructor(e, t, n) {
          super(e), (this.predicate = t), (this.thisArg = n), (this.count = 0);
        }
        _next(e) {
          let t;
          try {
            t = this.predicate.call(this.thisArg, e, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          t && this.destination.next(e);
        }
      }
    },
    quSY: function (e, t, n) {
      "use strict";
      var i = n("DH7j"),
        s = n("XoHu"),
        r = n("n6bG");
      const o = (() => {
        function e(e) {
          return (
            Error.call(this),
            (this.message = e
              ? `${e.length} errors occurred during unsubscription:\n${e
                  .map((e, t) => `${t + 1}) ${e.toString()}`)
                  .join("\n  ")}`
              : ""),
            (this.name = "UnsubscriptionError"),
            (this.errors = e),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
      n.d(t, "a", function () {
        return a;
      });
      let a = (() => {
        class e {
          constructor(e) {
            (this.closed = !1),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              e && (this._unsubscribe = e);
          }
          unsubscribe() {
            let t;
            if (this.closed) return;
            let {
              _parentOrParents: n,
              _unsubscribe: a,
              _subscriptions: c,
            } = this;
            if (
              ((this.closed = !0),
              (this._parentOrParents = null),
              (this._subscriptions = null),
              n instanceof e)
            )
              n.remove(this);
            else if (null !== n)
              for (let e = 0; e < n.length; ++e) n[e].remove(this);
            if (Object(r.a)(a))
              try {
                a.call(this);
              } catch (u) {
                t = u instanceof o ? l(u.errors) : [u];
              }
            if (Object(i.a)(c)) {
              let e = -1,
                n = c.length;
              for (; ++e < n; ) {
                const n = c[e];
                if (Object(s.a)(n))
                  try {
                    n.unsubscribe();
                  } catch (u) {
                    (t = t || []),
                      u instanceof o ? (t = t.concat(l(u.errors))) : t.push(u);
                  }
              }
            }
            if (t) throw new o(t);
          }
          add(t) {
            let n = t;
            if (!t) return e.EMPTY;
            switch (typeof t) {
              case "function":
                n = new e(t);
              case "object":
                if (
                  n === this ||
                  n.closed ||
                  "function" != typeof n.unsubscribe
                )
                  return n;
                if (this.closed) return n.unsubscribe(), n;
                if (!(n instanceof e)) {
                  const t = n;
                  (n = new e()), (n._subscriptions = [t]);
                }
                break;
              default:
                throw new Error(
                  "unrecognized teardown " + t + " added to Subscription."
                );
            }
            let { _parentOrParents: i } = n;
            if (null === i) n._parentOrParents = this;
            else if (i instanceof e) {
              if (i === this) return n;
              n._parentOrParents = [i, this];
            } else {
              if (-1 !== i.indexOf(this)) return n;
              i.push(this);
            }
            const s = this._subscriptions;
            return null === s ? (this._subscriptions = [n]) : s.push(n), n;
          }
          remove(e) {
            const t = this._subscriptions;
            if (t) {
              const n = t.indexOf(e);
              -1 !== n && t.splice(n, 1);
            }
          }
        }
        var t;
        return (e.EMPTY = (((t = new e()).closed = !0), t)), e;
      })();
      function l(e) {
        return e.reduce((e, t) => e.concat(t instanceof o ? t.errors : t), []);
      }
    },
    "r/UM": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("HSBQ"),
        s = n("fXoL"),
        r = n("1AIi");
      let o = (() => {
        class e {
          constructor(e, t) {
            (this.storage = e), (this.factory = t);
          }
          find() {
            const t = this.createEmptyModel(),
              n = this.storage.find(e.storageKey);
            return n && t.populate(JSON.parse(n)), t;
          }
          save(t) {
            return this.storage.create(e.storageKey, t.toString());
          }
          remove() {
            return this.storage.remove(e.storageKey);
          }
          createEmptyModel() {
            return this.factory.create(i.a.STORAGE, {});
          }
          static get storageKey() {
            return "market_vision-auth";
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(r.a), s.bc(i.a));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
    },
    rgW5: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return x;
      }),
        n.d(t, "b", function () {
          return T;
        }),
        n.d(t, "c", function () {
          return k;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("x5p7"),
        o = n("RtSl");
      const a = ["p-tabViewNav", ""];
      function l(e, t) {
        if ((1 & e && i.Sb(0, "span", 9), 2 & e)) {
          const e = i.hc(3).$implicit;
          i.pc("ngClass", e.leftIcon);
        }
      }
      function c(e, t) {
        if ((1 & e && i.Sb(0, "span", 10), 2 & e)) {
          const e = i.hc(3).$implicit;
          i.pc("ngClass", e.rightIcon);
        }
      }
      function u(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Lc(1, l, 1, 1, "span", 6),
            i.Xb(2, "span", 7),
            i.Nc(3),
            i.Wb(),
            i.Lc(4, c, 1, 1, "span", 8),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc(2).$implicit;
          i.Eb(1),
            i.pc("ngIf", e.leftIcon),
            i.Eb(2),
            i.Oc(e.header),
            i.Eb(1),
            i.pc("ngIf", e.rightIcon);
        }
      }
      function h(e, t) {
        1 & e && i.Tb(0);
      }
      function d(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, h, 1, 0, "ng-container", 11), i.Ub()),
          2 & e)
        ) {
          const e = i.hc(2).$implicit;
          i.Eb(1), i.pc("ngTemplateOutlet", e.headerTemplate);
        }
      }
      function p(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "span", 12),
            i.fc("click", function (t) {
              i.Ec(e);
              const n = i.hc(2).$implicit;
              return i.hc().clickClose(t, n);
            }),
            i.Wb();
        }
      }
      const f = function (e, t) {
        return {
          "ui-tabview-selected ui-state-active": e,
          "ui-state-disabled": t,
        };
      };
      function g(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "li", 2),
            i.fc("click", function (t) {
              i.Ec(e);
              const n = i.hc().$implicit;
              return i.hc().clickTab(t, n);
            })("keydown.enter", function (t) {
              i.Ec(e);
              const n = i.hc().$implicit;
              return i.hc().clickTab(t, n);
            }),
            i.Xb(1, "a", 3),
            i.Lc(2, u, 5, 3, "ng-container", 4),
            i.Lc(3, d, 2, 1, "ng-container", 4),
            i.Wb(),
            i.Lc(4, p, 1, 0, "span", 5),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc().$implicit,
            t = i.hc();
          i.Gb(t.getDefaultHeaderClass(e)),
            i.pc("ngStyle", e.headerStyle)(
              "ngClass",
              i.tc(16, f, e.selected, e.disabled)
            ),
            i.Fb("tabindex", e.disabled ? -1 : 0),
            i.Eb(1),
            i.pc("pTooltip", e.tooltip)("tooltipPosition", e.tooltipPosition)(
              "positionStyle",
              e.tooltipPositionStyle
            )("tooltipStyleClass", e.tooltipStyleClass),
            i.Fb("id", e.id + "-label")("aria-selected", e.selected)(
              "aria-controls",
              e.id
            )("aria-selected", e.selected),
            i.Eb(1),
            i.pc("ngIf", !e.headerTemplate),
            i.Eb(1),
            i.pc("ngIf", e.headerTemplate),
            i.Eb(1),
            i.pc("ngIf", e.closable);
        }
      }
      function m(e, t) {
        1 & e && i.Lc(0, g, 5, 19, "li", 1),
          2 & e && i.pc("ngIf", !t.$implicit.closed);
      }
      function b(e, t) {
        1 & e && i.Tb(0);
      }
      function v(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, b, 1, 0, "ng-container", 3), i.Ub()),
          2 & e)
        ) {
          const e = i.hc(2);
          i.Eb(1), i.pc("ngTemplateOutlet", e.contentTemplate);
        }
      }
      const y = function (e) {
        return { "ui-helper-hidden": e };
      };
      function w(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 1),
            i.nc(1),
            i.Lc(2, v, 2, 1, "ng-container", 2),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.pc("ngClass", i.sc(5, y, !e.selected)),
            i.Fb("id", e.id)("aria-hidden", !e.selected)(
              "aria-labelledby",
              e.id + "-label"
            ),
            i.Eb(2),
            i.pc(
              "ngIf",
              e.contentTemplate && (e.cache ? e.loaded : e.selected)
            );
        }
      }
      const S = ["*"];
      function _(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "ul", 3),
            i.fc("onTabClick", function (t) {
              return i.Ec(e), i.hc().open(t.originalEvent, t.tab);
            })("onTabCloseClick", function (t) {
              return i.Ec(e), i.hc().close(t.originalEvent, t.tab);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.pc("tabs", e.tabs)("orientation", e.orientation);
        }
      }
      function C(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "ul", 3),
            i.fc("onTabClick", function (t) {
              return i.Ec(e), i.hc().open(t.originalEvent, t.tab);
            })("onTabCloseClick", function (t) {
              return i.Ec(e), i.hc().close(t.originalEvent, t.tab);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.pc("tabs", e.tabs)("orientation", e.orientation);
        }
      }
      let E = 0,
        O = (() => {
          let e = class {
            constructor() {
              (this.orientation = "top"),
                (this.onTabClick = new i.o()),
                (this.onTabCloseClick = new i.o());
            }
            getDefaultHeaderClass(e) {
              let t = "ui-state-default ui-corner-" + this.orientation;
              return (
                e.headerStyleClass && (t = t + " " + e.headerStyleClass), t
              );
            }
            clickTab(e, t) {
              this.onTabClick.emit({ originalEvent: e, tab: t });
            }
            clickClose(e, t) {
              this.onTabCloseClick.emit({ originalEvent: e, tab: t });
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["", "p-tabViewNav", ""]],
              hostVars: 10,
              hostBindings: function (e, t) {
                2 & e &&
                  i.Ib("ui-tabview-nav", !0)("ui-helper-reset", !0)(
                    "ui-helper-clearfix",
                    !0
                  )("ui-widget-header", !0)("ui-corner-all", !0);
              },
              inputs: { orientation: "orientation", tabs: "tabs" },
              outputs: {
                onTabClick: "onTabClick",
                onTabCloseClick: "onTabCloseClick",
              },
              attrs: a,
              decls: 1,
              vars: 1,
              consts: [
                ["ngFor", "", 3, "ngForOf"],
                [
                  "role",
                  "presentation",
                  "tabindex",
                  "0",
                  3,
                  "class",
                  "ngStyle",
                  "ngClass",
                  "click",
                  "keydown.enter",
                  4,
                  "ngIf",
                ],
                [
                  "role",
                  "presentation",
                  "tabindex",
                  "0",
                  3,
                  "ngStyle",
                  "ngClass",
                  "click",
                  "keydown.enter",
                ],
                [
                  "role",
                  "tab",
                  3,
                  "pTooltip",
                  "tooltipPosition",
                  "positionStyle",
                  "tooltipStyleClass",
                ],
                [4, "ngIf"],
                [
                  "class",
                  "ui-tabview-close pi pi-times",
                  3,
                  "click",
                  4,
                  "ngIf",
                ],
                ["class", "ui-tabview-left-icon", 3, "ngClass", 4, "ngIf"],
                [1, "ui-tabview-title"],
                ["class", "ui-tabview-right-icon", 3, "ngClass", 4, "ngIf"],
                [1, "ui-tabview-left-icon", 3, "ngClass"],
                [1, "ui-tabview-right-icon", 3, "ngClass"],
                [4, "ngTemplateOutlet"],
                [1, "ui-tabview-close", "pi", "pi-times", 3, "click"],
              ],
              template: function (e, t) {
                1 & e && i.Lc(0, m, 1, 1, "ng-template", 0),
                  2 & e && i.pc("ngForOf", t.tabs);
              },
              directives: [s.l, s.m, s.n, s.k, r.a, s.r],
              encapsulation: 2,
            })),
            e
          );
        })(),
        x = (() => {
          let e = class {
            constructor(e, t) {
              (this.viewContainer = e),
                (this.cd = t),
                (this.cache = !0),
                (this.tooltipPosition = "top"),
                (this.tooltipPositionStyle = "absolute"),
                (this.id = "ui-tabpanel-" + E++);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "content":
                  default:
                    this.contentTemplate = e.template;
                }
              });
            }
            get selected() {
              return this._selected;
            }
            set selected(e) {
              (this._selected = e),
                this.loaded || this.cd.detectChanges(),
                e && (this.loaded = !0);
            }
            get leftIcon() {
              return this._leftIcon;
            }
            set leftIcon(e) {
              this._leftIcon = e;
            }
            get rightIcon() {
              return this._rightIcon;
            }
            set rightIcon(e) {
              this._rightIcon = e;
            }
            ngOnDestroy() {
              this.view = null;
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.Q), i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-tabPanel"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, o.d, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.templates = s);
              },
              inputs: {
                cache: "cache",
                tooltipPosition: "tooltipPosition",
                tooltipPositionStyle: "tooltipPositionStyle",
                selected: "selected",
                leftIcon: "leftIcon",
                rightIcon: "rightIcon",
                header: "header",
                disabled: "disabled",
                closable: "closable",
                headerStyle: "headerStyle",
                headerStyleClass: "headerStyleClass",
                tooltip: "tooltip",
                tooltipStyleClass: "tooltipStyleClass",
              },
              ngContentSelectors: S,
              decls: 1,
              vars: 1,
              consts: [
                [
                  "class",
                  "ui-tabview-panel ui-widget-content",
                  "role",
                  "tabpanel",
                  3,
                  "ngClass",
                  4,
                  "ngIf",
                ],
                [
                  "role",
                  "tabpanel",
                  1,
                  "ui-tabview-panel",
                  "ui-widget-content",
                  3,
                  "ngClass",
                ],
                [4, "ngIf"],
                [4, "ngTemplateOutlet"],
              ],
              template: function (e, t) {
                1 & e && (i.oc(), i.Lc(0, w, 3, 7, "div", 0)),
                  2 & e && i.pc("ngIf", !t.closed);
              },
              directives: [s.m, s.k, s.r],
              encapsulation: 2,
            })),
            e
          );
        })(),
        T = (() => {
          let e = class {
            constructor(e) {
              (this.el = e),
                (this.orientation = "top"),
                (this.onChange = new i.o()),
                (this.onClose = new i.o()),
                (this.activeIndexChange = new i.o());
            }
            ngAfterContentInit() {
              this.initTabs(),
                this.tabPanels.changes.subscribe((e) => {
                  this.initTabs();
                });
            }
            initTabs() {
              (this.tabs = this.tabPanels.toArray()),
                !this.findSelectedTab() &&
                  this.tabs.length &&
                  (null != this.activeIndex &&
                  this.tabs.length > this.activeIndex
                    ? (this.tabs[this.activeIndex].selected = !0)
                    : (this.tabs[0].selected = !0));
            }
            open(e, t) {
              if (t.disabled) e && e.preventDefault();
              else {
                if (!t.selected) {
                  let n = this.findSelectedTab();
                  n && (n.selected = !1), (t.selected = !0);
                  let i = this.findTabIndex(t);
                  (this.preventActiveIndexPropagation = !0),
                    this.activeIndexChange.emit(i),
                    this.onChange.emit({ originalEvent: e, index: i });
                }
                e && e.preventDefault();
              }
            }
            close(e, t) {
              this.controlClose
                ? this.onClose.emit({
                    originalEvent: e,
                    index: this.findTabIndex(t),
                    close: () => {
                      this.closeTab(t);
                    },
                  })
                : (this.closeTab(t),
                  this.onClose.emit({
                    originalEvent: e,
                    index: this.findTabIndex(t),
                  })),
                e.stopPropagation();
            }
            closeTab(e) {
              if (!e.disabled) {
                if (e.selected) {
                  e.selected = !1;
                  for (let t = 0; t < this.tabs.length; t++) {
                    let n = this.tabs[t];
                    if (!n.closed && !e.disabled) {
                      n.selected = !0;
                      break;
                    }
                  }
                }
                e.closed = !0;
              }
            }
            findSelectedTab() {
              for (let e = 0; e < this.tabs.length; e++)
                if (this.tabs[e].selected) return this.tabs[e];
              return null;
            }
            findTabIndex(e) {
              let t = -1;
              for (let n = 0; n < this.tabs.length; n++)
                if (this.tabs[n] == e) {
                  t = n;
                  break;
                }
              return t;
            }
            getBlockableElement() {
              return this.el.nativeElement.children[0];
            }
            get activeIndex() {
              return this._activeIndex;
            }
            set activeIndex(e) {
              (this._activeIndex = e),
                this.preventActiveIndexPropagation
                  ? (this.preventActiveIndexPropagation = !1)
                  : this.tabs &&
                    this.tabs.length &&
                    null != this._activeIndex &&
                    this.tabs.length > this._activeIndex &&
                    ((this.findSelectedTab().selected = !1),
                    (this.tabs[this._activeIndex].selected = !0));
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-tabView"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, x, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.tabPanels = s);
              },
              inputs: {
                orientation: "orientation",
                activeIndex: "activeIndex",
                style: "style",
                styleClass: "styleClass",
                controlClose: "controlClose",
              },
              outputs: {
                onChange: "onChange",
                onClose: "onClose",
                activeIndexChange: "activeIndexChange",
              },
              ngContentSelectors: S,
              decls: 5,
              vars: 6,
              consts: [
                [3, "ngClass", "ngStyle"],
                [
                  "p-tabViewNav",
                  "",
                  "role",
                  "tablist",
                  3,
                  "tabs",
                  "orientation",
                  "onTabClick",
                  "onTabCloseClick",
                  4,
                  "ngIf",
                ],
                [1, "ui-tabview-panels"],
                [
                  "p-tabViewNav",
                  "",
                  "role",
                  "tablist",
                  3,
                  "tabs",
                  "orientation",
                  "onTabClick",
                  "onTabCloseClick",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.oc(),
                  i.Xb(0, "div", 0),
                  i.Lc(1, _, 1, 2, "ul", 1),
                  i.Xb(2, "div", 2),
                  i.nc(3),
                  i.Wb(),
                  i.Lc(4, C, 1, 2, "ul", 1),
                  i.Wb()),
                  2 & e &&
                    (i.Gb(t.styleClass),
                    i.pc(
                      "ngClass",
                      "ui-tabview ui-widget ui-widget-content ui-corner-all ui-tabview-" +
                        t.orientation
                    )("ngStyle", t.style),
                    i.Eb(1),
                    i.pc("ngIf", "bottom" != t.orientation),
                    i.Eb(3),
                    i.pc("ngIf", "bottom" == t.orientation));
              },
              directives: [s.k, s.n, s.m, O],
              encapsulation: 2,
            })),
            e
          );
        })(),
        k = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c, o.e, r.b], o.e],
            })),
            e
          );
        })();
    },
    sVev: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      const i = (() => {
        function e() {
          return (
            Error.call(this),
            (this.message = "no elements in sequence"),
            (this.name = "EmptyError"),
            this
          );
        }
        return (e.prototype = Object.create(Error.prototype)), e;
      })();
    },
    sum4: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return c;
      });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("tyNb"),
        o = n("P8Ue");
      function a(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "ul", 11),
            i.Xb(1, "li", 12),
            i.fc("click", function () {
              return i.Ec(e), i.hc().showMobileMenu();
            }),
            i.Xb(2, "span", 13),
            i.Nc(3, "menu"),
            i.Wb(),
            i.Wb(),
            i.Wb();
        }
      }
      const l = function (e) {
        return { open: e };
      };
      let c = (() => {
        class e {
          constructor(e) {
            (this.viewportScroller = e), (this.isMobileMenuOpen = !1);
          }
          scrollToAnchor(e) {
            this.viewportScroller.scrollToAnchor(e);
          }
          hideMobileMenu() {
            this.isMobileMenuOpen = !1;
          }
          showMobileMenu() {
            this.isMobileMenuOpen = !0;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(s.v));
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-public-header"]],
            decls: 16,
            vars: 4,
            consts: [
              [1, "header"],
              [1, "container", "header__wrapper"],
              ["routerLink", "/", 1, "header__logo"],
              [1, "header__right", 3, "ngClass", "click"],
              [1, "nav", "align-items-lg-center"],
              [1, "ms-auto"],
              [1, "nav"],
              [
                1,
                "nav__item",
                "mx-2",
                "mt-5",
                "mt-lg-0",
                "d-flex",
                "align-items-lg-center",
              ],
              [
                "routerLink",
                "/",
                1,
                "button",
                "button--xs",
                "button--db-border",
                "me-3",
              ],
              [
                "routerLink",
                "/",
                1,
                "button",
                "button--xs",
                "button--db",
                "button--db",
                "button--db-shadow",
              ],
              ["class", "nav align-items-center", 4, "ngIf"],
              [1, "nav", "align-items-center"],
              [1, "nav__item", "nav__toggler", 3, "click"],
              [1, "icon", "material-icons"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "header"),
                i.Xb(1, "div", 0),
                i.Xb(2, "div", 1),
                i.Sb(3, "div", 2),
                i.Xb(4, "div", 3),
                i.fc("click", function () {
                  return t.hideMobileMenu();
                }),
                i.Xb(5, "ul", 4),
                i.Sb(6, "div", 5),
                i.Sb(7, "app-main-navigation", 6),
                i.Sb(8, "div", 5),
                i.Xb(9, "li", 7),
                i.Xb(10, "button", 8),
                // i.Nc(11, "Loginx"),           Bookmark
                i.Wb(),
                i.Xb(12, "button", 9),
                // i.Nc(13, "Register"),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Sb(14, "div", 5),
                i.Lc(15, a, 4, 0, "ul", 10),
                i.Wb(),
                i.Wb(),
                i.Wb()),
                2 & e &&
                  (i.Eb(4),
                  i.pc("ngClass", i.sc(2, l, t.isMobileMenuOpen)),
                  i.Eb(11),
                  i.pc("ngIf", !t.isMobileMenuOpen));
            },
            directives: [r.h, s.k, o.a, s.m],
            styles: [
              '.header[_ngcontent-%COMP%]{background:#000;color:#fff;box-shadow:0 2px 15px rgba(0,0,0,.1);position:fixed;top:0;left:0;right:0;z-index:99;max-width:2000px;margin:0 auto}.header__wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;margin:0 auto}.header__logo[_ngcontent-%COMP%]{width:245px;padding:30px 0;text-align:center}.header__logo[_ngcontent-%COMP%]:after{content:"";background:#fff;-webkit-mask:url(logo.png) no-repeat center;mask:url(logo.png) no-repeat center;display:block;width:200px;height: 158px}.header__right[_ngcontent-%COMP%]{width:100%}@media (max-width:991px){.header__right[_ngcontent-%COMP%]{position:fixed;display:none;top:0;left:0;right:0;bottom:0;background:#000;padding-top:160px;color:#fff}.header__right.open[_ngcontent-%COMP%]{display:block}.header__right.open[_ngcontent-%COMP%]:after{content:"close";cursor:pointer;font-size:35px;font-weight:600;position:absolute;top:30px;right:10px;z-index:999;font-family:Material Icons;font-style:normal;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-feature-settings:"liga";-webkit-font-smoothing:antialiased}.header__right[_ngcontent-%COMP%]   .nav[_ngcontent-%COMP%]{flex-direction:column;align-items:center;font-size:1.4em}.nav__toggler[_ngcontent-%COMP%]{display:flex;align-items:center}.nav__toggler[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{font-size:40px}}',
            ],
          })),
          e
        );
      })();
    },
    tQ6G: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return E;
      }),
        n.d(t, "b", function () {
          return O;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("3Pt+"),
        o = n("1SSY"),
        a = n("RtSl");
      function l(e, t) {
        1 & e && i.Tb(0);
      }
      const c = function (e) {
        return { $implicit: e };
      };
      function u(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 14), i.Lc(1, l, 1, 0, "ng-container", 15), i.Wb()),
          2 & e)
        ) {
          const e = i.hc(2);
          i.Eb(1),
            i.pc("ngTemplateOutlet", e.templateLeft)(
              "ngTemplateOutletContext",
              i.sc(2, c, e.paginatorState)
            );
        }
      }
      function h(e, t) {
        if ((1 & e && (i.Xb(0, "span", 16), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc(2);
          i.Eb(1), i.Oc(e.currentPageReport);
        }
      }
      const d = function (e) {
        return { "ui-state-disabled": e };
      };
      function p(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 17),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc(2).changePageToPrev(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(2).changePageToPrev(t);
            }),
            i.Sb(1, "span", 18),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2);
          i.pc("ngClass", i.sc(3, d, e.isFirstPage()))(
            "tabindex",
            e.isFirstPage() ? -1 : null
          ),
            i.Fb("tabindex", e.isFirstPage() ? null : "0");
        }
      }
      const f = function (e) {
        return { "ui-state-active": e };
      };
      function g(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 19),
            i.fc("click", function (n) {
              i.Ec(e);
              const s = t.$implicit;
              return i.hc(2).onPageLinkClick(n, s - 1);
            })("keydown.enter", function (n) {
              i.Ec(e);
              const s = t.$implicit;
              return i.hc(2).onPageLinkClick(n, s - 1);
            }),
            i.Nc(1),
            i.Wb();
        }
        if (2 & e) {
          const e = t.$implicit,
            n = i.hc(2);
          i.pc("ngClass", i.sc(2, f, e - 1 == n.getPage())), i.Eb(1), i.Oc(e);
        }
      }
      function m(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "a", 20),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc(2).changePageToNext(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc(2).changePageToNext(t);
            }),
            i.Sb(1, "span", 21),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2);
          i.pc("ngClass", i.sc(3, d, e.isLastPage()))(
            "tabindex",
            e.isLastPage() ? -1 : null
          ),
            i.Fb("tabindex", e.isLastPage() ? null : "0");
        }
      }
      function b(e, t) {
        1 & e && i.Tb(0);
      }
      function v(e, t) {
        if ((1 & e && i.Lc(0, b, 1, 0, "ng-container", 15), 2 & e)) {
          const e = t.$implicit,
            n = i.hc(4);
          i.pc("ngTemplateOutlet", n.dropdownItemTemplate)(
            "ngTemplateOutletContext",
            i.sc(2, c, e)
          );
        }
      }
      function y(e, t) {
        1 & e && (i.Vb(0), i.Lc(1, v, 1, 4, "ng-template", 24), i.Ub());
      }
      function w(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "p-dropdown", 22),
            i.fc("ngModelChange", function (t) {
              return i.Ec(e), (i.hc(2).rows = t);
            })("onChange", function (t) {
              return i.Ec(e), i.hc(2).onRppChange(t);
            }),
            i.Lc(1, y, 2, 0, "ng-container", 23),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc(2);
          i.pc("options", e.rowsPerPageItems)("ngModel", e.rows)(
            "appendTo",
            e.dropdownAppendTo
          )("scrollHeight", e.dropdownScrollHeight),
            i.Eb(1),
            i.pc("ngIf", e.dropdownItemTemplate);
        }
      }
      function S(e, t) {
        1 & e && i.Tb(0);
      }
      function _(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 25), i.Lc(1, S, 1, 0, "ng-container", 15), i.Wb()),
          2 & e)
        ) {
          const e = i.hc(2);
          i.Eb(1),
            i.pc("ngTemplateOutlet", e.templateRight)(
              "ngTemplateOutletContext",
              i.sc(2, c, e.paginatorState)
            );
        }
      }
      function C(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "div", 1),
            i.Lc(1, u, 2, 4, "div", 2),
            i.Lc(2, h, 2, 1, "span", 3),
            i.Xb(3, "a", 4),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc().changePageToFirst(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc().changePageToFirst(t);
            }),
            i.Sb(4, "span", 5),
            i.Wb(),
            i.Lc(5, p, 2, 5, "a", 6),
            i.Xb(6, "span", 7),
            i.Lc(7, g, 2, 4, "a", 8),
            i.Wb(),
            i.Lc(8, m, 2, 5, "a", 9),
            i.Xb(9, "a", 10),
            i.fc("click", function (t) {
              return i.Ec(e), i.hc().changePageToLast(t);
            })("keydown.enter", function (t) {
              return i.Ec(e), i.hc().changePageToLast(t);
            }),
            i.Sb(10, "span", 11),
            i.Wb(),
            i.Lc(11, w, 2, 5, "p-dropdown", 12),
            i.Lc(12, _, 2, 4, "div", 13),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.Gb(e.styleClass),
            i.pc("ngStyle", e.style)(
              "ngClass",
              "ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix"
            ),
            i.Eb(1),
            i.pc("ngIf", e.templateLeft),
            i.Eb(1),
            i.pc("ngIf", e.showCurrentPageReport),
            i.Eb(1),
            i.pc("ngClass", i.sc(17, d, e.isFirstPage()))(
              "tabindex",
              e.isFirstPage() ? -1 : null
            ),
            i.Fb("tabindex", e.isFirstPage() ? null : "0"),
            i.Eb(2),
            i.pc("ngIf", e.showFirstLastIcon),
            i.Eb(2),
            i.pc("ngForOf", e.pageLinks),
            i.Eb(1),
            i.pc("ngIf", e.showFirstLastIcon),
            i.Eb(1),
            i.pc("ngClass", i.sc(19, d, e.isLastPage()))(
              "tabindex",
              e.isLastPage() ? -1 : null
            ),
            i.Fb("tabindex", e.isLastPage() ? null : "0"),
            i.Eb(2),
            i.pc("ngIf", e.rowsPerPageOptions),
            i.Eb(1),
            i.pc("ngIf", e.templateRight);
        }
      }
      let E = (() => {
          let e = class {
            constructor(e) {
              (this.cd = e),
                (this.pageLinkSize = 5),
                (this.onPageChange = new i.o()),
                (this.alwaysShow = !0),
                (this.dropdownScrollHeight = "200px"),
                (this.currentPageReportTemplate =
                  "{currentPage} of {totalPages}"),
                (this.totalRecords = 0),
                (this.rows = 0),
                (this.showFirstLastIcon = !0),
                (this._first = 0);
            }
            ngOnInit() {
              this.updatePaginatorState();
            }
            ngOnChanges(e) {
              e.totalRecords &&
                (this.updatePageLinks(),
                this.updatePaginatorState(),
                this.updateFirst(),
                this.updateRowsPerPageOptions()),
                e.first &&
                  ((this._first = e.first.currentValue),
                  this.updatePageLinks(),
                  this.updatePaginatorState()),
                e.rows && (this.updatePageLinks(), this.updatePaginatorState()),
                e.rowsPerPageOptions && this.updateRowsPerPageOptions();
            }
            get first() {
              return this._first;
            }
            set first(e) {
              this._first = e;
            }
            updateRowsPerPageOptions() {
              if (this.rowsPerPageOptions) {
                this.rowsPerPageItems = [];
                for (let e of this.rowsPerPageOptions)
                  "object" == typeof e && e.showAll
                    ? this.rowsPerPageItems.unshift({
                        label: e.showAll,
                        value: this.totalRecords,
                      })
                    : this.rowsPerPageItems.push({
                        label: String(e),
                        value: e,
                      });
              }
            }
            isFirstPage() {
              return 0 === this.getPage();
            }
            isLastPage() {
              return this.getPage() === this.getPageCount() - 1;
            }
            getPageCount() {
              return Math.ceil(this.totalRecords / this.rows) || 1;
            }
            calculatePageLinkBoundaries() {
              let e = this.getPageCount(),
                t = Math.min(this.pageLinkSize, e),
                n = Math.max(0, Math.ceil(this.getPage() - t / 2)),
                i = Math.min(e - 1, n + t - 1);
              return (
                (n = Math.max(0, n - (this.pageLinkSize - (i - n + 1)))), [n, i]
              );
            }
            updatePageLinks() {
              this.pageLinks = [];
              let e = this.calculatePageLinkBoundaries(),
                t = e[1];
              for (let n = e[0]; n <= t; n++) this.pageLinks.push(n + 1);
            }
            changePage(e) {
              var t = this.getPageCount();
              if (e >= 0 && e < t) {
                this._first = this.rows * e;
                var n = {
                  page: e,
                  first: this.first,
                  rows: this.rows,
                  pageCount: t,
                };
                this.updatePageLinks(),
                  this.onPageChange.emit(n),
                  this.updatePaginatorState();
              }
            }
            updateFirst() {
              const e = this.getPage();
              e > 0 &&
                this.totalRecords &&
                this.first >= this.totalRecords &&
                Promise.resolve(null).then(() => this.changePage(e - 1));
            }
            getPage() {
              return Math.floor(this.first / this.rows);
            }
            changePageToFirst(e) {
              this.isFirstPage() || this.changePage(0), e.preventDefault();
            }
            changePageToPrev(e) {
              this.changePage(this.getPage() - 1), e.preventDefault();
            }
            changePageToNext(e) {
              this.changePage(this.getPage() + 1), e.preventDefault();
            }
            changePageToLast(e) {
              this.isLastPage() || this.changePage(this.getPageCount() - 1),
                e.preventDefault();
            }
            onPageLinkClick(e, t) {
              this.changePage(t), e.preventDefault();
            }
            onRppChange(e) {
              this.changePage(this.getPage());
            }
            updatePaginatorState() {
              this.paginatorState = {
                page: this.getPage(),
                pageCount: this.getPageCount(),
                rows: this.rows,
                first: this.first,
                totalRecords: this.totalRecords,
              };
            }
            get currentPageReport() {
              return this.currentPageReportTemplate
                .replace("{currentPage}", String(this.getPage() + 1))
                .replace("{totalPages}", String(this.getPageCount()))
                .replace("{first}", String(this._first + 1))
                .replace(
                  "{last}",
                  String(Math.min(this._first + this.rows, this.totalRecords))
                )
                .replace("{rows}", String(this.rows))
                .replace("{totalRecords}", String(this.totalRecords));
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-paginator"]],
              inputs: {
                pageLinkSize: "pageLinkSize",
                alwaysShow: "alwaysShow",
                dropdownScrollHeight: "dropdownScrollHeight",
                currentPageReportTemplate: "currentPageReportTemplate",
                totalRecords: "totalRecords",
                rows: "rows",
                showFirstLastIcon: "showFirstLastIcon",
                first: "first",
                style: "style",
                styleClass: "styleClass",
                templateLeft: "templateLeft",
                templateRight: "templateRight",
                dropdownAppendTo: "dropdownAppendTo",
                showCurrentPageReport: "showCurrentPageReport",
                rowsPerPageOptions: "rowsPerPageOptions",
                dropdownItemTemplate: "dropdownItemTemplate",
              },
              outputs: { onPageChange: "onPageChange" },
              features: [i.Cb],
              decls: 1,
              vars: 1,
              consts: [
                [3, "class", "ngStyle", "ngClass", 4, "ngIf"],
                [3, "ngStyle", "ngClass"],
                ["class", "ui-paginator-left-content", 4, "ngIf"],
                ["class", "ui-paginator-current", 4, "ngIf"],
                [
                  1,
                  "ui-paginator-first",
                  "ui-paginator-element",
                  "ui-state-default",
                  "ui-corner-all",
                  3,
                  "ngClass",
                  "tabindex",
                  "click",
                  "keydown.enter",
                ],
                [1, "ui-paginator-icon", "pi", "pi-step-backward"],
                [
                  "tabindex",
                  "0",
                  "class",
                  "ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all",
                  3,
                  "ngClass",
                  "tabindex",
                  "click",
                  "keydown.enter",
                  4,
                  "ngIf",
                ],
                [1, "ui-paginator-pages"],
                [
                  "tabindex",
                  "0",
                  "class",
                  "ui-paginator-page ui-paginator-element ui-state-default ui-corner-all",
                  3,
                  "ngClass",
                  "click",
                  "keydown.enter",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "class",
                  "ui-paginator-next ui-paginator-element ui-state-default ui-corner-all",
                  3,
                  "ngClass",
                  "tabindex",
                  "click",
                  "keydown.enter",
                  4,
                  "ngIf",
                ],
                [
                  1,
                  "ui-paginator-last",
                  "ui-paginator-element",
                  "ui-state-default",
                  "ui-corner-all",
                  3,
                  "ngClass",
                  "tabindex",
                  "click",
                  "keydown.enter",
                ],
                [1, "ui-paginator-icon", "pi", "pi-step-forward"],
                [
                  3,
                  "options",
                  "ngModel",
                  "appendTo",
                  "scrollHeight",
                  "ngModelChange",
                  "onChange",
                  4,
                  "ngIf",
                ],
                ["class", "ui-paginator-right-content", 4, "ngIf"],
                [1, "ui-paginator-left-content"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "ui-paginator-current"],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-paginator-prev",
                  "ui-paginator-element",
                  "ui-state-default",
                  "ui-corner-all",
                  3,
                  "ngClass",
                  "tabindex",
                  "click",
                  "keydown.enter",
                ],
                [1, "ui-paginator-icon", "pi", "pi-caret-left"],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-paginator-page",
                  "ui-paginator-element",
                  "ui-state-default",
                  "ui-corner-all",
                  3,
                  "ngClass",
                  "click",
                  "keydown.enter",
                ],
                [
                  1,
                  "ui-paginator-next",
                  "ui-paginator-element",
                  "ui-state-default",
                  "ui-corner-all",
                  3,
                  "ngClass",
                  "tabindex",
                  "click",
                  "keydown.enter",
                ],
                [1, "ui-paginator-icon", "pi", "pi-caret-right"],
                [
                  3,
                  "options",
                  "ngModel",
                  "appendTo",
                  "scrollHeight",
                  "ngModelChange",
                  "onChange",
                ],
                [4, "ngIf"],
                ["pTemplate", "item"],
                [1, "ui-paginator-right-content"],
              ],
              template: function (e, t) {
                1 & e && i.Lc(0, C, 13, 21, "div", 0),
                  2 & e &&
                    i.pc(
                      "ngIf",
                      !!t.alwaysShow || (t.pageLinks && t.pageLinks.length > 1)
                    );
              },
              directives: [s.m, s.n, s.k, s.l, s.r, o.a, r.l, r.n, a.d],
              encapsulation: 2,
            })),
            e
          );
        })(),
        O = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c, o.b, r.h, a.e], o.b, r.h, a.e],
            })),
            e
          );
        })();
    },
    "tk/3": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return k;
      }),
        n.d(t, "b", function () {
          return x;
        }),
        n.d(t, "c", function () {
          return z;
        }),
        n.d(t, "d", function () {
          return E;
        });
      var i = n("fXoL"),
        s = n("LRne"),
        r = n("HDdC"),
        o = n("bOdf"),
        a = n("pLZG"),
        l = n("lJxs"),
        c = n("ofXK");
      class u {}
      class h {}
      class d {
        constructor(e) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            e
              ? (this.lazyInit =
                  "string" == typeof e
                    ? () => {
                        (this.headers = new Map()),
                          e.split("\n").forEach((e) => {
                            const t = e.indexOf(":");
                            if (t > 0) {
                              const n = e.slice(0, t),
                                i = n.toLowerCase(),
                                s = e.slice(t + 1).trim();
                              this.maybeSetNormalizedName(n, i),
                                this.headers.has(i)
                                  ? this.headers.get(i).push(s)
                                  : this.headers.set(i, [s]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(e).forEach((t) => {
                            let n = e[t];
                            const i = t.toLowerCase();
                            "string" == typeof n && (n = [n]),
                              n.length > 0 &&
                                (this.headers.set(i, n),
                                this.maybeSetNormalizedName(t, i));
                          });
                      })
              : (this.headers = new Map());
        }
        has(e) {
          return this.init(), this.headers.has(e.toLowerCase());
        }
        get(e) {
          this.init();
          const t = this.headers.get(e.toLowerCase());
          return t && t.length > 0 ? t[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(e) {
          return this.init(), this.headers.get(e.toLowerCase()) || null;
        }
        append(e, t) {
          return this.clone({ name: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ name: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ name: e, value: t, op: "d" });
        }
        maybeSetNormalizedName(e, t) {
          this.normalizedNames.has(t) || this.normalizedNames.set(t, e);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof d
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((e) => this.applyUpdate(e)),
              (this.lazyUpdate = null)));
        }
        copyFrom(e) {
          e.init(),
            Array.from(e.headers.keys()).forEach((t) => {
              this.headers.set(t, e.headers.get(t)),
                this.normalizedNames.set(t, e.normalizedNames.get(t));
            });
        }
        clone(e) {
          const t = new d();
          return (
            (t.lazyInit =
              this.lazyInit && this.lazyInit instanceof d
                ? this.lazyInit
                : this),
            (t.lazyUpdate = (this.lazyUpdate || []).concat([e])),
            t
          );
        }
        applyUpdate(e) {
          const t = e.name.toLowerCase();
          switch (e.op) {
            case "a":
            case "s":
              let n = e.value;
              if (("string" == typeof n && (n = [n]), 0 === n.length)) return;
              this.maybeSetNormalizedName(e.name, t);
              const i = ("a" === e.op ? this.headers.get(t) : void 0) || [];
              i.push(...n), this.headers.set(t, i);
              break;
            case "d":
              const s = e.value;
              if (s) {
                let e = this.headers.get(t);
                if (!e) return;
                (e = e.filter((e) => -1 === s.indexOf(e))),
                  0 === e.length
                    ? (this.headers.delete(t), this.normalizedNames.delete(t))
                    : this.headers.set(t, e);
              } else this.headers.delete(t), this.normalizedNames.delete(t);
          }
        }
        forEach(e) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((t) =>
              e(this.normalizedNames.get(t), this.headers.get(t))
            );
        }
      }
      class p {
        encodeKey(e) {
          return f(e);
        }
        encodeValue(e) {
          return f(e);
        }
        decodeKey(e) {
          return decodeURIComponent(e);
        }
        decodeValue(e) {
          return decodeURIComponent(e);
        }
      }
      function f(e) {
        return encodeURIComponent(e)
          .replace(/%40/gi, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/gi, "$")
          .replace(/%2C/gi, ",")
          .replace(/%3B/gi, ";")
          .replace(/%2B/gi, "+")
          .replace(/%3D/gi, "=")
          .replace(/%3F/gi, "?")
          .replace(/%2F/gi, "/");
      }
      class g {
        constructor(e = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = e.encoder || new p()),
            e.fromString)
          ) {
            if (e.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function (e, t) {
              const n = new Map();
              return (
                e.length > 0 &&
                  e.split("&").forEach((e) => {
                    const i = e.indexOf("="),
                      [s, r] =
                        -1 == i
                          ? [t.decodeKey(e), ""]
                          : [
                              t.decodeKey(e.slice(0, i)),
                              t.decodeValue(e.slice(i + 1)),
                            ],
                      o = n.get(s) || [];
                    o.push(r), n.set(s, o);
                  }),
                n
              );
            })(e.fromString, this.encoder);
          } else
            e.fromObject
              ? ((this.map = new Map()),
                Object.keys(e.fromObject).forEach((t) => {
                  const n = e.fromObject[t];
                  this.map.set(t, Array.isArray(n) ? n : [n]);
                }))
              : (this.map = null);
        }
        has(e) {
          return this.init(), this.map.has(e);
        }
        get(e) {
          this.init();
          const t = this.map.get(e);
          return t ? t[0] : null;
        }
        getAll(e) {
          return this.init(), this.map.get(e) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(e, t) {
          return this.clone({ param: e, value: t, op: "a" });
        }
        set(e, t) {
          return this.clone({ param: e, value: t, op: "s" });
        }
        delete(e, t) {
          return this.clone({ param: e, value: t, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((e) => {
                const t = this.encoder.encodeKey(e);
                return this.map
                  .get(e)
                  .map((e) => t + "=" + this.encoder.encodeValue(e))
                  .join("&");
              })
              .filter((e) => "" !== e)
              .join("&")
          );
        }
        clone(e) {
          const t = new g({ encoder: this.encoder });
          return (
            (t.cloneFrom = this.cloneFrom || this),
            (t.updates = (this.updates || []).concat([e])),
            t
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((e) => this.map.set(e, this.cloneFrom.map.get(e))),
              this.updates.forEach((e) => {
                switch (e.op) {
                  case "a":
                  case "s":
                    const t =
                      ("a" === e.op ? this.map.get(e.param) : void 0) || [];
                    t.push(e.value), this.map.set(e.param, t);
                    break;
                  case "d":
                    if (void 0 === e.value) {
                      this.map.delete(e.param);
                      break;
                    }
                    {
                      let t = this.map.get(e.param) || [];
                      const n = t.indexOf(e.value);
                      -1 !== n && t.splice(n, 1),
                        t.length > 0
                          ? this.map.set(e.param, t)
                          : this.map.delete(e.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      function m(e) {
        return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer;
      }
      function b(e) {
        return "undefined" != typeof Blob && e instanceof Blob;
      }
      function v(e) {
        return "undefined" != typeof FormData && e instanceof FormData;
      }
      class y {
        constructor(e, t, n, i) {
          let s;
          if (
            ((this.url = t),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = e.toUpperCase()),
            (function (e) {
              switch (e) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || i
              ? ((this.body = void 0 !== n ? n : null), (s = i))
              : (s = n),
            s &&
              ((this.reportProgress = !!s.reportProgress),
              (this.withCredentials = !!s.withCredentials),
              s.responseType && (this.responseType = s.responseType),
              s.headers && (this.headers = s.headers),
              s.params && (this.params = s.params)),
            this.headers || (this.headers = new d()),
            this.params)
          ) {
            const e = this.params.toString();
            if (0 === e.length) this.urlWithParams = t;
            else {
              const n = t.indexOf("?");
              this.urlWithParams =
                t + (-1 === n ? "?" : n < t.length - 1 ? "&" : "") + e;
            }
          } else (this.params = new g()), (this.urlWithParams = t);
        }
        serializeBody() {
          return null === this.body
            ? null
            : m(this.body) ||
              b(this.body) ||
              v(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof g
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || v(this.body)
            ? null
            : b(this.body)
            ? this.body.type || null
            : m(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof g
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              Array.isArray(this.body)
            ? "application/json"
            : null;
        }
        clone(e = {}) {
          const t = e.method || this.method,
            n = e.url || this.url,
            i = e.responseType || this.responseType,
            s = void 0 !== e.body ? e.body : this.body,
            r =
              void 0 !== e.withCredentials
                ? e.withCredentials
                : this.withCredentials,
            o =
              void 0 !== e.reportProgress
                ? e.reportProgress
                : this.reportProgress;
          let a = e.headers || this.headers,
            l = e.params || this.params;
          return (
            void 0 !== e.setHeaders &&
              (a = Object.keys(e.setHeaders).reduce(
                (t, n) => t.set(n, e.setHeaders[n]),
                a
              )),
            e.setParams &&
              (l = Object.keys(e.setParams).reduce(
                (t, n) => t.set(n, e.setParams[n]),
                l
              )),
            new y(t, n, s, {
              params: l,
              headers: a,
              reportProgress: o,
              responseType: i,
              withCredentials: r,
            })
          );
        }
      }
      const w = (function () {
        var e = {
          Sent: 0,
          UploadProgress: 1,
          ResponseHeader: 2,
          DownloadProgress: 3,
          Response: 4,
          User: 5,
        };
        return (
          (e[e.Sent] = "Sent"),
          (e[e.UploadProgress] = "UploadProgress"),
          (e[e.ResponseHeader] = "ResponseHeader"),
          (e[e.DownloadProgress] = "DownloadProgress"),
          (e[e.Response] = "Response"),
          (e[e.User] = "User"),
          e
        );
      })();
      class S {
        constructor(e, t = 200, n = "OK") {
          (this.headers = e.headers || new d()),
            (this.status = void 0 !== e.status ? e.status : t),
            (this.statusText = e.statusText || n),
            (this.url = e.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class _ extends S {
        constructor(e = {}) {
          super(e), (this.type = w.ResponseHeader);
        }
        clone(e = {}) {
          return new _({
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class C extends S {
        constructor(e = {}) {
          super(e),
            (this.type = w.Response),
            (this.body = void 0 !== e.body ? e.body : null);
        }
        clone(e = {}) {
          return new C({
            body: void 0 !== e.body ? e.body : this.body,
            headers: e.headers || this.headers,
            status: void 0 !== e.status ? e.status : this.status,
            statusText: e.statusText || this.statusText,
            url: e.url || this.url || void 0,
          });
        }
      }
      class E extends S {
        constructor(e) {
          super(e, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? "Http failure during parsing for " +
                  (e.url || "(unknown url)")
                : `Http failure response for ${e.url || "(unknown url)"}: ${
                    e.status
                  } ${e.statusText}`),
            (this.error = e.error || null);
        }
      }
      function O(e, t) {
        return {
          body: t,
          headers: e.headers,
          observe: e.observe,
          params: e.params,
          reportProgress: e.reportProgress,
          responseType: e.responseType,
          withCredentials: e.withCredentials,
        };
      }
      let x = (() => {
        class e {
          constructor(e) {
            this.handler = e;
          }
          request(e, t, n = {}) {
            let i;
            if (e instanceof y) i = e;
            else {
              let s = void 0;
              s = n.headers instanceof d ? n.headers : new d(n.headers);
              let r = void 0;
              n.params &&
                (r =
                  n.params instanceof g
                    ? n.params
                    : new g({ fromObject: n.params })),
                (i = new y(e, t, void 0 !== n.body ? n.body : null, {
                  headers: s,
                  params: r,
                  reportProgress: n.reportProgress,
                  responseType: n.responseType || "json",
                  withCredentials: n.withCredentials,
                }));
            }
            const r = Object(s.a)(i).pipe(
              Object(o.a)((e) => this.handler.handle(e))
            );
            if (e instanceof y || "events" === n.observe) return r;
            const c = r.pipe(Object(a.a)((e) => e instanceof C));
            switch (n.observe || "body") {
              case "body":
                switch (i.responseType) {
                  case "arraybuffer":
                    return c.pipe(
                      Object(l.a)((e) => {
                        if (null !== e.body && !(e.body instanceof ArrayBuffer))
                          throw new Error("Response is not an ArrayBuffer.");
                        return e.body;
                      })
                    );
                  case "blob":
                    return c.pipe(
                      Object(l.a)((e) => {
                        if (null !== e.body && !(e.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return e.body;
                      })
                    );
                  case "text":
                    return c.pipe(
                      Object(l.a)((e) => {
                        if (null !== e.body && "string" != typeof e.body)
                          throw new Error("Response is not a string.");
                        return e.body;
                      })
                    );
                  case "json":
                  default:
                    return c.pipe(Object(l.a)((e) => e.body));
                }
              case "response":
                return c;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${n.observe}}`
                );
            }
          }
          delete(e, t = {}) {
            return this.request("DELETE", e, t);
          }
          get(e, t = {}) {
            return this.request("GET", e, t);
          }
          head(e, t = {}) {
            return this.request("HEAD", e, t);
          }
          jsonp(e, t) {
            return this.request("JSONP", e, {
              params: new g().append(t, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(e, t = {}) {
            return this.request("OPTIONS", e, t);
          }
          patch(e, t, n = {}) {
            return this.request("PATCH", e, O(n, t));
          }
          post(e, t, n = {}) {
            return this.request("POST", e, O(n, t));
          }
          put(e, t, n = {}) {
            return this.request("PUT", e, O(n, t));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(u));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      class T {
        constructor(e, t) {
          (this.next = e), (this.interceptor = t);
        }
        handle(e) {
          return this.interceptor.intercept(e, this.next);
        }
      }
      const k = new i.r("HTTP_INTERCEPTORS");
      let M = (() => {
        class e {
          intercept(e, t) {
            return t.handle(e);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const I = /^\)\]\}',?\n/;
      class P {}
      let R = (() => {
          class e {
            constructor() {}
            build() {
              return new XMLHttpRequest();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        N = (() => {
          class e {
            constructor(e) {
              this.xhrFactory = e;
            }
            handle(e) {
              if ("JSONP" === e.method)
                throw new Error(
                  "Attempted to construct Jsonp request without JsonpClientModule installed."
                );
              return new r.a((t) => {
                const n = this.xhrFactory.build();
                if (
                  (n.open(e.method, e.urlWithParams),
                  e.withCredentials && (n.withCredentials = !0),
                  e.headers.forEach((e, t) =>
                    n.setRequestHeader(e, t.join(","))
                  ),
                  e.headers.has("Accept") ||
                    n.setRequestHeader(
                      "Accept",
                      "application/json, text/plain, */*"
                    ),
                  !e.headers.has("Content-Type"))
                ) {
                  const t = e.detectContentTypeHeader();
                  null !== t && n.setRequestHeader("Content-Type", t);
                }
                if (e.responseType) {
                  const t = e.responseType.toLowerCase();
                  n.responseType = "json" !== t ? t : "text";
                }
                const i = e.serializeBody();
                let s = null;
                const r = () => {
                    if (null !== s) return s;
                    const t = 1223 === n.status ? 204 : n.status,
                      i = n.statusText || "OK",
                      r = new d(n.getAllResponseHeaders()),
                      o =
                        (function (e) {
                          return "responseURL" in e && e.responseURL
                            ? e.responseURL
                            : /^X-Request-URL:/m.test(e.getAllResponseHeaders())
                            ? e.getResponseHeader("X-Request-URL")
                            : null;
                        })(n) || e.url;
                    return (
                      (s = new _({
                        headers: r,
                        status: t,
                        statusText: i,
                        url: o,
                      })),
                      s
                    );
                  },
                  o = () => {
                    let { headers: i, status: s, statusText: o, url: a } = r(),
                      l = null;
                    204 !== s &&
                      (l = void 0 === n.response ? n.responseText : n.response),
                      0 === s && (s = l ? 200 : 0);
                    let c = s >= 200 && s < 300;
                    if ("json" === e.responseType && "string" == typeof l) {
                      const e = l;
                      l = l.replace(I, "");
                      try {
                        l = "" !== l ? JSON.parse(l) : null;
                      } catch (u) {
                        (l = e), c && ((c = !1), (l = { error: u, text: l }));
                      }
                    }
                    c
                      ? (t.next(
                          new C({
                            body: l,
                            headers: i,
                            status: s,
                            statusText: o,
                            url: a || void 0,
                          })
                        ),
                        t.complete())
                      : t.error(
                          new E({
                            error: l,
                            headers: i,
                            status: s,
                            statusText: o,
                            url: a || void 0,
                          })
                        );
                  },
                  a = (e) => {
                    const { url: i } = r(),
                      s = new E({
                        error: e,
                        status: n.status || 0,
                        statusText: n.statusText || "Unknown Error",
                        url: i || void 0,
                      });
                    t.error(s);
                  };
                let l = !1;
                const c = (i) => {
                    l || (t.next(r()), (l = !0));
                    let s = { type: w.DownloadProgress, loaded: i.loaded };
                    i.lengthComputable && (s.total = i.total),
                      "text" === e.responseType &&
                        n.responseText &&
                        (s.partialText = n.responseText),
                      t.next(s);
                  },
                  u = (e) => {
                    let n = { type: w.UploadProgress, loaded: e.loaded };
                    e.lengthComputable && (n.total = e.total), t.next(n);
                  };
                return (
                  n.addEventListener("load", o),
                  n.addEventListener("error", a),
                  e.reportProgress &&
                    (n.addEventListener("progress", c),
                    null !== i &&
                      n.upload &&
                      n.upload.addEventListener("progress", u)),
                  n.send(i),
                  t.next({ type: w.Sent }),
                  () => {
                    n.removeEventListener("error", a),
                      n.removeEventListener("load", o),
                      e.reportProgress &&
                        (n.removeEventListener("progress", c),
                        null !== i &&
                          n.upload &&
                          n.upload.removeEventListener("progress", u)),
                      n.abort();
                  }
                );
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(P));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })();
      const L = new i.r("XSRF_COOKIE_NAME"),
        A = new i.r("XSRF_HEADER_NAME");
      class D {}
      let j = (() => {
          class e {
            constructor(e, t, n) {
              (this.doc = e),
                (this.platform = t),
                (this.cookieName = n),
                (this.lastCookieString = ""),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ("server" === this.platform) return null;
              const e = this.doc.cookie || "";
              return (
                e !== this.lastCookieString &&
                  (this.parseCount++,
                  (this.lastToken = Object(c.B)(e, this.cookieName)),
                  (this.lastCookieString = e)),
                this.lastToken
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(c.e), i.bc(i.D), i.bc(L));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        F = (() => {
          class e {
            constructor(e, t) {
              (this.tokenService = e), (this.headerName = t);
            }
            intercept(e, t) {
              const n = e.url.toLowerCase();
              if (
                "GET" === e.method ||
                "HEAD" === e.method ||
                n.startsWith("http://") ||
                n.startsWith("https://")
              )
                return t.handle(e);
              const i = this.tokenService.getToken();
              return (
                null === i ||
                  e.headers.has(this.headerName) ||
                  (e = e.clone({ headers: e.headers.set(this.headerName, i) })),
                t.handle(e)
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(D), i.bc(A));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        V = (() => {
          class e {
            constructor(e, t) {
              (this.backend = e), (this.injector = t), (this.chain = null);
            }
            handle(e) {
              if (null === this.chain) {
                const e = this.injector.get(k, []);
                this.chain = e.reduceRight((e, t) => new T(e, t), this.backend);
              }
              return this.chain.handle(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(h), i.bc(i.s));
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        W = (() => {
          class e {
            static disable() {
              return { ngModule: e, providers: [{ provide: F, useClass: M }] };
            }
            static withOptions(t = {}) {
              return {
                ngModule: e,
                providers: [
                  t.cookieName ? { provide: L, useValue: t.cookieName } : [],
                  t.headerName ? { provide: A, useValue: t.headerName } : [],
                ],
              };
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [
                F,
                { provide: k, useExisting: F, multi: !0 },
                { provide: D, useClass: j },
                { provide: L, useValue: "XSRF-TOKEN" },
                { provide: A, useValue: "X-XSRF-TOKEN" },
              ],
            })),
            e
          );
        })(),
        z = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [
                x,
                { provide: u, useClass: V },
                N,
                { provide: h, useExisting: N },
                R,
                { provide: P, useExisting: R },
              ],
              imports: [
                [
                  W.withOptions({
                    cookieName: "XSRF-TOKEN",
                    headerName: "X-XSRF-TOKEN",
                  }),
                ],
              ],
            })),
            e
          );
        })();
    },
    tmEo: function (e, t, n) {
      "use strict";
      n.r(t);
      var i = n("M0ag"),
        s = n("AcyG"),
        r = n("9Kd/"),
        o = n("tyNb"),
        a = n("mrSG"),
        l = n("quSY"),
        c = n("TkeJ"),
        u = n("M02b"),
        h = n("fXoL"),
        d = n("RmEv"),
        p = n("DV8u"),
        f = n("3Pt+"),
        g = n("ly96"),
        m = n("ofXK"),
        b = n("A1Yd");
      function v(e, t) {
        if ((1 & e && (h.Xb(0, "span", 7), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Email", e.credential));
        }
      }
      function y(e, t) {
        if ((1 & e && (h.Xb(0, "span", 7), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Password", e.password));
        }
      }
      let w = (() => {
          class e {
            constructor(e) {
              (this.fb = e),
                (this.model = null),
                (this.submitEvent = new h.o());
            }
            get credential() {
              return this.form.get("credential");
            }
            get password() {
              return this.form.get("password");
            }
            ngOnInit() {
              this.createForm();
            }
            submit() {
              g.a.markAllAsTouched(this.form),
                this.form.valid && this.submitEvent.emit(this.form.value);
            }
            createForm() {
              this.form = this.fb.group({
                credential: ["", [f.t.required, f.t.minLength(6)]],
                password: ["", [f.t.required, f.t.minLength(6)]],
              });
            }
            getErrorMessage(e, t) {
              return g.a.getErrorMessage(e, t);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(h.Rb(f.d));
            }),
            (e.ɵcmp = h.Lb({
              type: e,
              selectors: [["app-login-form"]],
              outputs: { submitEvent: "submitEvent" },
              decls: 10,
              vars: 5,
              consts: [
                [1, "container"],
                [
                  "autocomplete",
                  "off",
                  "novalidate",
                  "false",
                  1,
                  "row",
                  "g-3",
                  3,
                  "formGroup",
                  "keyup.enter",
                ],
                [1, "col-12"],
                [
                  "placeholder",
                  "Your Username or E-Mail",
                  "name",
                  "credential",
                  1,
                  "form-control",
                  3,
                  "formControl",
                ],
                ["class", "error-message", 4, "ngIf"],
                [
                  "placeholder",
                  "Your Password",
                  "name",
                  "password",
                  "type",
                  "password",
                  1,
                  "form-control",
                  3,
                  "formControl",
                ],
                [
                  "pButton",
                  "",
                  "type",
                  "button",
                  "label",
                  "Sign In",
                  1,
                  "w-100",
                  3,
                  "click",
                ],
                [1, "error-message"],
              ],
              template: function (e, t) {
                1 & e &&
                  (h.Xb(0, "div", 0),
                  h.Xb(1, "form", 1),
                  h.fc("keyup.enter", function () {
                    return t.submit();
                  }),
                  h.Xb(2, "div", 2),
                  h.Sb(3, "input", 3),
                  h.Lc(4, v, 2, 1, "span", 4),
                  h.Wb(),
                  h.Xb(5, "div", 2),
                  h.Sb(6, "input", 5),
                  h.Lc(7, y, 2, 1, "span", 4),
                  h.Wb(),
                  h.Xb(8, "div", 2),
                  h.Xb(9, "button", 6),
                  h.fc("click", function () {
                    return t.submit();
                  }),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb()),
                  2 & e &&
                    (h.Eb(1),
                    h.pc("formGroup", t.form),
                    h.Eb(2),
                    h.pc("formControl", t.credential),
                    h.Eb(1),
                    h.pc("ngIf", t.credential.touched && t.credential.invalid),
                    h.Eb(2),
                    h.pc("formControl", t.password),
                    h.Eb(1),
                    h.pc("ngIf", t.password.touched && t.password.invalid));
              },
              directives: [f.v, f.m, f.g, f.c, f.l, f.f, m.m, b.a],
              styles: [
                "[_nghost-%COMP%] {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n      }",
              ],
            })),
            e
          );
        })(),
        S = (() => {
          class e {
            constructor(e, t, n) {
              (this.store = e),
                (this.actions = t),
                (this.snack = n),
                (this.subscription = new l.a());
            }
            ngOnInit() {
              this.isAuthorized(),
                this.subscribeOnLoginSuccess(),
                this.subscribeOnLoginFailed();
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            isAuthorized() {
              this.store
                .selectOnce((e) => e.auth.isAuthorized)
                .subscribe((e) => {
                  e && this.store.dispatch(new c.a(["/office"]));
                });
            }
            subscribeOnLoginSuccess() {
              this.subscription.add(
                this.actions
                  .pipe(Object(s.k)(u.a.LoginSuccess))
                  .subscribe(() => this.store.dispatch(new c.a(["/office"])))
              );
            }
            subscribeOnLoginFailed() {
              this.subscription.add(
                this.actions
                  .pipe(Object(s.k)(u.a.LoginFailed))
                  .subscribe(({ error: e }) => this.snack.error(e))
              );
            }
            login(e) {
              this.store.dispatch(new u.a.Login(e));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(h.Rb(s.h), h.Rb(s.b), h.Rb(d.a));
            }),
            (e.ɵcmp = h.Lb({
              type: e,
              selectors: [["ng-component"]],
              decls: 17,
              vars: 3,
              consts: [
                [3, "hidden"],
                [
                  1,
                  "container",
                  "position-absolute",
                  "top-50",
                  "start-50",
                  "translate-middle",
                ],
                [1, "row", "justify-content-md-center"],
                [1, "col-md-8", "col-lg-6"],
                [1, "container"],
                [1, "row"],
                [1, "col", "mb-3"],
                [3, "submitEvent"],
                [1, "text-center", "mt-3"],
                ["routerLink", "/", 1, "link"],
                ["routerLink", "/", 1, "link"],
              ],
              template: function (e, t) {
                1 & e &&
                  (h.Sb(0, "app-progress-spinner", 0),
                  h.ic(1, "async"),
                  h.Xb(2, "div", 1),
                  h.Xb(3, "div", 2),
                  h.Xb(4, "div", 3),
                  h.Xb(5, "div", 4),
                  h.Xb(6, "div", 5),
                  h.Xb(7, "div", 6),
                  h.Xb(8, "h3"),
                  h.Nc(9, "Login"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(10, "app-login-form", 7),
                  h.fc("submitEvent", function (e) {
                    return t.login(e);
                  }),
                  h.Wb(),
                  h.Xb(11, "div", 8),
                  h.Xb(12, "a", 9),
                  h.Nc(13, "Forgot your password?"),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(14, "div", 8),
                  h.Xb(15, "a", 10),
                  h.Nc(16, "Registration"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb()),
                  2 & e && h.pc("hidden", !h.jc(1, 1, t.loading$));
              },
              directives: [p.a, w, o.j],
              pipes: [m.b],
              encapsulation: 2,
            })),
            Object(a.b)(
              [Object(s.e)(r.a.loading)],
              e.prototype,
              "loading$",
              void 0
            ),
            e
          );
        })();
      var _ = n("7s7n"),
        C = n("6T7H"),
        E = n("xtqe"),
        O = n("Hifb"),
        x = n("5C7c");
      let T = (() => {
        class e {
          constructor() {
            this.select = new h.o();
          }
          get userRole() {
            return O.a;
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = h.Lb({
            type: e,
            selectors: [["app-registration-select-type"]],
            inputs: { translates: "translates" },
            outputs: { select: "select" },
            decls: 28,
            vars: 24,
            consts: [
              [1, "col-12", "col-lg-5", "offset-lg-1", "mb-5", "mb-lg-0"],
              [1, "card"],
              [1, "img-wrapper"],
              [
                "src",
                "./assets/img/trust-tru-katsande-DPWCpOzx8SA-unsplash 1.jpg",
                1,
                "bg-image",
                "card-img-top",
              ],
              ["src", "../assets/img/oie_sPGD2u5hZeSM.png", 1, "icon"],
              [1, "card-body", "text-center"],
              [1, "title"],
              [1, "text"],
              [
                "pButton",
                "",
                "type",
                "button",
                1,
                "my-3",
                "px-5",
                3,
                "label",
                "click",
              ],
              [1, "col-12", "col-lg-5"],
              [
                "src",
                "./assets/img/krakenimages-376KN_ISplE-unsplash 1.jpg",
                1,
                "bg-image",
                "card-img-top",
              ],
              ["src", "../assets/img/oie_LbeDw27VNT78.png", 1, "icon"],
            ],
            template: function (e, t) {
              1 & e &&
                (h.Xb(0, "div", 0),
                h.Xb(1, "div", 1),
                h.Xb(2, "div", 2),
                h.Sb(3, "img", 3),
                h.Sb(4, "img", 4),
                h.Wb(),
                h.Xb(5, "div", 5),
                h.Xb(6, "p", 6),
                h.Nc(7),
                h.ic(8, "i18n"),
                h.Wb(),
                h.Xb(9, "p", 7),
                h.Nc(10),
                h.ic(11, "i18n"),
                h.Wb(),
                h.Xb(12, "button", 8),
                h.fc("click", function () {
                  return t.select.emit(t.userRole.user);
                }),
                h.ic(13, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(14, "div", 9),
                h.Xb(15, "div", 1),
                h.Xb(16, "div", 2),
                h.Sb(17, "img", 10),
                h.Sb(18, "img", 11),
                h.Wb(),
                h.Xb(19, "div", 5),
                h.Xb(20, "p", 6),
                h.Nc(21),
                h.ic(22, "i18n"),
                h.Wb(),
                h.Xb(23, "p", 7),
                h.Nc(24),
                h.ic(25, "i18n"),
                h.Wb(),
                h.Xb(26, "button", 8),
                h.fc("click", function () {
                  return t.select.emit(t.userRole.agent);
                }),
                h.ic(27, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb()),
                2 & e &&
                  (h.Eb(7),
                  h.Oc(h.kc(8, 6, t.translates, "PECName")),
                  h.Eb(3),
                  h.Oc(h.kc(11, 9, t.translates, "PECDescription")),
                  h.Eb(2),
                  h.pc("label", h.kc(13, 12, t.translates, "RegisterAsPEC")),
                  h.Eb(9),
                  h.Oc(h.kc(22, 15, t.translates, "CPName")),
                  h.Eb(3),
                  h.Oc(h.kc(25, 18, t.translates, "CPDescription")),
                  h.Eb(2),
                  h.pc("label", h.kc(27, 21, t.translates, "RegisterAsCP")));
            },
            directives: [b.a],
            pipes: [x.a],
            styles: [
              '.img-wrapper[_ngcontent-%COMP%]{position:relative}.img-wrapper[_ngcontent-%COMP%]:after{bottom:0;left:0;width:100%;height:50px}.img-wrapper[_ngcontent-%COMP%]:after, .img-wrapper[_ngcontent-%COMP%]:before{content:"";position:absolute;background:#fff}.img-wrapper[_ngcontent-%COMP%]:before{bottom:-20px;left:50%;transform:translate(-50%);border-radius:50%;width:180px;height:180px}.img-wrapper[_ngcontent-%COMP%]   .bg-image[_ngcontent-%COMP%]{width:100%;height:330px;border-radius:0;-o-object-fit:cover;object-fit:cover;-o-object-position:top;object-position:top}.img-wrapper[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{position:absolute;bottom:0;left:50%;transform:translate(-50%);z-index:2}.title[_ngcontent-%COMP%]{font-size:26px;font-weight:600;margin-bottom:30px}.text[_ngcontent-%COMP%]{font-size:18px}',
            ],
          })),
          e
        );
      })();
      var k = n("V9rR"),
        M = n("+ZoL"),
        I = n("WH5g"),
        P = n("LBC9"),
        R = n("mQ6H"),
        N = n("DYOT");
      function L(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("UserName", e.username));
        }
      }
      function A(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Email", e.email));
        }
      }
      function D(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Password", e.password));
        }
      }
      function j(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("PasswordRepeat", e.passwordRepeat));
        }
      }
      function F(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Sponsor", e.sponsorName));
        }
      }
      function V(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Password", e.firstName));
        }
      }
      function W(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Birthday", e.birthday));
        }
      }
      function z(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("LastName", e.lastName));
        }
      }
      function X(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Phone", e.phone));
        }
      }
      function B(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Country", e.country));
        }
      }
      function H(e, t) {
        if ((1 & e && (h.Xb(0, "option", 44), h.Nc(1), h.Wb()), 2 & e)) {
          const e = t.$implicit;
          h.pc("value", e), h.Eb(1), h.Oc(e);
        }
      }
      function U(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Postalcode", e.zipCode));
        }
      }
      function G(e, t) {
        if ((1 & e && (h.Xb(0, "span", 43), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("City", e.city));
        }
      }
      function $(e, t) {
        if (
          (1 & e && (h.Xb(0, "p", 45), h.Nc(1), h.ic(2, "i18n"), h.Wb()), 2 & e)
        ) {
          const e = h.hc();
          h.Eb(1), h.Oc(h.kc(2, 1, e.translates, "MustAcceptTerms"));
        }
      }
      let q = (() => {
        class e {
          constructor(e) {
            (this.fb = e),
              (this.model = null),
              (this.maxDateValue = R.a.getMaxDate()),
              (this.yearRange = R.a.getYearRange()),
              (this.submitEvent = new h.o()),
              (this.prevStepEvent = new h.o());
          }
          get isAgreed() {
            return this.form.get("isAgreed");
          }
          get username() {
            return this.form.get("username");
          }
          get email() {
            return this.form.get("email");
          }
          get password() {
            return this.form.get("password");
          }
          get passwordRepeat() {
            return this.form.get("passwordRepeat");
          }
          get firstName() {
            return this.form.get("firstName");
          }
          get lastName() {
            return this.form.get("lastName");
          }
          get zipCode() {
            return this.form.get("zipCode");
          }
          get city() {
            return this.form.get("city");
          }
          get country() {
            return this.form.get("country");
          }
          get phone() {
            return this.form.get("phone");
          }
          get sponsorName() {
            return this.form.get("sponsorName");
          }
          get birthday() {
            return this.form.get("birthday");
          }
          get countryList() {
            return Object.values(P.a);
          }
          get submitLabel() {
            return this.translates[
              this.userType === O.a.user
                ? "CreatePECAccount"
                : "CreateCPAccount"
            ];
          }
          ngOnInit() {
            this.createForm();
          }
          submit() {
            if ((g.a.markAllAsTouched(this.form), this.form.valid)) {
              let e = {};
              for (const t of Object.keys(this.form.value)) {
                const n = this.form.value[t];
                "" !== n && (e[t] = "birthday" === t ? n.toISOString() : n);
              }
              this.submitEvent.emit(e);
            }
          }
          createForm() {
            (this.form = this.fb.group({
              birthday: [""],
              sponsorId: [this.storageModel.refId],
              isAgreed: [!1, [f.t.requiredTrue]],
              role: [this.userType],
              sponsorName: [{ value: this.storageModel.refName, disabled: !0 }],
              username: ["", [f.t.required, f.t.minLength(6)]],
              firstName: ["", [f.t.minLength(3), M.a.validate]],
              lastName: ["", [f.t.minLength(3), M.a.validate]],
              zipCode: ["", [f.t.pattern(/[0-9]{3}/)]],
              city: ["", [f.t.minLength(3)]],
              country: [""],
              phone: ["", [f.t.minLength(6)]],
              email: ["", [f.t.required, I.a.validate, f.t.minLength(6)]],
              password: new f.e("", [f.t.required, f.t.minLength(6)]),
            })),
              this.form.addControl(
                "passwordRepeat",
                new f.e("", [f.t.required, k.a.validate(this.password)])
              ),
              this.watchForPasswordChange();
          }
          getErrorMessage(e, t) {
            return g.a.getErrorMessage(e, t);
          }
          watchForPasswordChange() {
            this.password.valueChanges.subscribe(() =>
              this.passwordRepeat.updateValueAndValidity()
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(h.Rb(f.d));
          }),
          (e.ɵcmp = h.Lb({
            type: e,
            selectors: [["app-registration-form"]],
            inputs: {
              userType: "userType",
              storageModel: "storageModel",
              translates: "translates",
            },
            outputs: {
              submitEvent: "submitEvent",
              prevStepEvent: "prevStepEvent",
            },
            decls: 126,
            vars: 115,
            consts: [
              [1, "offset-lg-1", "col-lg-10"],
              [1, "card"],
              [
                "autocomplete",
                "off",
                "novalidate",
                "false",
                1,
                "card-wrapper",
                3,
                "formGroup",
                "keyup.enter",
              ],
              [1, "left"],
              [1, "title"],
              [1, "d-flex", "flex-column-reverse"],
              ["class", "error-message", 4, "ngIf"],
              ["name", "username", 1, "form-control", 3, "formControl"],
              [1, "form-label"],
              [1, "color-red-accent"],
              [1, "d-flex", "flex-column-reverse", "mt-4"],
              ["name", "email", 1, "form-control", 3, "formControl"],
              [
                "name",
                "password",
                "type",
                "password",
                1,
                "form-control",
                3,
                "formControl",
              ],
              [
                "name",
                "passwordRepeat",
                "type",
                "password",
                1,
                "form-control",
                3,
                "formControl",
              ],
              ["name", "sponsorName", 1, "form-control", 3, "formControl"],
              [1, "right"],
              [1, "row"],
              [1, "col-lg-6"],
              ["name", "firstName", 1, "form-control", 3, "formControl"],
              [1, "input-group"],
              [
                "dateFormat",
                "dd.mm.yy",
                1,
                "w-100",
                3,
                "formControl",
                "monthNavigator",
                "yearNavigator",
                "readonlyInput",
                "yearRange",
                "defaultDate",
                "showIcon",
              ],
              [1, "d-flex", "flex-column-reverse", "mt-4", "mt-lg-0"],
              ["name", "lastName", 1, "form-control", 3, "formControl"],
              ["name", "phone", 1, "form-control", 3, "formControl"],
              [1, "title", "mt-4", "mt-lg-5"],
              [1, "col-lg-5"],
              ["name", "country", 1, "form-control", 3, "formControl"],
              ["value", "", "disabled", "", "selected", ""],
              [3, "value", 4, "ngFor", "ngForOf"],
              [1, "col-lg-3"],
              ["name", "zipCode", 1, "form-control", 3, "formControl"],
              [1, "col-lg-4"],
              ["name", "city", 1, "form-control", 3, "formControl"],
              [1, "row", "mt-4"],
              [1, "col-12"],
              [1, "form-check", "position-relative"],
              [
                "id",
                "terms",
                "type",
                "checkbox",
                1,
                "form-check-input",
                3,
                "formControl",
              ],
              ["for", "terms", 1, "form-check-label"],
              ["href", "/terms", "target", "blank"],
              ["class", "mb-0 error-message", 4, "ngIf"],
              [1, "col-12", "button-wrapper"],
              [
                "pButton",
                "",
                "type",
                "button",
                1,
                "px-lg-5",
                "ui-button-link",
                3,
                "label",
                "click",
              ],
              [
                "pButton",
                "",
                "type",
                "submit",
                1,
                "px-lg-5",
                3,
                "label",
                "click",
              ],
              [1, "error-message"],
              [3, "value"],
              [1, "mb-0", "error-message"],
            ],
            template: function (e, t) {
              1 & e &&
                (h.Xb(0, "div", 0),
                h.Xb(1, "div", 1),
                h.Xb(2, "form", 2),
                h.fc("keyup.enter", function () {
                  return t.submit();
                }),
                h.Xb(3, "div", 3),
                h.Xb(4, "p", 4),
                h.Nc(5),
                h.ic(6, "i18n"),
                h.Wb(),
                h.Xb(7, "div", 5),
                h.Lc(8, L, 2, 1, "span", 6),
                h.Sb(9, "input", 7),
                h.Xb(10, "label", 8),
                h.Nc(11),
                h.ic(12, "i18n"),
                h.Xb(13, "span", 9),
                h.Nc(14, "*"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(15, "div", 10),
                h.Lc(16, A, 2, 1, "span", 6),
                h.Sb(17, "input", 11),
                h.Xb(18, "label", 8),
                h.Nc(19),
                h.ic(20, "i18n"),
                h.Xb(21, "span", 9),
                h.Nc(22, "*"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(23, "div", 10),
                h.Lc(24, D, 2, 1, "span", 6),
                h.Sb(25, "input", 12),
                h.Xb(26, "label", 8),
                h.Nc(27),
                h.ic(28, "i18n"),
                h.Xb(29, "span", 9),
                h.Nc(30, "*"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(31, "div", 10),
                h.Lc(32, j, 2, 1, "span", 6),
                h.Sb(33, "input", 13),
                h.Xb(34, "label", 8),
                h.Nc(35),
                h.ic(36, "i18n"),
                h.Xb(37, "span", 9),
                h.Nc(38, "*"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(39, "div", 10),
                h.Lc(40, F, 2, 1, "span", 6),
                h.Sb(41, "input", 14),
                h.Xb(42, "label", 8),
                h.Nc(43),
                h.ic(44, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(45, "div", 15),
                h.Xb(46, "p", 4),
                h.Nc(47),
                h.ic(48, "i18n"),
                h.Wb(),
                h.Xb(49, "div", 16),
                h.Xb(50, "div", 17),
                h.Xb(51, "div", 5),
                h.Lc(52, V, 2, 1, "span", 6),
                h.Sb(53, "input", 18),
                h.Xb(54, "label", 8),
                h.Nc(55),
                h.ic(56, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Xb(57, "div", 10),
                h.Lc(58, W, 2, 1, "span", 6),
                h.Xb(59, "div", 19),
                h.Sb(60, "p-calendar", 20),
                h.Wb(),
                h.Xb(61, "label", 8),
                h.Nc(62),
                h.ic(63, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(64, "div", 17),
                h.Xb(65, "div", 21),
                h.Lc(66, z, 2, 1, "span", 6),
                h.Sb(67, "input", 22),
                h.Xb(68, "label", 8),
                h.Nc(69),
                h.ic(70, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Xb(71, "div", 10),
                h.Lc(72, X, 2, 1, "span", 6),
                h.Sb(73, "input", 23),
                h.Xb(74, "label", 8),
                h.Nc(75),
                h.ic(76, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(77, "p", 24),
                h.Nc(78),
                h.ic(79, "i18n"),
                h.Wb(),
                h.Xb(80, "div", 16),
                h.Xb(81, "div", 25),
                h.Xb(82, "div", 5),
                h.Lc(83, B, 2, 1, "span", 6),
                h.Xb(84, "select", 26),
                h.Xb(85, "option", 27),
                h.Nc(86),
                h.ic(87, "i18n"),
                h.Wb(),
                h.Lc(88, H, 2, 2, "option", 28),
                h.Wb(),
                h.Xb(89, "label", 8),
                h.Nc(90),
                h.ic(91, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(92, "div", 29),
                h.Xb(93, "div", 21),
                h.Lc(94, U, 2, 1, "span", 6),
                h.Sb(95, "input", 30),
                h.Xb(96, "label", 8),
                h.Nc(97),
                h.ic(98, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(99, "div", 31),
                h.Xb(100, "div", 21),
                h.Lc(101, G, 2, 1, "span", 6),
                h.Sb(102, "input", 32),
                h.Xb(103, "label", 8),
                h.Nc(104),
                h.ic(105, "i18n"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(106, "div", 33),
                h.Xb(107, "div", 34),
                h.Xb(108, "div", 35),
                h.Sb(109, "input", 36),
                h.Xb(110, "label", 37),
                h.Nc(111),
                h.ic(112, "i18n"),
                h.Xb(113, "a", 38),
                h.Nc(114),
                h.ic(115, "i18n"),
                h.Wb(),
                h.Nc(116),
                h.ic(117, "i18n"),
                h.Xb(118, "span", 9),
                h.Nc(119, "*"),
                h.Wb(),
                h.Wb(),
                h.Lc(120, $, 3, 4, "p", 39),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Xb(121, "div", 33),
                h.Xb(122, "div", 40),
                h.Xb(123, "button", 41),
                h.fc("click", function () {
                  return t.prevStepEvent.emit();
                }),
                h.ic(124, "i18n"),
                h.Wb(),
                h.Xb(125, "button", 42),
                h.fc("click", function () {
                  return t.submit();
                }),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb()),
                2 & e &&
                  (h.Eb(2),
                  h.pc("formGroup", t.form),
                  h.Eb(3),
                  h.Oc(h.kc(6, 55, t.translates, "AccessInformation")),
                  h.Eb(3),
                  h.pc("ngIf", t.username.touched && t.username.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.username),
                  h.Eb(2),
                  h.Oc(h.kc(12, 58, t.translates, "Username")),
                  h.Eb(5),
                  h.pc("ngIf", t.email.touched && t.email.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.email),
                  h.Eb(2),
                  h.Oc(h.kc(20, 61, t.translates, "Email")),
                  h.Eb(5),
                  h.pc("ngIf", t.password.touched && t.password.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.password),
                  h.Eb(2),
                  h.Oc(h.kc(28, 64, t.translates, "Password")),
                  h.Eb(5),
                  h.pc(
                    "ngIf",
                    t.passwordRepeat.touched && t.passwordRepeat.invalid
                  ),
                  h.Eb(1),
                  h.pc("formControl", t.passwordRepeat),
                  h.Eb(2),
                  h.Oc(h.kc(36, 67, t.translates, "RepeatPassword")),
                  h.Eb(5),
                  h.pc("ngIf", t.sponsorName.touched && t.sponsorName.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.sponsorName),
                  h.Eb(2),
                  h.Oc(h.kc(44, 70, t.translates, "Sponsor")),
                  h.Eb(4),
                  h.Oc(h.kc(48, 73, t.translates, "PersonalInformation")),
                  h.Eb(5),
                  h.pc("ngIf", t.firstName.touched && t.firstName.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.firstName),
                  h.Eb(2),
                  h.Oc(h.kc(56, 76, t.translates, "Firstname")),
                  h.Eb(3),
                  h.pc("ngIf", t.birthday.touched && t.birthday.invalid),
                  h.Eb(2),
                  h.pc("formControl", t.birthday)("monthNavigator", !0)(
                    "yearNavigator",
                    !0
                  )("readonlyInput", !0)("yearRange", t.yearRange)(
                    "defaultDate",
                    t.maxDateValue
                  )("showIcon", !0),
                  h.Eb(2),
                  h.Oc(h.kc(63, 79, t.translates, "Birthday")),
                  h.Eb(4),
                  h.pc("ngIf", t.lastName.touched && t.lastName.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.lastName),
                  h.Eb(2),
                  h.Oc(h.kc(70, 82, t.translates, "Lastname")),
                  h.Eb(3),
                  h.pc("ngIf", t.phone.touched && t.phone.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.phone),
                  h.Eb(2),
                  h.Oc(h.kc(76, 85, t.translates, "Mobile")),
                  h.Eb(3),
                  h.Oc(h.kc(79, 88, t.translates, "Location")),
                  h.Eb(5),
                  h.pc("ngIf", t.country.touched && t.country.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.country),
                  h.Eb(2),
                  h.Oc(h.kc(87, 91, t.translates, "SelectYourCountry")),
                  h.Eb(2),
                  h.pc("ngForOf", t.countryList),
                  h.Eb(2),
                  h.Oc(h.kc(91, 94, t.translates, "Country")),
                  h.Eb(4),
                  h.pc("ngIf", t.zipCode.touched && t.zipCode.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.zipCode),
                  h.Eb(2),
                  h.Oc(h.kc(98, 97, t.translates, "Postalcode")),
                  h.Eb(4),
                  h.pc("ngIf", t.city.touched && t.city.invalid),
                  h.Eb(1),
                  h.pc("formControl", t.city),
                  h.Eb(2),
                  h.Oc(h.kc(105, 100, t.translates, "City")),
                  h.Eb(5),
                  h.pc("formControl", t.isAgreed),
                  h.Eb(2),
                  h.Oc(h.kc(112, 103, t.translates, "ReadTerms")),
                  h.Eb(3),
                  h.Pc("\xa0", h.kc(115, 106, t.translates, "Terms"), "\xa0"),
                  h.Eb(2),
                  h.Oc(h.kc(117, 109, t.translates, "AcceptTerms")),
                  h.Eb(4),
                  h.pc("ngIf", t.isAgreed.touched && t.isAgreed.invalid),
                  h.Eb(3),
                  h.pc("label", h.kc(124, 112, t.translates, "PreviousStep")),
                  h.Eb(2),
                  h.pc("label", t.submitLabel));
            },
            directives: [
              f.v,
              f.m,
              f.g,
              m.m,
              f.c,
              f.l,
              f.f,
              N.a,
              f.s,
              f.o,
              f.u,
              m.l,
              f.b,
              b.a,
            ],
            pipes: [x.a],
            styles: [
              ".card-wrapper[_ngcontent-%COMP%]{padding:20px 35px 35px;display:flex}.card-wrapper[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]{padding-right:35px;border-right:1px solid #c6c6c6;width:35%}.card-wrapper[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]{width:75%;padding-left:35px}.card-wrapper[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{font-size:24px;color:#c6c6c6}.card-wrapper[_ngcontent-%COMP%]   .form-check-label[_ngcontent-%COMP%]{font-size:14px}.button-wrapper[_ngcontent-%COMP%]{text-align:right}@media (max-width:991px){.card-wrapper[_ngcontent-%COMP%]{flex-direction:column}.card-wrapper[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%], .card-wrapper[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]{padding:0;border:none;width:100%}.card-wrapper[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]{margin-top:40px}.button-wrapper[_ngcontent-%COMP%]{margin-top:20px;text-align:center}.button-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-bottom:20px}.button-wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:last-child{margin-bottom:0}}",
            ],
          })),
          e
        );
      })();
      var K = n("ITC6");
      const Y = function (e) {
        return { email: e };
      };
      let Z = (() => {
          class e {
            constructor(e) {
              (this.fb = e),
                (this.submitEvent = new h.o()),
                (this.resendEvent = new h.o());
            }
            get num1() {
              return this.form.get("num1");
            }
            get num2() {
              return this.form.get("num2");
            }
            get num3() {
              return this.form.get("num3");
            }
            get num4() {
              return this.form.get("num4");
            }
            get num5() {
              return this.form.get("num5");
            }
            get num6() {
              return this.form.get("num6");
            }
            ngOnInit() {
              this.createForm();
            }
            createForm() {
              this.form = this.fb.group({
                num1: ["", [f.t.required]],
                num2: ["", [f.t.required]],
                num3: ["", [f.t.required]],
                num4: ["", [f.t.required]],
                num5: ["", [f.t.required]],
                num6: ["", [f.t.required]],
              });
            }
            submit() {
              if ((g.a.markAllAsTouched(this.form), this.form.valid)) {
                let e = "";
                for (const t of Object.keys(this.form.value))
                  e += this.form.value[t];
                this.submitEvent.emit(e);
              }
            }
            get submitLabel() {
              return this.translates[
                this.userType === O.a.user ? "RegisterAsPEC" : "RegisterAsCP"
              ];
            }
            onInput(e) {
              const t =
                "Backspace" === e.code
                  ? e.srcElement.previousElementSibling
                  : e.srcElement.nextElementSibling;
              null !== t && t.focus();
            }
            onPaste(e) {
              const t = e.clipboardData.getData("text");
              this.form.setValue({
                num1: t.charAt(0),
                num2: t.charAt(1),
                num3: t.charAt(2),
                num4: t.charAt(3),
                num5: t.charAt(4),
                num6: t.charAt(5),
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(h.Rb(f.d));
            }),
            (e.ɵcmp = h.Lb({
              type: e,
              selectors: [["app-registration-verify-email"]],
              inputs: {
                email: "email",
                translates: "translates",
                userType: "userType",
              },
              outputs: {
                submitEvent: "submitEvent",
                resendEvent: "resendEvent",
              },
              decls: 35,
              vars: 34,
              consts: [
                [1, "col-lg-10", "offset-lg-1"],
                [1, "card"],
                [
                  "autocomplete",
                  "off",
                  "novalidate",
                  "false",
                  1,
                  "container-fluid",
                  "card-body",
                  "px-lg-5",
                  "py-lg-5",
                  3,
                  "formGroup",
                  "keyup.enter",
                ],
                [1, "row"],
                [1, "col-lg-6", "left"],
                ["src", "./assets/img/371.svg", 1, "bg-image", "card-img-top"],
                [1, "col-lg-6", "text-center", "right"],
                [1, "title", "mt-5"],
                [1, "text", "mb-4", 3, "innerHTML"],
                [1, "text"],
                [1, "resend-link", 3, "click"],
                [1, "row", "mt-5", "mb-5", "w-100"],
                [1, "col-12"],
                [1, "code-wrapper"],
                [
                  "maxlength",
                  "1",
                  1,
                  "form-control",
                  "text-center",
                  "fw-bold",
                  3,
                  "formControl",
                  "paste",
                  "keyup",
                ],
                [
                  "maxlength",
                  "1",
                  1,
                  "form-control",
                  "text-center",
                  "fw-bold",
                  3,
                  "formControl",
                  "keyup",
                ],
                [1, "row", "w-100"],
                [1, "col-12", "button-wrapper"],
                [
                  "pButton",
                  "",
                  "type",
                  "button",
                  1,
                  "my-3",
                  "px-lg-5",
                  3,
                  "label",
                  "click",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (h.Xb(0, "div", 0),
                  h.Xb(1, "div", 1),
                  h.Xb(2, "form", 2),
                  h.fc("keyup.enter", function () {
                    return t.submit();
                  }),
                  h.Xb(3, "div", 3),
                  h.Xb(4, "div", 4),
                  h.Sb(5, "img", 5),
                  h.Wb(),
                  h.Xb(6, "div", 6),
                  h.Xb(7, "p", 7),
                  h.Nc(8),
                  h.ic(9, "i18n"),
                  h.Wb(),
                  h.Sb(10, "p", 8),
                  h.ic(11, "safe"),
                  h.ic(12, "i18n"),
                  h.Xb(13, "p", 9),
                  h.Xb(14, "strong"),
                  h.Nc(15),
                  h.ic(16, "i18n"),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(17, "p", 9),
                  h.Nc(18),
                  h.ic(19, "i18n"),
                  h.Xb(20, "a", 10),
                  h.fc("click", function () {
                    return t.resendEvent.emit();
                  }),
                  h.Nc(21),
                  h.ic(22, "i18n"),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(23, "div", 11),
                  h.Xb(24, "div", 12),
                  h.Xb(25, "div", 13),
                  h.Xb(26, "input", 14),
                  h.fc("paste", function (e) {
                    return t.onPaste(e);
                  })("keyup", function (e) {
                    return t.onInput(e);
                  }),
                  h.Wb(),
                  h.Xb(27, "input", 15),
                  h.fc("keyup", function (e) {
                    return t.onInput(e);
                  }),
                  h.Wb(),
                  h.Xb(28, "input", 15),
                  h.fc("keyup", function (e) {
                    return t.onInput(e);
                  }),
                  h.Wb(),
                  h.Xb(29, "input", 15),
                  h.fc("keyup", function (e) {
                    return t.onInput(e);
                  }),
                  h.Wb(),
                  h.Xb(30, "input", 15),
                  h.fc("keyup", function (e) {
                    return t.onInput(e);
                  }),
                  h.Wb(),
                  h.Xb(31, "input", 15),
                  h.fc("keyup", function (e) {
                    return t.onInput(e);
                  }),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(32, "div", 16),
                  h.Xb(33, "div", 17),
                  h.Xb(34, "button", 18),
                  h.fc("click", function () {
                    return t.submit();
                  }),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb()),
                  2 & e &&
                    (h.Eb(2),
                    h.pc("formGroup", t.form),
                    h.Eb(6),
                    h.Oc(h.kc(9, 13, t.translates, "VerifyEmailHeader")),
                    h.Eb(2),
                    h.pc(
                      "innerHTML",
                      h.kc(
                        11,
                        16,
                        h.lc(
                          12,
                          19,
                          t.translates,
                          "VerifyEmailDescription",
                          h.sc(32, Y, t.email)
                        ),
                        "html"
                      ),
                      h.Fc
                    ),
                    h.Eb(5),
                    h.Oc(h.kc(16, 23, t.translates, "DontGetEmailInYourInbox")),
                    h.Eb(3),
                    h.Pc(
                      "",
                      h.kc(19, 26, t.translates, "CheckSpamFolderOr"),
                      "\xa0"
                    ),
                    h.Eb(3),
                    h.Oc(h.kc(22, 29, t.translates, "ResendEmailAgain")),
                    h.Eb(5),
                    h.pc("formControl", t.num1),
                    h.Eb(1),
                    h.pc("formControl", t.num2),
                    h.Eb(1),
                    h.pc("formControl", t.num3),
                    h.Eb(1),
                    h.pc("formControl", t.num4),
                    h.Eb(1),
                    h.pc("formControl", t.num5),
                    h.Eb(1),
                    h.pc("formControl", t.num6),
                    h.Eb(3),
                    h.pc("label", t.submitLabel));
              },
              directives: [f.v, f.m, f.g, f.c, f.i, f.l, f.f, b.a],
              pipes: [x.a, K.a],
              styles: [
                ".title[_ngcontent-%COMP%]{font-size:28px;font-weight:600}.text[_ngcontent-%COMP%]{font-size:18px;margin-bottom:0}.resend-link[_ngcontent-%COMP%]{color:#3d76aa;text-decoration:underline}.left[_ngcontent-%COMP%]{min-height:500px}.left[_ngcontent-%COMP%], .right[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.right[_ngcontent-%COMP%]{flex-direction:column}.code-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.code-wrapper[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{max-width:50px}.button-wrapper[_ngcontent-%COMP%]{text-align:right}@media (max-width:991px){.left[_ngcontent-%COMP%]{min-height:auto}.button-wrapper[_ngcontent-%COMP%]{text-align:center}}",
              ],
            })),
            e
          );
        })(),
        Q = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = h.Lb({
              type: e,
              selectors: [["app-registration-complete"]],
              inputs: { translates: "translates" },
              decls: 22,
              vars: 16,
              consts: [
                [1, "col-lg-10", "offset-lg-1"],
                [1, "card"],
                [1, "container-fluid", "card-body", "py-lg-5", "px-lg-5"],
                [1, "row"],
                [1, "col-lg-6", "left"],
                ["src", "./assets/img/1851.svg", 1, "bg-image", "card-img-top"],
                [1, "col-lg-6", "text-center", "right"],
                [1, "col-12"],
                [1, "title", "mt-5"],
                [1, "text", "mb-4"],
                [1, "text"],
                [1, "row", "w-100", "mt-5"],
                [1, "col-12", "button-wrapper"],
                [
                  "pButton",
                  "",
                  "routerLink",
                  "/",
                  "type",
                  "button",
                  1,
                  "px-lg-5",
                  3,
                  "label",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (h.Xb(0, "div", 0),
                  h.Xb(1, "div", 1),
                  h.Xb(2, "div", 2),
                  h.Xb(3, "div", 3),
                  h.Xb(4, "div", 4),
                  h.Sb(5, "img", 5),
                  h.Wb(),
                  h.Xb(6, "div", 6),
                  h.Xb(7, "div", 3),
                  h.Xb(8, "div", 7),
                  h.Xb(9, "p", 8),
                  h.Nc(10),
                  h.ic(11, "i18n"),
                  h.Wb(),
                  h.Xb(12, "p", 9),
                  h.Nc(13),
                  h.ic(14, "i18n"),
                  h.Wb(),
                  h.Xb(15, "p", 10),
                  h.Nc(16),
                  h.ic(17, "i18n"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(18, "div", 11),
                  h.Xb(19, "div", 12),
                  h.Sb(20, "button", 13),
                  h.ic(21, "i18n"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb()),
                  2 & e &&
                    (h.Eb(10),
                    h.Oc(h.kc(11, 4, t.translates, "WelcomeOnABoard")),
                    h.Eb(3),
                    h.Oc(
                      h.kc(
                        14,
                        7,
                        t.translates,
                        "WelcomeDescriptionFirstParagraph"
                      )
                    ),
                    h.Eb(3),
                    h.Oc(
                      h.kc(
                        17,
                        10,
                        t.translates,
                        "WelcomeDescriptionSecondParagraph"
                      )
                    ),
                    h.Eb(4),
                    h.pc("label", h.kc(21, 13, t.translates, "GoToLogin")));
              },
              directives: [b.a, o.h],
              pipes: [x.a],
              styles: [
                ".title[_ngcontent-%COMP%]{font-size:28px;font-weight:600}.text[_ngcontent-%COMP%]{font-size:18px;margin-bottom:0}.left[_ngcontent-%COMP%]{min-height:500px;justify-content:center}.left[_ngcontent-%COMP%], .right[_ngcontent-%COMP%]{display:flex;align-items:center}.right[_ngcontent-%COMP%]{flex-direction:column;justify-content:space-between}.button-wrapper[_ngcontent-%COMP%]{text-align:right}@media (max-width:991px){.button-wrapper[_ngcontent-%COMP%]{text-align:center}.left[_ngcontent-%COMP%]{min-height:auto}}",
              ],
            })),
            e
          );
        })();
      function J(e, t) {
        if (1 & e) {
          const e = h.Yb();
          h.Xb(0, "app-registration-select-type", 9),
            h.fc("select", function (t) {
              h.Ec(e);
              const n = h.hc();
              return n.nextStep(), n.changeRegistrationType(t);
            }),
            h.ic(1, "async"),
            h.Wb();
        }
        if (2 & e) {
          const e = h.hc();
          h.pc("translates", h.jc(1, 1, e.translates$));
        }
      }
      function ee(e, t) {
        if (1 & e) {
          const e = h.Yb();
          h.Xb(0, "app-registration-form", 10),
            h.fc("submitEvent", function (t) {
              return h.Ec(e), h.hc().registration(t);
            })("prevStepEvent", function () {
              return h.Ec(e), h.hc().prevStep();
            }),
            h.ic(1, "async"),
            h.Wb();
        }
        if (2 & e) {
          const e = h.hc();
          h.pc("userType", e.registrationType)("storageModel", e.storageModel)(
            "translates",
            h.jc(1, 3, e.translates$)
          );
        }
      }
      function te(e, t) {
        if (1 & e) {
          const e = h.Yb();
          h.Xb(0, "app-registration-verify-email", 11),
            h.fc("submitEvent", function (t) {
              return h.Ec(e), h.hc().emailVerify(t);
            })("resendEvent", function () {
              return h.Ec(e), h.hc().emailVerifyRequest();
            }),
            h.ic(1, "async"),
            h.Wb();
        }
        if (2 & e) {
          const e = h.hc();
          h.pc("email", e.user.email)("userType", e.registrationType)(
            "translates",
            h.jc(1, 3, e.translates$)
          );
        }
      }
      function ne(e, t) {
        if (
          (1 & e &&
            (h.Sb(0, "app-registration-complete", 12), h.ic(1, "async")),
          2 & e)
        ) {
          const e = h.hc();
          h.pc("translates", h.jc(1, 1, e.translates$));
        }
      }
      let ie = (() => {
        class e {
          constructor(e, t, n) {
            (this.store = e),
              (this.actions = t),
              (this.snack = n),
              (this.subscription = new l.a());
          }
          ngOnInit() {
            this.user.token &&
              !this.user.isVerified &&
              this.changeRegistrationStep(2),
              this.isAuthorized(),
              this.subscribeOnRegistrationSuccess(),
              this.subscribeOnRegistrationFailed(),
              this.subscribeOnEmailVerifyRequestSuccess(),
              this.subscribeOnEmailVerifyRequestFailed(),
              this.subscribeOnEmailVerifySuccess(),
              this.subscribeOnEmailVerifyFailed();
          }
          ngOnDestroy() {
            this.subscription.unsubscribe();
          }
          isAuthorized() {
            this.store
              .selectOnce((e) => e.auth.isAuthorized)
              .subscribe((e) => {
                e && this.store.dispatch(new c.a(["/office"]));
              });
          }
          subscribeOnRegistrationSuccess() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.RegistrationSuccess))
                .subscribe(() => {
                  this.snack.success("Registration success!"),
                    this.emailVerifyRequest(),
                    this.nextStep();
                })
            );
          }
          subscribeOnRegistrationFailed() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.RegistrationFailed))
                .subscribe(({ error: e }) => this.snack.error(e))
            );
          }
          subscribeOnEmailVerifyRequestSuccess() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.EmailVerifyRequestSuccess))
                .subscribe(() =>
                  this.snack.success(
                    "Verification code has been sent to your email!"
                  )
                )
            );
          }
          subscribeOnEmailVerifyRequestFailed() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.EmailVerifyRequestFailed))
                .subscribe(({ error: e }) => this.snack.error(e))
            );
          }
          subscribeOnEmailVerifySuccess() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.EmailVerifySuccess))
                .subscribe(() => {
                  this.snack.success("Verification success!"), this.nextStep();
                })
            );
          }
          subscribeOnEmailVerifyFailed() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.EmailVerifyFailed))
                .subscribe(({ error: e }) => this.snack.error(e))
            );
          }
          nextStep() {
            this.changeRegistrationStep(this.registrationStep + 1);
          }
          prevStep() {
            this.changeRegistrationStep(this.registrationStep - 1);
          }
          emailVerifyRequest() {
            this.store.dispatch(new u.a.EmailVerifyRequest());
          }
          emailVerify(e) {
            this.store.dispatch(new u.a.EmailVerify(e));
          }
          registration(e) {
            this.store.dispatch(new u.a.Registration(e));
          }
          changeRegistrationType(e) {
            this.store.dispatch(new u.a.ChangeRegistrationType(e));
          }
          changeRegistrationStep(e) {
            this.store.dispatch(new u.a.ChangeRegistrationStep(e));
          }
          get storageModel() {
            return this.store.selectSnapshot(r.a.storageModel);
          }
          get user() {
            return this.store.selectSnapshot(_.a.model);
          }
          get registrationType() {
            return this.store.selectSnapshot(r.a.registrationType);
          }
          get registrationStep() {
            return this.store.selectSnapshot(r.a.registrationStep);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(h.Rb(s.h), h.Rb(s.b), h.Rb(d.a));
          }),
          (e.ɵcmp = h.Lb({
            type: e,
            selectors: [["ng-component"]],
            decls: 15,
            vars: 17,
            consts: [
              [3, "hidden"],
              [1, "container"],
              [1, "row", "mt-4", "mb-4"],
              [1, "col-12"],
              [
                "class",
                "row mt-4 mh-700",
                3,
                "translates",
                "select",
                4,
                "ngIf",
              ],
              [
                "class",
                "row mh-700",
                3,
                "userType",
                "storageModel",
                "translates",
                "submitEvent",
                "prevStepEvent",
                4,
                "ngIf",
              ],
              [
                "class",
                "row mt-4 mh-700",
                3,
                "email",
                "userType",
                "translates",
                "submitEvent",
                "resendEvent",
                4,
                "ngIf",
              ],
              ["class", "row mt-4 mh-700", 3, "translates", 4, "ngIf"],
              [3, "currentStep", "translates"],
              [1, "row", "mt-4", "mh-700", 3, "translates", "select"],
              [
                1,
                "row",
                "mh-700",
                3,
                "userType",
                "storageModel",
                "translates",
                "submitEvent",
                "prevStepEvent",
              ],
              [
                1,
                "row",
                "mt-4",
                "mh-700",
                3,
                "email",
                "userType",
                "translates",
                "submitEvent",
                "resendEvent",
              ],
              [1, "row", "mt-4", "mh-700", 3, "translates"],
            ],
            template: function (e, t) {
              1 & e &&
                (h.Sb(0, "app-progress-spinner", 0),
                h.ic(1, "async"),
                h.Xb(2, "div", 1),
                h.Xb(3, "div", 2),
                h.Xb(4, "div", 3),
                h.Xb(5, "h3"),
                h.Nc(6),
                h.ic(7, "i18n"),
                h.ic(8, "async"),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Lc(9, J, 2, 3, "app-registration-select-type", 4),
                h.Lc(10, ee, 2, 5, "app-registration-form", 5),
                h.Lc(11, te, 2, 5, "app-registration-verify-email", 6),
                h.Lc(12, ne, 2, 3, "app-registration-complete", 7),
                h.Sb(13, "app-steps", 8),
                h.ic(14, "async"),
                h.Wb()),
                2 & e &&
                  (h.pc("hidden", !h.jc(1, 8, t.loading$)),
                  h.Eb(6),
                  h.Oc(h.kc(7, 10, h.jc(8, 13, t.translates$), "Dashboard")),
                  h.Eb(3),
                  h.pc("ngIf", 0 === t.registrationStep),
                  h.Eb(1),
                  h.pc("ngIf", 1 === t.registrationStep && t.storageModel),
                  h.Eb(1),
                  h.pc("ngIf", 2 === t.registrationStep),
                  h.Eb(1),
                  h.pc("ngIf", 3 === t.registrationStep),
                  h.Eb(1),
                  h.pc("currentStep", t.registrationStep)(
                    "translates",
                    h.jc(14, 15, t.translates$)
                  ));
            },
            directives: [p.a, m.m, E.a, T, q, Z, Q],
            pipes: [m.b, x.a],
            encapsulation: 2,
          })),
          Object(a.b)(
            [Object(s.e)(C.a.activeTranslates)],
            e.prototype,
            "translates$",
            void 0
          ),
          Object(a.b)(
            [Object(s.e)(r.a.loading)],
            e.prototype,
            "loading$",
            void 0
          ),
          e
        );
      })();
      function se(e, t) {
        if ((1 & e && (h.Xb(0, "span", 6), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Email", e.email));
        }
      }
      let re = (() => {
        class e {
          constructor(e) {
            (this.fb = e), (this.submitEvent = new h.o());
          }
          get email() {
            return this.form.get("email");
          }
          ngOnInit() {
            this.createForm();
          }
          submit() {
            g.a.markAllAsTouched(this.form),
              this.form.valid && this.submitEvent.emit(this.form.value);
          }
          createForm() {
            this.form = this.fb.group({
              email: ["", [f.t.required, I.a.validate, f.t.minLength(6)]],
            });
          }
          getErrorMessage(e, t) {
            return g.a.getErrorMessage(e, t);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(h.Rb(f.d));
          }),
          (e.ɵcmp = h.Lb({
            type: e,
            selectors: [["app-password-restore-form"]],
            inputs: { model: "model" },
            outputs: { submitEvent: "submitEvent" },
            decls: 7,
            vars: 3,
            consts: [
              [1, "container"],
              [
                "autocomplete",
                "off",
                "novalidate",
                "false",
                1,
                "row",
                "g-3",
                3,
                "formGroup",
                "keyup.enter",
              ],
              [1, "col-12"],
              [
                "placeholder",
                "Your E-Mail",
                "name",
                "email",
                1,
                "form-control",
                3,
                "formControl",
              ],
              ["class", "error-message", 4, "ngIf"],
              [
                "pButton",
                "",
                "type",
                "button",
                "label",
                "Restore",
                1,
                "w-100",
                3,
                "click",
              ],
              [1, "error-message"],
            ],
            template: function (e, t) {
              1 & e &&
                (h.Xb(0, "div", 0),
                h.Xb(1, "form", 1),
                h.fc("keyup.enter", function () {
                  return t.submit();
                }),
                h.Xb(2, "div", 2),
                h.Sb(3, "input", 3),
                h.Lc(4, se, 2, 1, "span", 4),
                h.Wb(),
                h.Xb(5, "div", 2),
                h.Xb(6, "button", 5),
                h.fc("click", function () {
                  return t.submit();
                }),
                h.Wb(),
                h.Wb(),
                h.Wb(),
                h.Wb()),
                2 & e &&
                  (h.Eb(1),
                  h.pc("formGroup", t.form),
                  h.Eb(2),
                  h.pc("formControl", t.email),
                  h.Eb(1),
                  h.pc("ngIf", t.email.touched && t.email.invalid));
            },
            directives: [f.v, f.m, f.g, f.c, f.l, f.f, m.m, b.a],
            styles: [
              "[_nghost-%COMP%] {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n      }",
            ],
          })),
          e
        );
      })();
      function oe(e, t) {
        if (1 & e) {
          const e = h.Yb();
          h.Vb(0),
            h.Xb(1, "app-password-restore-form", 12),
            h.fc("submitEvent", function (t) {
              h.Ec(e);
              const n = h.hc();
              return n.restore(t), (n.model = t);
            }),
            h.Wb(),
            h.Ub();
        }
        if (2 & e) {
          const e = h.hc();
          h.Eb(1), h.pc("model", e.model);
        }
      }
      function ae(e, t) {
        if (
          (1 & e &&
            (h.Xb(0, "p"),
            h.Nc(1, "Check your email"),
            h.Xb(2, "a", 13),
            h.Nc(3),
            h.Wb(),
            h.Nc(4, "for further password recovery instructions!"),
            h.Wb()),
          2 & e)
        ) {
          const e = h.hc();
          h.Eb(2),
            h.qc("href", "mailto:", e.model.email, "", h.Gc),
            h.Eb(1),
            h.Pc("\xa0", e.model.email, "\xa0");
        }
      }
      let le = (() => {
        class e {
          constructor(e, t, n) {
            (this.store = e),
              (this.actions = t),
              (this.snack = n),
              (this.subscription = new l.a());
          }
          ngOnInit() {
            this.isAuthorized(),
              this.subscribeOnPasswordRestoreSuccess(),
              this.subscribeOnPasswordRestoreFailed();
          }
          ngOnDestroy() {
            this.subscription.unsubscribe();
          }
          isAuthorized() {
            this.store
              .selectOnce((e) => e.auth.isAuthorized)
              .subscribe((e) => {
                e && this.store.dispatch(new c.a(["/office"]));
              });
          }
          subscribeOnPasswordRestoreSuccess() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.PasswordRestoreSuccess))
                .subscribe(() =>
                  this.snack.success(
                    "Password restore success, check your mail!"
                  )
                )
            );
          }
          subscribeOnPasswordRestoreFailed() {
            this.subscription.add(
              this.actions
                .pipe(Object(s.k)(u.a.PasswordRestoreFailed))
                .subscribe(({ error: e }) => this.snack.error(e))
            );
          }
          restore(e) {
            this.store.dispatch(new u.a.PasswordRestore(e));
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(h.Rb(s.h), h.Rb(s.b), h.Rb(d.a));
          }),
          (e.ɵcmp = h.Lb({
            type: e,
            selectors: [["ng-component"]],
            decls: 20,
            vars: 7,
            consts: [
              [3, "hidden"],
              [
                1,
                "container",
                "position-absolute",
                "top-50",
                "start-50",
                "translate-middle",
              ],
              [1, "row", "justify-content-md-center"],
              [1, "col-md-8", "col-lg-6"],
              [1, "container"],
              [1, "row"],
              [1, "col", "mb-3"],
              [4, "ngIf", "ngIfElse"],
              [1, "col-12"],
              ["check_email", ""],
              [1, "text-center", "mt-3"],
              ["routerLink", "/", 1, "link"],
              [3, "model", "submitEvent"],
              [3, "href"],
            ],
            template: function (e, t) {
              if (
                (1 & e &&
                  (h.Sb(0, "app-progress-spinner", 0),
                  h.ic(1, "async"),
                  h.Xb(2, "div", 1),
                  h.Xb(3, "div", 2),
                  h.Xb(4, "div", 3),
                  h.Xb(5, "div", 4),
                  h.Xb(6, "div", 5),
                  h.Xb(7, "div", 6),
                  h.Xb(8, "h3"),
                  h.Nc(9, "Password restore"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Lc(10, oe, 2, 1, "ng-container", 7),
                  h.ic(11, "async"),
                  h.Xb(12, "div", 4),
                  h.Xb(13, "div", 5),
                  h.Xb(14, "div", 8),
                  h.Lc(15, ae, 5, 2, "ng-template", null, 9, h.Mc),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(17, "div", 10),
                  h.Xb(18, "a", 11),
                  h.Nc(19, "Back to Login"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb()),
                2 & e)
              ) {
                const e = h.Bc(16);
                h.pc("hidden", !h.jc(1, 3, t.loading$)),
                  h.Eb(10),
                  h.pc("ngIf", !h.jc(11, 5, t.passwordRestorePending$))(
                    "ngIfElse",
                    e
                  );
              }
            },
            directives: [p.a, m.m, o.j, re],
            pipes: [m.b],
            encapsulation: 2,
          })),
          Object(a.b)(
            [Object(s.e)(r.a.loading)],
            e.prototype,
            "loading$",
            void 0
          ),
          Object(a.b)(
            [Object(s.e)(r.a.passwordRestorePending)],
            e.prototype,
            "passwordRestorePending$",
            void 0
          ),
          e
        );
      })();
      var ce = n("Wamw");
      function ue(e, t) {
        if ((1 & e && (h.Xb(0, "span", 7), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("Pasword", e.password));
        }
      }
      function he(e, t) {
        if ((1 & e && (h.Xb(0, "span", 7), h.Nc(1), h.Wb()), 2 & e)) {
          const e = h.hc();
          h.Eb(1), h.Oc(e.getErrorMessage("PasswordRepeat", e.passwordRepeat));
        }
      }
      let de = (() => {
          class e {
            constructor(e) {
              (this.fb = e),
                (this.model = null),
                (this.submitEvent = new h.o());
            }
            get password() {
              return this.form.get("password");
            }
            get passwordRepeat() {
              return this.form.get("passwordRepeat");
            }
            ngOnInit() {
              this.createForm();
            }
            submit() {
              g.a.markAllAsTouched(this.form),
                this.form.valid && this.submitEvent.emit(this.form.value);
            }
            createForm() {
              (this.form = this.fb.group({
                token: [ce.a.find("token")],
                password: ["", [f.t.required, f.t.minLength(6)]],
              })),
                this.form.addControl(
                  "passwordRepeat",
                  new f.e("", [f.t.required, k.a.validate(this.password)])
                ),
                this.watchForPasswordChange();
            }
            getErrorMessage(e, t) {
              return g.a.getErrorMessage(e, t);
            }
            watchForPasswordChange() {
              this.password.valueChanges.subscribe(() =>
                this.passwordRepeat.updateValueAndValidity()
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(h.Rb(f.d));
            }),
            (e.ɵcmp = h.Lb({
              type: e,
              selectors: [["app-password-change-form"]],
              outputs: { submitEvent: "submitEvent" },
              decls: 10,
              vars: 5,
              consts: [
                [1, "container"],
                [
                  "autocomplete",
                  "off",
                  "novalidate",
                  "false",
                  1,
                  "row",
                  "g-3",
                  3,
                  "formGroup",
                  "keyup.enter",
                ],
                [1, "col-12"],
                [
                  "placeholder",
                  "Password",
                  "name",
                  "password",
                  "type",
                  "password",
                  1,
                  "form-control",
                  3,
                  "formControl",
                ],
                ["class", "error-message", 4, "ngIf"],
                [
                  "placeholder",
                  "Repeat password",
                  "name",
                  "passwordRepeat",
                  "type",
                  "password",
                  1,
                  "form-control",
                  3,
                  "formControl",
                ],
                [
                  "pButton",
                  "",
                  "type",
                  "button",
                  "label",
                  "Restore",
                  1,
                  "w-100",
                  3,
                  "click",
                ],
                [1, "error-message"],
              ],
              template: function (e, t) {
                1 & e &&
                  (h.Xb(0, "div", 0),
                  h.Xb(1, "form", 1),
                  h.fc("keyup.enter", function () {
                    return t.submit();
                  }),
                  h.Xb(2, "div", 2),
                  h.Sb(3, "input", 3),
                  h.Lc(4, ue, 2, 1, "span", 4),
                  h.Wb(),
                  h.Xb(5, "div", 2),
                  h.Sb(6, "input", 5),
                  h.Lc(7, he, 2, 1, "span", 4),
                  h.Wb(),
                  h.Xb(8, "div", 2),
                  h.Xb(9, "button", 6),
                  h.fc("click", function () {
                    return t.submit();
                  }),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb()),
                  2 & e &&
                    (h.Eb(1),
                    h.pc("formGroup", t.form),
                    h.Eb(2),
                    h.pc("formControl", t.password),
                    h.Eb(1),
                    h.pc("ngIf", t.password.touched && t.password.invalid),
                    h.Eb(2),
                    h.pc("formControl", t.passwordRepeat),
                    h.Eb(1),
                    h.pc(
                      "ngIf",
                      t.passwordRepeat.touched && t.passwordRepeat.invalid
                    ));
              },
              directives: [f.v, f.m, f.g, f.c, f.l, f.f, m.m, b.a],
              styles: [
                "[_nghost-%COMP%] {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n      }",
              ],
            })),
            e
          );
        })(),
        pe = (() => {
          class e {
            constructor(e, t, n) {
              (this.store = e),
                (this.actions = t),
                (this.snack = n),
                (this.subscription = new l.a());
            }
            ngOnInit() {
              this.isAuthorized(),
                this.subscribeOnPasswordChangeSuccess(),
                this.subscribeOnPasswordChangeFailed();
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            isAuthorized() {
              this.store
                .selectOnce((e) => e.auth.isAuthorized)
                .subscribe((e) => {
                  e && this.store.dispatch(new c.a(["/office"]));
                });
            }
            subscribeOnPasswordChangeSuccess() {
              this.subscription.add(
                this.actions
                  .pipe(Object(s.k)(u.a.PasswordChangeSuccess))
                  .subscribe(() => {
                    this.snack.success("Password change success!"),
                      this.store.dispatch(new c.a(["/"]));
                  })
              );
            }
            subscribeOnPasswordChangeFailed() {
              this.subscription.add(
                this.actions
                  .pipe(Object(s.k)(u.a.PasswordChangeFailed))
                  .subscribe(({ error: e }) => this.snack.error(e))
              );
            }
            change(e) {
              this.store.dispatch(new u.a.PasswordChange(e));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(h.Rb(s.h), h.Rb(s.b), h.Rb(d.a));
            }),
            (e.ɵcmp = h.Lb({
              type: e,
              selectors: [["ng-component"]],
              decls: 14,
              vars: 3,
              consts: [
                [3, "hidden"],
                [
                  1,
                  "container",
                  "position-absolute",
                  "top-50",
                  "start-50",
                  "translate-middle",
                ],
                [1, "row", "justify-content-md-center"],
                [1, "col-md-8", "col-lg-6"],
                [1, "container"],
                [1, "row"],
                [1, "col", "mb-3"],
                [3, "submitEvent"],
                [1, "text-center", "mt-3"],
                ["routerLink", "/", 1, "link"],
              ],
              template: function (e, t) {
                1 & e &&
                  (h.Sb(0, "app-progress-spinner", 0),
                  h.ic(1, "async"),
                  h.Xb(2, "div", 1),
                  h.Xb(3, "div", 2),
                  h.Xb(4, "div", 3),
                  h.Xb(5, "div", 4),
                  h.Xb(6, "div", 5),
                  h.Xb(7, "div", 6),
                  h.Xb(8, "h3"),
                  h.Nc(9, "Password change"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Xb(10, "app-password-change-form", 7),
                  h.fc("submitEvent", function (e) {
                    return t.change(e);
                  }),
                  h.Wb(),
                  h.Xb(11, "div", 8),
                  h.Xb(12, "a", 9),
                  h.Nc(13, "Back to Login"),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb(),
                  h.Wb()),
                  2 & e && h.pc("hidden", !h.jc(1, 1, t.loading$));
              },
              directives: [p.a, de, o.j],
              pipes: [m.b],
              encapsulation: 2,
            })),
            Object(a.b)(
              [Object(s.e)(r.a.loading)],
              e.prototype,
              "loading$",
              void 0
            ),
            e
          );
        })();
      var fe = n("oHij"),
        ge = n("aZ8m");
      const me = [
        {
          path: "",
          component: (() => {
            class e {
              constructor(e) {
                this.store = e;
              }
              changeLocale(e) {
                this.store.dispatch(new fe.a.ChangeLocale(e));
              }
              get user() {
                return this.store.selectSnapshot(_.a.model);
              }
              get isAuthorized() {
                return this.store.selectSnapshot(r.a.isAuthorized);
              }
              get languages() {
                return this.store.selectSnapshot(C.a.languages);
              }
              get selectedLanguage() {
                return this.store.selectSnapshot(C.a.selectedLanguage);
              }
            }
            return (
              (e.ɵfac = function (t) {
                return new (t || e)(h.Rb(s.h));
              }),
              (e.ɵcmp = h.Lb({
                type: e,
                selectors: [["app-auth-layout"]],
                decls: 7,
                vars: 4,
                consts: [
                  [
                    3,
                    "user",
                    "isAuthorized",
                    "languages",
                    "selectedLanguage",
                    "selectedLanguageEvent",
                  ],
                  [1, "content"],
                  [1, "container-fluid"],
                  [1, "row"],
                  [1, "col-12", "p-0"],
                ],
                template: function (e, t) {
                  1 & e &&
                    (h.Xb(0, "main"),
                    h.Xb(1, "app-header", 0),
                    h.fc("selectedLanguageEvent", function (e) {
                      return t.changeLocale(e);
                    }),
                    h.Wb(),
                    h.Xb(2, "div", 1),
                    h.Xb(3, "div", 2),
                    h.Xb(4, "div", 3),
                    h.Xb(5, "div", 4),
                    h.Sb(6, "router-outlet"),
                    h.Wb(),
                    h.Wb(),
                    h.Wb(),
                    h.Wb(),
                    h.Wb()),
                    2 & e &&
                      (h.Eb(1),
                      h.pc("user", t.user)("isAuthorized", t.isAuthorized)(
                        "languages",
                        t.languages
                      )("selectedLanguage", t.selectedLanguage));
                },
                directives: [ge.a, o.l],
                encapsulation: 2,
              })),
              e
            );
          })(),
          children: [
            { path: "", pathMatch: "full", redirectTo: "registration" },
            { path: "login", component: S },
            { path: "registration", component: ie },
            { path: "password-restore", component: le },
            { path: "password-change", component: pe },
          ],
        },
      ];
      let be = (() => {
        class e {}
        return (
          (e.ɵmod = h.Pb({ type: e })),
          (e.ɵinj = h.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [[o.k.forChild(me)], o.k],
          })),
          e
        );
      })();
      var ve = n("OA76"),
        ye = n("nAdJ"),
        we = n("HSBQ"),
        Se = n("r/UM"),
        _e = n("lY0W");
      n.d(t, "AuthModule", function () {
        return Ce;
      });
      let Ce = (() => {
        class e {}
        return (
          (e.ɵmod = h.Pb({ type: e })),
          (e.ɵinj = h.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [ve.a, ye.a, we.a, Se.a],
            imports: [[_e.a, i.a, be, s.d.forFeature([r.a])]],
          })),
          e
        );
      })();
    },
    ttqe: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return i;
      });
      class i {
        constructor() {
          (this.isSupported = !1),
            this.createStorage(),
            (this.isSupported = this.canBeUsed());
        }
        find(e) {
          let t = null;
          return this.isSupported && (t = this.storage.getItem(e)), t;
        }
        create(e, t) {
          let n = !1;
          if (this.isSupported)
            try {
              this.storage.setItem(e, t), (n = !0);
            } catch (i) {}
          return n;
        }
        remove(e) {
          let t = !1;
          return (
            this.isSupported &&
              this.storage.getItem(e) &&
              (this.storage.removeItem(e), (t = !0)),
            t
          );
        }
        canBeUsed() {
          let e = !0;
          try {
            const e = "test";
            this.storage.setItem(e, e), this.storage.removeItem(e);
          } catch (t) {
            e = !1;
          }
          return e;
        }
      }
    },
    tyNb: function (e, t, n) {
      "use strict";
      var i = n("ofXK"),
        s = n("fXoL"),
        r = n("LRne"),
        o = n("Cfvw"),
        a = n("2Vo4"),
        l = n("HDdC"),
        c = n("sVev"),
        u = n("z+Ro"),
        h = n("DH7j"),
        d = n("l7GE"),
        p = n("ZUHj"),
        f = n("yCtX");
      const g = {};
      class m {
        constructor(e) {
          this.resultSelector = e;
        }
        call(e, t) {
          return t.subscribe(new b(e, this.resultSelector));
        }
      }
      class b extends d.a {
        constructor(e, t) {
          super(e),
            (this.resultSelector = t),
            (this.active = 0),
            (this.values = []),
            (this.observables = []);
        }
        _next(e) {
          this.values.push(g), this.observables.push(e);
        }
        _complete() {
          const e = this.observables,
            t = e.length;
          if (0 === t) this.destination.complete();
          else {
            (this.active = t), (this.toRespond = t);
            for (let n = 0; n < t; n++) {
              const t = e[n];
              this.add(Object(p.a)(this, t, t, n));
            }
          }
        }
        notifyComplete(e) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(e, t, n, i, s) {
          const r = this.values,
            o = this.toRespond
              ? r[n] === g
                ? --this.toRespond
                : this.toRespond
              : 0;
          (r[n] = t),
            0 === o &&
              (this.resultSelector
                ? this._tryResultSelector(r)
                : this.destination.next(r.slice()));
        }
        _tryResultSelector(e) {
          let t;
          try {
            t = this.resultSelector.apply(this, e);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(t);
        }
      }
      var v = n("EY2u");
      function y(e) {
        return new l.a((t) => {
          let n;
          try {
            n = e();
          } catch (i) {
            return void t.error(i);
          }
          return (n ? Object(o.a)(n) : Object(v.b)()).subscribe(t);
        });
      }
      var w = n("XNiG"),
        S = n("lJxs"),
        _ = n("0EUg"),
        C = n("pLZG"),
        E = n("7o/Q"),
        O = n("4I5i");
      function x(e) {
        return function (t) {
          return 0 === e ? Object(v.b)() : t.lift(new T(e));
        };
      }
      class T {
        constructor(e) {
          if (((this.total = e), this.total < 0)) throw new O.a();
        }
        call(e, t) {
          return t.subscribe(new k(e, this.total));
        }
      }
      class k extends E.a {
        constructor(e, t) {
          super(e),
            (this.total = t),
            (this.ring = new Array()),
            (this.count = 0);
        }
        _next(e) {
          const t = this.ring,
            n = this.total,
            i = this.count++;
          t.length < n ? t.push(e) : (t[i % n] = e);
        }
        _complete() {
          const e = this.destination;
          let t = this.count;
          if (t > 0) {
            const n = this.count >= this.total ? this.total : this.count,
              i = this.ring;
            for (let s = 0; s < n; s++) {
              const s = t++ % n;
              e.next(i[s]);
            }
          }
          e.complete();
        }
      }
      var M = n("XDbj"),
        I = n("xbPD"),
        P = n("SpAZ");
      function R(e, t) {
        const n = arguments.length >= 2;
        return (i) =>
          i.pipe(
            e ? Object(C.a)((t, n) => e(t, n, i)) : P.a,
            x(1),
            n ? Object(I.a)(t) : Object(M.a)(() => new c.a())
          );
      }
      var N = n("JIr8"),
        L = n("SxV6"),
        A = n("5+tZ");
      class D {
        constructor(e, t, n) {
          (this.predicate = e), (this.thisArg = t), (this.source = n);
        }
        call(e, t) {
          return t.subscribe(
            new j(e, this.predicate, this.thisArg, this.source)
          );
        }
      }
      class j extends E.a {
        constructor(e, t, n, i) {
          super(e),
            (this.predicate = t),
            (this.thisArg = n),
            (this.source = i),
            (this.index = 0),
            (this.thisArg = n || this);
        }
        notifyComplete(e) {
          this.destination.next(e), this.destination.complete();
        }
        _next(e) {
          let t = !1;
          try {
            t = this.predicate.call(this.thisArg, e, this.index++, this.source);
          } catch (n) {
            return void this.destination.error(n);
          }
          t || this.notifyComplete(!1);
        }
        _complete() {
          this.notifyComplete(!0);
        }
      }
      var F = n("eIep"),
        V = n("IzEk"),
        W = n("JX91");
      function z(e, t) {
        let n = !1;
        return (
          arguments.length >= 2 && (n = !0),
          function (i) {
            return i.lift(new X(e, t, n));
          }
        );
      }
      class X {
        constructor(e, t, n = !1) {
          (this.accumulator = e), (this.seed = t), (this.hasSeed = n);
        }
        call(e, t) {
          return t.subscribe(
            new B(e, this.accumulator, this.seed, this.hasSeed)
          );
        }
      }
      class B extends E.a {
        constructor(e, t, n, i) {
          super(e),
            (this.accumulator = t),
            (this._seed = n),
            (this.hasSeed = i),
            (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(e) {
          (this.hasSeed = !0), (this._seed = e);
        }
        _next(e) {
          if (this.hasSeed) return this._tryNext(e);
          (this.seed = e), this.destination.next(e);
        }
        _tryNext(e) {
          const t = this.index++;
          let n;
          try {
            n = this.accumulator(this.seed, e, t);
          } catch (i) {
            this.destination.error(i);
          }
          (this.seed = n), this.destination.next(n);
        }
      }
      var H = n("bOdf"),
        U = n("mCNh"),
        G = n("vkgz"),
        $ = n("quSY");
      class q {
        constructor(e) {
          this.callback = e;
        }
        call(e, t) {
          return t.subscribe(new K(e, this.callback));
        }
      }
      class K extends E.a {
        constructor(e, t) {
          super(e), this.add(new $.a(t));
        }
      }
      var Y = n("bHdf");
      n.d(t, "a", function () {
        return st;
      }),
        n.d(t, "b", function () {
          return ee;
        }),
        n.d(t, "c", function () {
          return J;
        }),
        n.d(t, "d", function () {
          return te;
        }),
        n.d(t, "e", function () {
          return Q;
        }),
        n.d(t, "f", function () {
          return oe;
        }),
        n.d(t, "g", function () {
          return pn;
        }),
        n.d(t, "h", function () {
          return fn;
        }),
        n.d(t, "i", function () {
          return bn;
        }),
        n.d(t, "j", function () {
          return gn;
        }),
        n.d(t, "k", function () {
          return In;
        }),
        n.d(t, "l", function () {
          return wn;
        }),
        n.d(t, "m", function () {
          return ne;
        }),
        n.d(t, "n", function () {
          return De;
        });
      class Z {
        constructor(e, t) {
          (this.id = e), (this.url = t);
        }
      }
      class Q extends Z {
        constructor(e, t, n = "imperative", i = null) {
          super(e, t), (this.navigationTrigger = n), (this.restoredState = i);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class J extends Z {
        constructor(e, t, n) {
          super(e, t), (this.urlAfterRedirects = n);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class ee extends Z {
        constructor(e, t, n) {
          super(e, t), (this.reason = n);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class te extends Z {
        constructor(e, t, n) {
          super(e, t), (this.error = n);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class ne extends Z {
        constructor(e, t, n, i) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ie extends Z {
        constructor(e, t, n, i) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class se extends Z {
        constructor(e, t, n, i, s) {
          super(e, t),
            (this.urlAfterRedirects = n),
            (this.state = i),
            (this.shouldActivate = s);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class re extends Z {
        constructor(e, t, n, i) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class oe extends Z {
        constructor(e, t, n, i) {
          super(e, t), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class ae {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class le {
        constructor(e) {
          this.route = e;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class ce {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class ue {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class he {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class de {
        constructor(e) {
          this.snapshot = e;
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class pe {
        constructor(e, t, n) {
          (this.routerEvent = e), (this.position = t), (this.anchor = n);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      let fe = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = s.Lb({
            type: e,
            selectors: [["ng-component"]],
            decls: 1,
            vars: 0,
            template: function (e, t) {
              1 & e && s.Sb(0, "router-outlet");
            },
            directives: function () {
              return [wn];
            },
            encapsulation: 2,
          })),
          e
        );
      })();
      class ge {
        constructor(e) {
          this.params = e || {};
        }
        has(e) {
          return this.params.hasOwnProperty(e);
        }
        get(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t[0] : t;
          }
          return null;
        }
        getAll(e) {
          if (this.has(e)) {
            const t = this.params[e];
            return Array.isArray(t) ? t : [t];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function me(e) {
        return new ge(e);
      }
      function be(e) {
        const t = Error("NavigationCancelingError: " + e);
        return (t.ngNavigationCancelingError = !0), t;
      }
      function ve(e, t, n) {
        const i = n.path.split("/");
        if (i.length > e.length) return null;
        if ("full" === n.pathMatch && (t.hasChildren() || i.length < e.length))
          return null;
        const s = {};
        for (let r = 0; r < i.length; r++) {
          const t = i[r],
            n = e[r];
          if (t.startsWith(":")) s[t.substring(1)] = n;
          else if (t !== n.path) return null;
        }
        return { consumed: e.slice(0, i.length), posParams: s };
      }
      class ye {
        constructor(e, t) {
          (this.routes = e), (this.module = t);
        }
      }
      function we(e, t = "") {
        for (let n = 0; n < e.length; n++) {
          const i = e[n];
          Se(i, _e(t, i));
        }
      }
      function Se(e, t) {
        if (!e)
          throw new Error(
            `\n      Invalid configuration of route '${t}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `
          );
        if (Array.isArray(e))
          throw new Error(
            `Invalid configuration of route '${t}': Array cannot be specified`
          );
        if (
          !e.component &&
          !e.children &&
          !e.loadChildren &&
          e.outlet &&
          "primary" !== e.outlet
        )
          throw new Error(
            `Invalid configuration of route '${t}': a componentless route without children or loadChildren cannot have a named outlet set`
          );
        if (e.redirectTo && e.children)
          throw new Error(
            `Invalid configuration of route '${t}': redirectTo and children cannot be used together`
          );
        if (e.redirectTo && e.loadChildren)
          throw new Error(
            `Invalid configuration of route '${t}': redirectTo and loadChildren cannot be used together`
          );
        if (e.children && e.loadChildren)
          throw new Error(
            `Invalid configuration of route '${t}': children and loadChildren cannot be used together`
          );
        if (e.redirectTo && e.component)
          throw new Error(
            `Invalid configuration of route '${t}': redirectTo and component cannot be used together`
          );
        if (e.path && e.matcher)
          throw new Error(
            `Invalid configuration of route '${t}': path and matcher cannot be used together`
          );
        if (
          void 0 === e.redirectTo &&
          !e.component &&
          !e.children &&
          !e.loadChildren
        )
          throw new Error(
            `Invalid configuration of route '${t}'. One of the following must be provided: component, redirectTo, children or loadChildren`
          );
        if (void 0 === e.path && void 0 === e.matcher)
          throw new Error(
            `Invalid configuration of route '${t}': routes must have either a path or a matcher specified`
          );
        if ("string" == typeof e.path && "/" === e.path.charAt(0))
          throw new Error(
            `Invalid configuration of route '${t}': path cannot start with a slash`
          );
        if ("" === e.path && void 0 !== e.redirectTo && void 0 === e.pathMatch)
          throw new Error(
            `Invalid configuration of route '{path: "${t}", redirectTo: "${e.redirectTo}"}': please provide 'pathMatch'. The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`
          );
        if (
          void 0 !== e.pathMatch &&
          "full" !== e.pathMatch &&
          "prefix" !== e.pathMatch
        )
          throw new Error(
            `Invalid configuration of route '${t}': pathMatch can only be set to 'prefix' or 'full'`
          );
        e.children && we(e.children, t);
      }
      function _e(e, t) {
        return t
          ? e || t.path
            ? e && !t.path
              ? e + "/"
              : !e && t.path
              ? t.path
              : `${e}/${t.path}`
            : ""
          : e;
      }
      function Ce(e) {
        const t = e.children && e.children.map(Ce),
          n = t
            ? Object.assign(Object.assign({}, e), { children: t })
            : Object.assign({}, e);
        return (
          !n.component &&
            (t || n.loadChildren) &&
            n.outlet &&
            "primary" !== n.outlet &&
            (n.component = fe),
          n
        );
      }
      function Ee(e, t) {
        const n = Object.keys(e),
          i = Object.keys(t);
        if (!n || !i || n.length != i.length) return !1;
        let s;
        for (let r = 0; r < n.length; r++)
          if (((s = n[r]), !Oe(e[s], t[s]))) return !1;
        return !0;
      }
      function Oe(e, t) {
        return Array.isArray(e) && Array.isArray(t)
          ? e.length == t.length && e.every((e) => t.indexOf(e) > -1)
          : e === t;
      }
      function xe(e) {
        return Array.prototype.concat.apply([], e);
      }
      function Te(e) {
        return e.length > 0 ? e[e.length - 1] : null;
      }
      function ke(e, t) {
        for (const n in e) e.hasOwnProperty(n) && t(e[n], n);
      }
      function Me(e) {
        return Object(s.ub)(e)
          ? e
          : Object(s.vb)(e)
          ? Object(o.a)(Promise.resolve(e))
          : Object(r.a)(e);
      }
      function Ie(e, t, n) {
        return n
          ? (function (e, t) {
              return Ee(e, t);
            })(e.queryParams, t.queryParams) &&
              (function e(t, n) {
                if (!Le(t.segments, n.segments)) return !1;
                if (t.numberOfChildren !== n.numberOfChildren) return !1;
                for (const i in n.children) {
                  if (!t.children[i]) return !1;
                  if (!e(t.children[i], n.children[i])) return !1;
                }
                return !0;
              })(e.root, t.root)
          : (function (e, t) {
              return (
                Object.keys(t).length <= Object.keys(e).length &&
                Object.keys(t).every((n) => Oe(e[n], t[n]))
              );
            })(e.queryParams, t.queryParams) &&
              (function e(t, n) {
                return (function t(n, i, s) {
                  if (n.segments.length > s.length)
                    return (
                      !!Le(n.segments.slice(0, s.length), s) && !i.hasChildren()
                    );
                  if (n.segments.length === s.length) {
                    if (!Le(n.segments, s)) return !1;
                    for (const t in i.children) {
                      if (!n.children[t]) return !1;
                      if (!e(n.children[t], i.children[t])) return !1;
                    }
                    return !0;
                  }
                  {
                    const e = s.slice(0, n.segments.length),
                      r = s.slice(n.segments.length);
                    return (
                      !!Le(n.segments, e) &&
                      !!n.children.primary &&
                      t(n.children.primary, i, r)
                    );
                  }
                })(t, n, n.segments);
              })(e.root, t.root);
      }
      class Pe {
        constructor(e, t, n) {
          (this.root = e), (this.queryParams = t), (this.fragment = n);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = me(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return Fe.serialize(this);
        }
      }
      class Re {
        constructor(e, t) {
          (this.segments = e),
            (this.children = t),
            (this.parent = null),
            ke(t, (e, t) => (e.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return Ve(this);
        }
      }
      class Ne {
        constructor(e, t) {
          (this.path = e), (this.parameters = t);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = me(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return Ue(this);
        }
      }
      function Le(e, t) {
        return e.length === t.length && e.every((e, n) => e.path === t[n].path);
      }
      function Ae(e, t) {
        let n = [];
        return (
          ke(e.children, (e, i) => {
            "primary" === i && (n = n.concat(t(e, i)));
          }),
          ke(e.children, (e, i) => {
            "primary" !== i && (n = n.concat(t(e, i)));
          }),
          n
        );
      }
      class De {}
      class je {
        parse(e) {
          const t = new Ye(e);
          return new Pe(
            t.parseRootSegment(),
            t.parseQueryParams(),
            t.parseFragment()
          );
        }
        serialize(e) {
          return `${
            "/" +
            (function e(t, n) {
              if (!t.hasChildren()) return Ve(t);
              if (n) {
                const n = t.children.primary ? e(t.children.primary, !1) : "",
                  i = [];
                return (
                  ke(t.children, (t, n) => {
                    "primary" !== n && i.push(`${n}:${e(t, !1)}`);
                  }),
                  i.length > 0 ? `${n}(${i.join("//")})` : n
                );
              }
              {
                const n = Ae(t, (n, i) =>
                  "primary" === i
                    ? [e(t.children.primary, !1)]
                    : [`${i}:${e(n, !1)}`]
                );
                return `${Ve(t)}/(${n.join("//")})`;
              }
            })(e.root, !0)
          }${(function (e) {
            const t = Object.keys(e).map((t) => {
              const n = e[t];
              return Array.isArray(n)
                ? n.map((e) => `${ze(t)}=${ze(e)}`).join("&")
                : `${ze(t)}=${ze(n)}`;
            });
            return t.length ? "?" + t.join("&") : "";
          })(e.queryParams)}${
            "string" == typeof e.fragment ? "#" + encodeURI(e.fragment) : ""
          }`;
        }
      }
      const Fe = new je();
      function Ve(e) {
        return e.segments.map((e) => Ue(e)).join("/");
      }
      function We(e) {
        return encodeURIComponent(e)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function ze(e) {
        return We(e).replace(/%3B/gi, ";");
      }
      function Xe(e) {
        return We(e)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Be(e) {
        return decodeURIComponent(e);
      }
      function He(e) {
        return Be(e.replace(/\+/g, "%20"));
      }
      function Ue(e) {
        return `${Xe(e.path)}${
          ((t = e.parameters),
          Object.keys(t)
            .map((e) => `;${Xe(e)}=${Xe(t[e])}`)
            .join(""))
        }`;
        var t;
      }
      const Ge = /^[^\/()?;=#]+/;
      function $e(e) {
        const t = e.match(Ge);
        return t ? t[0] : "";
      }
      const qe = /^[^=?&#]+/,
        Ke = /^[^?&#]+/;
      class Ye {
        constructor(e) {
          (this.url = e), (this.remaining = e);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new Re([], {})
              : new Re([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const e = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(e);
            } while (this.consumeOptional("&"));
          return e;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const e = [];
          for (
            this.peekStartsWith("(") || e.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), e.push(this.parseSegment());
          let t = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (t = this.parseParens(!0)));
          let n = {};
          return (
            this.peekStartsWith("(") && (n = this.parseParens(!1)),
            (e.length > 0 || Object.keys(t).length > 0) &&
              (n.primary = new Re(e, t)),
            n
          );
        }
        parseSegment() {
          const e = $e(this.remaining);
          if ("" === e && this.peekStartsWith(";"))
            throw new Error(
              `Empty path url segment cannot have parameters: '${this.remaining}'.`
            );
          return this.capture(e), new Ne(Be(e), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const e = {};
          for (; this.consumeOptional(";"); ) this.parseParam(e);
          return e;
        }
        parseParam(e) {
          const t = $e(this.remaining);
          if (!t) return;
          this.capture(t);
          let n = "";
          if (this.consumeOptional("=")) {
            const e = $e(this.remaining);
            e && ((n = e), this.capture(n));
          }
          e[Be(t)] = Be(n);
        }
        parseQueryParam(e) {
          const t = (function (e) {
            const t = e.match(qe);
            return t ? t[0] : "";
          })(this.remaining);
          if (!t) return;
          this.capture(t);
          let n = "";
          if (this.consumeOptional("=")) {
            const e = (function (e) {
              const t = e.match(Ke);
              return t ? t[0] : "";
            })(this.remaining);
            e && ((n = e), this.capture(n));
          }
          const i = He(t),
            s = He(n);
          if (e.hasOwnProperty(i)) {
            let t = e[i];
            Array.isArray(t) || ((t = [t]), (e[i] = t)), t.push(s);
          } else e[i] = s;
        }
        parseParens(e) {
          const t = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const n = $e(this.remaining),
              i = this.remaining[n.length];
            if ("/" !== i && ")" !== i && ";" !== i)
              throw new Error(`Cannot parse url '${this.url}'`);
            let s = void 0;
            n.indexOf(":") > -1
              ? ((s = n.substr(0, n.indexOf(":"))),
                this.capture(s),
                this.capture(":"))
              : e && (s = "primary");
            const r = this.parseChildren();
            (t[s] = 1 === Object.keys(r).length ? r.primary : new Re([], r)),
              this.consumeOptional("//");
          }
          return t;
        }
        peekStartsWith(e) {
          return this.remaining.startsWith(e);
        }
        consumeOptional(e) {
          return (
            !!this.peekStartsWith(e) &&
            ((this.remaining = this.remaining.substring(e.length)), !0)
          );
        }
        capture(e) {
          if (!this.consumeOptional(e)) throw new Error(`Expected "${e}".`);
        }
      }
      class Ze {
        constructor(e) {
          this._root = e;
        }
        get root() {
          return this._root.value;
        }
        parent(e) {
          const t = this.pathFromRoot(e);
          return t.length > 1 ? t[t.length - 2] : null;
        }
        children(e) {
          const t = Qe(e, this._root);
          return t ? t.children.map((e) => e.value) : [];
        }
        firstChild(e) {
          const t = Qe(e, this._root);
          return t && t.children.length > 0 ? t.children[0].value : null;
        }
        siblings(e) {
          const t = Je(e, this._root);
          return t.length < 2
            ? []
            : t[t.length - 2].children
                .map((e) => e.value)
                .filter((t) => t !== e);
        }
        pathFromRoot(e) {
          return Je(e, this._root).map((e) => e.value);
        }
      }
      function Qe(e, t) {
        if (e === t.value) return t;
        for (const n of t.children) {
          const t = Qe(e, n);
          if (t) return t;
        }
        return null;
      }
      function Je(e, t) {
        if (e === t.value) return [t];
        for (const n of t.children) {
          const i = Je(e, n);
          if (i.length) return i.unshift(t), i;
        }
        return [];
      }
      class et {
        constructor(e, t) {
          (this.value = e), (this.children = t);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function tt(e) {
        const t = {};
        return e && e.children.forEach((e) => (t[e.value.outlet] = e)), t;
      }
      class nt extends Ze {
        constructor(e, t) {
          super(e), (this.snapshot = t), lt(this, e);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function it(e, t) {
        const n = (function (e, t) {
            const n = new ot(
              [],
              {},
              {},
              "",
              {},
              "primary",
              t,
              null,
              e.root,
              -1,
              {}
            );
            return new at("", new et(n, []));
          })(e, t),
          i = new a.a([new Ne("", {})]),
          s = new a.a({}),
          r = new a.a({}),
          o = new a.a({}),
          l = new a.a(""),
          c = new st(i, s, o, l, r, "primary", t, n.root);
        return (c.snapshot = n.root), new nt(new et(c, []), n);
      }
      class st {
        constructor(e, t, n, i, s, r, o, a) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = s),
            (this.outlet = r),
            (this.component = o),
            (this._futureSnapshot = a);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe(Object(S.a)((e) => me(e)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                Object(S.a)((e) => me(e))
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function rt(e, t = "emptyOnly") {
        const n = e.pathFromRoot;
        let i = 0;
        if ("always" !== t)
          for (i = n.length - 1; i >= 1; ) {
            const e = n[i],
              t = n[i - 1];
            if (e.routeConfig && "" === e.routeConfig.path) i--;
            else {
              if (t.component) break;
              i--;
            }
          }
        return (function (e) {
          return e.reduce(
            (e, t) => ({
              params: Object.assign(Object.assign({}, e.params), t.params),
              data: Object.assign(Object.assign({}, e.data), t.data),
              resolve: Object.assign(
                Object.assign({}, e.resolve),
                t._resolvedData
              ),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(n.slice(i));
      }
      class ot {
        constructor(e, t, n, i, s, r, o, a, l, c, u) {
          (this.url = e),
            (this.params = t),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = s),
            (this.outlet = r),
            (this.component = o),
            (this.routeConfig = a),
            (this._urlSegment = l),
            (this._lastPathIndex = c),
            (this._resolve = u);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = me(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = me(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((e) => e.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class at extends Ze {
        constructor(e, t) {
          super(t), (this.url = e), lt(this, t);
        }
        toString() {
          return ct(this._root);
        }
      }
      function lt(e, t) {
        (t.value._routerState = e), t.children.forEach((t) => lt(e, t));
      }
      function ct(e) {
        const t =
          e.children.length > 0 ? ` { ${e.children.map(ct).join(", ")} } ` : "";
        return `${e.value}${t}`;
      }
      function ut(e) {
        if (e.snapshot) {
          const t = e.snapshot,
            n = e._futureSnapshot;
          (e.snapshot = n),
            Ee(t.queryParams, n.queryParams) ||
              e.queryParams.next(n.queryParams),
            t.fragment !== n.fragment && e.fragment.next(n.fragment),
            Ee(t.params, n.params) || e.params.next(n.params),
            (function (e, t) {
              if (e.length !== t.length) return !1;
              for (let n = 0; n < e.length; ++n) if (!Ee(e[n], t[n])) return !1;
              return !0;
            })(t.url, n.url) || e.url.next(n.url),
            Ee(t.data, n.data) || e.data.next(n.data);
        } else
          (e.snapshot = e._futureSnapshot), e.data.next(e._futureSnapshot.data);
      }
      function ht(e, t) {
        var n, i;
        return (
          Ee(e.params, t.params) &&
          Le((n = e.url), (i = t.url)) &&
          n.every((e, t) => Ee(e.parameters, i[t].parameters)) &&
          !(!e.parent != !t.parent) &&
          (!e.parent || ht(e.parent, t.parent))
        );
      }
      function dt(e) {
        return (
          "object" == typeof e && null != e && !e.outlets && !e.segmentPath
        );
      }
      function pt(e, t, n, i, s) {
        let r = {};
        return (
          i &&
            ke(i, (e, t) => {
              r[t] = Array.isArray(e) ? e.map((e) => "" + e) : "" + e;
            }),
          new Pe(
            n.root === e
              ? t
              : (function e(t, n, i) {
                  const s = {};
                  return (
                    ke(t.children, (t, r) => {
                      s[r] = t === n ? i : e(t, n, i);
                    }),
                    new Re(t.segments, s)
                  );
                })(n.root, e, t),
            r,
            s
          )
        );
      }
      class ft {
        constructor(e, t, n) {
          if (
            ((this.isAbsolute = e),
            (this.numberOfDoubleDots = t),
            (this.commands = n),
            e && n.length > 0 && dt(n[0]))
          )
            throw new Error("Root segment cannot have matrix parameters");
          const i = n.find(
            (e) => "object" == typeof e && null != e && e.outlets
          );
          if (i && i !== Te(n))
            throw new Error("{outlets:{}} has to be the last command");
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class gt {
        constructor(e, t, n) {
          (this.segmentGroup = e), (this.processChildren = t), (this.index = n);
        }
      }
      function mt(e) {
        return "object" == typeof e && null != e && e.outlets
          ? e.outlets.primary
          : "" + e;
      }
      function bt(e, t, n) {
        if (
          (e || (e = new Re([], {})),
          0 === e.segments.length && e.hasChildren())
        )
          return vt(e, t, n);
        const i = (function (e, t, n) {
            let i = 0,
              s = t;
            const r = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; s < e.segments.length; ) {
              if (i >= n.length) return r;
              const t = e.segments[s],
                o = mt(n[i]),
                a = i < n.length - 1 ? n[i + 1] : null;
              if (s > 0 && void 0 === o) break;
              if (o && a && "object" == typeof a && void 0 === a.outlets) {
                if (!_t(o, a, t)) return r;
                i += 2;
              } else {
                if (!_t(o, {}, t)) return r;
                i++;
              }
              s++;
            }
            return { match: !0, pathIndex: s, commandIndex: i };
          })(e, t, n),
          s = n.slice(i.commandIndex);
        if (i.match && i.pathIndex < e.segments.length) {
          const t = new Re(e.segments.slice(0, i.pathIndex), {});
          return (
            (t.children.primary = new Re(
              e.segments.slice(i.pathIndex),
              e.children
            )),
            vt(t, 0, s)
          );
        }
        return i.match && 0 === s.length
          ? new Re(e.segments, {})
          : i.match && !e.hasChildren()
          ? yt(e, t, n)
          : i.match
          ? vt(e, 0, s)
          : yt(e, t, n);
      }
      function vt(e, t, n) {
        if (0 === n.length) return new Re(e.segments, {});
        {
          const i = (function (e) {
              return "object" != typeof e[0] || void 0 === e[0].outlets
                ? { primary: e }
                : e[0].outlets;
            })(n),
            s = {};
          return (
            ke(i, (n, i) => {
              null !== n && (s[i] = bt(e.children[i], t, n));
            }),
            ke(e.children, (e, t) => {
              void 0 === i[t] && (s[t] = e);
            }),
            new Re(e.segments, s)
          );
        }
      }
      function yt(e, t, n) {
        const i = e.segments.slice(0, t);
        let s = 0;
        for (; s < n.length; ) {
          if ("object" == typeof n[s] && void 0 !== n[s].outlets) {
            const e = wt(n[s].outlets);
            return new Re(i, e);
          }
          if (0 === s && dt(n[0])) {
            i.push(new Ne(e.segments[t].path, n[0])), s++;
            continue;
          }
          const r = mt(n[s]),
            o = s < n.length - 1 ? n[s + 1] : null;
          r && o && dt(o)
            ? (i.push(new Ne(r, St(o))), (s += 2))
            : (i.push(new Ne(r, {})), s++);
        }
        return new Re(i, {});
      }
      function wt(e) {
        const t = {};
        return (
          ke(e, (e, n) => {
            null !== e && (t[n] = yt(new Re([], {}), 0, e));
          }),
          t
        );
      }
      function St(e) {
        const t = {};
        return ke(e, (e, n) => (t[n] = "" + e)), t;
      }
      function _t(e, t, n) {
        return e == n.path && Ee(t, n.parameters);
      }
      class Ct {
        constructor(e, t, n, i) {
          (this.routeReuseStrategy = e),
            (this.futureState = t),
            (this.currState = n),
            (this.forwardEvent = i);
        }
        activate(e) {
          const t = this.futureState._root,
            n = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(t, n, e),
            ut(this.futureState.root),
            this.activateChildRoutes(t, n, e);
        }
        deactivateChildRoutes(e, t, n) {
          const i = tt(t);
          e.children.forEach((e) => {
            const t = e.value.outlet;
            this.deactivateRoutes(e, i[t], n), delete i[t];
          }),
            ke(i, (e, t) => {
              this.deactivateRouteAndItsChildren(e, n);
            });
        }
        deactivateRoutes(e, t, n) {
          const i = e.value,
            s = t ? t.value : null;
          if (i === s)
            if (i.component) {
              const s = n.getContext(i.outlet);
              s && this.deactivateChildRoutes(e, t, s.children);
            } else this.deactivateChildRoutes(e, t, n);
          else s && this.deactivateRouteAndItsChildren(t, n);
        }
        deactivateRouteAndItsChildren(e, t) {
          this.routeReuseStrategy.shouldDetach(e.value.snapshot)
            ? this.detachAndStoreRouteSubtree(e, t)
            : this.deactivateRouteAndOutlet(e, t);
        }
        detachAndStoreRouteSubtree(e, t) {
          const n = t.getContext(e.value.outlet);
          if (n && n.outlet) {
            const t = n.outlet.detach(),
              i = n.children.onOutletDeactivated();
            this.routeReuseStrategy.store(e.value.snapshot, {
              componentRef: t,
              route: e,
              contexts: i,
            });
          }
        }
        deactivateRouteAndOutlet(e, t) {
          const n = t.getContext(e.value.outlet);
          if (n) {
            const i = tt(e),
              s = e.value.component ? n.children : t;
            ke(i, (e, t) => this.deactivateRouteAndItsChildren(e, s)),
              n.outlet &&
                (n.outlet.deactivate(), n.children.onOutletDeactivated());
          }
        }
        activateChildRoutes(e, t, n) {
          const i = tt(t);
          e.children.forEach((e) => {
            this.activateRoutes(e, i[e.value.outlet], n),
              this.forwardEvent(new de(e.value.snapshot));
          }),
            e.children.length && this.forwardEvent(new ue(e.value.snapshot));
        }
        activateRoutes(e, t, n) {
          const i = e.value,
            s = t ? t.value : null;
          if ((ut(i), i === s))
            if (i.component) {
              const s = n.getOrCreateContext(i.outlet);
              this.activateChildRoutes(e, t, s.children);
            } else this.activateChildRoutes(e, t, n);
          else if (i.component) {
            const t = n.getOrCreateContext(i.outlet);
            if (this.routeReuseStrategy.shouldAttach(i.snapshot)) {
              const e = this.routeReuseStrategy.retrieve(i.snapshot);
              this.routeReuseStrategy.store(i.snapshot, null),
                t.children.onOutletReAttached(e.contexts),
                (t.attachRef = e.componentRef),
                (t.route = e.route.value),
                t.outlet && t.outlet.attach(e.componentRef, e.route.value),
                Et(e.route);
            } else {
              const n = (function (e) {
                  for (let t = e.parent; t; t = t.parent) {
                    const e = t.routeConfig;
                    if (e && e._loadedConfig) return e._loadedConfig;
                    if (e && e.component) return null;
                  }
                  return null;
                })(i.snapshot),
                s = n ? n.module.componentFactoryResolver : null;
              (t.attachRef = null),
                (t.route = i),
                (t.resolver = s),
                t.outlet && t.outlet.activateWith(i, s),
                this.activateChildRoutes(e, null, t.children);
            }
          } else this.activateChildRoutes(e, null, n);
        }
      }
      function Et(e) {
        ut(e.value), e.children.forEach(Et);
      }
      function Ot(e) {
        return "function" == typeof e;
      }
      function xt(e) {
        return e instanceof Pe;
      }
      class Tt {
        constructor(e) {
          this.segmentGroup = e || null;
        }
      }
      class kt {
        constructor(e) {
          this.urlTree = e;
        }
      }
      function Mt(e) {
        return new l.a((t) => t.error(new Tt(e)));
      }
      function It(e) {
        return new l.a((t) => t.error(new kt(e)));
      }
      function Pt(e) {
        return new l.a((t) =>
          t.error(
            new Error(
              `Only absolute redirects can have named outlets. redirectTo: '${e}'`
            )
          )
        );
      }
      class Rt {
        constructor(e, t, n, i, r) {
          (this.configLoader = t),
            (this.urlSerializer = n),
            (this.urlTree = i),
            (this.config = r),
            (this.allowRedirects = !0),
            (this.ngModule = e.get(s.z));
        }
        apply() {
          return this.expandSegmentGroup(
            this.ngModule,
            this.config,
            this.urlTree.root,
            "primary"
          )
            .pipe(
              Object(S.a)((e) =>
                this.createUrlTree(
                  e,
                  this.urlTree.queryParams,
                  this.urlTree.fragment
                )
              )
            )
            .pipe(
              Object(N.a)((e) => {
                if (e instanceof kt)
                  return (this.allowRedirects = !1), this.match(e.urlTree);
                if (e instanceof Tt) throw this.noMatchError(e);
                throw e;
              })
            );
        }
        match(e) {
          return this.expandSegmentGroup(
            this.ngModule,
            this.config,
            e.root,
            "primary"
          )
            .pipe(
              Object(S.a)((t) =>
                this.createUrlTree(t, e.queryParams, e.fragment)
              )
            )
            .pipe(
              Object(N.a)((e) => {
                if (e instanceof Tt) throw this.noMatchError(e);
                throw e;
              })
            );
        }
        noMatchError(e) {
          return new Error(
            `Cannot match any routes. URL Segment: '${e.segmentGroup}'`
          );
        }
        createUrlTree(e, t, n) {
          const i = e.segments.length > 0 ? new Re([], { primary: e }) : e;
          return new Pe(i, t, n);
        }
        expandSegmentGroup(e, t, n, i) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.expandChildren(e, t, n).pipe(
                Object(S.a)((e) => new Re([], e))
              )
            : this.expandSegment(e, n, t, n.segments, i, !0);
        }
        expandChildren(e, t, n) {
          return (function (e, t) {
            if (0 === Object.keys(e).length) return Object(r.a)({});
            const n = [],
              i = [],
              s = {};
            return (
              ke(e, (e, r) => {
                const o = t(r, e).pipe(Object(S.a)((e) => (s[r] = e)));
                "primary" === r ? n.push(o) : i.push(o);
              }),
              r.a.apply(null, n.concat(i)).pipe(
                Object(_.a)(),
                R(),
                Object(S.a)(() => s)
              )
            );
          })(n.children, (n, i) => this.expandSegmentGroup(e, t, i, n));
        }
        expandSegment(e, t, n, i, s, o) {
          return Object(r.a)(...n).pipe(
            Object(S.a)((a) =>
              this.expandSegmentAgainstRoute(e, t, n, a, i, s, o).pipe(
                Object(N.a)((e) => {
                  if (e instanceof Tt) return Object(r.a)(null);
                  throw e;
                })
              )
            ),
            Object(_.a)(),
            Object(L.a)((e) => !!e),
            Object(N.a)((e, n) => {
              if (e instanceof c.a || "EmptyError" === e.name) {
                if (this.noLeftoversInUrl(t, i, s))
                  return Object(r.a)(new Re([], {}));
                throw new Tt(t);
              }
              throw e;
            })
          );
        }
        noLeftoversInUrl(e, t, n) {
          return 0 === t.length && !e.children[n];
        }
        expandSegmentAgainstRoute(e, t, n, i, s, r, o) {
          return Dt(i) !== r
            ? Mt(t)
            : void 0 === i.redirectTo
            ? this.matchSegmentAgainstRoute(e, t, i, s)
            : o && this.allowRedirects
            ? this.expandSegmentAgainstRouteUsingRedirect(e, t, n, i, s, r)
            : Mt(t);
        }
        expandSegmentAgainstRouteUsingRedirect(e, t, n, i, s, r) {
          return "**" === i.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(e, n, i, r)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                e,
                t,
                n,
                i,
                s,
                r
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(e, t, n, i) {
          const s = this.applyRedirectCommands([], n.redirectTo, {});
          return n.redirectTo.startsWith("/")
            ? It(s)
            : this.lineralizeSegments(n, s).pipe(
                Object(A.a)((n) => {
                  const s = new Re(n, {});
                  return this.expandSegment(e, s, t, n, i, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(e, t, n, i, s, r) {
          const {
            matched: o,
            consumedSegments: a,
            lastChild: l,
            positionalParamSegments: c,
          } = Nt(t, i, s);
          if (!o) return Mt(t);
          const u = this.applyRedirectCommands(a, i.redirectTo, c);
          return i.redirectTo.startsWith("/")
            ? It(u)
            : this.lineralizeSegments(i, u).pipe(
                Object(A.a)((i) =>
                  this.expandSegment(e, t, n, i.concat(s.slice(l)), r, !1)
                )
              );
        }
        matchSegmentAgainstRoute(e, t, n, i) {
          if ("**" === n.path)
            return n.loadChildren
              ? this.configLoader
                  .load(e.injector, n)
                  .pipe(
                    Object(S.a)((e) => ((n._loadedConfig = e), new Re(i, {})))
                  )
              : Object(r.a)(new Re(i, {}));
          const { matched: s, consumedSegments: o, lastChild: a } = Nt(t, n, i);
          if (!s) return Mt(t);
          const l = i.slice(a);
          return this.getChildConfig(e, n, i).pipe(
            Object(A.a)((e) => {
              const n = e.module,
                i = e.routes,
                { segmentGroup: s, slicedSegments: a } = (function (
                  e,
                  t,
                  n,
                  i
                ) {
                  return n.length > 0 &&
                    (function (e, t, n) {
                      return n.some((n) => At(e, t, n) && "primary" !== Dt(n));
                    })(e, n, i)
                    ? {
                        segmentGroup: Lt(
                          new Re(
                            t,
                            (function (e, t) {
                              const n = {};
                              n.primary = t;
                              for (const i of e)
                                "" === i.path &&
                                  "primary" !== Dt(i) &&
                                  (n[Dt(i)] = new Re([], {}));
                              return n;
                            })(i, new Re(n, e.children))
                          )
                        ),
                        slicedSegments: [],
                      }
                    : 0 === n.length &&
                      (function (e, t, n) {
                        return n.some((n) => At(e, t, n));
                      })(e, n, i)
                    ? {
                        segmentGroup: Lt(
                          new Re(
                            e.segments,
                            (function (e, t, n, i) {
                              const s = {};
                              for (const r of n)
                                At(e, t, r) &&
                                  !i[Dt(r)] &&
                                  (s[Dt(r)] = new Re([], {}));
                              return Object.assign(Object.assign({}, i), s);
                            })(e, n, i, e.children)
                          )
                        ),
                        slicedSegments: n,
                      }
                    : { segmentGroup: e, slicedSegments: n };
                })(t, o, l, i);
              return 0 === a.length && s.hasChildren()
                ? this.expandChildren(n, i, s).pipe(
                    Object(S.a)((e) => new Re(o, e))
                  )
                : 0 === i.length && 0 === a.length
                ? Object(r.a)(new Re(o, {}))
                : this.expandSegment(n, s, i, a, "primary", !0).pipe(
                    Object(S.a)((e) => new Re(o.concat(e.segments), e.children))
                  );
            })
          );
        }
        getChildConfig(e, t, n) {
          return t.children
            ? Object(r.a)(new ye(t.children, e))
            : t.loadChildren
            ? void 0 !== t._loadedConfig
              ? Object(r.a)(t._loadedConfig)
              : (function (e, t, n) {
                  const i = t.canLoad;
                  return i && 0 !== i.length
                    ? Object(o.a)(i)
                        .pipe(
                          Object(S.a)((i) => {
                            const s = e.get(i);
                            let r;
                            if (
                              (function (e) {
                                return e && Ot(e.canLoad);
                              })(s)
                            )
                              r = s.canLoad(t, n);
                            else {
                              if (!Ot(s))
                                throw new Error("Invalid CanLoad guard");
                              r = s(t, n);
                            }
                            return Me(r);
                          })
                        )
                        .pipe(
                          Object(_.a)(),
                          ((s = (e) => !0 === e),
                          (e) => e.lift(new D(s, void 0, e)))
                        )
                    : Object(r.a)(!0);
                  var s;
                })(e.injector, t, n).pipe(
                  Object(A.a)((n) =>
                    n
                      ? this.configLoader
                          .load(e.injector, t)
                          .pipe(Object(S.a)((e) => ((t._loadedConfig = e), e)))
                      : (function (e) {
                          return new l.a((t) =>
                            t.error(
                              be(
                                `Cannot load children because the guard of the route "path: '${e.path}'" returned false`
                              )
                            )
                          );
                        })(t)
                  )
                )
            : Object(r.a)(new ye([], e));
        }
        lineralizeSegments(e, t) {
          let n = [],
            i = t.root;
          for (;;) {
            if (((n = n.concat(i.segments)), 0 === i.numberOfChildren))
              return Object(r.a)(n);
            if (i.numberOfChildren > 1 || !i.children.primary)
              return Pt(e.redirectTo);
            i = i.children.primary;
          }
        }
        applyRedirectCommands(e, t, n) {
          return this.applyRedirectCreatreUrlTree(
            t,
            this.urlSerializer.parse(t),
            e,
            n
          );
        }
        applyRedirectCreatreUrlTree(e, t, n, i) {
          const s = this.createSegmentGroup(e, t.root, n, i);
          return new Pe(
            s,
            this.createQueryParams(t.queryParams, this.urlTree.queryParams),
            t.fragment
          );
        }
        createQueryParams(e, t) {
          const n = {};
          return (
            ke(e, (e, i) => {
              if ("string" == typeof e && e.startsWith(":")) {
                const s = e.substring(1);
                n[i] = t[s];
              } else n[i] = e;
            }),
            n
          );
        }
        createSegmentGroup(e, t, n, i) {
          const s = this.createSegments(e, t.segments, n, i);
          let r = {};
          return (
            ke(t.children, (t, s) => {
              r[s] = this.createSegmentGroup(e, t, n, i);
            }),
            new Re(s, r)
          );
        }
        createSegments(e, t, n, i) {
          return t.map((t) =>
            t.path.startsWith(":")
              ? this.findPosParam(e, t, i)
              : this.findOrReturn(t, n)
          );
        }
        findPosParam(e, t, n) {
          const i = n[t.path.substring(1)];
          if (!i)
            throw new Error(
              `Cannot redirect to '${e}'. Cannot find '${t.path}'.`
            );
          return i;
        }
        findOrReturn(e, t) {
          let n = 0;
          for (const i of t) {
            if (i.path === e.path) return t.splice(n), i;
            n++;
          }
          return e;
        }
      }
      function Nt(e, t, n) {
        if ("" === t.path)
          return "full" === t.pathMatch && (e.hasChildren() || n.length > 0)
            ? {
                matched: !1,
                consumedSegments: [],
                lastChild: 0,
                positionalParamSegments: {},
              }
            : {
                matched: !0,
                consumedSegments: [],
                lastChild: 0,
                positionalParamSegments: {},
              };
        const i = (t.matcher || ve)(n, e, t);
        return i
          ? {
              matched: !0,
              consumedSegments: i.consumed,
              lastChild: i.consumed.length,
              positionalParamSegments: i.posParams,
            }
          : {
              matched: !1,
              consumedSegments: [],
              lastChild: 0,
              positionalParamSegments: {},
            };
      }
      function Lt(e) {
        if (1 === e.numberOfChildren && e.children.primary) {
          const t = e.children.primary;
          return new Re(e.segments.concat(t.segments), t.children);
        }
        return e;
      }
      function At(e, t, n) {
        return (
          (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) &&
          "" === n.path &&
          void 0 !== n.redirectTo
        );
      }
      function Dt(e) {
        return e.outlet || "primary";
      }
      class jt {
        constructor(e) {
          (this.path = e), (this.route = this.path[this.path.length - 1]);
        }
      }
      class Ft {
        constructor(e, t) {
          (this.component = e), (this.route = t);
        }
      }
      function Vt(e, t, n) {
        const i = e._root;
        return (function e(
          t,
          n,
          i,
          s,
          r = { canDeactivateChecks: [], canActivateChecks: [] }
        ) {
          const o = tt(n);
          return (
            t.children.forEach((t) => {
              !(function (
                t,
                n,
                i,
                s,
                r = { canDeactivateChecks: [], canActivateChecks: [] }
              ) {
                const o = t.value,
                  a = n ? n.value : null,
                  l = i ? i.getContext(t.value.outlet) : null;
                if (a && o.routeConfig === a.routeConfig) {
                  const c = (function (e, t, n) {
                    if ("function" == typeof n) return n(e, t);
                    switch (n) {
                      case "pathParamsChange":
                        return !Le(e.url, t.url);
                      case "pathParamsOrQueryParamsChange":
                        return (
                          !Le(e.url, t.url) || !Ee(e.queryParams, t.queryParams)
                        );
                      case "always":
                        return !0;
                      case "paramsOrQueryParamsChange":
                        return !ht(e, t) || !Ee(e.queryParams, t.queryParams);
                      case "paramsChange":
                      default:
                        return !ht(e, t);
                    }
                  })(a, o, o.routeConfig.runGuardsAndResolvers);
                  c
                    ? r.canActivateChecks.push(new jt(s))
                    : ((o.data = a.data), (o._resolvedData = a._resolvedData)),
                    e(t, n, o.component ? (l ? l.children : null) : i, s, r),
                    c &&
                      r.canDeactivateChecks.push(
                        new Ft((l && l.outlet && l.outlet.component) || null, a)
                      );
                } else
                  a && zt(n, l, r),
                    r.canActivateChecks.push(new jt(s)),
                    e(t, null, o.component ? (l ? l.children : null) : i, s, r);
              })(t, o[t.value.outlet], i, s.concat([t.value]), r),
                delete o[t.value.outlet];
            }),
            ke(o, (e, t) => zt(e, i.getContext(t), r)),
            r
          );
        })(i, t ? t._root : null, n, [i.value]);
      }
      function Wt(e, t, n) {
        const i = (function (e) {
          if (!e) return null;
          for (let t = e.parent; t; t = t.parent) {
            const e = t.routeConfig;
            if (e && e._loadedConfig) return e._loadedConfig;
          }
          return null;
        })(t);
        return (i ? i.module.injector : n).get(e);
      }
      function zt(e, t, n) {
        const i = tt(e),
          s = e.value;
        ke(i, (e, i) => {
          zt(e, s.component ? (t ? t.children.getContext(i) : null) : t, n);
        }),
          n.canDeactivateChecks.push(
            new Ft(
              s.component && t && t.outlet && t.outlet.isActivated
                ? t.outlet.component
                : null,
              s
            )
          );
      }
      const Xt = Symbol("INITIAL_VALUE");
      function Bt() {
        return Object(F.a)((e) =>
          (function (...e) {
            let t = null,
              n = null;
            return (
              Object(u.a)(e[e.length - 1]) && (n = e.pop()),
              "function" == typeof e[e.length - 1] && (t = e.pop()),
              1 === e.length && Object(h.a)(e[0]) && (e = e[0]),
              Object(f.a)(e, n).lift(new m(t))
            );
          })(...e.map((e) => e.pipe(Object(V.a)(1), Object(W.a)(Xt)))).pipe(
            z((e, t) => {
              let n = !1;
              return t.reduce((e, i, s) => {
                if (e !== Xt) return e;
                if ((i === Xt && (n = !0), !n)) {
                  if (!1 === i) return i;
                  if (s === t.length - 1 || xt(i)) return i;
                }
                return e;
              }, e);
            }, Xt),
            Object(C.a)((e) => e !== Xt),
            Object(S.a)((e) => (xt(e) ? e : !0 === e)),
            Object(V.a)(1)
          )
        );
      }
      function Ht(e, t) {
        return null !== e && t && t(new he(e)), Object(r.a)(!0);
      }
      function Ut(e, t) {
        return null !== e && t && t(new ce(e)), Object(r.a)(!0);
      }
      function Gt(e, t, n) {
        const i = t.routeConfig ? t.routeConfig.canActivate : null;
        if (!i || 0 === i.length) return Object(r.a)(!0);
        const s = i.map((i) =>
          y(() => {
            const s = Wt(i, t, n);
            let r;
            if (
              (function (e) {
                return e && Ot(e.canActivate);
              })(s)
            )
              r = Me(s.canActivate(t, e));
            else {
              if (!Ot(s)) throw new Error("Invalid CanActivate guard");
              r = Me(s(t, e));
            }
            return r.pipe(Object(L.a)());
          })
        );
        return Object(r.a)(s).pipe(Bt());
      }
      function $t(e, t, n) {
        const i = t[t.length - 1],
          s = t
            .slice(0, t.length - 1)
            .reverse()
            .map((e) =>
              (function (e) {
                const t = e.routeConfig ? e.routeConfig.canActivateChild : null;
                return t && 0 !== t.length ? { node: e, guards: t } : null;
              })(e)
            )
            .filter((e) => null !== e)
            .map((t) =>
              y(() => {
                const s = t.guards.map((s) => {
                  const r = Wt(s, t.node, n);
                  let o;
                  if (
                    (function (e) {
                      return e && Ot(e.canActivateChild);
                    })(r)
                  )
                    o = Me(r.canActivateChild(i, e));
                  else {
                    if (!Ot(r))
                      throw new Error("Invalid CanActivateChild guard");
                    o = Me(r(i, e));
                  }
                  return o.pipe(Object(L.a)());
                });
                return Object(r.a)(s).pipe(Bt());
              })
            );
        return Object(r.a)(s).pipe(Bt());
      }
      class qt {}
      class Kt {
        constructor(e, t, n, i, s, r) {
          (this.rootComponentType = e),
            (this.config = t),
            (this.urlTree = n),
            (this.url = i),
            (this.paramsInheritanceStrategy = s),
            (this.relativeLinkResolution = r);
        }
        recognize() {
          try {
            const e = Qt(
                this.urlTree.root,
                [],
                [],
                this.config,
                this.relativeLinkResolution
              ).segmentGroup,
              t = this.processSegmentGroup(this.config, e, "primary"),
              n = new ot(
                [],
                Object.freeze({}),
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                {},
                "primary",
                this.rootComponentType,
                null,
                this.urlTree.root,
                -1,
                {}
              ),
              i = new et(n, t),
              s = new at(this.url, i);
            return this.inheritParamsAndData(s._root), Object(r.a)(s);
          } catch (e) {
            return new l.a((t) => t.error(e));
          }
        }
        inheritParamsAndData(e) {
          const t = e.value,
            n = rt(t, this.paramsInheritanceStrategy);
          (t.params = Object.freeze(n.params)),
            (t.data = Object.freeze(n.data)),
            e.children.forEach((e) => this.inheritParamsAndData(e));
        }
        processSegmentGroup(e, t, n) {
          return 0 === t.segments.length && t.hasChildren()
            ? this.processChildren(e, t)
            : this.processSegment(e, t, t.segments, n);
        }
        processChildren(e, t) {
          const n = Ae(t, (t, n) => this.processSegmentGroup(e, t, n));
          return (
            (function (e) {
              const t = {};
              e.forEach((e) => {
                const n = t[e.value.outlet];
                if (n) {
                  const t = n.url.map((e) => e.toString()).join("/"),
                    i = e.value.url.map((e) => e.toString()).join("/");
                  throw new Error(
                    `Two segments cannot have the same outlet name: '${t}' and '${i}'.`
                  );
                }
                t[e.value.outlet] = e.value;
              });
            })(n),
            n.sort((e, t) =>
              "primary" === e.value.outlet
                ? -1
                : "primary" === t.value.outlet
                ? 1
                : e.value.outlet.localeCompare(t.value.outlet)
            ),
            n
          );
        }
        processSegment(e, t, n, i) {
          for (const r of e)
            try {
              return this.processSegmentAgainstRoute(r, t, n, i);
            } catch (s) {
              if (!(s instanceof qt)) throw s;
            }
          if (this.noLeftoversInUrl(t, n, i)) return [];
          throw new qt();
        }
        noLeftoversInUrl(e, t, n) {
          return 0 === t.length && !e.children[n];
        }
        processSegmentAgainstRoute(e, t, n, i) {
          if (e.redirectTo) throw new qt();
          if ((e.outlet || "primary") !== i) throw new qt();
          let s,
            r = [],
            o = [];
          if ("**" === e.path) {
            const r = n.length > 0 ? Te(n).parameters : {};
            s = new ot(
              n,
              r,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              tn(e),
              i,
              e.component,
              e,
              Yt(t),
              Zt(t) + n.length,
              nn(e)
            );
          } else {
            const a = (function (e, t, n) {
              if ("" === t.path) {
                if ("full" === t.pathMatch && (e.hasChildren() || n.length > 0))
                  throw new qt();
                return { consumedSegments: [], lastChild: 0, parameters: {} };
              }
              const i = (t.matcher || ve)(n, e, t);
              if (!i) throw new qt();
              const s = {};
              ke(i.posParams, (e, t) => {
                s[t] = e.path;
              });
              const r =
                i.consumed.length > 0
                  ? Object.assign(
                      Object.assign({}, s),
                      i.consumed[i.consumed.length - 1].parameters
                    )
                  : s;
              return {
                consumedSegments: i.consumed,
                lastChild: i.consumed.length,
                parameters: r,
              };
            })(t, e, n);
            (r = a.consumedSegments),
              (o = n.slice(a.lastChild)),
              (s = new ot(
                r,
                a.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                tn(e),
                i,
                e.component,
                e,
                Yt(t),
                Zt(t) + r.length,
                nn(e)
              ));
          }
          const a = (function (e) {
              return e.children
                ? e.children
                : e.loadChildren
                ? e._loadedConfig.routes
                : [];
            })(e),
            { segmentGroup: l, slicedSegments: c } = Qt(
              t,
              r,
              o,
              a,
              this.relativeLinkResolution
            );
          if (0 === c.length && l.hasChildren()) {
            const e = this.processChildren(a, l);
            return [new et(s, e)];
          }
          if (0 === a.length && 0 === c.length) return [new et(s, [])];
          const u = this.processSegment(a, l, c, "primary");
          return [new et(s, u)];
        }
      }
      function Yt(e) {
        let t = e;
        for (; t._sourceSegment; ) t = t._sourceSegment;
        return t;
      }
      function Zt(e) {
        let t = e,
          n = t._segmentIndexShift ? t._segmentIndexShift : 0;
        for (; t._sourceSegment; )
          (t = t._sourceSegment),
            (n += t._segmentIndexShift ? t._segmentIndexShift : 0);
        return n - 1;
      }
      function Qt(e, t, n, i, s) {
        if (
          n.length > 0 &&
          (function (e, t, n) {
            return n.some((n) => Jt(e, t, n) && "primary" !== en(n));
          })(e, n, i)
        ) {
          const s = new Re(
            t,
            (function (e, t, n, i) {
              const s = {};
              (s.primary = i),
                (i._sourceSegment = e),
                (i._segmentIndexShift = t.length);
              for (const r of n)
                if ("" === r.path && "primary" !== en(r)) {
                  const n = new Re([], {});
                  (n._sourceSegment = e),
                    (n._segmentIndexShift = t.length),
                    (s[en(r)] = n);
                }
              return s;
            })(e, t, i, new Re(n, e.children))
          );
          return (
            (s._sourceSegment = e),
            (s._segmentIndexShift = t.length),
            { segmentGroup: s, slicedSegments: [] }
          );
        }
        if (
          0 === n.length &&
          (function (e, t, n) {
            return n.some((n) => Jt(e, t, n));
          })(e, n, i)
        ) {
          const r = new Re(
            e.segments,
            (function (e, t, n, i, s, r) {
              const o = {};
              for (const a of i)
                if (Jt(e, n, a) && !s[en(a)]) {
                  const n = new Re([], {});
                  (n._sourceSegment = e),
                    (n._segmentIndexShift =
                      "legacy" === r ? e.segments.length : t.length),
                    (o[en(a)] = n);
                }
              return Object.assign(Object.assign({}, s), o);
            })(e, t, n, i, e.children, s)
          );
          return (
            (r._sourceSegment = e),
            (r._segmentIndexShift = t.length),
            { segmentGroup: r, slicedSegments: n }
          );
        }
        const r = new Re(e.segments, e.children);
        return (
          (r._sourceSegment = e),
          (r._segmentIndexShift = t.length),
          { segmentGroup: r, slicedSegments: n }
        );
      }
      function Jt(e, t, n) {
        return (
          (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) &&
          "" === n.path &&
          void 0 === n.redirectTo
        );
      }
      function en(e) {
        return e.outlet || "primary";
      }
      function tn(e) {
        return e.data || {};
      }
      function nn(e) {
        return e.resolve || {};
      }
      function sn(e, t, n, i) {
        const s = Wt(e, t, i);
        return Me(s.resolve ? s.resolve(t, n) : s(t, n));
      }
      function rn(e) {
        return function (t) {
          return t.pipe(
            Object(F.a)((t) => {
              const n = e(t);
              return n
                ? Object(o.a)(n).pipe(Object(S.a)(() => t))
                : Object(o.a)([t]);
            })
          );
        };
      }
      class on {
        shouldDetach(e) {
          return !1;
        }
        store(e, t) {}
        shouldAttach(e) {
          return !1;
        }
        retrieve(e) {
          return null;
        }
        shouldReuseRoute(e, t) {
          return e.routeConfig === t.routeConfig;
        }
      }
      const an = new s.r("ROUTES");
      class ln {
        constructor(e, t, n, i) {
          (this.loader = e),
            (this.compiler = t),
            (this.onLoadStartListener = n),
            (this.onLoadEndListener = i);
        }
        load(e, t) {
          return (
            this.onLoadStartListener && this.onLoadStartListener(t),
            this.loadModuleFactory(t.loadChildren).pipe(
              Object(S.a)((n) => {
                this.onLoadEndListener && this.onLoadEndListener(t);
                const i = n.create(e);
                return new ye(xe(i.injector.get(an)).map(Ce), i);
              })
            )
          );
        }
        loadModuleFactory(e) {
          return "string" == typeof e
            ? Object(o.a)(this.loader.load(e))
            : Me(e()).pipe(
                Object(A.a)((e) =>
                  e instanceof s.x
                    ? Object(r.a)(e)
                    : Object(o.a)(this.compiler.compileModuleAsync(e))
                )
              );
        }
      }
      class cn {
        shouldProcessUrl(e) {
          return !0;
        }
        extract(e) {
          return e;
        }
        merge(e, t) {
          return e;
        }
      }
      function un(e) {
        throw e;
      }
      function hn(e, t, n) {
        return t.parse("/");
      }
      function dn(e, t) {
        return Object(r.a)(null);
      }
      let pn = (() => {
          class e {
            constructor(e, t, n, i, r, o, l, c) {
              (this.rootComponentType = e),
                (this.urlSerializer = t),
                (this.rootContexts = n),
                (this.location = i),
                (this.config = c),
                (this.lastSuccessfulNavigation = null),
                (this.currentNavigation = null),
                (this.navigationId = 0),
                (this.isNgZoneEnabled = !1),
                (this.events = new w.b()),
                (this.errorHandler = un),
                (this.malformedUriErrorHandler = hn),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.hooks = {
                  beforePreactivation: dn,
                  afterPreactivation: dn,
                }),
                (this.urlHandlingStrategy = new cn()),
                (this.routeReuseStrategy = new on()),
                (this.onSameUrlNavigation = "ignore"),
                (this.paramsInheritanceStrategy = "emptyOnly"),
                (this.urlUpdateStrategy = "deferred"),
                (this.relativeLinkResolution = "legacy"),
                (this.ngModule = r.get(s.z)),
                (this.console = r.get(s.bb));
              const u = r.get(s.B);
              (this.isNgZoneEnabled = u instanceof s.B),
                this.resetConfig(c),
                (this.currentUrlTree = new Pe(new Re([], {}), {}, null)),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.configLoader = new ln(
                  o,
                  l,
                  (e) => this.triggerEvent(new ae(e)),
                  (e) => this.triggerEvent(new le(e))
                )),
                (this.routerState = it(
                  this.currentUrlTree,
                  this.rootComponentType
                )),
                (this.transitions = new a.a({
                  id: 0,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  extractedUrl: this.urlHandlingStrategy.extract(
                    this.currentUrlTree
                  ),
                  urlAfterRedirects: this.urlHandlingStrategy.extract(
                    this.currentUrlTree
                  ),
                  rawUrl: this.currentUrlTree,
                  extras: {},
                  resolve: null,
                  reject: null,
                  promise: Promise.resolve(!0),
                  source: "imperative",
                  restoredState: null,
                  currentSnapshot: this.routerState.snapshot,
                  targetSnapshot: null,
                  currentRouterState: this.routerState,
                  targetRouterState: null,
                  guards: { canActivateChecks: [], canDeactivateChecks: [] },
                  guardsResult: null,
                })),
                (this.navigations = this.setupNavigations(this.transitions)),
                this.processNavigations();
            }
            setupNavigations(e) {
              const t = this.events;
              return e.pipe(
                Object(C.a)((e) => 0 !== e.id),
                Object(S.a)((e) =>
                  Object.assign(Object.assign({}, e), {
                    extractedUrl: this.urlHandlingStrategy.extract(e.rawUrl),
                  })
                ),
                Object(F.a)((e) => {
                  let n = !1,
                    i = !1;
                  return Object(r.a)(e).pipe(
                    Object(G.a)((e) => {
                      this.currentNavigation = {
                        id: e.id,
                        initialUrl: e.currentRawUrl,
                        extractedUrl: e.extractedUrl,
                        trigger: e.source,
                        extras: e.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? Object.assign(
                              Object.assign({}, this.lastSuccessfulNavigation),
                              { previousNavigation: null }
                            )
                          : null,
                      };
                    }),
                    Object(F.a)((e) => {
                      const n =
                        !this.navigated ||
                        e.extractedUrl.toString() !==
                          this.browserUrlTree.toString();
                      if (
                        ("reload" === this.onSameUrlNavigation || n) &&
                        this.urlHandlingStrategy.shouldProcessUrl(e.rawUrl)
                      )
                        return Object(r.a)(e).pipe(
                          Object(F.a)((e) => {
                            const n = this.transitions.getValue();
                            return (
                              t.next(
                                new Q(
                                  e.id,
                                  this.serializeUrl(e.extractedUrl),
                                  e.source,
                                  e.restoredState
                                )
                              ),
                              n !== this.transitions.getValue() ? v.a : [e]
                            );
                          }),
                          Object(F.a)((e) => Promise.resolve(e)),
                          ((i = this.ngModule.injector),
                          (s = this.configLoader),
                          (o = this.urlSerializer),
                          (a = this.config),
                          function (e) {
                            return e.pipe(
                              Object(F.a)((e) =>
                                (function (e, t, n, i, s) {
                                  return new Rt(e, t, n, i, s).apply();
                                })(i, s, o, e.extractedUrl, a).pipe(
                                  Object(S.a)((t) =>
                                    Object.assign(Object.assign({}, e), {
                                      urlAfterRedirects: t,
                                    })
                                  )
                                )
                              )
                            );
                          }),
                          Object(G.a)((e) => {
                            this.currentNavigation = Object.assign(
                              Object.assign({}, this.currentNavigation),
                              { finalUrl: e.urlAfterRedirects }
                            );
                          }),
                          (function (e, t, n, i, s) {
                            return function (r) {
                              return r.pipe(
                                Object(A.a)((r) =>
                                  (function (
                                    e,
                                    t,
                                    n,
                                    i,
                                    s = "emptyOnly",
                                    r = "legacy"
                                  ) {
                                    return new Kt(e, t, n, i, s, r).recognize();
                                  })(
                                    e,
                                    t,
                                    r.urlAfterRedirects,
                                    n(r.urlAfterRedirects),
                                    i,
                                    s
                                  ).pipe(
                                    Object(S.a)((e) =>
                                      Object.assign(Object.assign({}, r), {
                                        targetSnapshot: e,
                                      })
                                    )
                                  )
                                )
                              );
                            };
                          })(
                            this.rootComponentType,
                            this.config,
                            (e) => this.serializeUrl(e),
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          Object(G.a)((e) => {
                            "eager" === this.urlUpdateStrategy &&
                              (e.extras.skipLocationChange ||
                                this.setBrowserUrl(
                                  e.urlAfterRedirects,
                                  !!e.extras.replaceUrl,
                                  e.id,
                                  e.extras.state
                                ),
                              (this.browserUrlTree = e.urlAfterRedirects));
                          }),
                          Object(G.a)((e) => {
                            const n = new ne(
                              e.id,
                              this.serializeUrl(e.extractedUrl),
                              this.serializeUrl(e.urlAfterRedirects),
                              e.targetSnapshot
                            );
                            t.next(n);
                          })
                        );
                      var i, s, o, a;
                      if (
                        n &&
                        this.rawUrlTree &&
                        this.urlHandlingStrategy.shouldProcessUrl(
                          this.rawUrlTree
                        )
                      ) {
                        const {
                            id: n,
                            extractedUrl: i,
                            source: s,
                            restoredState: o,
                            extras: a,
                          } = e,
                          l = new Q(n, this.serializeUrl(i), s, o);
                        t.next(l);
                        const c = it(i, this.rootComponentType).snapshot;
                        return Object(r.a)(
                          Object.assign(Object.assign({}, e), {
                            targetSnapshot: c,
                            urlAfterRedirects: i,
                            extras: Object.assign(Object.assign({}, a), {
                              skipLocationChange: !1,
                              replaceUrl: !1,
                            }),
                          })
                        );
                      }
                      return (
                        (this.rawUrlTree = e.rawUrl),
                        (this.browserUrlTree = e.urlAfterRedirects),
                        e.resolve(null),
                        v.a
                      );
                    }),
                    rn((e) => {
                      const {
                        targetSnapshot: t,
                        id: n,
                        extractedUrl: i,
                        rawUrl: s,
                        extras: { skipLocationChange: r, replaceUrl: o },
                      } = e;
                      return this.hooks.beforePreactivation(t, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: s,
                        skipLocationChange: !!r,
                        replaceUrl: !!o,
                      });
                    }),
                    Object(G.a)((e) => {
                      const t = new ie(
                        e.id,
                        this.serializeUrl(e.extractedUrl),
                        this.serializeUrl(e.urlAfterRedirects),
                        e.targetSnapshot
                      );
                      this.triggerEvent(t);
                    }),
                    Object(S.a)((e) =>
                      Object.assign(Object.assign({}, e), {
                        guards: Vt(
                          e.targetSnapshot,
                          e.currentSnapshot,
                          this.rootContexts
                        ),
                      })
                    ),
                    (function (e, t) {
                      return function (n) {
                        return n.pipe(
                          Object(A.a)((n) => {
                            const {
                              targetSnapshot: i,
                              currentSnapshot: s,
                              guards: {
                                canActivateChecks: a,
                                canDeactivateChecks: l,
                              },
                            } = n;
                            return 0 === l.length && 0 === a.length
                              ? Object(r.a)(
                                  Object.assign(Object.assign({}, n), {
                                    guardsResult: !0,
                                  })
                                )
                              : (function (e, t, n, i) {
                                  return Object(o.a)(e).pipe(
                                    Object(A.a)((e) =>
                                      (function (e, t, n, i, s) {
                                        const o =
                                          t && t.routeConfig
                                            ? t.routeConfig.canDeactivate
                                            : null;
                                        if (!o || 0 === o.length)
                                          return Object(r.a)(!0);
                                        const a = o.map((r) => {
                                          const o = Wt(r, t, s);
                                          let a;
                                          if (
                                            (function (e) {
                                              return e && Ot(e.canDeactivate);
                                            })(o)
                                          )
                                            a = Me(o.canDeactivate(e, t, n, i));
                                          else {
                                            if (!Ot(o))
                                              throw new Error(
                                                "Invalid CanDeactivate guard"
                                              );
                                            a = Me(o(e, t, n, i));
                                          }
                                          return a.pipe(Object(L.a)());
                                        });
                                        return Object(r.a)(a).pipe(Bt());
                                      })(e.component, e.route, n, t, i)
                                    ),
                                    Object(L.a)((e) => !0 !== e, !0)
                                  );
                                })(l, i, s, e).pipe(
                                  Object(A.a)((n) =>
                                    n && "boolean" == typeof n
                                      ? (function (e, t, n, i) {
                                          return Object(o.a)(t).pipe(
                                            Object(H.a)((t) =>
                                              Object(o.a)([
                                                Ut(t.route.parent, i),
                                                Ht(t.route, i),
                                                $t(e, t.path, n),
                                                Gt(e, t.route, n),
                                              ]).pipe(
                                                Object(_.a)(),
                                                Object(L.a)((e) => !0 !== e, !0)
                                              )
                                            ),
                                            Object(L.a)((e) => !0 !== e, !0)
                                          );
                                        })(i, a, e, t)
                                      : Object(r.a)(n)
                                  ),
                                  Object(S.a)((e) =>
                                    Object.assign(Object.assign({}, n), {
                                      guardsResult: e,
                                    })
                                  )
                                );
                          })
                        );
                      };
                    })(this.ngModule.injector, (e) => this.triggerEvent(e)),
                    Object(G.a)((e) => {
                      if (xt(e.guardsResult)) {
                        const t = be(
                          `Redirecting to "${this.serializeUrl(
                            e.guardsResult
                          )}"`
                        );
                        throw ((t.url = e.guardsResult), t);
                      }
                    }),
                    Object(G.a)((e) => {
                      const t = new se(
                        e.id,
                        this.serializeUrl(e.extractedUrl),
                        this.serializeUrl(e.urlAfterRedirects),
                        e.targetSnapshot,
                        !!e.guardsResult
                      );
                      this.triggerEvent(t);
                    }),
                    Object(C.a)((e) => {
                      if (!e.guardsResult) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new ee(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          ""
                        );
                        return t.next(n), e.resolve(!1), !1;
                      }
                      return !0;
                    }),
                    rn((e) => {
                      if (e.guards.canActivateChecks.length)
                        return Object(r.a)(e).pipe(
                          Object(G.a)((e) => {
                            const t = new re(
                              e.id,
                              this.serializeUrl(e.extractedUrl),
                              this.serializeUrl(e.urlAfterRedirects),
                              e.targetSnapshot
                            );
                            this.triggerEvent(t);
                          }),
                          ((t = this.paramsInheritanceStrategy),
                          (n = this.ngModule.injector),
                          function (e) {
                            return e.pipe(
                              Object(A.a)((e) => {
                                const {
                                  targetSnapshot: i,
                                  guards: { canActivateChecks: s },
                                } = e;
                                return s.length
                                  ? Object(o.a)(s).pipe(
                                      Object(H.a)((e) =>
                                        (function (e, t, n, i) {
                                          return (function (e, t, n, i) {
                                            const s = Object.keys(e);
                                            if (0 === s.length)
                                              return Object(r.a)({});
                                            if (1 === s.length) {
                                              const r = s[0];
                                              return sn(e[r], t, n, i).pipe(
                                                Object(S.a)((e) => ({ [r]: e }))
                                              );
                                            }
                                            const a = {};
                                            return Object(o.a)(s)
                                              .pipe(
                                                Object(A.a)((s) =>
                                                  sn(e[s], t, n, i).pipe(
                                                    Object(S.a)(
                                                      (e) => ((a[s] = e), e)
                                                    )
                                                  )
                                                )
                                              )
                                              .pipe(
                                                R(),
                                                Object(S.a)(() => a)
                                              );
                                          })(e._resolve, e, t, i).pipe(
                                            Object(S.a)(
                                              (t) => (
                                                (e._resolvedData = t),
                                                (e.data = Object.assign(
                                                  Object.assign({}, e.data),
                                                  rt(e, n).resolve
                                                )),
                                                null
                                              )
                                            )
                                          );
                                        })(e.route, i, t, n)
                                      ),
                                      (function (e, t) {
                                        return arguments.length >= 2
                                          ? function (n) {
                                              return Object(U.a)(
                                                z(e, t),
                                                x(1),
                                                Object(I.a)(t)
                                              )(n);
                                            }
                                          : function (t) {
                                              return Object(U.a)(
                                                z((t, n, i) => e(t, n, i + 1)),
                                                x(1)
                                              )(t);
                                            };
                                      })((e, t) => e),
                                      Object(S.a)((t) => e)
                                    )
                                  : Object(r.a)(e);
                              })
                            );
                          }),
                          Object(G.a)((e) => {
                            const t = new oe(
                              e.id,
                              this.serializeUrl(e.extractedUrl),
                              this.serializeUrl(e.urlAfterRedirects),
                              e.targetSnapshot
                            );
                            this.triggerEvent(t);
                          })
                        );
                      var t, n;
                    }),
                    rn((e) => {
                      const {
                        targetSnapshot: t,
                        id: n,
                        extractedUrl: i,
                        rawUrl: s,
                        extras: { skipLocationChange: r, replaceUrl: o },
                      } = e;
                      return this.hooks.afterPreactivation(t, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: s,
                        skipLocationChange: !!r,
                        replaceUrl: !!o,
                      });
                    }),
                    Object(S.a)((e) => {
                      const t = (function (e, t, n) {
                        const i = (function e(t, n, i) {
                          if (
                            i &&
                            t.shouldReuseRoute(n.value, i.value.snapshot)
                          ) {
                            const s = i.value;
                            s._futureSnapshot = n.value;
                            const r = (function (t, n, i) {
                              return n.children.map((n) => {
                                for (const s of i.children)
                                  if (
                                    t.shouldReuseRoute(
                                      s.value.snapshot,
                                      n.value
                                    )
                                  )
                                    return e(t, n, s);
                                return e(t, n);
                              });
                            })(t, n, i);
                            return new et(s, r);
                          }
                          {
                            const i = t.retrieve(n.value);
                            if (i) {
                              const e = i.route;
                              return (
                                (function e(t, n) {
                                  if (
                                    t.value.routeConfig !== n.value.routeConfig
                                  )
                                    throw new Error(
                                      "Cannot reattach ActivatedRouteSnapshot created from a different route"
                                    );
                                  if (t.children.length !== n.children.length)
                                    throw new Error(
                                      "Cannot reattach ActivatedRouteSnapshot with a different number of children"
                                    );
                                  n.value._futureSnapshot = t.value;
                                  for (let i = 0; i < t.children.length; ++i)
                                    e(t.children[i], n.children[i]);
                                })(n, e),
                                e
                              );
                            }
                            {
                              const i = new st(
                                  new a.a((s = n.value).url),
                                  new a.a(s.params),
                                  new a.a(s.queryParams),
                                  new a.a(s.fragment),
                                  new a.a(s.data),
                                  s.outlet,
                                  s.component,
                                  s
                                ),
                                r = n.children.map((n) => e(t, n));
                              return new et(i, r);
                            }
                          }
                          var s;
                        })(e, t._root, n ? n._root : void 0);
                        return new nt(i, t);
                      })(
                        this.routeReuseStrategy,
                        e.targetSnapshot,
                        e.currentRouterState
                      );
                      return Object.assign(Object.assign({}, e), {
                        targetRouterState: t,
                      });
                    }),
                    Object(G.a)((e) => {
                      (this.currentUrlTree = e.urlAfterRedirects),
                        (this.rawUrlTree = this.urlHandlingStrategy.merge(
                          this.currentUrlTree,
                          e.rawUrl
                        )),
                        (this.routerState = e.targetRouterState),
                        "deferred" === this.urlUpdateStrategy &&
                          (e.extras.skipLocationChange ||
                            this.setBrowserUrl(
                              this.rawUrlTree,
                              !!e.extras.replaceUrl,
                              e.id,
                              e.extras.state
                            ),
                          (this.browserUrlTree = e.urlAfterRedirects));
                    }),
                    ((l = this.rootContexts),
                    (c = this.routeReuseStrategy),
                    (u = (e) => this.triggerEvent(e)),
                    Object(S.a)(
                      (e) => (
                        new Ct(
                          c,
                          e.targetRouterState,
                          e.currentRouterState,
                          u
                        ).activate(l),
                        e
                      )
                    )),
                    Object(G.a)({
                      next() {
                        n = !0;
                      },
                      complete() {
                        n = !0;
                      },
                    }),
                    ((s = () => {
                      if (!n && !i) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new ee(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          `Navigation ID ${e.id} is not equal to the current navigation id ${this.navigationId}`
                        );
                        t.next(n), e.resolve(!1);
                      }
                      this.currentNavigation = null;
                    }),
                    (e) => e.lift(new q(s))),
                    Object(N.a)((n) => {
                      if (((i = !0), (s = n) && s.ngNavigationCancelingError)) {
                        const i = xt(n.url);
                        i ||
                          ((this.navigated = !0),
                          this.resetStateAndUrl(
                            e.currentRouterState,
                            e.currentUrlTree,
                            e.rawUrl
                          ));
                        const s = new ee(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          n.message
                        );
                        t.next(s),
                          i
                            ? setTimeout(() => {
                                const t = this.urlHandlingStrategy.merge(
                                  n.url,
                                  this.rawUrlTree
                                );
                                return this.scheduleNavigation(
                                  t,
                                  "imperative",
                                  null,
                                  {
                                    skipLocationChange:
                                      e.extras.skipLocationChange,
                                    replaceUrl:
                                      "eager" === this.urlUpdateStrategy,
                                  },
                                  {
                                    resolve: e.resolve,
                                    reject: e.reject,
                                    promise: e.promise,
                                  }
                                );
                              }, 0)
                            : e.resolve(!1);
                      } else {
                        this.resetStateAndUrl(
                          e.currentRouterState,
                          e.currentUrlTree,
                          e.rawUrl
                        );
                        const i = new te(
                          e.id,
                          this.serializeUrl(e.extractedUrl),
                          n
                        );
                        t.next(i);
                        try {
                          e.resolve(this.errorHandler(n));
                        } catch (r) {
                          e.reject(r);
                        }
                      }
                      var s;
                      return v.a;
                    })
                  );
                  var s, l, c, u;
                })
              );
            }
            resetRootComponentType(e) {
              (this.rootComponentType = e),
                (this.routerState.root.component = this.rootComponentType);
            }
            getTransition() {
              const e = this.transitions.value;
              return (e.urlAfterRedirects = this.browserUrlTree), e;
            }
            setTransition(e) {
              this.transitions.next(
                Object.assign(Object.assign({}, this.getTransition()), e)
              );
            }
            initialNavigation() {
              this.setUpLocationChangeListener(),
                0 === this.navigationId &&
                  this.navigateByUrl(this.location.path(!0), {
                    replaceUrl: !0,
                  });
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe((e) => {
                  let t = this.parseUrl(e.url);
                  const n = "popstate" === e.type ? "popstate" : "hashchange",
                    i = e.state && e.state.navigationId ? e.state : null;
                  setTimeout(() => {
                    this.scheduleNavigation(t, n, i, { replaceUrl: !0 });
                  }, 0);
                }));
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.currentNavigation;
            }
            triggerEvent(e) {
              this.events.next(e);
            }
            resetConfig(e) {
              we(e),
                (this.config = e.map(Ce)),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = null));
            }
            createUrlTree(e, t = {}) {
              const {
                relativeTo: n,
                queryParams: i,
                fragment: r,
                preserveQueryParams: o,
                queryParamsHandling: a,
                preserveFragment: l,
              } = t;
              Object(s.Y)() &&
                o &&
                console &&
                console.warn &&
                console.warn(
                  "preserveQueryParams is deprecated, use queryParamsHandling instead."
                );
              const c = n || this.routerState.root,
                u = l ? this.currentUrlTree.fragment : r;
              let h = null;
              if (a)
                switch (a) {
                  case "merge":
                    h = Object.assign(
                      Object.assign({}, this.currentUrlTree.queryParams),
                      i
                    );
                    break;
                  case "preserve":
                    h = this.currentUrlTree.queryParams;
                    break;
                  default:
                    h = i || null;
                }
              else h = o ? this.currentUrlTree.queryParams : i || null;
              return (
                null !== h && (h = this.removeEmptyProps(h)),
                (function (e, t, n, i, s) {
                  if (0 === n.length) return pt(t.root, t.root, t, i, s);
                  const r = (function (e) {
                    if (
                      "string" == typeof e[0] &&
                      1 === e.length &&
                      "/" === e[0]
                    )
                      return new ft(!0, 0, e);
                    let t = 0,
                      n = !1;
                    const i = e.reduce((e, i, s) => {
                      if ("object" == typeof i && null != i) {
                        if (i.outlets) {
                          const t = {};
                          return (
                            ke(i.outlets, (e, n) => {
                              t[n] = "string" == typeof e ? e.split("/") : e;
                            }),
                            [...e, { outlets: t }]
                          );
                        }
                        if (i.segmentPath) return [...e, i.segmentPath];
                      }
                      return "string" != typeof i
                        ? [...e, i]
                        : 0 === s
                        ? (i.split("/").forEach((i, s) => {
                            (0 == s && "." === i) ||
                              (0 == s && "" === i
                                ? (n = !0)
                                : ".." === i
                                ? t++
                                : "" != i && e.push(i));
                          }),
                          e)
                        : [...e, i];
                    }, []);
                    return new ft(n, t, i);
                  })(n);
                  if (r.toRoot()) return pt(t.root, new Re([], {}), t, i, s);
                  const o = (function (e, t, n) {
                      if (e.isAbsolute) return new gt(t.root, !0, 0);
                      if (-1 === n.snapshot._lastPathIndex)
                        return new gt(n.snapshot._urlSegment, !0, 0);
                      const i = dt(e.commands[0]) ? 0 : 1;
                      return (function (e, t, n) {
                        let i = e,
                          s = t,
                          r = n;
                        for (; r > s; ) {
                          if (((r -= s), (i = i.parent), !i))
                            throw new Error("Invalid number of '../'");
                          s = i.segments.length;
                        }
                        return new gt(i, !1, s - r);
                      })(
                        n.snapshot._urlSegment,
                        n.snapshot._lastPathIndex + i,
                        e.numberOfDoubleDots
                      );
                    })(r, t, e),
                    a = o.processChildren
                      ? vt(o.segmentGroup, o.index, r.commands)
                      : bt(o.segmentGroup, o.index, r.commands);
                  return pt(o.segmentGroup, a, t, i, s);
                })(c, this.currentUrlTree, e, h, u)
              );
            }
            navigateByUrl(e, t = { skipLocationChange: !1 }) {
              Object(s.Y)() &&
                this.isNgZoneEnabled &&
                !s.B.isInAngularZone() &&
                this.console.warn(
                  "Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?"
                );
              const n = xt(e) ? e : this.parseUrl(e),
                i = this.urlHandlingStrategy.merge(n, this.rawUrlTree);
              return this.scheduleNavigation(i, "imperative", null, t);
            }
            navigate(e, t = { skipLocationChange: !1 }) {
              return (
                (function (e) {
                  for (let t = 0; t < e.length; t++) {
                    const n = e[t];
                    if (null == n)
                      throw new Error(
                        `The requested path contains ${n} segment at index ${t}`
                      );
                  }
                })(e),
                this.navigateByUrl(this.createUrlTree(e, t), t)
              );
            }
            serializeUrl(e) {
              return this.urlSerializer.serialize(e);
            }
            parseUrl(e) {
              let t;
              try {
                t = this.urlSerializer.parse(e);
              } catch (n) {
                t = this.malformedUriErrorHandler(n, this.urlSerializer, e);
              }
              return t;
            }
            isActive(e, t) {
              if (xt(e)) return Ie(this.currentUrlTree, e, t);
              const n = this.parseUrl(e);
              return Ie(this.currentUrlTree, n, t);
            }
            removeEmptyProps(e) {
              return Object.keys(e).reduce((t, n) => {
                const i = e[n];
                return null != i && (t[n] = i), t;
              }, {});
            }
            processNavigations() {
              this.navigations.subscribe(
                (e) => {
                  (this.navigated = !0),
                    (this.lastSuccessfulId = e.id),
                    this.events.next(
                      new J(
                        e.id,
                        this.serializeUrl(e.extractedUrl),
                        this.serializeUrl(this.currentUrlTree)
                      )
                    ),
                    (this.lastSuccessfulNavigation = this.currentNavigation),
                    (this.currentNavigation = null),
                    e.resolve(!0);
                },
                (e) => {
                  this.console.warn("Unhandled Navigation Error: ");
                }
              );
            }
            scheduleNavigation(e, t, n, i, s) {
              const r = this.getTransition();
              if (
                r &&
                "imperative" !== t &&
                "imperative" === r.source &&
                r.rawUrl.toString() === e.toString()
              )
                return Promise.resolve(!0);
              if (
                r &&
                "hashchange" == t &&
                "popstate" === r.source &&
                r.rawUrl.toString() === e.toString()
              )
                return Promise.resolve(!0);
              if (
                r &&
                "popstate" == t &&
                "hashchange" === r.source &&
                r.rawUrl.toString() === e.toString()
              )
                return Promise.resolve(!0);
              let o, a, l;
              s
                ? ((o = s.resolve), (a = s.reject), (l = s.promise))
                : (l = new Promise((e, t) => {
                    (o = e), (a = t);
                  }));
              const c = ++this.navigationId;
              return (
                this.setTransition({
                  id: c,
                  source: t,
                  restoredState: n,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.rawUrlTree,
                  rawUrl: e,
                  extras: i,
                  resolve: o,
                  reject: a,
                  promise: l,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                l.catch((e) => Promise.reject(e))
              );
            }
            setBrowserUrl(e, t, n, i) {
              const s = this.urlSerializer.serialize(e);
              (i = i || {}),
                this.location.isCurrentPathEqualTo(s) || t
                  ? this.location.replaceState(
                      s,
                      "",
                      Object.assign(Object.assign({}, i), { navigationId: n })
                    )
                  : this.location.go(
                      s,
                      "",
                      Object.assign(Object.assign({}, i), { navigationId: n })
                    );
            }
            resetStateAndUrl(e, t, n) {
              (this.routerState = e),
                (this.currentUrlTree = t),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(
                  this.currentUrlTree,
                  n
                )),
                this.resetUrlToCurrentUrlTree();
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(
                this.urlSerializer.serialize(this.rawUrlTree),
                "",
                { navigationId: this.lastSuccessfulId }
              );
            }
          }
          return (
            (e.ɵfac = function (e) {
              s.ec();
            }),
            (e.ɵdir = s.Mb({ type: e })),
            e
          );
        })(),
        fn = (() => {
          class e {
            constructor(e, t, n, i, s) {
              (this.router = e),
                (this.route = t),
                (this.commands = []),
                null == n && i.setAttribute(s.nativeElement, "tabindex", "0");
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
            }
            set preserveQueryParams(e) {
              Object(s.Y)() &&
                console &&
                console.warn &&
                console.warn(
                  "preserveQueryParams is deprecated!, use queryParamsHandling instead."
                ),
                (this.preserve = e);
            }
            onClick() {
              const e = {
                skipLocationChange: mn(this.skipLocationChange),
                replaceUrl: mn(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, e), !0;
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                preserveQueryParams: mn(this.preserve),
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: mn(this.preserveFragment),
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                s.Rb(pn),
                s.Rb(st),
                s.cc("tabindex"),
                s.Rb(s.F),
                s.Rb(s.m)
              );
            }),
            (e.ɵdir = s.Mb({
              type: e,
              selectors: [["", "routerLink", "", 5, "a", 5, "area"]],
              hostBindings: function (e, t) {
                1 & e &&
                  s.fc("click", function () {
                    return t.onClick();
                  });
              },
              inputs: {
                routerLink: "routerLink",
                preserveQueryParams: "preserveQueryParams",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
              },
            })),
            e
          );
        })(),
        gn = (() => {
          class e {
            constructor(e, t, n) {
              (this.router = e),
                (this.route = t),
                (this.locationStrategy = n),
                (this.commands = []),
                (this.subscription = e.events.subscribe((e) => {
                  e instanceof J && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(e) {
              this.commands = null != e ? (Array.isArray(e) ? e : [e]) : [];
            }
            set preserveQueryParams(e) {
              Object(s.Y)() &&
                console &&
                console.warn &&
                console.warn(
                  "preserveQueryParams is deprecated, use queryParamsHandling instead."
                ),
                (this.preserve = e);
            }
            ngOnChanges(e) {
              this.updateTargetUrlAndHref();
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(e, t, n, i) {
              if (0 !== e || t || n || i) return !0;
              if ("string" == typeof this.target && "_self" != this.target)
                return !0;
              const s = {
                skipLocationChange: mn(this.skipLocationChange),
                replaceUrl: mn(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, s), !1;
            }
            updateTargetUrlAndHref() {
              this.href = this.locationStrategy.prepareExternalUrl(
                this.router.serializeUrl(this.urlTree)
              );
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                preserveQueryParams: mn(this.preserve),
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: mn(this.preserveFragment),
              });
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(s.Rb(pn), s.Rb(st), s.Rb(i.j));
            }),
            (e.ɵdir = s.Mb({
              type: e,
              selectors: [
                ["a", "routerLink", ""],
                ["area", "routerLink", ""],
              ],
              hostVars: 2,
              hostBindings: function (e, t) {
                1 & e &&
                  s.fc("click", function (e) {
                    return t.onClick(
                      e.button,
                      e.ctrlKey,
                      e.metaKey,
                      e.shiftKey
                    );
                  }),
                  2 & e &&
                    (s.ac("href", t.href, s.Gc), s.Fb("target", t.target));
              },
              inputs: {
                routerLink: "routerLink",
                preserveQueryParams: "preserveQueryParams",
                target: "target",
                queryParams: "queryParams",
                fragment: "fragment",
                queryParamsHandling: "queryParamsHandling",
                preserveFragment: "preserveFragment",
                skipLocationChange: "skipLocationChange",
                replaceUrl: "replaceUrl",
                state: "state",
              },
              features: [s.Cb],
            })),
            e
          );
        })();
      function mn(e) {
        return "" === e || !!e;
      }
      let bn = (() => {
        class e {
          constructor(e, t, n, i, s) {
            (this.router = e),
              (this.element = t),
              (this.renderer = n),
              (this.link = i),
              (this.linkWithHref = s),
              (this.classes = []),
              (this.isActive = !1),
              (this.routerLinkActiveOptions = { exact: !1 }),
              (this.subscription = e.events.subscribe((e) => {
                e instanceof J && this.update();
              }));
          }
          ngAfterContentInit() {
            this.links.changes.subscribe((e) => this.update()),
              this.linksWithHrefs.changes.subscribe((e) => this.update()),
              this.update();
          }
          set routerLinkActive(e) {
            const t = Array.isArray(e) ? e : e.split(" ");
            this.classes = t.filter((e) => !!e);
          }
          ngOnChanges(e) {
            this.update();
          }
          ngOnDestroy() {
            this.subscription.unsubscribe();
          }
          update() {
            this.links &&
              this.linksWithHrefs &&
              this.router.navigated &&
              Promise.resolve().then(() => {
                const e = this.hasActiveLinks();
                this.isActive !== e &&
                  ((this.isActive = e),
                  this.classes.forEach((t) => {
                    e
                      ? this.renderer.addClass(this.element.nativeElement, t)
                      : this.renderer.removeClass(
                          this.element.nativeElement,
                          t
                        );
                  }));
              });
          }
          isLinkActive(e) {
            return (t) =>
              e.isActive(t.urlTree, this.routerLinkActiveOptions.exact);
          }
          hasActiveLinks() {
            const e = this.isLinkActive(this.router);
            return (
              (this.link && e(this.link)) ||
              (this.linkWithHref && e(this.linkWithHref)) ||
              this.links.some(e) ||
              this.linksWithHrefs.some(e)
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              s.Rb(pn),
              s.Rb(s.m),
              s.Rb(s.F),
              s.Rb(fn, 8),
              s.Rb(gn, 8)
            );
          }),
          (e.ɵdir = s.Mb({
            type: e,
            selectors: [["", "routerLinkActive", ""]],
            contentQueries: function (e, t, n) {
              var i;
              1 & e && (s.Jb(n, fn, !0), s.Jb(n, gn, !0)),
                2 & e &&
                  (s.Ac((i = s.gc())) && (t.links = i),
                  s.Ac((i = s.gc())) && (t.linksWithHrefs = i));
            },
            inputs: {
              routerLinkActiveOptions: "routerLinkActiveOptions",
              routerLinkActive: "routerLinkActive",
            },
            exportAs: ["routerLinkActive"],
            features: [s.Cb],
          })),
          e
        );
      })();
      class vn {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new yn()),
            (this.attachRef = null);
        }
      }
      class yn {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(e, t) {
          const n = this.getOrCreateContext(e);
          (n.outlet = t), this.contexts.set(e, n);
        }
        onChildOutletDestroyed(e) {
          const t = this.getContext(e);
          t && (t.outlet = null);
        }
        onOutletDeactivated() {
          const e = this.contexts;
          return (this.contexts = new Map()), e;
        }
        onOutletReAttached(e) {
          this.contexts = e;
        }
        getOrCreateContext(e) {
          let t = this.getContext(e);
          return t || ((t = new vn()), this.contexts.set(e, t)), t;
        }
        getContext(e) {
          return this.contexts.get(e) || null;
        }
      }
      let wn = (() => {
        class e {
          constructor(e, t, n, i, r) {
            (this.parentContexts = e),
              (this.location = t),
              (this.resolver = n),
              (this.changeDetector = r),
              (this.activated = null),
              (this._activatedRoute = null),
              (this.activateEvents = new s.o()),
              (this.deactivateEvents = new s.o()),
              (this.name = i || "primary"),
              e.onChildOutletCreated(this.name, this);
          }
          ngOnDestroy() {
            this.parentContexts.onChildOutletDestroyed(this.name);
          }
          ngOnInit() {
            if (!this.activated) {
              const e = this.parentContexts.getContext(this.name);
              e &&
                e.route &&
                (e.attachRef
                  ? this.attach(e.attachRef, e.route)
                  : this.activateWith(e.route, e.resolver || null));
            }
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new Error("Outlet is not activated");
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new Error("Outlet is not activated");
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new Error("Outlet is not activated");
            this.location.detach();
            const e = this.activated;
            return (this.activated = null), (this._activatedRoute = null), e;
          }
          attach(e, t) {
            (this.activated = e),
              (this._activatedRoute = t),
              this.location.insert(e.hostView);
          }
          deactivate() {
            if (this.activated) {
              const e = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(e);
            }
          }
          activateWith(e, t) {
            if (this.isActivated)
              throw new Error("Cannot activate an already activated outlet");
            this._activatedRoute = e;
            const n = (t = t || this.resolver).resolveComponentFactory(
                e._futureSnapshot.routeConfig.component
              ),
              i = this.parentContexts.getOrCreateContext(this.name).children,
              s = new Sn(e, i, this.location.injector);
            (this.activated = this.location.createComponent(
              n,
              this.location.length,
              s
            )),
              this.changeDetector.markForCheck(),
              this.activateEvents.emit(this.activated.instance);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              s.Rb(yn),
              s.Rb(s.Q),
              s.Rb(s.k),
              s.cc("name"),
              s.Rb(s.i)
            );
          }),
          (e.ɵdir = s.Mb({
            type: e,
            selectors: [["router-outlet"]],
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
            },
            exportAs: ["outlet"],
          })),
          e
        );
      })();
      class Sn {
        constructor(e, t, n) {
          (this.route = e), (this.childContexts = t), (this.parent = n);
        }
        get(e, t) {
          return e === st
            ? this.route
            : e === yn
            ? this.childContexts
            : this.parent.get(e, t);
        }
      }
      class _n {}
      class Cn {
        preload(e, t) {
          return Object(r.a)(null);
        }
      }
      let En = (() => {
          class e {
            constructor(e, t, n, i, s) {
              (this.router = e),
                (this.injector = i),
                (this.preloadingStrategy = s),
                (this.loader = new ln(
                  t,
                  n,
                  (t) => e.triggerEvent(new ae(t)),
                  (t) => e.triggerEvent(new le(t))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  Object(C.a)((e) => e instanceof J),
                  Object(H.a)(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const e = this.injector.get(s.z);
              return this.processRoutes(e, this.router.config);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            processRoutes(e, t) {
              const n = [];
              for (const i of t)
                if (i.loadChildren && !i.canLoad && i._loadedConfig) {
                  const e = i._loadedConfig;
                  n.push(this.processRoutes(e.module, e.routes));
                } else
                  i.loadChildren && !i.canLoad
                    ? n.push(this.preloadConfig(e, i))
                    : i.children && n.push(this.processRoutes(e, i.children));
              return Object(o.a)(n).pipe(
                Object(Y.a)(),
                Object(S.a)((e) => {})
              );
            }
            preloadConfig(e, t) {
              return this.preloadingStrategy.preload(t, () =>
                this.loader
                  .load(e.injector, t)
                  .pipe(
                    Object(A.a)(
                      (e) => (
                        (t._loadedConfig = e),
                        this.processRoutes(e.module, e.routes)
                      )
                    )
                  )
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                s.bc(pn),
                s.bc(s.y),
                s.bc(s.j),
                s.bc(s.s),
                s.bc(_n)
              );
            }),
            (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        On = (() => {
          class e {
            constructor(e, t, n = {}) {
              (this.router = e),
                (this.viewportScroller = t),
                (this.options = n),
                (this.lastId = 0),
                (this.lastSource = "imperative"),
                (this.restoredId = 0),
                (this.store = {}),
                (n.scrollPositionRestoration =
                  n.scrollPositionRestoration || "disabled"),
                (n.anchorScrolling = n.anchorScrolling || "disabled");
            }
            init() {
              "disabled" !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration("manual"),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof Q
                  ? ((this.store[this.lastId] =
                      this.viewportScroller.getScrollPosition()),
                    (this.lastSource = e.navigationTrigger),
                    (this.restoredId = e.restoredState
                      ? e.restoredState.navigationId
                      : 0))
                  : e instanceof J &&
                    ((this.lastId = e.id),
                    this.scheduleScrollEvent(
                      e,
                      this.router.parseUrl(e.urlAfterRedirects).fragment
                    ));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((e) => {
                e instanceof pe &&
                  (e.position
                    ? "top" === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : "enabled" === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(e.position)
                    : e.anchor && "enabled" === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(e.anchor)
                    : "disabled" !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(e, t) {
              this.router.triggerEvent(
                new pe(
                  e,
                  "popstate" === this.lastSource
                    ? this.store[this.restoredId]
                    : null,
                  t
                )
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription &&
                this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription &&
                  this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (e.ɵfac = function (e) {
              s.ec();
            }),
            (e.ɵdir = s.Mb({ type: e })),
            e
          );
        })();
      const xn = new s.r("ROUTER_CONFIGURATION"),
        Tn = new s.r("ROUTER_FORROOT_GUARD"),
        kn = [
          i.i,
          { provide: De, useClass: je },
          {
            provide: pn,
            useFactory: function (e, t, n, s, r, o, a, l = {}, c, u) {
              const h = new pn(null, e, t, n, s, r, o, xe(a));
              if (
                (c && (h.urlHandlingStrategy = c),
                u && (h.routeReuseStrategy = u),
                l.errorHandler && (h.errorHandler = l.errorHandler),
                l.malformedUriErrorHandler &&
                  (h.malformedUriErrorHandler = l.malformedUriErrorHandler),
                l.enableTracing)
              ) {
                const e = Object(i.A)();
                h.events.subscribe((t) => {
                  e.logGroup("Router Event: " + t.constructor.name),
                    e.log(t.toString()),
                    e.log(t),
                    e.logGroupEnd();
                });
              }
              return (
                l.onSameUrlNavigation &&
                  (h.onSameUrlNavigation = l.onSameUrlNavigation),
                l.paramsInheritanceStrategy &&
                  (h.paramsInheritanceStrategy = l.paramsInheritanceStrategy),
                l.urlUpdateStrategy &&
                  (h.urlUpdateStrategy = l.urlUpdateStrategy),
                l.relativeLinkResolution &&
                  (h.relativeLinkResolution = l.relativeLinkResolution),
                h
              );
            },
            deps: [
              De,
              yn,
              i.i,
              s.s,
              s.y,
              s.j,
              an,
              xn,
              [class {}, new s.C()],
              [class {}, new s.C()],
            ],
          },
          yn,
          {
            provide: st,
            useFactory: function (e) {
              return e.routerState.root;
            },
            deps: [pn],
          },
          { provide: s.y, useClass: s.L },
          En,
          Cn,
          class {
            preload(e, t) {
              return t().pipe(Object(N.a)(() => Object(r.a)(null)));
            }
          },
          { provide: xn, useValue: { enableTracing: !1 } },
        ];
      function Mn() {
        return new s.A("Router", pn);
      }
      let In = (() => {
        class e {
          constructor(e, t) {}
          static forRoot(t, n) {
            return {
              ngModule: e,
              providers: [
                kn,
                Ln(t),
                {
                  provide: Tn,
                  useFactory: Nn,
                  deps: [[pn, new s.C(), new s.K()]],
                },
                { provide: xn, useValue: n || {} },
                {
                  provide: i.j,
                  useFactory: Rn,
                  deps: [i.t, [new s.q(i.a), new s.C()], xn],
                },
                { provide: On, useFactory: Pn, deps: [pn, i.v, xn] },
                {
                  provide: _n,
                  useExisting:
                    n && n.preloadingStrategy ? n.preloadingStrategy : Cn,
                },
                { provide: s.A, multi: !0, useFactory: Mn },
                [
                  An,
                  { provide: s.d, multi: !0, useFactory: Dn, deps: [An] },
                  { provide: Fn, useFactory: jn, deps: [An] },
                  { provide: s.b, multi: !0, useExisting: Fn },
                ],
              ],
            };
          }
          static forChild(t) {
            return { ngModule: e, providers: [Ln(t)] };
          }
        }
        return (
          (e.ɵmod = s.Pb({ type: e })),
          (e.ɵinj = s.Ob({
            factory: function (t) {
              return new (t || e)(s.bc(Tn, 8), s.bc(pn, 8));
            },
          })),
          e
        );
      })();
      function Pn(e, t, n) {
        return n.scrollOffset && t.setOffset(n.scrollOffset), new On(e, t, n);
      }
      function Rn(e, t, n = {}) {
        return n.useHash ? new i.g(e, t) : new i.s(e, t);
      }
      function Nn(e) {
        if (e)
          throw new Error(
            "RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead."
          );
        return "guarded";
      }
      function Ln(e) {
        return [
          { provide: s.a, multi: !0, useValue: e },
          { provide: an, multi: !0, useValue: e },
        ];
      }
      let An = (() => {
        class e {
          constructor(e) {
            (this.injector = e),
              (this.initNavigation = !1),
              (this.resultOfPreactivationDone = new w.b());
          }
          appInitializer() {
            return this.injector.get(i.h, Promise.resolve(null)).then(() => {
              let e = null;
              const t = new Promise((t) => (e = t)),
                n = this.injector.get(pn),
                i = this.injector.get(xn);
              if (this.isLegacyDisabled(i) || this.isLegacyEnabled(i)) e(!0);
              else if ("disabled" === i.initialNavigation)
                n.setUpLocationChangeListener(), e(!0);
              else {
                if ("enabled" !== i.initialNavigation)
                  throw new Error(
                    `Invalid initialNavigation options: '${i.initialNavigation}'`
                  );
                (n.hooks.afterPreactivation = () =>
                  this.initNavigation
                    ? Object(r.a)(null)
                    : ((this.initNavigation = !0),
                      e(!0),
                      this.resultOfPreactivationDone)),
                  n.initialNavigation();
              }
              return t;
            });
          }
          bootstrapListener(e) {
            const t = this.injector.get(xn),
              n = this.injector.get(En),
              i = this.injector.get(On),
              r = this.injector.get(pn),
              o = this.injector.get(s.g);
            e === o.components[0] &&
              (this.isLegacyEnabled(t)
                ? r.initialNavigation()
                : this.isLegacyDisabled(t) && r.setUpLocationChangeListener(),
              n.setUpPreloading(),
              i.init(),
              r.resetRootComponentType(o.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
          isLegacyEnabled(e) {
            return (
              "legacy_enabled" === e.initialNavigation ||
              !0 === e.initialNavigation ||
              void 0 === e.initialNavigation
            );
          }
          isLegacyDisabled(e) {
            return (
              "legacy_disabled" === e.initialNavigation ||
              !1 === e.initialNavigation
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(s.bc(s.s));
          }),
          (e.ɵprov = s.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function Dn(e) {
        return e.appInitializer.bind(e);
      }
      function jn(e) {
        return e.bootstrapListener.bind(e);
      }
      const Fn = new s.r("Router Initializer");
    },
    vkgz: function (e, t, n) {
      "use strict";
      var i = n("7o/Q");
      function s() {}
      var r = n("n6bG");
      function o(e, t, n) {
        return function (i) {
          return i.lift(new a(e, t, n));
        };
      }
      n.d(t, "a", function () {
        return o;
      });
      class a {
        constructor(e, t, n) {
          (this.nextOrObserver = e), (this.error = t), (this.complete = n);
        }
        call(e, t) {
          return t.subscribe(
            new l(e, this.nextOrObserver, this.error, this.complete)
          );
        }
      }
      class l extends i.a {
        constructor(e, t, n, i) {
          super(e),
            (this._tapNext = s),
            (this._tapError = s),
            (this._tapComplete = s),
            (this._tapError = n || s),
            (this._tapComplete = i || s),
            Object(r.a)(t)
              ? ((this._context = this), (this._tapNext = t))
              : t &&
                ((this._context = t),
                (this._tapNext = t.next || s),
                (this._tapError = t.error || s),
                (this._tapComplete = t.complete || s));
        }
        _next(e) {
          try {
            this._tapNext.call(this._context, e);
          } catch (t) {
            return void this.destination.error(t);
          }
          this.destination.next(e);
        }
        _error(e) {
          try {
            this._tapError.call(this._context, e);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.error(e);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (e) {
            return void this.destination.error(e);
          }
          return this.destination.complete();
        }
      }
    },
    vxfF: function (e, t, n) {
      "use strict";
      var i = n("fXoL");
      function s(e, t = 0) {
        return (function (e) {
          return !isNaN(parseFloat(e)) && !isNaN(Number(e));
        })(e)
          ? Number(e)
          : t;
      }
      var r = n("XNiG"),
        o = n("LRne"),
        a = n("HDdC"),
        l = n("xgIS"),
        c = n("VRyK"),
        u = n("3N8a");
      class h extends u.a {
        constructor(e, t) {
          super(e, t), (this.scheduler = e), (this.work = t);
        }
        requestAsyncId(e, t, n = 0) {
          return null !== n && n > 0
            ? super.requestAsyncId(e, t, n)
            : (e.actions.push(this),
              e.scheduled ||
                (e.scheduled = requestAnimationFrame(() => e.flush(null))));
        }
        recycleAsyncId(e, t, n = 0) {
          if ((null !== n && n > 0) || (null === n && this.delay > 0))
            return super.recycleAsyncId(e, t, n);
          0 === e.actions.length &&
            (cancelAnimationFrame(t), (e.scheduled = void 0));
        }
      }
      var d = n("IjjT");
      class p extends d.a {
        flush(e) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: t } = this;
          let n,
            i = -1,
            s = t.length;
          e = e || t.shift();
          do {
            if ((n = e.execute(e.state, e.delay))) break;
          } while (++i < s && (e = t.shift()));
          if (((this.active = !1), n)) {
            for (; ++i < s && (e = t.shift()); ) e.unsubscribe();
            throw n;
          }
        }
      }
      const f = new p(h);
      let g = 1;
      const m = (() => Promise.resolve())(),
        b = {};
      function v(e) {
        return e in b && (delete b[e], !0);
      }
      const y = {
        setImmediate(e) {
          const t = g++;
          return (b[t] = !0), m.then(() => v(t) && e()), t;
        },
        clearImmediate(e) {
          v(e);
        },
      };
      class w extends u.a {
        constructor(e, t) {
          super(e, t), (this.scheduler = e), (this.work = t);
        }
        requestAsyncId(e, t, n = 0) {
          return null !== n && n > 0
            ? super.requestAsyncId(e, t, n)
            : (e.actions.push(this),
              e.scheduled ||
                (e.scheduled = y.setImmediate(e.flush.bind(e, null))));
        }
        recycleAsyncId(e, t, n = 0) {
          if ((null !== n && n > 0) || (null === n && this.delay > 0))
            return super.recycleAsyncId(e, t, n);
          0 === e.actions.length &&
            (y.clearImmediate(t), (e.scheduled = void 0));
        }
      }
      class S extends d.a {
        flush(e) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: t } = this;
          let n,
            i = -1,
            s = t.length;
          e = e || t.shift();
          do {
            if ((n = e.execute(e.state, e.delay))) break;
          } while (++i < s && (e = t.shift()));
          if (((this.active = !1), n)) {
            for (; ++i < s && (e = t.shift()); ) e.unsubscribe();
            throw n;
          }
        }
      }
      const _ = new S(w);
      var C = n("quSY");
      function E(e) {
        return (
          !!e &&
          (e instanceof a.a ||
            ("function" == typeof e.lift && "function" == typeof e.subscribe))
        );
      }
      var O = n("/uUt");
      const x = new d.a(u.a);
      var T = n("l7GE"),
        k = n("ZUHj");
      class M {
        constructor(e) {
          this.durationSelector = e;
        }
        call(e, t) {
          return t.subscribe(new I(e, this.durationSelector));
        }
      }
      class I extends T.a {
        constructor(e, t) {
          super(e), (this.durationSelector = t), (this.hasValue = !1);
        }
        _next(e) {
          if (((this.value = e), (this.hasValue = !0), !this.throttled)) {
            let n;
            try {
              const { durationSelector: t } = this;
              n = t(e);
            } catch (t) {
              return this.destination.error(t);
            }
            const i = Object(k.a)(this, n);
            !i || i.closed
              ? this.clearThrottle()
              : this.add((this.throttled = i));
          }
        }
        clearThrottle() {
          const { value: e, hasValue: t, throttled: n } = this;
          n && (this.remove(n), (this.throttled = null), n.unsubscribe()),
            t &&
              ((this.value = null),
              (this.hasValue = !1),
              this.destination.next(e));
        }
        notifyNext(e, t, n, i) {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      var P = n("DH7j");
      function R(e) {
        return !Object(P.a)(e) && e - parseFloat(e) + 1 >= 0;
      }
      var N = n("z+Ro");
      function L(e) {
        const { index: t, period: n, subscriber: i } = e;
        if ((i.next(t), !i.closed)) {
          if (-1 === n) return i.complete();
          (e.index = t + 1), this.schedule(e, n);
        }
      }
      function A(e, t = x) {
        return (
          (n = () =>
            (function (e = 0, t, n) {
              let i = -1;
              return (
                R(t)
                  ? (i = Number(t) < 1 ? 1 : Number(t))
                  : Object(N.a)(t) && (n = t),
                Object(N.a)(n) || (n = x),
                new a.a((t) => {
                  const s = R(e) ? e : +e - n.now();
                  return n.schedule(L, s, {
                    index: 0,
                    period: i,
                    subscriber: t,
                  });
                })
              );
            })(e, t)),
          function (e) {
            return e.lift(new M(n));
          }
        );
        var n;
      }
      var D = n("pLZG"),
        j = n("1G5W"),
        F = n("JX91"),
        V = n("7o/Q");
      class W {
        call(e, t) {
          return t.subscribe(new z(e));
        }
      }
      class z extends V.a {
        constructor(e) {
          super(e), (this.hasPrev = !1);
        }
        _next(e) {
          let t;
          this.hasPrev ? (t = [this.prev, e]) : (this.hasPrev = !0),
            (this.prev = e),
            t && this.destination.next(t);
        }
      }
      var X = n("eIep"),
        B = n("UXun"),
        H = n("ofXK");
      let U;
      try {
        U = "undefined" != typeof Intl && Intl.v8BreakIterator;
      } catch (ge) {
        U = !1;
      }
      let G,
        $ = (() => {
          class e {
            constructor(e) {
              (this._platformId = e),
                (this.isBrowser = this._platformId
                  ? Object(H.w)(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !U) &&
                  "undefined" != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(i.D, 8));
            }),
            (e.ɵprov = Object(i.Nb)({
              factory: function () {
                return new e(Object(i.bc)(i.D, 8));
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        q = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })();
      function K() {
        if ("object" != typeof document || !document) return 0;
        if (null == G) {
          const e = document.createElement("div"),
            t = e.style;
          (e.dir = "rtl"),
            (t.height = "1px"),
            (t.width = "1px"),
            (t.overflow = "auto"),
            (t.visibility = "hidden"),
            (t.pointerEvents = "none"),
            (t.position = "absolute");
          const n = document.createElement("div"),
            i = n.style;
          (i.width = "2px"),
            (i.height = "1px"),
            e.appendChild(n),
            document.body.appendChild(e),
            (G = 0),
            0 === e.scrollLeft &&
              ((e.scrollLeft = 1), (G = 0 === e.scrollLeft ? 1 : 2)),
            e.parentNode.removeChild(e);
        }
        return G;
      }
      const Y = new i.r("cdk-dir-doc", {
        providedIn: "root",
        factory: function () {
          return Object(i.X)(H.e);
        },
      });
      let Z = (() => {
          class e {
            constructor(e) {
              if (((this.value = "ltr"), (this.change = new i.o()), e)) {
                const t = e.documentElement ? e.documentElement.dir : null,
                  n = (e.body ? e.body.dir : null) || t;
                this.value = "ltr" === n || "rtl" === n ? n : "ltr";
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(Y, 8));
            }),
            (e.ɵprov = Object(i.Nb)({
              factory: function () {
                return new e(Object(i.bc)(Y, 8));
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        Q = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })();
      class J extends class {} {
        constructor(e) {
          super(), (this._data = e);
        }
        connect() {
          return E(this._data) ? this._data : Object(o.a)(this._data);
        }
        disconnect() {}
      }
      n.d(t, "a", function () {
        return re;
      }),
        n.d(t, "b", function () {
          return de;
        }),
        n.d(t, "c", function () {
          return ue;
        }),
        n.d(t, "d", function () {
          return fe;
        });
      const ee = ["contentWrapper"],
        te = ["*"],
        ne = new i.r("VIRTUAL_SCROLL_STRATEGY");
      class ie {
        constructor(e, t, n) {
          (this._scrolledIndexChange = new r.b()),
            (this.scrolledIndexChange = this._scrolledIndexChange.pipe(
              Object(O.a)()
            )),
            (this._viewport = null),
            (this._itemSize = e),
            (this._minBufferPx = t),
            (this._maxBufferPx = n);
        }
        attach(e) {
          (this._viewport = e),
            this._updateTotalContentSize(),
            this._updateRenderedRange();
        }
        detach() {
          this._scrolledIndexChange.complete(), (this._viewport = null);
        }
        updateItemAndBufferSize(e, t, n) {
          if (n < t)
            throw Error(
              "CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx"
            );
          (this._itemSize = e),
            (this._minBufferPx = t),
            (this._maxBufferPx = n),
            this._updateTotalContentSize(),
            this._updateRenderedRange();
        }
        onContentScrolled() {
          this._updateRenderedRange();
        }
        onDataLengthChanged() {
          this._updateTotalContentSize(), this._updateRenderedRange();
        }
        onContentRendered() {}
        onRenderedOffsetChanged() {}
        scrollToIndex(e, t) {
          this._viewport &&
            this._viewport.scrollToOffset(e * this._itemSize, t);
        }
        _updateTotalContentSize() {
          this._viewport &&
            this._viewport.setTotalContentSize(
              this._viewport.getDataLength() * this._itemSize
            );
        }
        _updateRenderedRange() {
          if (!this._viewport) return;
          const e = this._viewport.measureScrollOffset(),
            t = e / this._itemSize,
            n = this._viewport.getRenderedRange(),
            i = { start: n.start, end: n.end },
            s = this._viewport.getViewportSize(),
            r = this._viewport.getDataLength(),
            o = e - i.start * this._itemSize;
          if (o < this._minBufferPx && 0 != i.start) {
            const e = Math.ceil((this._maxBufferPx - o) / this._itemSize);
            (i.start = Math.max(0, i.start - e)),
              (i.end = Math.min(
                r,
                Math.ceil(t + (s + this._minBufferPx) / this._itemSize)
              ));
          } else {
            const n = i.end * this._itemSize - (e + s);
            if (n < this._minBufferPx && i.end != r) {
              const e = Math.ceil((this._maxBufferPx - n) / this._itemSize);
              e > 0 &&
                ((i.end = Math.min(r, i.end + e)),
                (i.start = Math.max(
                  0,
                  Math.floor(t - this._minBufferPx / this._itemSize)
                )));
            }
          }
          this._viewport.setRenderedRange(i),
            this._viewport.setRenderedContentOffset(this._itemSize * i.start),
            this._scrolledIndexChange.next(Math.floor(t));
        }
      }
      function se(e) {
        return e._scrollStrategy;
      }
      let re = (() => {
          class e {
            constructor() {
              (this._itemSize = 20),
                (this._minBufferPx = 100),
                (this._maxBufferPx = 200),
                (this._scrollStrategy = new ie(
                  this.itemSize,
                  this.minBufferPx,
                  this.maxBufferPx
                ));
            }
            get itemSize() {
              return this._itemSize;
            }
            set itemSize(e) {
              this._itemSize = s(e);
            }
            get minBufferPx() {
              return this._minBufferPx;
            }
            set minBufferPx(e) {
              this._minBufferPx = s(e);
            }
            get maxBufferPx() {
              return this._maxBufferPx;
            }
            set maxBufferPx(e) {
              this._maxBufferPx = s(e);
            }
            ngOnChanges() {
              this._scrollStrategy.updateItemAndBufferSize(
                this.itemSize,
                this.minBufferPx,
                this.maxBufferPx
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["cdk-virtual-scroll-viewport", "itemSize", ""]],
              inputs: {
                itemSize: "itemSize",
                minBufferPx: "minBufferPx",
                maxBufferPx: "maxBufferPx",
              },
              features: [
                i.Db([
                  { provide: ne, useFactory: se, deps: [Object(i.V)(() => e)] },
                ]),
                i.Cb,
              ],
            })),
            e
          );
        })(),
        oe = (() => {
          class e {
            constructor(e, t, n) {
              (this._ngZone = e),
                (this._platform = t),
                (this._scrolled = new r.b()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = n);
            }
            register(e) {
              this.scrollContainers.has(e) ||
                this.scrollContainers.set(
                  e,
                  e.elementScrolled().subscribe(() => this._scrolled.next(e))
                );
            }
            deregister(e) {
              const t = this.scrollContainers.get(e);
              t && (t.unsubscribe(), this.scrollContainers.delete(e));
            }
            scrolled(e = 20) {
              return this._platform.isBrowser
                ? new a.a((t) => {
                    this._globalSubscription || this._addGlobalListener();
                    const n =
                      e > 0
                        ? this._scrolled.pipe(A(e)).subscribe(t)
                        : this._scrolled.subscribe(t);
                    return (
                      this._scrolledCount++,
                      () => {
                        n.unsubscribe(),
                          this._scrolledCount--,
                          this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : Object(o.a)();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((e, t) => this.deregister(t)),
                this._scrolled.complete();
            }
            ancestorScrolled(e, t) {
              const n = this.getAncestorScrollContainers(e);
              return this.scrolled(t).pipe(
                Object(D.a)((e) => !e || n.indexOf(e) > -1)
              );
            }
            getAncestorScrollContainers(e) {
              const t = [];
              return (
                this.scrollContainers.forEach((n, i) => {
                  this._scrollableContainsElement(i, e) && t.push(i);
                }),
                t
              );
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _scrollableContainsElement(e, t) {
              let n = t.nativeElement,
                i = e.getElementRef().nativeElement;
              do {
                if (n == i) return !0;
              } while ((n = n.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() => {
                const e = this._getWindow();
                return Object(l.a)(e.document, "scroll").subscribe(() =>
                  this._scrolled.next()
                );
              });
            }
            _removeGlobalListener() {
              this._globalSubscription &&
                (this._globalSubscription.unsubscribe(),
                (this._globalSubscription = null));
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc(i.B), i.bc($), i.bc(H.e, 8));
            }),
            (e.ɵprov = Object(i.Nb)({
              factory: function () {
                return new e(
                  Object(i.bc)(i.B),
                  Object(i.bc)($),
                  Object(i.bc)(H.e, 8)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })(),
        ae = (() => {
          class e {
            constructor(e, t, n, i) {
              (this.elementRef = e),
                (this.scrollDispatcher = t),
                (this.ngZone = n),
                (this.dir = i),
                (this._destroyed = new r.b()),
                (this._elementScrolled = new a.a((e) =>
                  this.ngZone.runOutsideAngular(() =>
                    Object(l.a)(this.elementRef.nativeElement, "scroll")
                      .pipe(Object(j.a)(this._destroyed))
                      .subscribe(e)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(e) {
              const t = this.elementRef.nativeElement,
                n = this.dir && "rtl" == this.dir.value;
              null == e.left && (e.left = n ? e.end : e.start),
                null == e.right && (e.right = n ? e.start : e.end),
                null != e.bottom &&
                  (e.top = t.scrollHeight - t.clientHeight - e.bottom),
                n && 0 != K()
                  ? (null != e.left &&
                      (e.right = t.scrollWidth - t.clientWidth - e.left),
                    2 == K()
                      ? (e.left = e.right)
                      : 1 == K() && (e.left = e.right ? -e.right : e.right))
                  : null != e.right &&
                    (e.left = t.scrollWidth - t.clientWidth - e.right),
                this._applyScrollToOptions(e);
            }
            _applyScrollToOptions(e) {
              const t = this.elementRef.nativeElement;
              "object" == typeof document &&
              "scrollBehavior" in document.documentElement.style
                ? t.scrollTo(e)
                : (null != e.top && (t.scrollTop = e.top),
                  null != e.left && (t.scrollLeft = e.left));
            }
            measureScrollOffset(e) {
              const t = this.elementRef.nativeElement;
              if ("top" == e) return t.scrollTop;
              if ("bottom" == e)
                return t.scrollHeight - t.clientHeight - t.scrollTop;
              const n = this.dir && "rtl" == this.dir.value;
              return (
                "start" == e
                  ? (e = n ? "right" : "left")
                  : "end" == e && (e = n ? "left" : "right"),
                n && 2 == K()
                  ? "left" == e
                    ? t.scrollWidth - t.clientWidth - t.scrollLeft
                    : t.scrollLeft
                  : n && 1 == K()
                  ? "left" == e
                    ? t.scrollLeft + t.scrollWidth - t.clientWidth
                    : -t.scrollLeft
                  : "left" == e
                  ? t.scrollLeft
                  : t.scrollWidth - t.clientWidth - t.scrollLeft
              );
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(oe), i.Rb(i.B), i.Rb(Z, 8));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [
                ["", "cdk-scrollable", ""],
                ["", "cdkScrollable", ""],
              ],
            })),
            e
          );
        })(),
        le = (() => {
          class e {
            constructor(e, t, n) {
              (this._platform = e),
                (this._document = n),
                t.runOutsideAngular(() => {
                  const t = this._getWindow();
                  (this._change = e.isBrowser
                    ? Object(c.a)(
                        Object(l.a)(t, "resize"),
                        Object(l.a)(t, "orientationchange")
                      )
                    : Object(o.a)()),
                    (this._invalidateCache = this.change().subscribe(() =>
                      this._updateViewportSize()
                    ));
                });
            }
            ngOnDestroy() {
              this._invalidateCache.unsubscribe();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const e = {
                width: this._viewportSize.width,
                height: this._viewportSize.height,
              };
              return this._platform.isBrowser || (this._viewportSize = null), e;
            }
            getViewportRect() {
              const e = this.getViewportScrollPosition(),
                { width: t, height: n } = this.getViewportSize();
              return {
                top: e.top,
                left: e.left,
                bottom: e.top + n,
                right: e.left + t,
                height: n,
                width: t,
              };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const e = this._getDocument(),
                t = this._getWindow(),
                n = e.documentElement,
                i = n.getBoundingClientRect();
              return {
                top:
                  -i.top || e.body.scrollTop || t.scrollY || n.scrollTop || 0,
                left:
                  -i.left ||
                  e.body.scrollLeft ||
                  t.scrollX ||
                  n.scrollLeft ||
                  0,
              };
            }
            change(e = 20) {
              return e > 0 ? this._change.pipe(A(e)) : this._change;
            }
            _getDocument() {
              return this._document || document;
            }
            _getWindow() {
              return this._getDocument().defaultView || window;
            }
            _updateViewportSize() {
              const e = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: e.innerWidth, height: e.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.bc($), i.bc(i.B), i.bc(H.e, 8));
            }),
            (e.ɵprov = Object(i.Nb)({
              factory: function () {
                return new e(
                  Object(i.bc)($),
                  Object(i.bc)(i.B),
                  Object(i.bc)(H.e, 8)
                );
              },
              token: e,
              providedIn: "root",
            })),
            e
          );
        })();
      const ce = "undefined" != typeof requestAnimationFrame ? f : _;
      let ue = (() => {
        class e extends ae {
          constructor(e, t, n, i, s, o, l) {
            if (
              (super(e, o, n, s),
              (this.elementRef = e),
              (this._changeDetectorRef = t),
              (this._scrollStrategy = i),
              (this._detachedSubject = new r.b()),
              (this._renderedRangeSubject = new r.b()),
              (this._orientation = "vertical"),
              (this.scrolledIndexChange = new a.a((e) =>
                this._scrollStrategy.scrolledIndexChange.subscribe((t) =>
                  Promise.resolve().then(() => this.ngZone.run(() => e.next(t)))
                )
              )),
              (this.renderedRangeStream =
                this._renderedRangeSubject.asObservable()),
              (this._totalContentSize = 0),
              (this._totalContentWidth = ""),
              (this._totalContentHeight = ""),
              (this._renderedRange = { start: 0, end: 0 }),
              (this._dataLength = 0),
              (this._viewportSize = 0),
              (this._renderedContentOffset = 0),
              (this._renderedContentOffsetNeedsRewrite = !1),
              (this._isChangeDetectionPending = !1),
              (this._runAfterChangeDetection = []),
              (this._viewportChanges = C.a.EMPTY),
              !i)
            )
              throw Error(
                'Error: cdk-virtual-scroll-viewport requires the "itemSize" property to be set.'
              );
            l &&
              (this._viewportChanges = l.change().subscribe(() => {
                this.checkViewportSize();
              }));
          }
          get orientation() {
            return this._orientation;
          }
          set orientation(e) {
            this._orientation !== e &&
              ((this._orientation = e), this._calculateSpacerSize());
          }
          ngOnInit() {
            super.ngOnInit(),
              this.ngZone.runOutsideAngular(() =>
                Promise.resolve().then(() => {
                  this._measureViewportSize(),
                    this._scrollStrategy.attach(this),
                    this.elementScrolled()
                      .pipe(Object(F.a)(null), A(0, ce))
                      .subscribe(() =>
                        this._scrollStrategy.onContentScrolled()
                      ),
                    this._markChangeDetectionNeeded();
                })
              );
          }
          ngOnDestroy() {
            this.detach(),
              this._scrollStrategy.detach(),
              this._renderedRangeSubject.complete(),
              this._detachedSubject.complete(),
              this._viewportChanges.unsubscribe(),
              super.ngOnDestroy();
          }
          attach(e) {
            if (this._forOf)
              throw Error("CdkVirtualScrollViewport is already attached.");
            this.ngZone.runOutsideAngular(() => {
              (this._forOf = e),
                this._forOf.dataStream
                  .pipe(Object(j.a)(this._detachedSubject))
                  .subscribe((e) => {
                    const t = e.length;
                    t !== this._dataLength &&
                      ((this._dataLength = t),
                      this._scrollStrategy.onDataLengthChanged()),
                      this._doChangeDetection();
                  });
            });
          }
          detach() {
            (this._forOf = null), this._detachedSubject.next();
          }
          getDataLength() {
            return this._dataLength;
          }
          getViewportSize() {
            return this._viewportSize;
          }
          getRenderedRange() {
            return this._renderedRange;
          }
          setTotalContentSize(e) {
            this._totalContentSize !== e &&
              ((this._totalContentSize = e),
              this._calculateSpacerSize(),
              this._markChangeDetectionNeeded());
          }
          setRenderedRange(e) {
            var t, n;
            ((t = this._renderedRange).start != (n = e).start ||
              t.end != n.end) &&
              (this._renderedRangeSubject.next((this._renderedRange = e)),
              this._markChangeDetectionNeeded(() =>
                this._scrollStrategy.onContentRendered()
              ));
          }
          getOffsetToRenderedContentStart() {
            return this._renderedContentOffsetNeedsRewrite
              ? null
              : this._renderedContentOffset;
          }
          setRenderedContentOffset(e, t = "to-start") {
            const n = "horizontal" == this.orientation,
              i = n ? "X" : "Y";
            let s = `translate${i}(${Number(
              (n && this.dir && "rtl" == this.dir.value ? -1 : 1) * e
            )}px)`;
            (this._renderedContentOffset = e),
              "to-end" === t &&
                ((s += ` translate${i}(-100%)`),
                (this._renderedContentOffsetNeedsRewrite = !0)),
              this._renderedContentTransform != s &&
                ((this._renderedContentTransform = s),
                this._markChangeDetectionNeeded(() => {
                  this._renderedContentOffsetNeedsRewrite
                    ? ((this._renderedContentOffset -=
                        this.measureRenderedContentSize()),
                      (this._renderedContentOffsetNeedsRewrite = !1),
                      this.setRenderedContentOffset(
                        this._renderedContentOffset
                      ))
                    : this._scrollStrategy.onRenderedOffsetChanged();
                }));
          }
          scrollToOffset(e, t = "auto") {
            const n = { behavior: t };
            "horizontal" === this.orientation ? (n.start = e) : (n.top = e),
              this.scrollTo(n);
          }
          scrollToIndex(e, t = "auto") {
            this._scrollStrategy.scrollToIndex(e, t);
          }
          measureScrollOffset(e) {
            return super.measureScrollOffset(
              e || ("horizontal" === this.orientation ? "start" : "top")
            );
          }
          measureRenderedContentSize() {
            const e = this._contentWrapper.nativeElement;
            return "horizontal" === this.orientation
              ? e.offsetWidth
              : e.offsetHeight;
          }
          measureRangeSize(e) {
            return this._forOf
              ? this._forOf.measureRangeSize(e, this.orientation)
              : 0;
          }
          checkViewportSize() {
            this._measureViewportSize(),
              this._scrollStrategy.onDataLengthChanged();
          }
          _measureViewportSize() {
            const e = this.elementRef.nativeElement;
            this._viewportSize =
              "horizontal" === this.orientation
                ? e.clientWidth
                : e.clientHeight;
          }
          _markChangeDetectionNeeded(e) {
            e && this._runAfterChangeDetection.push(e),
              this._isChangeDetectionPending ||
                ((this._isChangeDetectionPending = !0),
                this.ngZone.runOutsideAngular(() =>
                  Promise.resolve().then(() => {
                    this._doChangeDetection();
                  })
                ));
          }
          _doChangeDetection() {
            (this._isChangeDetectionPending = !1),
              (this._contentWrapper.nativeElement.style.transform =
                this._renderedContentTransform),
              this.ngZone.run(() => this._changeDetectorRef.markForCheck());
            const e = this._runAfterChangeDetection;
            this._runAfterChangeDetection = [];
            for (const t of e) t();
          }
          _calculateSpacerSize() {
            (this._totalContentHeight =
              "horizontal" === this.orientation
                ? ""
                : this._totalContentSize + "px"),
              (this._totalContentWidth =
                "horizontal" === this.orientation
                  ? this._totalContentSize + "px"
                  : "");
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(
              i.Rb(i.m),
              i.Rb(i.i),
              i.Rb(i.B),
              i.Rb(ne, 8),
              i.Rb(Z, 8),
              i.Rb(oe),
              i.Rb(le, 8)
            );
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["cdk-virtual-scroll-viewport"]],
            viewQuery: function (e, t) {
              var n;
              1 & e && i.Ic(ee, !0),
                2 & e && i.Ac((n = i.gc())) && (t._contentWrapper = n.first);
            },
            hostAttrs: [1, "cdk-virtual-scroll-viewport"],
            hostVars: 4,
            hostBindings: function (e, t) {
              2 & e &&
                i.Ib(
                  "cdk-virtual-scroll-orientation-horizontal",
                  "horizontal" === t.orientation
                )(
                  "cdk-virtual-scroll-orientation-vertical",
                  "horizontal" !== t.orientation
                );
            },
            inputs: { orientation: "orientation" },
            outputs: { scrolledIndexChange: "scrolledIndexChange" },
            features: [i.Db([{ provide: ae, useExisting: e }]), i.Bb],
            ngContentSelectors: te,
            decls: 4,
            vars: 4,
            consts: [
              [1, "cdk-virtual-scroll-content-wrapper"],
              ["contentWrapper", ""],
              [1, "cdk-virtual-scroll-spacer"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.oc(),
                i.Xb(0, "div", 0, 1),
                i.nc(2),
                i.Wb(),
                i.Sb(3, "div", 2)),
                2 & e &&
                  (i.Eb(3),
                  i.Kc("width", t._totalContentWidth)(
                    "height",
                    t._totalContentHeight
                  ));
            },
            styles: [
              "cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\n",
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          e
        );
      })();
      function he(e, t) {
        if (!t.getBoundingClientRect) return 0;
        const n = t.getBoundingClientRect();
        return "horizontal" == e ? n.width : n.height;
      }
      let de = (() => {
          class e {
            constructor(e, t, n, i, s) {
              (this._viewContainerRef = e),
                (this._template = t),
                (this._differs = n),
                (this._viewport = i),
                (this.viewChange = new r.b()),
                (this._dataSourceChanges = new r.b()),
                (this.cdkVirtualForTemplateCacheSize = 20),
                (this.dataStream = this._dataSourceChanges.pipe(
                  Object(F.a)(null),
                  (e) => e.lift(new W()),
                  Object(X.a)(([e, t]) => this._changeDataSource(e, t)),
                  Object(B.a)(1)
                )),
                (this._differ = null),
                (this._templateCache = []),
                (this._needsUpdate = !1),
                (this._destroyed = new r.b()),
                this.dataStream.subscribe((e) => {
                  (this._data = e), this._onRenderedDataChange();
                }),
                this._viewport.renderedRangeStream
                  .pipe(Object(j.a)(this._destroyed))
                  .subscribe((e) => {
                    (this._renderedRange = e),
                      s.run(() => this.viewChange.next(this._renderedRange)),
                      this._onRenderedDataChange();
                  }),
                this._viewport.attach(this);
            }
            get cdkVirtualForOf() {
              return this._cdkVirtualForOf;
            }
            set cdkVirtualForOf(e) {
              (this._cdkVirtualForOf = e),
                (function (e) {
                  return e && "function" == typeof e.connect;
                })(e)
                  ? this._dataSourceChanges.next(e)
                  : this._dataSourceChanges.next(
                      new J(E(e) ? e : Array.prototype.slice.call(e || []))
                    );
            }
            get cdkVirtualForTrackBy() {
              return this._cdkVirtualForTrackBy;
            }
            set cdkVirtualForTrackBy(e) {
              (this._needsUpdate = !0),
                (this._cdkVirtualForTrackBy = e
                  ? (t, n) =>
                      e(
                        t +
                          (this._renderedRange ? this._renderedRange.start : 0),
                        n
                      )
                  : void 0);
            }
            set cdkVirtualForTemplate(e) {
              e && ((this._needsUpdate = !0), (this._template = e));
            }
            measureRangeSize(e, t) {
              if (e.start >= e.end) return 0;
              if (
                e.start < this._renderedRange.start ||
                e.end > this._renderedRange.end
              )
                throw Error(
                  "Error: attempted to measure an item that isn't rendered."
                );
              const n = e.start - this._renderedRange.start;
              let i = 0,
                s = e.end - e.start;
              for (; s--; ) {
                const e = this._viewContainerRef.get(s + n);
                let r = e ? e.rootNodes.length : 0;
                for (; r--; ) i += he(t, e.rootNodes[r]);
              }
              return i;
            }
            ngDoCheck() {
              if (this._differ && this._needsUpdate) {
                const e = this._differ.diff(this._renderedItems);
                e ? this._applyChanges(e) : this._updateContext(),
                  (this._needsUpdate = !1);
              }
            }
            ngOnDestroy() {
              this._viewport.detach(),
                this._dataSourceChanges.next(),
                this._dataSourceChanges.complete(),
                this.viewChange.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
              for (let e of this._templateCache) e.destroy();
            }
            _onRenderedDataChange() {
              this._renderedRange &&
                ((this._renderedItems = this._data.slice(
                  this._renderedRange.start,
                  this._renderedRange.end
                )),
                this._differ ||
                  (this._differ = this._differs
                    .find(this._renderedItems)
                    .create(this.cdkVirtualForTrackBy)),
                (this._needsUpdate = !0));
            }
            _changeDataSource(e, t) {
              return (
                e && e.disconnect(this),
                (this._needsUpdate = !0),
                t ? t.connect(this) : Object(o.a)()
              );
            }
            _updateContext() {
              const e = this._data.length;
              let t = this._viewContainerRef.length;
              for (; t--; ) {
                let n = this._viewContainerRef.get(t);
                (n.context.index = this._renderedRange.start + t),
                  (n.context.count = e),
                  this._updateComputedContextProperties(n.context),
                  n.detectChanges();
              }
            }
            _applyChanges(e) {
              e.forEachOperation((e, t, n) => {
                if (null == e.previousIndex)
                  this._insertViewForNewItem(n).context.$implicit = e.item;
                else if (null == n) this._cacheView(this._detachView(t));
                else {
                  const i = this._viewContainerRef.get(t);
                  this._viewContainerRef.move(i, n),
                    (i.context.$implicit = e.item);
                }
              }),
                e.forEachIdentityChange((e) => {
                  this._viewContainerRef.get(e.currentIndex).context.$implicit =
                    e.item;
                });
              const t = this._data.length;
              let n = this._viewContainerRef.length;
              for (; n--; ) {
                const e = this._viewContainerRef.get(n);
                (e.context.index = this._renderedRange.start + n),
                  (e.context.count = t),
                  this._updateComputedContextProperties(e.context);
              }
            }
            _cacheView(e) {
              if (
                this._templateCache.length < this.cdkVirtualForTemplateCacheSize
              )
                this._templateCache.push(e);
              else {
                const t = this._viewContainerRef.indexOf(e);
                -1 === t ? e.destroy() : this._viewContainerRef.remove(t);
              }
            }
            _insertViewForNewItem(e) {
              return (
                this._insertViewFromCache(e) || this._createEmbeddedViewAt(e)
              );
            }
            _updateComputedContextProperties(e) {
              (e.first = 0 === e.index),
                (e.last = e.index === e.count - 1),
                (e.even = e.index % 2 == 0),
                (e.odd = !e.even);
            }
            _createEmbeddedViewAt(e) {
              return this._viewContainerRef.createEmbeddedView(
                this._template,
                {
                  $implicit: null,
                  cdkVirtualForOf: this._cdkVirtualForOf,
                  index: -1,
                  count: -1,
                  first: !1,
                  last: !1,
                  odd: !1,
                  even: !1,
                },
                e
              );
            }
            _insertViewFromCache(e) {
              const t = this._templateCache.pop();
              return t && this._viewContainerRef.insert(t, e), t || null;
            }
            _detachView(e) {
              return this._viewContainerRef.detach(e);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(
                i.Rb(i.Q),
                i.Rb(i.M),
                i.Rb(i.u),
                i.Rb(ue, 4),
                i.Rb(i.B)
              );
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "cdkVirtualFor", "", "cdkVirtualForOf", ""]],
              inputs: {
                cdkVirtualForTemplateCacheSize:
                  "cdkVirtualForTemplateCacheSize",
                cdkVirtualForOf: "cdkVirtualForOf",
                cdkVirtualForTrackBy: "cdkVirtualForTrackBy",
                cdkVirtualForTemplate: "cdkVirtualForTemplate",
              },
            })),
            e
          );
        })(),
        pe = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })(),
        fe = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[Q, q, pe], Q, pe],
            })),
            e
          );
        })();
    },
    x5p7: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      }),
        n.d(t, "b", function () {
          return a;
        });
      var i = n("ofXK"),
        s = n("P/hZ"),
        r = n("fXoL");
      let o = (() => {
          let e = class {
            constructor(e, t) {
              (this.el = e),
                (this.zone = t),
                (this.tooltipPosition = "right"),
                (this.tooltipEvent = "hover"),
                (this.appendTo = "body"),
                (this.tooltipZIndex = "auto"),
                (this.escape = !0);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(e) {
              (this._disabled = e), this.deactivate();
            }
            ngAfterViewInit() {
              this.zone.runOutsideAngular(() => {
                "hover" === this.tooltipEvent
                  ? ((this.mouseEnterListener = this.onMouseEnter.bind(this)),
                    (this.mouseLeaveListener = this.onMouseLeave.bind(this)),
                    (this.clickListener = this.onClick.bind(this)),
                    this.el.nativeElement.addEventListener(
                      "mouseenter",
                      this.mouseEnterListener
                    ),
                    this.el.nativeElement.addEventListener(
                      "mouseleave",
                      this.mouseLeaveListener
                    ),
                    this.el.nativeElement.addEventListener(
                      "click",
                      this.clickListener
                    ))
                  : "focus" === this.tooltipEvent &&
                    ((this.focusListener = this.onFocus.bind(this)),
                    (this.blurListener = this.onBlur.bind(this)),
                    this.el.nativeElement.addEventListener(
                      "focus",
                      this.focusListener
                    ),
                    this.el.nativeElement.addEventListener(
                      "blur",
                      this.blurListener
                    ));
              });
            }
            onMouseEnter(e) {
              this.container || this.showTimeout || this.activate();
            }
            onMouseLeave(e) {
              this.deactivate();
            }
            onFocus(e) {
              this.activate();
            }
            onBlur(e) {
              this.deactivate();
            }
            onClick(e) {
              this.deactivate();
            }
            activate() {
              (this.active = !0),
                this.clearHideTimeout(),
                this.showDelay
                  ? (this.showTimeout = setTimeout(() => {
                      this.show();
                    }, this.showDelay))
                  : this.show(),
                this.life &&
                  (this.hideTimeout = setTimeout(
                    () => {
                      this.hide();
                    },
                    this.showDelay ? this.life + this.showDelay : this.life
                  ));
            }
            deactivate() {
              (this.active = !1),
                this.clearShowTimeout(),
                this.hideDelay
                  ? (this.clearHideTimeout(),
                    (this.hideTimeout = setTimeout(() => {
                      this.hide();
                    }, this.hideDelay)))
                  : this.hide();
            }
            get text() {
              return this._text;
            }
            set text(e) {
              (this._text = e),
                this.active &&
                  (this._text
                    ? this.container && this.container.offsetParent
                      ? (this.updateText(), this.align())
                      : this.show()
                    : this.hide());
            }
            create() {
              this.container && (this.clearHideTimeout(), this.remove()),
                (this.container = document.createElement("div"));
              let e = document.createElement("div");
              (e.className = "ui-tooltip-arrow"),
                this.container.appendChild(e),
                (this.tooltipText = document.createElement("div")),
                (this.tooltipText.className =
                  "ui-tooltip-text ui-shadow ui-corner-all"),
                this.updateText(),
                this.positionStyle &&
                  (this.container.style.position = this.positionStyle),
                this.container.appendChild(this.tooltipText),
                "body" === this.appendTo
                  ? document.body.appendChild(this.container)
                  : s.a.appendChild(
                      this.container,
                      "target" === this.appendTo
                        ? this.el.nativeElement
                        : this.appendTo
                    ),
                (this.container.style.display = "inline-block");
            }
            show() {
              this.text &&
                !this.disabled &&
                (this.create(),
                this.align(),
                s.a.fadeIn(this.container, 250),
                (this.container.style.zIndex =
                  "auto" === this.tooltipZIndex
                    ? ++s.a.zindex
                    : this.tooltipZIndex),
                this.bindDocumentResizeListener());
            }
            hide() {
              this.remove();
            }
            updateText() {
              this.escape
                ? ((this.tooltipText.innerHTML = ""),
                  this.tooltipText.appendChild(
                    document.createTextNode(this._text)
                  ))
                : (this.tooltipText.innerHTML = this._text);
            }
            align() {
              switch (this.tooltipPosition) {
                case "top":
                  this.alignTop(),
                    this.isOutOfBounds() &&
                      (this.alignBottom(),
                      this.isOutOfBounds() &&
                        (this.alignRight(),
                        this.isOutOfBounds() && this.alignLeft()));
                  break;
                case "bottom":
                  this.alignBottom(),
                    this.isOutOfBounds() &&
                      (this.alignTop(),
                      this.isOutOfBounds() &&
                        (this.alignRight(),
                        this.isOutOfBounds() && this.alignLeft()));
                  break;
                case "left":
                  this.alignLeft(),
                    this.isOutOfBounds() &&
                      (this.alignRight(),
                      this.isOutOfBounds() &&
                        (this.alignTop(),
                        this.isOutOfBounds() && this.alignBottom()));
                  break;
                case "right":
                  this.alignRight(),
                    this.isOutOfBounds() &&
                      (this.alignLeft(),
                      this.isOutOfBounds() &&
                        (this.alignTop(),
                        this.isOutOfBounds() && this.alignBottom()));
              }
            }
            getHostOffset() {
              if ("body" === this.appendTo || "target" === this.appendTo) {
                let e = this.el.nativeElement.getBoundingClientRect();
                return {
                  left: e.left + s.a.getWindowScrollLeft(),
                  top: e.top + s.a.getWindowScrollTop(),
                };
              }
              return { left: 0, top: 0 };
            }
            alignRight() {
              this.preAlign("right");
              let e = this.getHostOffset(),
                t = e.left + s.a.getOuterWidth(this.el.nativeElement),
                n =
                  e.top +
                  (s.a.getOuterHeight(this.el.nativeElement) -
                    s.a.getOuterHeight(this.container)) /
                    2;
              (this.container.style.left = t + "px"),
                (this.container.style.top = n + "px");
            }
            alignLeft() {
              this.preAlign("left");
              let e = this.getHostOffset(),
                t = e.left - s.a.getOuterWidth(this.container),
                n =
                  e.top +
                  (s.a.getOuterHeight(this.el.nativeElement) -
                    s.a.getOuterHeight(this.container)) /
                    2;
              (this.container.style.left = t + "px"),
                (this.container.style.top = n + "px");
            }
            alignTop() {
              this.preAlign("top");
              let e = this.getHostOffset(),
                t =
                  e.left +
                  (s.a.getOuterWidth(this.el.nativeElement) -
                    s.a.getOuterWidth(this.container)) /
                    2,
                n = e.top - s.a.getOuterHeight(this.container);
              (this.container.style.left = t + "px"),
                (this.container.style.top = n + "px");
            }
            alignBottom() {
              this.preAlign("bottom");
              let e = this.getHostOffset(),
                t =
                  e.left +
                  (s.a.getOuterWidth(this.el.nativeElement) -
                    s.a.getOuterWidth(this.container)) /
                    2,
                n = e.top + s.a.getOuterHeight(this.el.nativeElement);
              (this.container.style.left = t + "px"),
                (this.container.style.top = n + "px");
            }
            preAlign(e) {
              (this.container.style.left = "-999px"),
                (this.container.style.top = "-999px");
              let t = "ui-tooltip ui-widget ui-tooltip-" + e;
              this.container.className = this.tooltipStyleClass
                ? t + " " + this.tooltipStyleClass
                : t;
            }
            isOutOfBounds() {
              let e = this.container.getBoundingClientRect(),
                t = e.top,
                n = e.left,
                i = s.a.getOuterWidth(this.container),
                r = s.a.getOuterHeight(this.container),
                o = s.a.getViewport();
              return n + i > o.width || n < 0 || t < 0 || t + r > o.height;
            }
            onWindowResize(e) {
              this.hide();
            }
            bindDocumentResizeListener() {
              this.zone.runOutsideAngular(() => {
                (this.resizeListener = this.onWindowResize.bind(this)),
                  window.addEventListener("resize", this.resizeListener);
              });
            }
            unbindDocumentResizeListener() {
              this.resizeListener &&
                (window.removeEventListener("resize", this.resizeListener),
                (this.resizeListener = null));
            }
            unbindEvents() {
              "hover" === this.tooltipEvent
                ? (this.el.nativeElement.removeEventListener(
                    "mouseenter",
                    this.mouseEnterListener
                  ),
                  this.el.nativeElement.removeEventListener(
                    "mouseleave",
                    this.mouseLeaveListener
                  ),
                  this.el.nativeElement.removeEventListener(
                    "click",
                    this.clickListener
                  ))
                : "focus" === this.tooltipEvent &&
                  (this.el.nativeElement.removeEventListener(
                    "focus",
                    this.focusListener
                  ),
                  this.el.nativeElement.removeEventListener(
                    "blur",
                    this.blurListener
                  )),
                this.unbindDocumentResizeListener();
            }
            remove() {
              this.container &&
                this.container.parentElement &&
                ("body" === this.appendTo
                  ? document.body.removeChild(this.container)
                  : "target" === this.appendTo
                  ? this.el.nativeElement.removeChild(this.container)
                  : s.a.removeChild(this.container, this.appendTo)),
                this.unbindDocumentResizeListener(),
                this.clearTimeouts(),
                (this.container = null);
            }
            clearShowTimeout() {
              this.showTimeout &&
                (clearTimeout(this.showTimeout), (this.showTimeout = null));
            }
            clearHideTimeout() {
              this.hideTimeout &&
                (clearTimeout(this.hideTimeout), (this.hideTimeout = null));
            }
            clearTimeouts() {
              this.clearShowTimeout(), this.clearHideTimeout();
            }
            ngOnDestroy() {
              this.unbindEvents(), this.remove();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(r.Rb(r.m), r.Rb(r.B));
            }),
            (e.ɵdir = r.Mb({
              type: e,
              selectors: [["", "pTooltip", ""]],
              inputs: {
                tooltipPosition: "tooltipPosition",
                tooltipEvent: "tooltipEvent",
                appendTo: "appendTo",
                tooltipZIndex: "tooltipZIndex",
                escape: "escape",
                disabled: ["tooltipDisabled", "disabled"],
                text: ["pTooltip", "text"],
                positionStyle: "positionStyle",
                tooltipStyleClass: "tooltipStyleClass",
                showDelay: "showDelay",
                hideDelay: "hideDelay",
                life: "life",
              },
            })),
            e
          );
        })(),
        a = (() => {
          let e = class {};
          return (
            (e.ɵmod = r.Pb({ type: e })),
            (e.ɵinj = r.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[i.c]],
            })),
            e
          );
        })();
    },
    xbPD: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("7o/Q");
      function s(e = null) {
        return (t) => t.lift(new r(e));
      }
      class r {
        constructor(e) {
          this.defaultValue = e;
        }
        call(e, t) {
          return t.subscribe(new o(e, this.defaultValue));
        }
      }
      class o extends i.a {
        constructor(e, t) {
          super(e), (this.defaultValue = t), (this.isEmpty = !0);
        }
        _next(e) {
          (this.isEmpty = !1), this.destination.next(e);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue),
            this.destination.complete();
        }
      }
    },
    xgIS: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return a;
      });
      var i = n("HDdC"),
        s = n("DH7j"),
        r = n("n6bG"),
        o = n("lJxs");
      function a(e, t, n, l) {
        return (
          Object(r.a)(n) && ((l = n), (n = void 0)),
          l
            ? a(e, t, n).pipe(
                Object(o.a)((e) => (Object(s.a)(e) ? l(...e) : l(e)))
              )
            : new i.a((i) => {
                !(function e(t, n, i, s, r) {
                  let o;
                  if (
                    (function (e) {
                      return (
                        e &&
                        "function" == typeof e.addEventListener &&
                        "function" == typeof e.removeEventListener
                      );
                    })(t)
                  ) {
                    const e = t;
                    t.addEventListener(n, i, r),
                      (o = () => e.removeEventListener(n, i, r));
                  } else if (
                    (function (e) {
                      return (
                        e &&
                        "function" == typeof e.on &&
                        "function" == typeof e.off
                      );
                    })(t)
                  ) {
                    const e = t;
                    t.on(n, i), (o = () => e.off(n, i));
                  } else if (
                    (function (e) {
                      return (
                        e &&
                        "function" == typeof e.addListener &&
                        "function" == typeof e.removeListener
                      );
                    })(t)
                  ) {
                    const e = t;
                    t.addListener(n, i), (o = () => e.removeListener(n, i));
                  } else {
                    if (!t || !t.length)
                      throw new TypeError("Invalid event target");
                    for (let o = 0, a = t.length; o < a; o++)
                      e(t[o], n, i, s, r);
                  }
                  s.add(o);
                })(
                  e,
                  t,
                  function (e) {
                    i.next(
                      arguments.length > 1
                        ? Array.prototype.slice.call(arguments)
                        : e
                    );
                  },
                  i,
                  n
                );
              })
        );
      }
    },
    xgWI: function (e, t, n) {
      "use strict";
      var i = n("ICY0"),
        s = n("Hifb");
      class r extends i.a {
        populateAttributes() {
          this.attributes = {
            token: "",
            address: "",
            age: 0,
            avatar: "",
            birthday: null,
            city: "",
            country: "",
            createdAt: "",
            deletedAt: null,
            email: "",
            firstName: "",
            id: 0,
            isAgreed: !1,
            isBlocked: !1,
            isVerified: !1,
            isDeleteRequest: !1,
            lastName: "",
            package: null,
            lastChangeRequest: null,
            withdrawAddress: "",
            sponsor: { username: null },
            phone: "",
            role: "",
            sex: "",
            status: "active",
            updatedAt: "",
            username: "",
            zipCode: "",
          };
        }
        get id() {
          return this.attributes.id;
        }
        get withdrawAddress() {
          return this.attributes.withdrawAddress;
        }
        get isPackageExist() {
          return !!this.packageTitle && !!this.packageEndsAt;
        }
        get isChangeRequestExist() {
          return !!this.lastChangeRequest;
        }
        get lastChangeRequest() {
          return this.attributes.lastChangeRequest;
        }
        get packageTitle() {
          var e;
          return null === (e = this.attributes.package) || void 0 === e
            ? void 0
            : e.title;
        }
        get packageEndsAt() {
          var e;
          return null === (e = this.attributes.package) || void 0 === e
            ? void 0
            : e.endsAt;
        }
        get packageDayLeft() {
          const e = new Date(this.packageEndsAt) - new Date();
          let t = "expired";
          if (e > 0) {
            const n = Math.round(Math.abs(e / 864e5));
            t = n > 1 ? n + " days left" : n + " day left";
          }
          return t;
        }
        get sponsorUserName() {
          var e;
          return null === (e = this.attributes.sponsor) || void 0 === e
            ? void 0
            : e.username;
        }
        get isDeleteRequest() {
          return this.attributes.isDeleteRequest;
        }
        get zipCode() {
          return this.attributes.zipCode;
        }
        get token() {
          return this.attributes.token;
        }
        get address() {
          return this.attributes.address;
        }
        get city() {
          return this.attributes.city;
        }
        get country() {
          return this.attributes.country;
        }
        get email() {
          return this.attributes.email;
        }
        get firstName() {
          return this.attributes.firstName;
        }
        get isAgreed() {
          return this.attributes.isAgreed;
        }
        get isBlocked() {
          return this.attributes.isBlocked;
        }
        get isVerified() {
          return this.attributes.isVerified;
        }
        get lastName() {
          return this.attributes.lastName;
        }
        get phone() {
          return this.attributes.phone;
        }
        get birthday() {
          return this.attributes.birthday
            ? new Date(this.attributes.birthday)
            : this.attributes.birthday;
        }
        get avatar() {
          return this.attributes.avatar || "./assets/img/default-avatar.png";
        }
        get accountStatus() {
          return this.attributes.role === s.a.user
            ? "Personal Enrolled Customer (PEC)"
            : "Company Partner (CP)";
        }
        get userName() {
          return this.attributes.username;
        }
        get fullName() {
          return `${this.attributes.firstName} ${this.attributes.lastName}`;
        }
      }
      var o = n("IKEI");
      n.d(t, "a", function () {
        return a;
      });
      let a = (() => {
        class e extends o.a {
          constructor() {
            super(...arguments), (this.models = { [e.USER]: r });
          }
        }
        return (e.USER = "user"), e;
      })();
    },
    xtqe: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return l;
      });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("5C7c");
      const o = function (e) {
        return { active: e };
      };
      function a(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "li", 2),
            i.Xb(1, "div", 3),
            i.Nc(2),
            i.ic(3, "i18n"),
            i.Wb(),
            i.Sb(4, "div", 4),
            i.Wb()),
          2 & e)
        ) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc();
          i.pc("ngClass", i.sc(5, o, s.currentStep >= n)),
            i.Eb(2),
            i.Oc(i.kc(3, 2, s.translates, e.label));
        }
      }
      let l = (() => {
        class e {
          constructor() {
            (this.currentStep = 0),
              (this.items = [
                { label: "SelectType" },
                { label: "EnterYourData" },
                { label: "VerifyYourEmail" },
                { label: "CompleteRegistration" },
              ]);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-steps"]],
            inputs: { currentStep: "currentStep", translates: "translates" },
            decls: 2,
            vars: 1,
            consts: [
              [1, "steps"],
              ["class", "steps__item", 3, "ngClass", 4, "ngFor", "ngForOf"],
              [1, "steps__item", 3, "ngClass"],
              [1, "label"],
              [1, "point"],
            ],
            template: function (e, t) {
              1 & e && (i.Xb(0, "ul", 0), i.Lc(1, a, 5, 7, "li", 1), i.Wb()),
                2 & e && (i.Eb(1), i.pc("ngForOf", t.items));
            },
            directives: [s.l, s.k],
            pipes: [r.a],
            styles: [
              '.steps[_ngcontent-%COMP%]{width:100%;flex-direction:row;justify-content:center;margin-top:80px}.steps[_ngcontent-%COMP%], .steps__item[_ngcontent-%COMP%]{display:flex;align-items:center}.steps__item[_ngcontent-%COMP%]{margin-left:115px;flex-direction:column;position:relative}.steps__item[_ngcontent-%COMP%]:first-child{margin-left:0}.steps__item[_ngcontent-%COMP%]:first-child   .point[_ngcontent-%COMP%]:after{display:none}.steps__item.active[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{color:#000}.steps__item.active[_ngcontent-%COMP%]   .point[_ngcontent-%COMP%]:after, .steps__item.active[_ngcontent-%COMP%]   .point[_ngcontent-%COMP%]:before{background:#363333}.steps__item[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{font-size:12px;margin-bottom:5px;color:#929292;text-align:center;position:absolute;bottom:20px;width:60px}.steps__item[_ngcontent-%COMP%]   .point[_ngcontent-%COMP%]{width:22px;height:22px;background:#c6c6c6;border-radius:50%;position:relative}.steps__item[_ngcontent-%COMP%]   .point[_ngcontent-%COMP%]:before{content:"";position:absolute;display:block;width:10px;height:10px;background:#fff;border-radius:50%;top:50%;left:50%;transform:translate(-50%,-50%)}.steps__item[_ngcontent-%COMP%]   .point[_ngcontent-%COMP%]:after{content:"";display:block;height:2px;background:#c6c6c6;width:127px;position:absolute;top:calc(50% - 1px);right:16px;box-shadow:0 2px #c6c6c6,0 -2px #c6c6c6}@media (max-width:600px){.steps[_ngcontent-%COMP%]{display:none}}',
            ],
          })),
          e
        );
      })();
    },
    yCtX: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return o;
      });
      var i = n("HDdC"),
        s = n("ngJS"),
        r = n("jZKg");
      function o(e, t) {
        return t ? Object(r.a)(e, t) : new i.a(Object(s.a)(e));
      }
    },
    yWug: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return ke;
      }),
        n.d(t, "b", function () {
          return Pe;
        });
      var i = n("fXoL"),
        s = n("ofXK"),
        r = n("RtSl"),
        o = n("tQ6G"),
        a = n("P/hZ"),
        l = n("Z7TK"),
        c = n("XNiG"),
        u = n("vxfF");
      const h = ["container"],
        d = ["resizeHelper"],
        p = ["reorderIndicatorUp"],
        f = ["reorderIndicatorDown"],
        g = ["table"],
        m = ["scrollableView"],
        b = ["scrollableFrozenView"];
      function v(e, t) {
        1 & e && i.Sb(0, "div", 13);
      }
      function y(e, t) {
        if ((1 & e && (i.Xb(0, "div", 14), i.Sb(1, "i"), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Gb("ui-table-loading-icon pi-spin " + e.loadingIcon);
        }
      }
      function w(e, t) {
        1 & e && i.Tb(0);
      }
      function S(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 15), i.Lc(1, w, 1, 0, "ng-container", 16), i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1), i.pc("ngTemplateOutlet", e.captionTemplate);
        }
      }
      function _(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "p-paginator", 17),
            i.fc("onPageChange", function (t) {
              return i.Ec(e), i.hc().onPageChange(t);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.pc("rows", e.rows)("first", e.first)(
            "totalRecords",
            e.totalRecords
          )("pageLinkSize", e.pageLinks)("alwaysShow", e.alwaysShowPaginator)(
            "rowsPerPageOptions",
            e.rowsPerPageOptions
          )("templateLeft", e.paginatorLeftTemplate)(
            "templateRight",
            e.paginatorRightTemplate
          )("dropdownAppendTo", e.paginatorDropdownAppendTo)(
            "dropdownScrollHeight",
            e.paginatorDropdownScrollHeight
          )("currentPageReportTemplate", e.currentPageReportTemplate)(
            "showFirstLastIcon",
            e.showFirstLastIcon
          )("dropdownItemTemplate", e.paginatorDropdownItemTemplate)(
            "showCurrentPageReport",
            e.showCurrentPageReport
          );
        }
      }
      function C(e, t) {
        1 & e && i.Tb(0);
      }
      function E(e, t) {
        1 & e && i.Tb(0);
      }
      function O(e, t) {
        1 & e && i.Tb(0);
      }
      const x = function (e) {
        return { $implicit: e };
      };
      function T(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "tfoot", 25),
            i.Lc(1, O, 1, 0, "ng-container", 21),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc(2);
          i.Eb(1),
            i.pc("ngTemplateOutlet", e.footerTemplate)(
              "ngTemplateOutletContext",
              i.sc(2, x, e.columns)
            );
        }
      }
      function k(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 18),
            i.Xb(1, "table", 19, 20),
            i.Lc(3, C, 1, 0, "ng-container", 21),
            i.Xb(4, "thead", 22),
            i.Lc(5, E, 1, 0, "ng-container", 21),
            i.Wb(),
            i.Sb(6, "tbody", 23),
            i.Lc(7, T, 2, 4, "tfoot", 24),
            i.Wb(),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngClass", e.tableStyleClass)("ngStyle", e.tableStyle),
            i.Eb(2),
            i.pc("ngTemplateOutlet", e.colGroupTemplate)(
              "ngTemplateOutletContext",
              i.sc(9, x, e.columns)
            ),
            i.Eb(2),
            i.pc("ngTemplateOutlet", e.headerTemplate)(
              "ngTemplateOutletContext",
              i.sc(11, x, e.columns)
            ),
            i.Eb(1),
            i.pc("pTableBody", e.columns)("pTableBodyTemplate", e.bodyTemplate),
            i.Eb(1),
            i.pc("ngIf", e.footerTemplate);
        }
      }
      const M = function (e) {
        return { width: e };
      };
      function I(e, t) {
        if ((1 & e && i.Sb(0, "div", 30, 31), 2 & e)) {
          const e = i.hc(2);
          i.pc("pScrollableView", e.frozenColumns)("frozen", !0)(
            "ngStyle",
            i.sc(4, M, e.frozenWidth)
          )("scrollHeight", e.scrollHeight);
        }
      }
      const P = function (e, t) {
        return { left: e, width: t };
      };
      function R(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 26),
            i.Lc(1, I, 2, 6, "div", 27),
            i.Sb(2, "div", 28, 29),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngIf", e.frozenColumns || e.frozenBodyTemplate),
            i.Eb(1),
            i.pc("pScrollableView", e.columns)("frozen", !1)(
              "scrollHeight",
              e.scrollHeight
            )(
              "ngStyle",
              i.tc(5, P, e.frozenWidth, "calc(100% - " + e.frozenWidth + ")")
            );
        }
      }
      function N(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "p-paginator", 32),
            i.fc("onPageChange", function (t) {
              return i.Ec(e), i.hc().onPageChange(t);
            }),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.pc("rows", e.rows)("first", e.first)(
            "totalRecords",
            e.totalRecords
          )("pageLinkSize", e.pageLinks)("alwaysShow", e.alwaysShowPaginator)(
            "rowsPerPageOptions",
            e.rowsPerPageOptions
          )("templateLeft", e.paginatorLeftTemplate)(
            "templateRight",
            e.paginatorRightTemplate
          )("dropdownAppendTo", e.paginatorDropdownAppendTo)(
            "dropdownScrollHeight",
            e.paginatorDropdownScrollHeight
          )("currentPageReportTemplate", e.currentPageReportTemplate)(
            "showFirstLastIcon",
            e.showFirstLastIcon
          )("dropdownItemTemplate", e.paginatorDropdownItemTemplate)(
            "showCurrentPageReport",
            e.showCurrentPageReport
          );
        }
      }
      function L(e, t) {
        1 & e && i.Tb(0);
      }
      function A(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 33), i.Lc(1, L, 1, 0, "ng-container", 16), i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1), i.pc("ngTemplateOutlet", e.summaryTemplate);
        }
      }
      function D(e, t) {
        1 & e && i.Sb(0, "div", 34, 35);
      }
      function j(e, t) {
        1 & e && i.Sb(0, "span", 36, 37);
      }
      function F(e, t) {
        1 & e && i.Sb(0, "span", 38, 39);
      }
      const V = function (e, t, n, i, s, r) {
          return {
            "ui-table ui-widget": !0,
            "ui-table-responsive": e,
            "ui-table-resizable": t,
            "ui-table-resizable-fit": n,
            "ui-table-hoverable-rows": i,
            "ui-table-auto-layout": s,
            "ui-table-flex-scrollable": r,
          };
        },
        W = ["pTableBody", ""];
      function z(e, t) {
        1 & e && i.Tb(0);
      }
      const X = function (e, t, n, i) {
        return { $implicit: e, rowIndex: t, columns: n, editing: i };
      };
      function B(e, t) {
        if ((1 & e && i.Lc(0, z, 1, 0, "ng-container", 2), 2 & e)) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc(2);
          i.pc("ngTemplateOutlet", s.template)(
            "ngTemplateOutletContext",
            i.vc(
              2,
              X,
              e,
              s.dt.paginator ? s.dt.first + n : n,
              s.columns,
              "row" === s.dt.editMode && s.dt.isRowEditing(e)
            )
          );
        }
      }
      function H(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Lc(1, B, 1, 7, "ng-template", 1),
            i.ic(2, "slice"),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc(
              "ngForOf",
              e.dt.paginator && !e.dt.lazy
                ? i.lc(
                    2,
                    2,
                    e.dt.filteredValue || e.dt.value,
                    e.dt.first,
                    e.dt.first + e.dt.rows
                  )
                : e.dt.filteredValue || e.dt.value
            )("ngForTrackBy", e.dt.rowTrackBy);
        }
      }
      function U(e, t) {
        1 & e && i.Tb(0);
      }
      function G(e, t) {
        if ((1 & e && i.Lc(0, U, 1, 0, "ng-container", 2), 2 & e)) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc(2);
          i.pc("ngTemplateOutlet", e ? s.template : s.dt.loadingBodyTemplate)(
            "ngTemplateOutletContext",
            i.vc(
              2,
              X,
              e,
              s.dt.paginator ? s.dt.first + n : n,
              s.columns,
              "row" === s.dt.editMode && s.dt.isRowEditing(e)
            )
          );
        }
      }
      function $(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, G, 1, 7, "ng-template", 3), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("cdkVirtualForOf", e.dt.filteredValue || e.dt.value)(
              "cdkVirtualForTrackBy",
              e.dt.rowTrackBy
            )("cdkVirtualForTemplateCacheSize", 0);
        }
      }
      function q(e, t) {
        1 & e && i.Tb(0);
      }
      function K(e, t) {
        1 & e && i.Tb(0);
      }
      const Y = function (e, t, n) {
        return { $implicit: e, rowIndex: t, columns: n };
      };
      function Z(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, K, 1, 0, "ng-container", 2), i.Ub()),
          2 & e)
        ) {
          const e = i.hc(),
            t = e.$implicit,
            n = e.index,
            s = i.hc(2);
          i.Eb(1),
            i.pc("ngTemplateOutlet", s.dt.expandedRowTemplate)(
              "ngTemplateOutletContext",
              i.uc(2, Y, t, s.dt.paginator ? s.dt.first + n : n, s.columns)
            );
        }
      }
      const Q = function (e, t, n, i, s) {
        return {
          $implicit: e,
          rowIndex: t,
          columns: n,
          expanded: i,
          editing: s,
        };
      };
      function J(e, t) {
        if (
          (1 & e &&
            (i.Lc(0, q, 1, 0, "ng-container", 2),
            i.Lc(1, Z, 2, 6, "ng-container", 0)),
          2 & e)
        ) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc(2);
          i.pc("ngTemplateOutlet", s.template)(
            "ngTemplateOutletContext",
            i.wc(
              3,
              Q,
              e,
              s.dt.paginator ? s.dt.first + n : n,
              s.columns,
              s.dt.isRowExpanded(e),
              "row" === s.dt.editMode && s.dt.isRowEditing(e)
            )
          ),
            i.Eb(1),
            i.pc("ngIf", s.dt.isRowExpanded(e));
        }
      }
      function ee(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Lc(1, J, 2, 9, "ng-template", 1),
            i.ic(2, "slice"),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc(
              "ngForOf",
              e.dt.paginator && !e.dt.lazy
                ? i.lc(
                    2,
                    2,
                    e.dt.filteredValue || e.dt.value,
                    e.dt.first,
                    e.dt.first + e.dt.rows
                  )
                : e.dt.filteredValue || e.dt.value
            )("ngForTrackBy", e.dt.rowTrackBy);
        }
      }
      function te(e, t) {
        1 & e && i.Tb(0);
      }
      const ne = function (e, t) {
        return { $implicit: e, frozen: t };
      };
      function ie(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, te, 1, 0, "ng-container", 2), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngTemplateOutlet", e.dt.loadingBodyTemplate)(
              "ngTemplateOutletContext",
              i.tc(2, ne, e.columns, e.frozen)
            );
        }
      }
      function se(e, t) {
        1 & e && i.Tb(0);
      }
      function re(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, se, 1, 0, "ng-container", 2), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc("ngTemplateOutlet", e.dt.emptyMessageTemplate)(
              "ngTemplateOutletContext",
              i.tc(2, ne, e.columns, e.frozen)
            );
        }
      }
      const oe = ["scrollHeader"],
        ae = ["scrollHeaderBox"],
        le = ["scrollBody"],
        ce = ["scrollTable"],
        ue = ["scrollFooter"],
        he = ["scrollFooterBox"],
        de = ["scrollableAligner"],
        pe = ["pScrollableView", ""];
      function fe(e, t) {
        1 & e && i.Tb(0);
      }
      function ge(e, t) {
        1 & e && i.Tb(0);
      }
      function me(e, t) {
        1 & e && i.Tb(0);
      }
      function be(e, t) {
        if ((1 & e && i.Lc(0, me, 1, 0, "ng-container", 5), 2 & e)) {
          const e = t.$implicit,
            n = t.index,
            s = i.hc();
          i.pc("ngTemplateOutlet", s.dt.frozenRowsTemplate)(
            "ngTemplateOutletContext",
            i.uc(2, Y, e, n, s.columns)
          );
        }
      }
      function ve(e, t) {
        1 & e && i.Tb(0);
      }
      function ye(e, t) {
        1 & e && i.Sb(0, "div", 23, 24);
      }
      const we = function (e, t) {
        return { "max-height": e, "overflow-y": t };
      };
      function Se(e, t) {
        if (
          (1 & e &&
            (i.Vb(0),
            i.Xb(1, "div", 17, 18),
            i.Xb(3, "table", 19, 20),
            i.Lc(5, ve, 1, 0, "ng-container", 5),
            i.Sb(6, "tbody", 21),
            i.Wb(),
            i.Lc(7, ye, 2, 0, "div", 22),
            i.Wb(),
            i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1),
            i.pc(
              "ngStyle",
              i.tc(
                10,
                we,
                "flex" !== e.dt.scrollHeight ? e.scrollHeight : void 0,
                !e.frozen && e.dt.scrollHeight ? "scroll" : void 0
              )
            ),
            i.Eb(2),
            i.Gb(e.dt.tableStyleClass),
            i.pc("ngStyle", e.dt.tableStyle),
            i.Eb(2),
            i.pc(
              "ngTemplateOutlet",
              (e.frozen && e.dt.frozenColGroupTemplate) || e.dt.colGroupTemplate
            )("ngTemplateOutletContext", i.sc(13, x, e.columns)),
            i.Eb(1),
            i.pc("pTableBody", e.columns)(
              "pTableBodyTemplate",
              (e.frozen && e.dt.frozenBodyTemplate) || e.dt.bodyTemplate
            )("frozen", e.frozen),
            i.Eb(1),
            i.pc("ngIf", e.frozen);
        }
      }
      function _e(e, t) {
        1 & e && i.Tb(0);
      }
      function Ce(e, t) {
        1 & e && i.Sb(0, "div", 23, 24);
      }
      function Ee(e, t) {
        if (1 & e) {
          const e = i.Yb();
          i.Xb(0, "cdk-virtual-scroll-viewport", 25),
            i.fc("scrolledIndexChange", function (t) {
              return i.Ec(e), i.hc().onScrollIndexChange(t);
            }),
            i.Xb(1, "table", 19, 20),
            i.Lc(3, _e, 1, 0, "ng-container", 5),
            i.Sb(4, "tbody", 21),
            i.Wb(),
            i.Lc(5, Ce, 2, 0, "div", 22),
            i.Wb();
        }
        if (2 & e) {
          const e = i.hc();
          i.Kc(
            "height",
            "flex" !== e.dt.scrollHeight ? e.scrollHeight : void 0
          ),
            i.pc("itemSize", e.dt.virtualRowHeight)(
              "minBufferPx",
              e.dt.minBufferPx
            )("maxBufferPx", e.dt.maxBufferPx),
            i.Eb(1),
            i.Gb(e.dt.tableStyleClass),
            i.pc("ngStyle", e.dt.tableStyle),
            i.Eb(2),
            i.pc(
              "ngTemplateOutlet",
              (e.frozen && e.dt.frozenColGroupTemplate) || e.dt.colGroupTemplate
            )("ngTemplateOutletContext", i.sc(14, x, e.columns)),
            i.Eb(1),
            i.pc("pTableBody", e.columns)(
              "pTableBodyTemplate",
              (e.frozen && e.dt.frozenBodyTemplate) || e.dt.bodyTemplate
            )("frozen", e.frozen),
            i.Eb(1),
            i.pc("ngIf", e.frozen);
        }
      }
      function Oe(e, t) {
        1 & e && i.Tb(0);
      }
      function xe(e, t) {
        1 & e && i.Tb(0);
      }
      let Te = (() => {
          let e = class {
            constructor() {
              (this.sortSource = new c.b()),
                (this.selectionSource = new c.b()),
                (this.contextMenuSource = new c.b()),
                (this.valueSource = new c.b()),
                (this.totalRecordsSource = new c.b()),
                (this.columnsSource = new c.b()),
                (this.sortSource$ = this.sortSource.asObservable()),
                (this.selectionSource$ = this.selectionSource.asObservable()),
                (this.contextMenuSource$ =
                  this.contextMenuSource.asObservable()),
                (this.valueSource$ = this.valueSource.asObservable()),
                (this.totalRecordsSource$ =
                  this.totalRecordsSource.asObservable()),
                (this.columnsSource$ = this.columnsSource.asObservable());
            }
            onSort(e) {
              this.sortSource.next(e);
            }
            onSelectionChange() {
              this.selectionSource.next();
            }
            onContextMenu(e) {
              this.contextMenuSource.next(e);
            }
            onValueChange(e) {
              this.valueSource.next(e);
            }
            onTotalRecordsChange(e) {
              this.totalRecordsSource.next(e);
            }
            onColumnsChange(e) {
              this.columnsSource.next(e);
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        ke = (() => {
          let e = class {
            constructor(e, t, n, s) {
              (this.el = e),
                (this.zone = t),
                (this.tableService = n),
                (this.cd = s),
                (this.pageLinks = 5),
                (this.alwaysShowPaginator = !0),
                (this.paginatorPosition = "bottom"),
                (this.paginatorDropdownScrollHeight = "200px"),
                (this.currentPageReportTemplate =
                  "{currentPage} of {totalPages}"),
                (this.showFirstLastIcon = !0),
                (this.defaultSortOrder = 1),
                (this.sortMode = "single"),
                (this.resetPageOnSort = !0),
                (this.selectionChange = new i.o()),
                (this.contextMenuSelectionChange = new i.o()),
                (this.contextMenuSelectionMode = "separate"),
                (this.rowTrackBy = (e, t) => t),
                (this.lazy = !1),
                (this.lazyLoadOnInit = !0),
                (this.compareSelectionBy = "deepEquals"),
                (this.csvSeparator = ","),
                (this.exportFilename = "download"),
                (this.filters = {}),
                (this.filterDelay = 300),
                (this.expandedRowKeys = {}),
                (this.editingRowKeys = {}),
                (this.rowExpandMode = "multiple"),
                (this.virtualScrollDelay = 250),
                (this.virtualRowHeight = 28),
                (this.columnResizeMode = "fit"),
                (this.loadingIcon = "pi pi-spinner"),
                (this.showLoader = !0),
                (this.stateStorage = "session"),
                (this.editMode = "cell"),
                (this.onRowSelect = new i.o()),
                (this.onRowUnselect = new i.o()),
                (this.onPage = new i.o()),
                (this.onSort = new i.o()),
                (this.onFilter = new i.o()),
                (this.onLazyLoad = new i.o()),
                (this.onRowExpand = new i.o()),
                (this.onRowCollapse = new i.o()),
                (this.onContextMenuSelect = new i.o()),
                (this.onColResize = new i.o()),
                (this.onColReorder = new i.o()),
                (this.onRowReorder = new i.o()),
                (this.onEditInit = new i.o()),
                (this.onEditComplete = new i.o()),
                (this.onEditCancel = new i.o()),
                (this.onHeaderCheckboxToggle = new i.o()),
                (this.sortFunction = new i.o()),
                (this.firstChange = new i.o()),
                (this.rowsChange = new i.o()),
                (this.onStateSave = new i.o()),
                (this.onStateRestore = new i.o()),
                (this._value = []),
                (this._totalRecords = 0),
                (this._first = 0),
                (this.selectionKeys = {}),
                (this._sortOrder = 1);
            }
            ngOnInit() {
              this.lazy &&
                this.lazyLoadOnInit &&
                (this.virtualScroll ||
                  this.onLazyLoad.emit(this.createLazyLoadMetadata()),
                this.restoringFilter && (this.restoringFilter = !1)),
                (this.initialized = !0);
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "caption":
                    this.captionTemplate = e.template;
                    break;
                  case "header":
                    this.headerTemplate = e.template;
                    break;
                  case "body":
                    this.bodyTemplate = e.template;
                    break;
                  case "loadingbody":
                    this.loadingBodyTemplate = e.template;
                    break;
                  case "footer":
                    this.footerTemplate = e.template;
                    break;
                  case "summary":
                    this.summaryTemplate = e.template;
                    break;
                  case "colgroup":
                    this.colGroupTemplate = e.template;
                    break;
                  case "rowexpansion":
                    this.expandedRowTemplate = e.template;
                    break;
                  case "frozenrows":
                    this.frozenRowsTemplate = e.template;
                    break;
                  case "frozenheader":
                    this.frozenHeaderTemplate = e.template;
                    break;
                  case "frozenbody":
                    this.frozenBodyTemplate = e.template;
                    break;
                  case "frozenfooter":
                    this.frozenFooterTemplate = e.template;
                    break;
                  case "frozencolgroup":
                    this.frozenColGroupTemplate = e.template;
                    break;
                  case "emptymessage":
                    this.emptyMessageTemplate = e.template;
                    break;
                  case "paginatorleft":
                    this.paginatorLeftTemplate = e.template;
                    break;
                  case "paginatorright":
                    this.paginatorRightTemplate = e.template;
                    break;
                  case "paginatordropdownitem":
                    this.paginatorDropdownItemTemplate = e.template;
                }
              });
            }
            ngAfterViewInit() {
              this.isStateful() &&
                this.resizableColumns &&
                this.restoreColumnWidths();
            }
            ngOnChanges(e) {
              e.value &&
                (this.isStateful() &&
                  !this.stateRestored &&
                  this.restoreState(),
                (this._value = e.value.currentValue),
                this.lazy ||
                  ((this.totalRecords = this._value ? this._value.length : 0),
                  "single" == this.sortMode && this.sortField
                    ? this.sortSingle()
                    : "multiple" == this.sortMode && this.multiSortMeta
                    ? this.sortMultiple()
                    : this.hasFilter() && this._filter()),
                this.tableService.onValueChange(e.value.currentValue)),
                e.columns &&
                  ((this._columns = e.columns.currentValue),
                  this.tableService.onColumnsChange(e.columns.currentValue),
                  this._columns &&
                    this.isStateful() &&
                    this.reorderableColumns &&
                    !this.columnOrderStateRestored &&
                    this.restoreColumnOrder()),
                e.sortField &&
                  ((this._sortField = e.sortField.currentValue),
                  (this.lazy && !this.initialized) ||
                    ("single" === this.sortMode && this.sortSingle())),
                e.sortOrder &&
                  ((this._sortOrder = e.sortOrder.currentValue),
                  (this.lazy && !this.initialized) ||
                    ("single" === this.sortMode && this.sortSingle())),
                e.multiSortMeta &&
                  ((this._multiSortMeta = e.multiSortMeta.currentValue),
                  "multiple" !== this.sortMode ||
                    (!this.initialized && (this.lazy || this.virtualScroll)) ||
                    this.sortMultiple()),
                e.selection &&
                  ((this._selection = e.selection.currentValue),
                  this.preventSelectionSetterPropagation ||
                    (this.updateSelectionKeys(),
                    this.tableService.onSelectionChange()),
                  (this.preventSelectionSetterPropagation = !1));
            }
            get value() {
              return this._value;
            }
            set value(e) {
              this._value = e;
            }
            get columns() {
              return this._columns;
            }
            set columns(e) {
              this._columns = e;
            }
            get first() {
              return this._first;
            }
            set first(e) {
              this._first = e;
            }
            get rows() {
              return this._rows;
            }
            set rows(e) {
              this._rows = e;
            }
            get totalRecords() {
              return this._totalRecords;
            }
            set totalRecords(e) {
              (this._totalRecords = e),
                this.tableService.onTotalRecordsChange(this._totalRecords);
            }
            get sortField() {
              return this._sortField;
            }
            set sortField(e) {
              this._sortField = e;
            }
            get sortOrder() {
              return this._sortOrder;
            }
            set sortOrder(e) {
              this._sortOrder = e;
            }
            get multiSortMeta() {
              return this._multiSortMeta;
            }
            set multiSortMeta(e) {
              this._multiSortMeta = e;
            }
            get selection() {
              return this._selection;
            }
            set selection(e) {
              this._selection = e;
            }
            updateSelectionKeys() {
              if (this.dataKey && this._selection)
                if (((this.selectionKeys = {}), Array.isArray(this._selection)))
                  for (let e of this._selection)
                    this.selectionKeys[
                      String(l.b.resolveFieldData(e, this.dataKey))
                    ] = 1;
                else
                  this.selectionKeys[
                    String(l.b.resolveFieldData(this._selection, this.dataKey))
                  ] = 1;
            }
            onPageChange(e) {
              (this.first = e.first),
                (this.rows = e.rows),
                this.lazy &&
                  this.onLazyLoad.emit(this.createLazyLoadMetadata()),
                this.onPage.emit({ first: this.first, rows: this.rows }),
                this.firstChange.emit(this.first),
                this.rowsChange.emit(this.rows),
                this.tableService.onValueChange(this.value),
                this.isStateful() && this.saveState(),
                (this.anchorRowIndex = null),
                this.scrollable && this.resetScrollTop();
            }
            sort(e) {
              let t = e.originalEvent;
              if (
                ("single" === this.sortMode &&
                  ((this._sortOrder =
                    this.sortField === e.field
                      ? -1 * this.sortOrder
                      : this.defaultSortOrder),
                  (this._sortField = e.field),
                  this.resetPageOnSort &&
                    ((this._first = 0),
                    this.firstChange.emit(this._first),
                    this.scrollable && this.resetScrollTop()),
                  this.sortSingle()),
                "multiple" === this.sortMode)
              ) {
                let n = t.metaKey || t.ctrlKey,
                  i = this.getSortMeta(e.field);
                i
                  ? n
                    ? (i.order = -1 * i.order)
                    : ((this._multiSortMeta = [
                        { field: e.field, order: -1 * i.order },
                      ]),
                      this.resetPageOnSort &&
                        ((this._first = 0),
                        this.firstChange.emit(this._first),
                        this.scrollable && this.resetScrollTop()))
                  : ((n && this.multiSortMeta) ||
                      ((this._multiSortMeta = []),
                      this.resetPageOnSort &&
                        ((this._first = 0),
                        this.firstChange.emit(this._first))),
                    this._multiSortMeta.push({
                      field: e.field,
                      order: this.defaultSortOrder,
                    })),
                  this.sortMultiple();
              }
              this.isStateful() && this.saveState(),
                (this.anchorRowIndex = null);
            }
            sortSingle() {
              if (this.sortField && this.sortOrder) {
                this.restoringSort && (this.restoringSort = !1),
                  this.lazy
                    ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                    : this.value &&
                      (this.customSort
                        ? this.sortFunction.emit({
                            data: this.value,
                            mode: this.sortMode,
                            field: this.sortField,
                            order: this.sortOrder,
                          })
                        : (this.value.sort((e, t) => {
                            let n = l.b.resolveFieldData(e, this.sortField),
                              i = l.b.resolveFieldData(t, this.sortField),
                              s = null;
                            return (
                              (s =
                                null == n && null != i
                                  ? -1
                                  : null != n && null == i
                                  ? 1
                                  : null == n && null == i
                                  ? 0
                                  : "string" == typeof n && "string" == typeof i
                                  ? n.localeCompare(i)
                                  : n < i
                                  ? -1
                                  : n > i
                                  ? 1
                                  : 0),
                              this.sortOrder * s
                            );
                          }),
                          (this._value = [...this.value])),
                      this.hasFilter() && this._filter());
                let e = { field: this.sortField, order: this.sortOrder };
                this.onSort.emit(e), this.tableService.onSort(e);
              }
            }
            sortMultiple() {
              this.multiSortMeta &&
                (this.lazy
                  ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                  : this.value &&
                    (this.customSort
                      ? this.sortFunction.emit({
                          data: this.value,
                          mode: this.sortMode,
                          multiSortMeta: this.multiSortMeta,
                        })
                      : (this.value.sort((e, t) =>
                          this.multisortField(e, t, this.multiSortMeta, 0)
                        ),
                        (this._value = [...this.value])),
                    this.hasFilter() && this._filter()),
                this.onSort.emit({ multisortmeta: this.multiSortMeta }),
                this.tableService.onSort(this.multiSortMeta));
            }
            multisortField(e, t, n, i) {
              let s = l.b.resolveFieldData(e, n[i].field),
                r = l.b.resolveFieldData(t, n[i].field),
                o = null;
              if (null == s && null != r) o = -1;
              else if (null != s && null == r) o = 1;
              else if (null == s && null == r) o = 0;
              else if ("string" == typeof s || s instanceof String) {
                if (s.localeCompare && s != r)
                  return n[i].order * s.localeCompare(r);
              } else o = s < r ? -1 : 1;
              return s == r
                ? n.length - 1 > i
                  ? this.multisortField(e, t, n, i + 1)
                  : 0
                : n[i].order * o;
            }
            getSortMeta(e) {
              if (this.multiSortMeta && this.multiSortMeta.length)
                for (let t = 0; t < this.multiSortMeta.length; t++)
                  if (this.multiSortMeta[t].field === e)
                    return this.multiSortMeta[t];
              return null;
            }
            isSorted(e) {
              if ("single" === this.sortMode)
                return this.sortField && this.sortField === e;
              if ("multiple" === this.sortMode) {
                let t = !1;
                if (this.multiSortMeta)
                  for (let n = 0; n < this.multiSortMeta.length; n++)
                    if (this.multiSortMeta[n].field == e) {
                      t = !0;
                      break;
                    }
                return t;
              }
            }
            handleRowClick(e) {
              let t = e.originalEvent.target,
                n = t.nodeName,
                i = t.parentElement && t.parentElement.nodeName;
              if (
                "INPUT" != n &&
                "BUTTON" != n &&
                "A" != n &&
                "INPUT" != i &&
                "BUTTON" != i &&
                "A" != i &&
                !a.a.hasClass(e.originalEvent.target, "ui-clickable")
              ) {
                if (this.selectionMode) {
                  if (
                    ((this.preventSelectionSetterPropagation = !0),
                    this.isMultipleSelectionMode() &&
                      e.originalEvent.shiftKey &&
                      null != this.anchorRowIndex)
                  )
                    a.a.clearSelection(),
                      null != this.rangeRowIndex &&
                        this.clearSelectionRange(e.originalEvent),
                      (this.rangeRowIndex = e.rowIndex),
                      this.selectRange(e.originalEvent, e.rowIndex);
                  else {
                    let t = e.rowData,
                      n = this.isSelected(t),
                      i = !this.rowTouched && this.metaKeySelection,
                      s = this.dataKey
                        ? String(l.b.resolveFieldData(t, this.dataKey))
                        : null;
                    if (
                      ((this.anchorRowIndex = e.rowIndex),
                      (this.rangeRowIndex = e.rowIndex),
                      i)
                    ) {
                      let i =
                        e.originalEvent.metaKey || e.originalEvent.ctrlKey;
                      if (n && i) {
                        if (this.isSingleSelectionMode())
                          (this._selection = null),
                            (this.selectionKeys = {}),
                            this.selectionChange.emit(null);
                        else {
                          let e = this.findIndexInSelection(t);
                          (this._selection = this.selection.filter(
                            (t, n) => n != e
                          )),
                            this.selectionChange.emit(this.selection),
                            s && delete this.selectionKeys[s];
                        }
                        this.onRowUnselect.emit({
                          originalEvent: e.originalEvent,
                          data: t,
                          type: "row",
                        });
                      } else
                        this.isSingleSelectionMode()
                          ? ((this._selection = t),
                            this.selectionChange.emit(t),
                            s &&
                              ((this.selectionKeys = {}),
                              (this.selectionKeys[s] = 1)))
                          : this.isMultipleSelectionMode() &&
                            (i
                              ? (this._selection = this.selection || [])
                              : ((this._selection = []),
                                (this.selectionKeys = {})),
                            (this._selection = [...this.selection, t]),
                            this.selectionChange.emit(this.selection),
                            s && (this.selectionKeys[s] = 1)),
                          this.onRowSelect.emit({
                            originalEvent: e.originalEvent,
                            data: t,
                            type: "row",
                            index: e.rowIndex,
                          });
                    } else if ("single" === this.selectionMode)
                      n
                        ? ((this._selection = null),
                          (this.selectionKeys = {}),
                          this.selectionChange.emit(this.selection),
                          this.onRowUnselect.emit({
                            originalEvent: e.originalEvent,
                            data: t,
                            type: "row",
                            index: e.rowIndex,
                          }))
                        : ((this._selection = t),
                          this.selectionChange.emit(this.selection),
                          this.onRowSelect.emit({
                            originalEvent: e.originalEvent,
                            data: t,
                            type: "row",
                            index: e.rowIndex,
                          }),
                          s &&
                            ((this.selectionKeys = {}),
                            (this.selectionKeys[s] = 1)));
                    else if ("multiple" === this.selectionMode)
                      if (n) {
                        let n = this.findIndexInSelection(t);
                        (this._selection = this.selection.filter(
                          (e, t) => t != n
                        )),
                          this.selectionChange.emit(this.selection),
                          this.onRowUnselect.emit({
                            originalEvent: e.originalEvent,
                            data: t,
                            type: "row",
                            index: e.rowIndex,
                          }),
                          s && delete this.selectionKeys[s];
                      } else
                        (this._selection = this.selection
                          ? [...this.selection, t]
                          : [t]),
                          this.selectionChange.emit(this.selection),
                          this.onRowSelect.emit({
                            originalEvent: e.originalEvent,
                            data: t,
                            type: "row",
                            index: e.rowIndex,
                          }),
                          s && (this.selectionKeys[s] = 1);
                  }
                  this.tableService.onSelectionChange(),
                    this.isStateful() && this.saveState();
                }
                this.rowTouched = !1;
              }
            }
            handleRowTouchEnd(e) {
              this.rowTouched = !0;
            }
            handleRowRightClick(e) {
              if (this.contextMenu) {
                const t = e.rowData;
                if ("separate" === this.contextMenuSelectionMode)
                  (this.contextMenuSelection = t),
                    this.contextMenuSelectionChange.emit(t),
                    this.onContextMenuSelect.emit({
                      originalEvent: e.originalEvent,
                      data: t,
                      index: e.rowIndex,
                    }),
                    this.contextMenu.show(e.originalEvent),
                    this.tableService.onContextMenu(t);
                else if ("joint" === this.contextMenuSelectionMode) {
                  this.preventSelectionSetterPropagation = !0;
                  let n = this.isSelected(t),
                    i = this.dataKey
                      ? String(l.b.resolveFieldData(t, this.dataKey))
                      : null;
                  n ||
                    (this.isSingleSelectionMode()
                      ? ((this.selection = t),
                        this.selectionChange.emit(t),
                        i &&
                          ((this.selectionKeys = {}),
                          (this.selectionKeys[i] = 1)))
                      : this.isMultipleSelectionMode() &&
                        ((this._selection = this.selection
                          ? [...this.selection, t]
                          : [t]),
                        this.selectionChange.emit(this.selection),
                        i && (this.selectionKeys[i] = 1))),
                    this.tableService.onSelectionChange(),
                    this.contextMenu.show(e.originalEvent),
                    this.onContextMenuSelect.emit({
                      originalEvent: e,
                      data: t,
                      index: e.rowIndex,
                    });
                }
              }
            }
            selectRange(e, t) {
              let n, i;
              this.anchorRowIndex > t
                ? ((n = t), (i = this.anchorRowIndex))
                : this.anchorRowIndex < t
                ? ((n = this.anchorRowIndex), (i = t))
                : ((n = t), (i = t)),
                this.lazy &&
                  this.paginator &&
                  ((n -= this.first), (i -= this.first));
              let s = [];
              for (let r = n; r <= i; r++) {
                let e = this.filteredValue
                  ? this.filteredValue[r]
                  : this.value[r];
                if (!this.isSelected(e)) {
                  s.push(e), (this._selection = [...this.selection, e]);
                  let t = this.dataKey
                    ? String(l.b.resolveFieldData(e, this.dataKey))
                    : null;
                  t && (this.selectionKeys[t] = 1);
                }
              }
              this.selectionChange.emit(this.selection),
                this.onRowSelect.emit({
                  originalEvent: e,
                  data: s,
                  type: "row",
                });
            }
            clearSelectionRange(e) {
              let t, n;
              this.rangeRowIndex > this.anchorRowIndex
                ? ((t = this.anchorRowIndex), (n = this.rangeRowIndex))
                : this.rangeRowIndex < this.anchorRowIndex
                ? ((t = this.rangeRowIndex), (n = this.anchorRowIndex))
                : ((t = this.rangeRowIndex), (n = this.rangeRowIndex));
              for (let i = t; i <= n; i++) {
                let t = this.value[i],
                  n = this.findIndexInSelection(t);
                this._selection = this.selection.filter((e, t) => t != n);
                let s = this.dataKey
                  ? String(l.b.resolveFieldData(t, this.dataKey))
                  : null;
                s && delete this.selectionKeys[s],
                  this.onRowUnselect.emit({
                    originalEvent: e,
                    data: t,
                    type: "row",
                  });
              }
            }
            isSelected(e) {
              return (
                !(!e || !this.selection) &&
                (this.dataKey
                  ? void 0 !==
                    this.selectionKeys[l.b.resolveFieldData(e, this.dataKey)]
                  : this.selection instanceof Array
                  ? this.findIndexInSelection(e) > -1
                  : this.equals(e, this.selection))
              );
            }
            findIndexInSelection(e) {
              let t = -1;
              if (this.selection && this.selection.length)
                for (let n = 0; n < this.selection.length; n++)
                  if (this.equals(e, this.selection[n])) {
                    t = n;
                    break;
                  }
              return t;
            }
            toggleRowWithRadio(e, t) {
              (this.preventSelectionSetterPropagation = !0),
                this.selection != t
                  ? ((this._selection = t),
                    this.selectionChange.emit(this.selection),
                    this.onRowSelect.emit({
                      originalEvent: e.originalEvent,
                      index: e.rowIndex,
                      data: t,
                      type: "radiobutton",
                    }),
                    this.dataKey &&
                      ((this.selectionKeys = {}),
                      (this.selectionKeys[
                        String(l.b.resolveFieldData(t, this.dataKey))
                      ] = 1)))
                  : ((this._selection = null),
                    this.selectionChange.emit(this.selection),
                    this.onRowUnselect.emit({
                      originalEvent: e.originalEvent,
                      index: e.rowIndex,
                      data: t,
                      type: "radiobutton",
                    })),
                this.tableService.onSelectionChange(),
                this.isStateful() && this.saveState();
            }
            toggleRowWithCheckbox(e, t) {
              this.selection = this.selection || [];
              let n = this.isSelected(t),
                i = this.dataKey
                  ? String(l.b.resolveFieldData(t, this.dataKey))
                  : null;
              if (((this.preventSelectionSetterPropagation = !0), n)) {
                let n = this.findIndexInSelection(t);
                (this._selection = this.selection.filter((e, t) => t != n)),
                  this.selectionChange.emit(this.selection),
                  this.onRowUnselect.emit({
                    originalEvent: e.originalEvent,
                    index: e.rowIndex,
                    data: t,
                    type: "checkbox",
                  }),
                  i && delete this.selectionKeys[i];
              } else
                (this._selection = this.selection
                  ? [...this.selection, t]
                  : [t]),
                  this.selectionChange.emit(this.selection),
                  this.onRowSelect.emit({
                    originalEvent: e.originalEvent,
                    index: e.rowIndex,
                    data: t,
                    type: "checkbox",
                  }),
                  i && (this.selectionKeys[i] = 1);
              this.tableService.onSelectionChange(),
                this.isStateful() && this.saveState();
            }
            toggleRowsWithCheckbox(e, t) {
              (this._selection = t
                ? this.filteredValue
                  ? this.filteredValue.slice()
                  : this.value.slice()
                : []),
                (this.preventSelectionSetterPropagation = !0),
                this.updateSelectionKeys(),
                this.selectionChange.emit(this._selection),
                this.tableService.onSelectionChange(),
                this.onHeaderCheckboxToggle.emit({
                  originalEvent: e,
                  checked: t,
                }),
                this.isStateful() && this.saveState();
            }
            equals(e, t) {
              return "equals" === this.compareSelectionBy
                ? e === t
                : l.b.equals(e, t, this.dataKey);
            }
            filter(e, t, n) {
              this.filterTimeout && clearTimeout(this.filterTimeout),
                this.isFilterBlank(e)
                  ? this.filters[t] && delete this.filters[t]
                  : (this.filters[t] = { value: e, matchMode: n }),
                (this.filterTimeout = setTimeout(() => {
                  this._filter(), (this.filterTimeout = null);
                }, this.filterDelay)),
                (this.anchorRowIndex = null);
            }
            filterGlobal(e, t) {
              this.filter(e, "global", t);
            }
            isFilterBlank(e) {
              return (
                null == e ||
                ("string" == typeof e && 0 == e.trim().length) ||
                (e instanceof Array && 0 == e.length)
              );
            }
            _filter() {
              if (
                (this.restoringFilter ||
                  ((this.first = 0), this.firstChange.emit(this.first)),
                this.lazy)
              )
                this.onLazyLoad.emit(this.createLazyLoadMetadata());
              else {
                if (!this.value) return;
                if (this.hasFilter()) {
                  let e;
                  if (this.filters.global) {
                    if (!this.columns && !this.globalFilterFields)
                      throw new Error(
                        "Global filtering requires dynamic columns or globalFilterFields to be defined."
                      );
                    e = this.globalFilterFields || this.columns;
                  }
                  this.filteredValue = [];
                  for (let t = 0; t < this.value.length; t++) {
                    let n,
                      i = !0,
                      s = !1,
                      r = !1;
                    for (let e in this.filters)
                      if (this.filters.hasOwnProperty(e) && "global" !== e) {
                        r = !0;
                        let n = this.filters[e],
                          s = n.value,
                          o = n.matchMode || "startsWith",
                          a = l.b.resolveFieldData(this.value[t], e);
                        if (
                          ((0, l.a[o])(a, s, this.filterLocale) || (i = !1), !i)
                        )
                          break;
                      }
                    if (this.filters.global && !s && e)
                      for (
                        let o = 0;
                        o < e.length &&
                        ((s = l.a[this.filters.global.matchMode](
                          l.b.resolveFieldData(
                            this.value[t],
                            e[o].field || e[o]
                          ),
                          this.filters.global.value,
                          this.filterLocale
                        )),
                        !s);
                        o++
                      );
                    (n = this.filters.global ? (r ? r && i && s : s) : r && i),
                      n && this.filteredValue.push(this.value[t]);
                  }
                  this.filteredValue.length === this.value.length &&
                    (this.filteredValue = null),
                    this.paginator &&
                      (this.totalRecords = this.filteredValue
                        ? this.filteredValue.length
                        : this.value
                        ? this.value.length
                        : 0);
                } else
                  (this.filteredValue = null),
                    this.paginator &&
                      (this.totalRecords = this.value ? this.value.length : 0);
              }
              this.onFilter.emit({
                filters: this.filters,
                filteredValue: this.filteredValue || this.value,
              }),
                this.tableService.onValueChange(this.value),
                this.isStateful() && !this.restoringFilter && this.saveState(),
                this.restoringFilter && (this.restoringFilter = !1),
                this.cd.markForCheck(),
                this.scrollable && this.resetScrollTop();
            }
            hasFilter() {
              let e = !0;
              for (let t in this.filters)
                if (this.filters.hasOwnProperty(t)) {
                  e = !1;
                  break;
                }
              return !e;
            }
            createLazyLoadMetadata() {
              return {
                first: this.first,
                rows: this.rows,
                sortField: this.sortField,
                sortOrder: this.sortOrder,
                filters: this.filters,
                globalFilter:
                  this.filters && this.filters.global
                    ? this.filters.global.value
                    : null,
                multiSortMeta: this.multiSortMeta,
              };
            }
            reset() {
              (this._sortField = null),
                (this._sortOrder = this.defaultSortOrder),
                (this._multiSortMeta = null),
                this.tableService.onSort(null),
                (this.filteredValue = null),
                (this.filters = {}),
                (this.first = 0),
                this.firstChange.emit(this.first),
                this.lazy
                  ? this.onLazyLoad.emit(this.createLazyLoadMetadata())
                  : (this.totalRecords = this._value ? this._value.length : 0);
            }
            exportCSV(e) {
              let t,
                n = "",
                i = this.frozenColumns
                  ? [...this.frozenColumns, ...this.columns]
                  : this.columns;
              e && e.selectionOnly
                ? (t = this.selection || [])
                : ((t = this.filteredValue || this.value),
                  this.frozenValue &&
                    (t = t ? [...this.frozenValue, ...t] : this.frozenValue));
              for (let r = 0; r < i.length; r++) {
                let e = i[r];
                !1 !== e.exportable &&
                  e.field &&
                  ((n += '"' + (e.header || e.field) + '"'),
                  r < i.length - 1 && (n += this.csvSeparator));
              }
              t.forEach((e, t) => {
                n += "\n";
                for (let s = 0; s < i.length; s++) {
                  let t = i[s];
                  if (!1 !== t.exportable && t.field) {
                    let r = l.b.resolveFieldData(e, t.field);
                    (r =
                      null != r
                        ? this.exportFunction
                          ? this.exportFunction({ data: r, field: t.field })
                          : String(r).replace(/"/g, '""')
                        : ""),
                      (n += '"' + r + '"'),
                      s < i.length - 1 && (n += this.csvSeparator);
                  }
                }
              });
              let s = new Blob([n], { type: "text/csv;charset=utf-8;" });
              if (window.navigator.msSaveOrOpenBlob)
                navigator.msSaveOrOpenBlob(s, this.exportFilename + ".csv");
              else {
                let e = document.createElement("a");
                (e.style.display = "none"),
                  document.body.appendChild(e),
                  void 0 !== e.download
                    ? (e.setAttribute("href", URL.createObjectURL(s)),
                      e.setAttribute("download", this.exportFilename + ".csv"),
                      e.click())
                    : ((n = "data:text/csv;charset=utf-8," + n),
                      window.open(encodeURI(n))),
                  document.body.removeChild(e);
              }
            }
            resetScrollTop() {
              this.virtualScroll
                ? this.scrollToVirtualIndex(0)
                : this.scrollTo({ top: 0 });
            }
            scrollToVirtualIndex(e) {
              this.scrollableViewChild &&
                this.scrollableViewChild.scrollToVirtualIndex(e),
                this.scrollableFrozenViewChild &&
                  this.scrollableFrozenViewChild.scrollToVirtualIndex(e);
            }
            scrollTo(e) {
              this.scrollableViewChild && this.scrollableViewChild.scrollTo(e),
                this.scrollableFrozenViewChild &&
                  this.scrollableFrozenViewChild.scrollTo(e);
            }
            updateEditingCell(e, t, n, i) {
              (this.editingCell = e),
                (this.editingCellData = t),
                (this.editingCellField = n),
                (this.editingCellRowIndex = i),
                this.bindDocumentEditListener();
            }
            isEditingCellValid() {
              return (
                this.editingCell &&
                0 === a.a.find(this.editingCell, ".ng-invalid.ng-dirty").length
              );
            }
            bindDocumentEditListener() {
              this.documentEditListener ||
                ((this.documentEditListener = (e) => {
                  this.editingCell &&
                    !this.editingCellClick &&
                    this.isEditingCellValid() &&
                    (a.a.removeClass(this.editingCell, "ui-editing-cell"),
                    (this.editingCell = null),
                    this.onEditComplete.emit({
                      field: this.editingCellField,
                      data: this.editingCellData,
                      originalEvent: e,
                      index: this.editingCellRowIndex,
                    }),
                    (this.editingCellField = null),
                    (this.editingCellData = null),
                    (this.editingCellRowIndex = null),
                    this.unbindDocumentEditListener(),
                    this.cd.markForCheck()),
                    (this.editingCellClick = !1);
                }),
                document.addEventListener("click", this.documentEditListener));
            }
            unbindDocumentEditListener() {
              this.documentEditListener &&
                (document.removeEventListener(
                  "click",
                  this.documentEditListener
                ),
                (this.documentEditListener = null));
            }
            initRowEdit(e) {
              let t = String(l.b.resolveFieldData(e, this.dataKey));
              this.editingRowKeys[t] = !0;
            }
            saveRowEdit(e, t) {
              if (0 === a.a.find(t, ".ng-invalid.ng-dirty").length) {
                let t = String(l.b.resolveFieldData(e, this.dataKey));
                delete this.editingRowKeys[t];
              }
            }
            cancelRowEdit(e) {
              let t = String(l.b.resolveFieldData(e, this.dataKey));
              delete this.editingRowKeys[t];
            }
            toggleRow(e, t) {
              if (!this.dataKey)
                throw new Error("dataKey must be defined to use row expansion");
              let n = String(l.b.resolveFieldData(e, this.dataKey));
              null != this.expandedRowKeys[n]
                ? (delete this.expandedRowKeys[n],
                  this.onRowCollapse.emit({ originalEvent: t, data: e }))
                : ("single" === this.rowExpandMode &&
                    (this.expandedRowKeys = {}),
                  (this.expandedRowKeys[n] = !0),
                  this.onRowExpand.emit({ originalEvent: t, data: e })),
                t && t.preventDefault(),
                this.isStateful() && this.saveState();
            }
            isRowExpanded(e) {
              return (
                !0 ===
                this.expandedRowKeys[
                  String(l.b.resolveFieldData(e, this.dataKey))
                ]
              );
            }
            isRowEditing(e) {
              return (
                !0 ===
                this.editingRowKeys[
                  String(l.b.resolveFieldData(e, this.dataKey))
                ]
              );
            }
            isSingleSelectionMode() {
              return "single" === this.selectionMode;
            }
            isMultipleSelectionMode() {
              return "multiple" === this.selectionMode;
            }
            onColumnResizeBegin(e) {
              let t = a.a.getOffset(this.containerViewChild.nativeElement).left;
              (this.lastResizerHelperX =
                e.pageX - t + this.containerViewChild.nativeElement.scrollLeft),
                this.onColumnResize(e),
                e.preventDefault();
            }
            onColumnResize(e) {
              let t = a.a.getOffset(this.containerViewChild.nativeElement).left;
              a.a.addClass(
                this.containerViewChild.nativeElement,
                "ui-unselectable-text"
              ),
                (this.resizeHelperViewChild.nativeElement.style.height =
                  this.containerViewChild.nativeElement.offsetHeight + "px"),
                (this.resizeHelperViewChild.nativeElement.style.top = "0px"),
                (this.resizeHelperViewChild.nativeElement.style.left =
                  e.pageX -
                  t +
                  this.containerViewChild.nativeElement.scrollLeft +
                  "px"),
                (this.resizeHelperViewChild.nativeElement.style.display =
                  "block");
            }
            onColumnResizeEnd(e, t) {
              let n =
                  this.resizeHelperViewChild.nativeElement.offsetLeft -
                  this.lastResizerHelperX,
                i = t.offsetWidth,
                s = parseInt(t.style.minWidth || 15);
              i + n < s && (n = s - i);
              const r = i + n;
              if (r >= s) {
                if ("fit" === this.columnResizeMode) {
                  let e = t.nextElementSibling;
                  for (; !e.offsetParent; ) e = e.nextElementSibling;
                  if (e) {
                    let i = e.offsetWidth - n,
                      s = e.style.minWidth || 15;
                    if (r > 15 && i > parseInt(s))
                      if (this.scrollable) {
                        let e = this.findParentScrollableView(t),
                          n =
                            a.a.findSingle(
                              e,
                              ".ui-table-scrollable-body table"
                            ) ||
                            a.a.findSingle(
                              e,
                              "cdk-virtual-scroll-viewport table"
                            ),
                          s = a.a.findSingle(
                            e,
                            "table.ui-table-scrollable-header-table"
                          ),
                          o = a.a.findSingle(
                            e,
                            "table.ui-table-scrollable-footer-table"
                          ),
                          l = a.a.index(t);
                        this.resizeColGroup(s, l, r, i),
                          this.resizeColGroup(n, l, r, i),
                          this.resizeColGroup(o, l, r, i);
                      } else
                        (t.style.width = r + "px"),
                          e && (e.style.width = i + "px");
                  }
                } else
                  "expand" === this.columnResizeMode &&
                    r >= s &&
                    (this.scrollable
                      ? this.setScrollableItemsWidthOnExpandResize(t, r, n)
                      : ((this.tableViewChild.nativeElement.style.width =
                          this.tableViewChild.nativeElement.offsetWidth +
                          n +
                          "px"),
                        (t.style.width = r + "px"),
                        (this.containerViewChild.nativeElement.style.width =
                          this.tableViewChild.nativeElement.style.width +
                          "px")));
                this.onColResize.emit({ element: t, delta: n }),
                  this.isStateful() && this.saveState();
              }
              (this.resizeHelperViewChild.nativeElement.style.display = "none"),
                a.a.removeClass(
                  this.containerViewChild.nativeElement,
                  "ui-unselectable-text"
                );
            }
            setScrollableItemsWidthOnExpandResize(e, t, n) {
              let i = e
                  ? this.findParentScrollableView(e)
                  : this.containerViewChild.nativeElement,
                s =
                  a.a.findSingle(i, ".ui-table-scrollable-body") ||
                  a.a.findSingle(i, "cdk-virtual-scroll-viewport"),
                r = a.a.findSingle(i, ".ui-table-scrollable-header"),
                o = a.a.findSingle(i, ".ui-table-scrollable-footer"),
                l =
                  a.a.findSingle(s, ".ui-table-scrollable-body table") ||
                  a.a.findSingle(i, "cdk-virtual-scroll-viewport table"),
                c = a.a.findSingle(r, "table.ui-table-scrollable-header-table"),
                u = a.a.findSingle(o, "table.ui-table-scrollable-footer-table");
              const h = e ? l.offsetWidth + n : t,
                d = e ? c.offsetWidth + n : t,
                p = this.containerViewChild.nativeElement.offsetWidth >= h;
              let f = (e, t, n, i) => {
                e &&
                  t &&
                  ((e.style.width = i
                    ? n + a.a.calculateScrollbarWidth(s) + "px"
                    : "auto"),
                  (t.style.width = n + "px"));
              };
              if ((f(s, l, h, p), f(r, c, d, p), f(o, u, d, p), e)) {
                let n = a.a.index(e);
                this.resizeColGroup(c, n, t, null),
                  this.resizeColGroup(l, n, t, null),
                  this.resizeColGroup(u, n, t, null);
              }
            }
            findParentScrollableView(e) {
              if (e) {
                let t = e.parentElement;
                for (; t && !a.a.hasClass(t, "ui-table-scrollable-view"); )
                  t = t.parentElement;
                return t;
              }
              return null;
            }
            resizeColGroup(e, t, n, i) {
              if (e) {
                let s =
                  "COLGROUP" === e.children[0].nodeName ? e.children[0] : null;
                if (!s)
                  throw "Scrollable tables require a colgroup to support resizable columns";
                {
                  let e = s.children[t],
                    r = e.nextElementSibling;
                  (e.style.width = n + "px"),
                    r && i && (r.style.width = i + "px");
                }
              }
            }
            onColumnDragStart(e, t) {
              (this.reorderIconWidth = a.a.getHiddenElementOuterWidth(
                this.reorderIndicatorUpViewChild.nativeElement
              )),
                (this.reorderIconHeight = a.a.getHiddenElementOuterHeight(
                  this.reorderIndicatorDownViewChild.nativeElement
                )),
                (this.draggedColumn = t),
                e.dataTransfer.setData("text", "b");
            }
            onColumnDragEnter(e, t) {
              if (this.reorderableColumns && this.draggedColumn && t) {
                e.preventDefault();
                let n = a.a.getOffset(this.containerViewChild.nativeElement),
                  i = a.a.getOffset(t);
                if (this.draggedColumn != t) {
                  let s = a.a.indexWithinGroup(
                      this.draggedColumn,
                      "preorderablecolumn"
                    ),
                    r = a.a.indexWithinGroup(t, "preorderablecolumn"),
                    o = i.left - n.left,
                    l = i.left + t.offsetWidth / 2;
                  (this.reorderIndicatorUpViewChild.nativeElement.style.top =
                    i.top - n.top - (this.reorderIconHeight - 1) + "px"),
                    (this.reorderIndicatorDownViewChild.nativeElement.style.top =
                      i.top - n.top + t.offsetHeight + "px"),
                    e.pageX > l
                      ? ((this.reorderIndicatorUpViewChild.nativeElement.style.left =
                          o +
                          t.offsetWidth -
                          Math.ceil(this.reorderIconWidth / 2) +
                          "px"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.left =
                          o +
                          t.offsetWidth -
                          Math.ceil(this.reorderIconWidth / 2) +
                          "px"),
                        (this.dropPosition = 1))
                      : ((this.reorderIndicatorUpViewChild.nativeElement.style.left =
                          o - Math.ceil(this.reorderIconWidth / 2) + "px"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.left =
                          o - Math.ceil(this.reorderIconWidth / 2) + "px"),
                        (this.dropPosition = -1)),
                    (r - s == 1 && -1 === this.dropPosition) ||
                    (r - s == -1 && 1 === this.dropPosition)
                      ? ((this.reorderIndicatorUpViewChild.nativeElement.style.display =
                          "none"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                          "none"))
                      : ((this.reorderIndicatorUpViewChild.nativeElement.style.display =
                          "block"),
                        (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                          "block"));
                } else e.dataTransfer.dropEffect = "none";
              }
            }
            onColumnDragLeave(e) {
              this.reorderableColumns &&
                this.draggedColumn &&
                (e.preventDefault(),
                (this.reorderIndicatorUpViewChild.nativeElement.style.display =
                  "none"),
                (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                  "none"));
            }
            onColumnDrop(e, t) {
              if ((e.preventDefault(), this.draggedColumn)) {
                let e = a.a.indexWithinGroup(
                    this.draggedColumn,
                    "preorderablecolumn"
                  ),
                  n = a.a.indexWithinGroup(t, "preorderablecolumn"),
                  i = e != n;
                i &&
                  ((n - e == 1 && -1 === this.dropPosition) ||
                    (e - n == 1 && 1 === this.dropPosition)) &&
                  (i = !1),
                  i && n < e && 1 === this.dropPosition && (n += 1),
                  i && n > e && -1 === this.dropPosition && (n -= 1),
                  i &&
                    (l.b.reorderArray(this.columns, e, n),
                    this.onColReorder.emit({
                      dragIndex: e,
                      dropIndex: n,
                      columns: this.columns,
                    }),
                    this.isStateful() &&
                      this.zone.runOutsideAngular(() => {
                        setTimeout(() => {
                          this.saveState();
                        });
                      })),
                  (this.reorderIndicatorUpViewChild.nativeElement.style.display =
                    "none"),
                  (this.reorderIndicatorDownViewChild.nativeElement.style.display =
                    "none"),
                  (this.draggedColumn.draggable = !1),
                  (this.draggedColumn = null),
                  (this.dropPosition = null);
              }
            }
            onRowDragStart(e, t) {
              (this.rowDragging = !0),
                (this.draggedRowIndex = t),
                e.dataTransfer.setData("text", "b");
            }
            onRowDragOver(e, t, n) {
              if (this.rowDragging && this.draggedRowIndex !== t) {
                let i = a.a.getOffset(n).top + a.a.getWindowScrollTop(),
                  s = e.pageY,
                  r = i + a.a.getOuterHeight(n) / 2,
                  o = n.previousElementSibling;
                s < r
                  ? (a.a.removeClass(n, "ui-table-dragpoint-bottom"),
                    (this.droppedRowIndex = t),
                    o
                      ? a.a.addClass(o, "ui-table-dragpoint-bottom")
                      : a.a.addClass(n, "ui-table-dragpoint-top"))
                  : (o
                      ? a.a.removeClass(o, "ui-table-dragpoint-bottom")
                      : a.a.addClass(n, "ui-table-dragpoint-top"),
                    (this.droppedRowIndex = t + 1),
                    a.a.addClass(n, "ui-table-dragpoint-bottom"));
              }
            }
            onRowDragLeave(e, t) {
              let n = t.previousElementSibling;
              n && a.a.removeClass(n, "ui-table-dragpoint-bottom"),
                a.a.removeClass(t, "ui-table-dragpoint-bottom"),
                a.a.removeClass(t, "ui-table-dragpoint-top");
            }
            onRowDragEnd(e) {
              (this.rowDragging = !1),
                (this.draggedRowIndex = null),
                (this.droppedRowIndex = null);
            }
            onRowDrop(e, t) {
              if (null != this.droppedRowIndex) {
                let e =
                  this.draggedRowIndex > this.droppedRowIndex
                    ? this.droppedRowIndex
                    : 0 === this.droppedRowIndex
                    ? 0
                    : this.droppedRowIndex - 1;
                l.b.reorderArray(this.value, this.draggedRowIndex, e),
                  this.onRowReorder.emit({
                    dragIndex: this.draggedRowIndex,
                    dropIndex: e,
                  });
              }
              this.onRowDragLeave(e, t), this.onRowDragEnd(e);
            }
            isEmpty() {
              let e = this.filteredValue || this.value;
              return null == e || 0 == e.length;
            }
            getBlockableElement() {
              return this.el.nativeElement.children[0];
            }
            getStorage() {
              switch (this.stateStorage) {
                case "local":
                  return window.localStorage;
                case "session":
                  return window.sessionStorage;
                default:
                  throw new Error(
                    this.stateStorage +
                      ' is not a valid value for the state storage, supported values are "local" and "session".'
                  );
              }
            }
            isStateful() {
              return null != this.stateKey;
            }
            saveState() {
              const e = this.getStorage();
              let t = {};
              this.paginator && ((t.first = this.first), (t.rows = this.rows)),
                this.sortField &&
                  ((t.sortField = this.sortField),
                  (t.sortOrder = this.sortOrder)),
                this.multiSortMeta && (t.multiSortMeta = this.multiSortMeta),
                this.hasFilter() && (t.filters = this.filters),
                this.resizableColumns && this.saveColumnWidths(t),
                this.reorderableColumns && this.saveColumnOrder(t),
                this.selection && (t.selection = this.selection),
                Object.keys(this.expandedRowKeys).length &&
                  (t.expandedRowKeys = this.expandedRowKeys),
                e.setItem(this.stateKey, JSON.stringify(t)),
                this.onStateSave.emit(t);
            }
            clearState() {
              const e = this.getStorage();
              this.stateKey && e.removeItem(this.stateKey);
            }
            restoreState() {
              const e = this.getStorage().getItem(this.stateKey);
              if (e) {
                let t = JSON.parse(e);
                this.paginator &&
                  ((this.first = t.first),
                  (this.rows = t.rows),
                  this.firstChange.emit(this.first),
                  this.rowsChange.emit(this.rows)),
                  t.sortField &&
                    ((this.restoringSort = !0),
                    (this._sortField = t.sortField),
                    (this._sortOrder = t.sortOrder)),
                  t.multiSortMeta &&
                    ((this.restoringSort = !0),
                    (this._multiSortMeta = t.multiSortMeta)),
                  t.filters &&
                    ((this.restoringFilter = !0), (this.filters = t.filters)),
                  this.resizableColumns &&
                    ((this.columnWidthsState = t.columnWidths),
                    (this.tableWidthState = t.tableWidth)),
                  t.expandedRowKeys &&
                    (this.expandedRowKeys = t.expandedRowKeys),
                  t.selection &&
                    Promise.resolve(null).then(() =>
                      this.selectionChange.emit(t.selection)
                    ),
                  (this.stateRestored = !0),
                  this.onStateRestore.emit(t);
              }
            }
            saveColumnWidths(e) {
              let t = [];
              a.a
                .find(
                  this.containerViewChild.nativeElement,
                  ".ui-table-thead > tr:first-child > th"
                )
                .map((e) => t.push(a.a.getOuterWidth(e))),
                (e.columnWidths = t.join(",")),
                "expand" === this.columnResizeMode &&
                  (e.tableWidth = this.scrollable
                    ? a.a.findSingle(
                        this.containerViewChild.nativeElement,
                        ".ui-table-scrollable-header-table"
                      ).style.width
                    : a.a.getOuterWidth(this.tableViewChild.nativeElement) +
                      "px");
            }
            restoreColumnWidths() {
              if (this.columnWidthsState) {
                let e = this.columnWidthsState.split(",");
                if (
                  ("expand" === this.columnResizeMode &&
                    this.tableWidthState &&
                    (this.scrollable
                      ? this.setScrollableItemsWidthOnExpandResize(
                          null,
                          this.tableWidthState,
                          0
                        )
                      : ((this.tableViewChild.nativeElement.style.width =
                          this.tableWidthState),
                        (this.containerViewChild.nativeElement.style.width =
                          this.tableWidthState))),
                  this.scrollable)
                ) {
                  let t = a.a.find(
                      this.containerViewChild.nativeElement,
                      ".ui-table-scrollable-header-table > colgroup > col"
                    ),
                    n = a.a.find(
                      this.containerViewChild.nativeElement,
                      this.virtualScroll
                        ? "cdk-virtual-scroll-viewport table > colgroup > col"
                        : ".ui-table-scrollable-body table > colgroup > col"
                    );
                  t.map((t, n) => (t.style.width = e[n] + "px")),
                    n.map((t, n) => (t.style.width = e[n] + "px"));
                } else
                  a.a
                    .find(
                      this.tableViewChild.nativeElement,
                      ".ui-table-thead > tr:first-child > th"
                    )
                    .map((t, n) => (t.style.width = e[n] + "px"));
              }
            }
            saveColumnOrder(e) {
              if (this.columns) {
                let t = [];
                this.columns.map((e) => {
                  t.push(e.field || e.key);
                }),
                  (e.columnOrder = t);
              }
            }
            restoreColumnOrder() {
              const e = this.getStorage().getItem(this.stateKey);
              if (e) {
                let t = JSON.parse(e).columnOrder;
                if (t) {
                  let e = [];
                  t.map((t) => {
                    let n = this.findColumnByKey(t);
                    n && e.push(n);
                  }),
                    (this.columnOrderStateRestored = !0),
                    (this.columns = e);
                }
              }
            }
            findColumnByKey(e) {
              if (!this.columns) return null;
              for (let t of this.columns)
                if (t.key === e || t.field === e) return t;
            }
            ngOnDestroy() {
              this.unbindDocumentEditListener(),
                (this.editingCell = null),
                (this.initialized = null);
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.B), i.Rb(Te), i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-table"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, r.d, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.templates = s);
              },
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (i.Qc(h, !0),
                  i.Qc(d, !0),
                  i.Qc(p, !0),
                  i.Qc(f, !0),
                  i.Qc(g, !0),
                  i.Qc(m, !0),
                  i.Qc(b, !0)),
                  2 & e &&
                    (i.Ac((n = i.gc())) && (t.containerViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.resizeHelperViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.reorderIndicatorUpViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.reorderIndicatorDownViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.tableViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollableViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollableFrozenViewChild = n.first));
              },
              inputs: {
                pageLinks: "pageLinks",
                alwaysShowPaginator: "alwaysShowPaginator",
                paginatorPosition: "paginatorPosition",
                paginatorDropdownScrollHeight: "paginatorDropdownScrollHeight",
                currentPageReportTemplate: "currentPageReportTemplate",
                showFirstLastIcon: "showFirstLastIcon",
                defaultSortOrder: "defaultSortOrder",
                sortMode: "sortMode",
                resetPageOnSort: "resetPageOnSort",
                contextMenuSelectionMode: "contextMenuSelectionMode",
                rowTrackBy: "rowTrackBy",
                lazy: "lazy",
                lazyLoadOnInit: "lazyLoadOnInit",
                compareSelectionBy: "compareSelectionBy",
                csvSeparator: "csvSeparator",
                exportFilename: "exportFilename",
                filters: "filters",
                filterDelay: "filterDelay",
                expandedRowKeys: "expandedRowKeys",
                editingRowKeys: "editingRowKeys",
                rowExpandMode: "rowExpandMode",
                virtualScrollDelay: "virtualScrollDelay",
                virtualRowHeight: "virtualRowHeight",
                columnResizeMode: "columnResizeMode",
                loadingIcon: "loadingIcon",
                showLoader: "showLoader",
                stateStorage: "stateStorage",
                editMode: "editMode",
                totalRecords: "totalRecords",
                value: "value",
                columns: "columns",
                first: "first",
                rows: "rows",
                sortField: "sortField",
                sortOrder: "sortOrder",
                multiSortMeta: "multiSortMeta",
                selection: "selection",
                contextMenuSelection: "contextMenuSelection",
                frozenColumns: "frozenColumns",
                frozenValue: "frozenValue",
                style: "style",
                styleClass: "styleClass",
                tableStyle: "tableStyle",
                tableStyleClass: "tableStyleClass",
                paginator: "paginator",
                rowsPerPageOptions: "rowsPerPageOptions",
                paginatorDropdownAppendTo: "paginatorDropdownAppendTo",
                showCurrentPageReport: "showCurrentPageReport",
                selectionMode: "selectionMode",
                dataKey: "dataKey",
                metaKeySelection: "metaKeySelection",
                globalFilterFields: "globalFilterFields",
                filterLocale: "filterLocale",
                scrollable: "scrollable",
                scrollHeight: "scrollHeight",
                virtualScroll: "virtualScroll",
                frozenWidth: "frozenWidth",
                responsive: "responsive",
                contextMenu: "contextMenu",
                resizableColumns: "resizableColumns",
                reorderableColumns: "reorderableColumns",
                loading: "loading",
                rowHover: "rowHover",
                customSort: "customSort",
                autoLayout: "autoLayout",
                exportFunction: "exportFunction",
                stateKey: "stateKey",
                minBufferPx: "minBufferPx",
                maxBufferPx: "maxBufferPx",
              },
              outputs: {
                selectionChange: "selectionChange",
                contextMenuSelectionChange: "contextMenuSelectionChange",
                onRowSelect: "onRowSelect",
                onRowUnselect: "onRowUnselect",
                onPage: "onPage",
                onSort: "onSort",
                onFilter: "onFilter",
                onLazyLoad: "onLazyLoad",
                onRowExpand: "onRowExpand",
                onRowCollapse: "onRowCollapse",
                onContextMenuSelect: "onContextMenuSelect",
                onColResize: "onColResize",
                onColReorder: "onColReorder",
                onRowReorder: "onRowReorder",
                onEditInit: "onEditInit",
                onEditComplete: "onEditComplete",
                onEditCancel: "onEditCancel",
                onHeaderCheckboxToggle: "onHeaderCheckboxToggle",
                sortFunction: "sortFunction",
                firstChange: "firstChange",
                rowsChange: "rowsChange",
                onStateSave: "onStateSave",
                onStateRestore: "onStateRestore",
              },
              features: [i.Db([Te]), i.Cb],
              decls: 13,
              vars: 22,
              consts: [
                [3, "ngStyle", "ngClass"],
                ["container", ""],
                ["class", "ui-table-loading ui-widget-overlay", 4, "ngIf"],
                ["class", "ui-table-loading-content", 4, "ngIf"],
                ["class", "ui-table-caption ui-widget-header", 4, "ngIf"],
                [
                  "styleClass",
                  "ui-paginator-top",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                  4,
                  "ngIf",
                ],
                ["class", "ui-table-wrapper", 4, "ngIf"],
                ["class", "ui-table-scrollable-wrapper", 4, "ngIf"],
                [
                  "styleClass",
                  "ui-paginator-bottom",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                  4,
                  "ngIf",
                ],
                ["class", "ui-table-summary ui-widget-header", 4, "ngIf"],
                [
                  "class",
                  "ui-column-resizer-helper ui-state-highlight",
                  "style",
                  "display:none",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "pi pi-arrow-down ui-table-reorder-indicator-up",
                  "style",
                  "display:none",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "pi pi-arrow-up ui-table-reorder-indicator-down",
                  "style",
                  "display:none",
                  4,
                  "ngIf",
                ],
                [1, "ui-table-loading", "ui-widget-overlay"],
                [1, "ui-table-loading-content"],
                [1, "ui-table-caption", "ui-widget-header"],
                [4, "ngTemplateOutlet"],
                [
                  "styleClass",
                  "ui-paginator-top",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                ],
                [1, "ui-table-wrapper"],
                ["role", "grid", 3, "ngClass", "ngStyle"],
                ["table", ""],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "ui-table-thead"],
                [1, "ui-table-tbody", 3, "pTableBody", "pTableBodyTemplate"],
                ["class", "ui-table-tfoot", 4, "ngIf"],
                [1, "ui-table-tfoot"],
                [1, "ui-table-scrollable-wrapper"],
                [
                  "class",
                  "ui-table-scrollable-view ui-table-frozen-view",
                  3,
                  "pScrollableView",
                  "frozen",
                  "ngStyle",
                  "scrollHeight",
                  4,
                  "ngIf",
                ],
                [
                  1,
                  "ui-table-scrollable-view",
                  3,
                  "pScrollableView",
                  "frozen",
                  "scrollHeight",
                  "ngStyle",
                ],
                ["scrollableView", ""],
                [
                  1,
                  "ui-table-scrollable-view",
                  "ui-table-frozen-view",
                  3,
                  "pScrollableView",
                  "frozen",
                  "ngStyle",
                  "scrollHeight",
                ],
                ["scrollableFrozenView", ""],
                [
                  "styleClass",
                  "ui-paginator-bottom",
                  3,
                  "rows",
                  "first",
                  "totalRecords",
                  "pageLinkSize",
                  "alwaysShow",
                  "rowsPerPageOptions",
                  "templateLeft",
                  "templateRight",
                  "dropdownAppendTo",
                  "dropdownScrollHeight",
                  "currentPageReportTemplate",
                  "showFirstLastIcon",
                  "dropdownItemTemplate",
                  "showCurrentPageReport",
                  "onPageChange",
                ],
                [1, "ui-table-summary", "ui-widget-header"],
                [
                  1,
                  "ui-column-resizer-helper",
                  "ui-state-highlight",
                  2,
                  "display",
                  "none",
                ],
                ["resizeHelper", ""],
                [
                  1,
                  "pi",
                  "pi-arrow-down",
                  "ui-table-reorder-indicator-up",
                  2,
                  "display",
                  "none",
                ],
                ["reorderIndicatorUp", ""],
                [
                  1,
                  "pi",
                  "pi-arrow-up",
                  "ui-table-reorder-indicator-down",
                  2,
                  "display",
                  "none",
                ],
                ["reorderIndicatorDown", ""],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Xb(0, "div", 0, 1),
                  i.Lc(2, v, 1, 0, "div", 2),
                  i.Lc(3, y, 2, 2, "div", 3),
                  i.Lc(4, S, 2, 1, "div", 4),
                  i.Lc(5, _, 1, 14, "p-paginator", 5),
                  i.Lc(6, k, 8, 13, "div", 6),
                  i.Lc(7, R, 4, 8, "div", 7),
                  i.Lc(8, N, 1, 14, "p-paginator", 8),
                  i.Lc(9, A, 2, 1, "div", 9),
                  i.Lc(10, D, 2, 0, "div", 10),
                  i.Lc(11, j, 2, 0, "span", 11),
                  i.Lc(12, F, 2, 0, "span", 12),
                  i.Wb()),
                  2 & e &&
                    (i.Gb(t.styleClass),
                    i.pc("ngStyle", t.style)(
                      "ngClass",
                      i.xc(
                        15,
                        V,
                        t.responsive,
                        t.resizableColumns,
                        t.resizableColumns && "fit" === t.columnResizeMode,
                        t.rowHover || t.selectionMode,
                        t.autoLayout,
                        t.scrollable && "flex" === t.scrollHeight
                      )
                    ),
                    i.Eb(2),
                    i.pc("ngIf", t.loading && t.showLoader),
                    i.Eb(1),
                    i.pc("ngIf", t.loading && t.showLoader),
                    i.Eb(1),
                    i.pc("ngIf", t.captionTemplate),
                    i.Eb(1),
                    i.pc(
                      "ngIf",
                      t.paginator &&
                        ("top" === t.paginatorPosition ||
                          "both" == t.paginatorPosition)
                    ),
                    i.Eb(1),
                    i.pc("ngIf", !t.scrollable),
                    i.Eb(1),
                    i.pc("ngIf", t.scrollable),
                    i.Eb(1),
                    i.pc(
                      "ngIf",
                      t.paginator &&
                        ("bottom" === t.paginatorPosition ||
                          "both" == t.paginatorPosition)
                    ),
                    i.Eb(1),
                    i.pc("ngIf", t.summaryTemplate),
                    i.Eb(1),
                    i.pc("ngIf", t.resizableColumns),
                    i.Eb(1),
                    i.pc("ngIf", t.reorderableColumns),
                    i.Eb(1),
                    i.pc("ngIf", t.reorderableColumns));
              },
              directives: function () {
                return [s.n, s.k, s.m, s.r, o.a, Me, Ie];
              },
              encapsulation: 2,
            })),
            e
          );
        })(),
        Me = (() => {
          let e = class {
            constructor(e, t, n) {
              (this.dt = e),
                (this.tableService = t),
                (this.cd = n),
                (this.subscription =
                  this.dt.tableService.valueSource$.subscribe(() => {
                    this.dt.virtualScroll && this.cd.detectChanges();
                  }));
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(ke), i.Rb(Te), i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["", "pTableBody", ""]],
              inputs: {
                columns: ["pTableBody", "columns"],
                template: ["pTableBodyTemplate", "template"],
                frozen: "frozen",
              },
              attrs: W,
              decls: 5,
              vars: 5,
              consts: [
                [4, "ngIf"],
                ["ngFor", "", 3, "ngForOf", "ngForTrackBy"],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [
                  "cdkVirtualFor",
                  "",
                  3,
                  "cdkVirtualForOf",
                  "cdkVirtualForTrackBy",
                  "cdkVirtualForTemplateCacheSize",
                ],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Lc(0, H, 3, 6, "ng-container", 0),
                  i.Lc(1, $, 2, 3, "ng-container", 0),
                  i.Lc(2, ee, 3, 6, "ng-container", 0),
                  i.Lc(3, ie, 2, 5, "ng-container", 0),
                  i.Lc(4, re, 2, 5, "ng-container", 0)),
                  2 & e &&
                    (i.pc(
                      "ngIf",
                      !t.dt.expandedRowTemplate && !t.dt.virtualScroll
                    ),
                    i.Eb(1),
                    i.pc(
                      "ngIf",
                      !t.dt.expandedRowTemplate && t.dt.virtualScroll
                    ),
                    i.Eb(1),
                    i.pc("ngIf", t.dt.expandedRowTemplate),
                    i.Eb(1),
                    i.pc("ngIf", t.dt.loading),
                    i.Eb(1),
                    i.pc("ngIf", t.dt.isEmpty() && !t.dt.loading));
              },
              directives: [s.m, s.l, s.r, u.b],
              pipes: [s.u],
              encapsulation: 2,
            })),
            e
          );
        })(),
        Ie = (() => {
          let e = class {
            constructor(e, t, n) {
              (this.dt = e),
                (this.el = t),
                (this.zone = n),
                (this.loadedPages = []),
                (this.subscription =
                  this.dt.tableService.valueSource$.subscribe(() => {
                    this.zone.runOutsideAngular(() => {
                      setTimeout(() => {
                        this.alignScrollBar();
                      }, 50);
                    });
                  })),
                (this.initialized = !1);
            }
            get scrollHeight() {
              return this._scrollHeight;
            }
            set scrollHeight(e) {
              (this._scrollHeight = e),
                null != e &&
                  (e.includes("%") || e.includes("calc")) &&
                  console.log(
                    'Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight="flex" instead.'
                  ),
                this.dt.virtualScroll &&
                  this.virtualScrollBody &&
                  this.virtualScrollBody.ngOnInit();
            }
            ngAfterViewChecked() {
              !this.initialized &&
                this.el.nativeElement.offsetParent &&
                (this.alignScrollBar(), (this.initialized = !0));
            }
            ngAfterViewInit() {
              if (this.frozen)
                this.scrollableAlignerViewChild &&
                  this.scrollableAlignerViewChild.nativeElement &&
                  (this.scrollableAlignerViewChild.nativeElement.style.height =
                    a.a.calculateScrollbarHeight() + "px");
              else {
                (this.dt.frozenColumns || this.dt.frozenBodyTemplate) &&
                  a.a.addClass(this.el.nativeElement, "ui-table-unfrozen-view");
                let e = this.el.nativeElement.previousElementSibling;
                e &&
                  (this.frozenSiblingBody = a.a.findSingle(
                    e,
                    this.dt.virtualScroll
                      ? ".ui-table-virtual-scrollable-body"
                      : ".ui-table-scrollable-body"
                  ));
              }
              this.bindEvents(), this.alignScrollBar();
            }
            bindEvents() {
              this.zone.runOutsideAngular(() => {
                this.scrollHeaderViewChild &&
                  this.scrollHeaderViewChild.nativeElement &&
                  ((this.headerScrollListener = this.onHeaderScroll.bind(this)),
                  this.scrollHeaderViewChild.nativeElement.addEventListener(
                    "scroll",
                    this.headerScrollListener
                  )),
                  this.scrollFooterViewChild &&
                    this.scrollFooterViewChild.nativeElement &&
                    ((this.footerScrollListener =
                      this.onFooterScroll.bind(this)),
                    this.scrollFooterViewChild.nativeElement.addEventListener(
                      "scroll",
                      this.footerScrollListener
                    )),
                  this.frozen ||
                    ((this.bodyScrollListener = this.onBodyScroll.bind(this)),
                    this.dt.virtualScroll
                      ? this.virtualScrollBody
                          .getElementRef()
                          .nativeElement.addEventListener(
                            "scroll",
                            this.bodyScrollListener
                          )
                      : this.scrollBodyViewChild.nativeElement.addEventListener(
                          "scroll",
                          this.bodyScrollListener
                        ));
              });
            }
            unbindEvents() {
              this.scrollHeaderViewChild &&
                this.scrollHeaderViewChild.nativeElement &&
                this.scrollHeaderViewChild.nativeElement.removeEventListener(
                  "scroll",
                  this.headerScrollListener
                ),
                this.scrollFooterViewChild &&
                  this.scrollFooterViewChild.nativeElement &&
                  this.scrollFooterViewChild.nativeElement.removeEventListener(
                    "scroll",
                    this.footerScrollListener
                  ),
                this.scrollBodyViewChild &&
                  this.scrollBodyViewChild.nativeElement &&
                  this.scrollBodyViewChild.nativeElement.removeEventListener(
                    "scroll",
                    this.bodyScrollListener
                  ),
                this.virtualScrollBody &&
                  this.virtualScrollBody.getElementRef() &&
                  this.virtualScrollBody
                    .getElementRef()
                    .nativeElement.removeEventListener(
                      "scroll",
                      this.bodyScrollListener
                    );
            }
            onHeaderScroll() {
              const e = this.scrollHeaderViewChild.nativeElement.scrollLeft;
              (this.scrollBodyViewChild.nativeElement.scrollLeft = e),
                this.scrollFooterViewChild &&
                  this.scrollFooterViewChild.nativeElement &&
                  (this.scrollFooterViewChild.nativeElement.scrollLeft = e),
                (this.preventBodyScrollPropagation = !0);
            }
            onFooterScroll() {
              const e = this.scrollFooterViewChild.nativeElement.scrollLeft;
              (this.scrollBodyViewChild.nativeElement.scrollLeft = e),
                this.scrollHeaderViewChild &&
                  this.scrollHeaderViewChild.nativeElement &&
                  (this.scrollHeaderViewChild.nativeElement.scrollLeft = e),
                (this.preventBodyScrollPropagation = !0);
            }
            onBodyScroll(e) {
              this.preventBodyScrollPropagation
                ? (this.preventBodyScrollPropagation = !1)
                : (this.scrollHeaderViewChild &&
                    this.scrollHeaderViewChild.nativeElement &&
                    (this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft =
                      -1 * e.target.scrollLeft + "px"),
                  this.scrollFooterViewChild &&
                    this.scrollFooterViewChild.nativeElement &&
                    (this.scrollFooterBoxViewChild.nativeElement.style.marginLeft =
                      -1 * e.target.scrollLeft + "px"),
                  this.frozenSiblingBody &&
                    (this.frozenSiblingBody.scrollTop = e.target.scrollTop));
            }
            onScrollIndexChange(e) {
              this.dt.lazy &&
                (this.virtualScrollTimeout &&
                  clearTimeout(this.virtualScrollTimeout),
                (this.virtualScrollTimeout = setTimeout(() => {
                  let t = Math.floor(e / this.dt.rows),
                    n = 0 === t ? 0 : (t - 1) * this.dt.rows,
                    i = 0 === t ? 2 * this.dt.rows : 3 * this.dt.rows;
                  t !== this.virtualPage &&
                    ((this.virtualPage = t),
                    this.dt.onLazyLoad.emit({
                      first: n,
                      rows: i,
                      sortField: this.dt.sortField,
                      sortOrder: this.dt.sortOrder,
                      filters: this.dt.filters,
                      globalFilter:
                        this.dt.filters && this.dt.filters.global
                          ? this.dt.filters.global.value
                          : null,
                      multiSortMeta: this.dt.multiSortMeta,
                    }));
                }, this.dt.virtualScrollDelay)));
            }
            createPageRange(e) {
              let t = [];
              return (
                0 !== e && t.push(e - 1),
                t.push(e),
                e !== this.getPageCount() - 1 && t.push(e + 1),
                t
              );
            }
            getPageCount() {
              let e = this.dt.filteredValue || this.dt.value;
              return Math.ceil((e ? e.length : 0) / this.dt.rows);
            }
            scrollToVirtualIndex(e) {
              this.virtualScrollBody && this.virtualScrollBody.scrollToIndex(e);
            }
            scrollTo(e) {
              this.virtualScrollBody
                ? this.virtualScrollBody.scrollTo(e)
                : this.scrollBodyViewChild.nativeElement.scrollTo
                ? this.scrollBodyViewChild.nativeElement.scrollTo(e)
                : ((this.scrollBodyViewChild.nativeElement.scrollLeft = e.left),
                  (this.scrollBodyViewChild.nativeElement.scrollTop = e.top));
            }
            hasVerticalOverflow() {
              return this.dt.virtualScroll
                ? this.virtualScrollBody.getDataLength() *
                    this.dt.virtualRowHeight >
                    this.virtualScrollBody.getViewportSize()
                : a.a.getOuterHeight(this.scrollTableViewChild.nativeElement) >
                    a.a.getOuterHeight(this.scrollBodyViewChild.nativeElement);
            }
            alignScrollBar() {
              if (!this.frozen) {
                let e = this.hasVerticalOverflow()
                  ? a.a.calculateScrollbarWidth()
                  : 0;
                (this.scrollHeaderBoxViewChild.nativeElement.style.paddingRight =
                  e + "px"),
                  this.scrollFooterBoxViewChild &&
                    this.scrollFooterBoxViewChild.nativeElement &&
                    (this.scrollFooterBoxViewChild.nativeElement.style.paddingRight =
                      e + "px");
              }
              this.initialized = !1;
            }
            ngOnDestroy() {
              this.unbindEvents(),
                (this.frozenSiblingBody = null),
                this.subscription && this.subscription.unsubscribe(),
                (this.initialized = !1);
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(ke), i.Rb(i.m), i.Rb(i.B));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["", "pScrollableView", ""]],
              viewQuery: function (e, t) {
                var n;
                1 & e &&
                  (i.Qc(oe, !0),
                  i.Qc(ae, !0),
                  i.Qc(le, !0),
                  i.Qc(ce, !0),
                  i.Qc(ue, !0),
                  i.Qc(he, !0),
                  i.Qc(de, !0),
                  i.Qc(u.c, !0)),
                  2 & e &&
                    (i.Ac((n = i.gc())) && (t.scrollHeaderViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollHeaderBoxViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollBodyViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollTableViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.scrollFooterViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollFooterBoxViewChild = n.first),
                    i.Ac((n = i.gc())) &&
                      (t.scrollableAlignerViewChild = n.first),
                    i.Ac((n = i.gc())) && (t.virtualScrollBody = n.first));
              },
              inputs: {
                scrollHeight: "scrollHeight",
                columns: ["pScrollableView", "columns"],
                frozen: "frozen",
              },
              attrs: pe,
              decls: 21,
              vars: 24,
              consts: [
                [1, "ui-table-scrollable-header", "ui-widget-header"],
                ["scrollHeader", ""],
                [1, "ui-table-scrollable-header-box"],
                ["scrollHeaderBox", ""],
                [
                  1,
                  "ui-table-scrollable-header-table",
                  3,
                  "ngClass",
                  "ngStyle",
                ],
                [4, "ngTemplateOutlet", "ngTemplateOutletContext"],
                [1, "ui-table-thead"],
                [1, "ui-table-tbody"],
                ["ngFor", "", 3, "ngForOf", "ngForTrackBy"],
                [4, "ngIf", "ngIfElse"],
                ["virtualScrollTemplate", ""],
                [1, "ui-table-scrollable-footer", "ui-widget-header"],
                ["scrollFooter", ""],
                [1, "ui-table-scrollable-footer-box"],
                ["scrollFooterBox", ""],
                [
                  1,
                  "ui-table-scrollable-footer-table",
                  3,
                  "ngClass",
                  "ngStyle",
                ],
                [1, "ui-table-tfoot"],
                [1, "ui-table-scrollable-body", 3, "ngStyle"],
                ["scrollBody", ""],
                [3, "ngStyle"],
                ["scrollTable", ""],
                [
                  1,
                  "ui-table-tbody",
                  3,
                  "pTableBody",
                  "pTableBodyTemplate",
                  "frozen",
                ],
                ["style", "background-color:transparent", 4, "ngIf"],
                [2, "background-color", "transparent"],
                ["scrollableAligner", ""],
                [
                  "tabindex",
                  "0",
                  1,
                  "ui-table-virtual-scrollable-body",
                  3,
                  "itemSize",
                  "minBufferPx",
                  "maxBufferPx",
                  "scrolledIndexChange",
                ],
              ],
              template: function (e, t) {
                if (
                  (1 & e &&
                    (i.Xb(0, "div", 0, 1),
                    i.Xb(2, "div", 2, 3),
                    i.Xb(4, "table", 4),
                    i.Lc(5, fe, 1, 0, "ng-container", 5),
                    i.Xb(6, "thead", 6),
                    i.Lc(7, ge, 1, 0, "ng-container", 5),
                    i.Wb(),
                    i.Xb(8, "tbody", 7),
                    i.Lc(9, be, 1, 6, "ng-template", 8),
                    i.Wb(),
                    i.Wb(),
                    i.Wb(),
                    i.Wb(),
                    i.Lc(10, Se, 8, 15, "ng-container", 9),
                    i.Lc(11, Ee, 6, 16, "ng-template", null, 10, i.Mc),
                    i.Xb(13, "div", 11, 12),
                    i.Xb(15, "div", 13, 14),
                    i.Xb(17, "table", 15),
                    i.Lc(18, Oe, 1, 0, "ng-container", 5),
                    i.Xb(19, "tfoot", 16),
                    i.Lc(20, xe, 1, 0, "ng-container", 5),
                    i.Wb(),
                    i.Wb(),
                    i.Wb(),
                    i.Wb()),
                  2 & e)
                ) {
                  const e = i.Bc(12);
                  i.Eb(4),
                    i.pc("ngClass", t.dt.tableStyleClass)(
                      "ngStyle",
                      t.dt.tableStyle
                    ),
                    i.Eb(1),
                    i.pc(
                      "ngTemplateOutlet",
                      (t.frozen && t.dt.frozenColGroupTemplate) ||
                        t.dt.colGroupTemplate
                    )("ngTemplateOutletContext", i.sc(16, x, t.columns)),
                    i.Eb(2),
                    i.pc(
                      "ngTemplateOutlet",
                      (t.frozen && t.dt.frozenHeaderTemplate) ||
                        t.dt.headerTemplate
                    )("ngTemplateOutletContext", i.sc(18, x, t.columns)),
                    i.Eb(2),
                    i.pc("ngForOf", t.dt.frozenValue)(
                      "ngForTrackBy",
                      t.dt.rowTrackBy
                    ),
                    i.Eb(1),
                    i.pc("ngIf", !t.dt.virtualScroll)("ngIfElse", e),
                    i.Eb(7),
                    i.pc("ngClass", t.dt.tableStyleClass)(
                      "ngStyle",
                      t.dt.tableStyle
                    ),
                    i.Eb(1),
                    i.pc(
                      "ngTemplateOutlet",
                      (t.frozen && t.dt.frozenColGroupTemplate) ||
                        t.dt.colGroupTemplate
                    )("ngTemplateOutletContext", i.sc(20, x, t.columns)),
                    i.Eb(2),
                    i.pc(
                      "ngTemplateOutlet",
                      (t.frozen && t.dt.frozenFooterTemplate) ||
                        t.dt.footerTemplate
                    )("ngTemplateOutletContext", i.sc(22, x, t.columns));
                }
              },
              directives: [s.k, s.n, s.r, s.l, s.m, Me, u.c, u.a],
              encapsulation: 2,
            })),
            e
          );
        })(),
        Pe = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[s.c, o.b, u.d], r.e, u.d],
            })),
            e
          );
        })();
    },
    "yhG/": function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return _;
      }),
        n.d(t, "b", function () {
          return C;
        }),
        n.d(t, "c", function () {
          return S;
        });
      var i = n("fXoL"),
        s = n("R0Ic"),
        r = n("ofXK"),
        o = n("RtSl");
      function a(e, t) {
        if ((1 & e && (i.Xb(0, "span", 7), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Pc(" ", e.header, " ");
        }
      }
      function l(e, t) {
        1 & e && i.nc(0, 1, ["*ngIf", "hasHeaderFacet"]);
      }
      function c(e, t) {
        1 & e && i.Tb(0);
      }
      function u(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, c, 1, 0, "ng-container", 8), i.Ub()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(1), i.pc("ngTemplateOutlet", e.contentTemplate);
        }
      }
      const h = ["*", [["p-header"]]],
        d = function (e, t) {
          return { "ui-state-active": e, "ui-state-disabled": t };
        },
        p = function (e) {
          return { transitionParams: e, height: "*" };
        },
        f = function (e) {
          return { value: "visible", params: e };
        },
        g = function (e) {
          return { transitionParams: e, height: "0" };
        },
        m = function (e) {
          return { value: "hidden", params: e };
        },
        b = function (e) {
          return { "ui-accordion-content-wrapper-overflown": e };
        },
        v = ["*", "p-header"],
        y = ["*"];
      let w = 0,
        S = (() => {
          let e = class {
            constructor(e, t) {
              (this.changeDetector = t),
                (this.cache = !0),
                (this.selectedChange = new i.o()),
                (this.transitionOptions =
                  "400ms cubic-bezier(0.86, 0, 0.07, 1)"),
                (this.id = "ui-accordiontab-" + w++),
                (this.accordion = e);
            }
            get selected() {
              return this._selected;
            }
            set selected(e) {
              (this._selected = e),
                this.loaded ||
                  (this._selected && this.cache && (this.loaded = !0),
                  this.changeDetector.markForCheck());
            }
            get animating() {
              return this._animating;
            }
            set animating(e) {
              (this._animating = e),
                this.changeDetector.destroyed ||
                  this.changeDetector.detectChanges();
            }
            ngAfterContentInit() {
              this.templates.forEach((e) => {
                switch (e.getType()) {
                  case "content":
                  default:
                    this.contentTemplate = e.template;
                }
              });
            }
            toggle(e) {
              if (this.disabled || this.animating) return !1;
              this.animating = !0;
              let t = this.findTabIndex();
              if (this.selected)
                (this.selected = !1),
                  this.accordion.onClose.emit({ originalEvent: e, index: t });
              else {
                if (!this.accordion.multiple)
                  for (var n = 0; n < this.accordion.tabs.length; n++)
                    (this.accordion.tabs[n].selected = !1),
                      this.accordion.tabs[n].selectedChange.emit(!1);
                (this.selected = !0),
                  (this.loaded = !0),
                  this.accordion.onOpen.emit({ originalEvent: e, index: t });
              }
              this.selectedChange.emit(this.selected),
                this.accordion.updateActiveIndex(),
                e.preventDefault();
            }
            findTabIndex() {
              let e = -1;
              for (var t = 0; t < this.accordion.tabs.length; t++)
                if (this.accordion.tabs[t] == this) {
                  e = t;
                  break;
                }
              return e;
            }
            get hasHeaderFacet() {
              return this.headerFacet && this.headerFacet.length > 0;
            }
            onToggleDone(e) {
              this.animating = !1;
            }
            onKeydown(e) {
              (32 !== e.which && 13 !== e.which) ||
                (this.toggle(e), e.preventDefault());
            }
            ngOnDestroy() {
              this.accordion.tabs.splice(this.findTabIndex(), 1);
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(Object(i.V)(() => _)), i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-accordionTab"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && (i.Jb(n, o.b, !1), i.Jb(n, o.d, !1)),
                  2 & e &&
                    (i.Ac((s = i.gc())) && (t.headerFacet = s),
                    i.Ac((s = i.gc())) && (t.templates = s));
              },
              inputs: {
                cache: "cache",
                transitionOptions: "transitionOptions",
                selected: "selected",
                header: "header",
                disabled: "disabled",
              },
              outputs: { selectedChange: "selectedChange" },
              ngContentSelectors: v,
              decls: 9,
              vars: 27,
              consts: [
                [
                  1,
                  "ui-accordion-header",
                  "ui-state-default",
                  "ui-corner-all",
                  3,
                  "ngClass",
                ],
                ["role", "tab", 3, "click", "keydown"],
                [0, "ui-accordion-toggle-icon", 3, "ngClass"],
                ["class", "ui-accordion-header-text", 4, "ngIf"],
                [4, "ngIf"],
                [
                  "role",
                  "region",
                  1,
                  "ui-accordion-content-wrapper",
                  3,
                  "ngClass",
                ],
                [1, "ui-accordion-content", "ui-widget-content"],
                [1, "ui-accordion-header-text"],
                [4, "ngTemplateOutlet"],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.oc(h),
                  i.Xb(0, "div", 0),
                  i.Xb(1, "a", 1),
                  i.fc("click", function (e) {
                    return t.toggle(e);
                  })("keydown", function (e) {
                    return t.onKeydown(e);
                  }),
                  i.Sb(2, "span", 2),
                  i.Lc(3, a, 2, 1, "span", 3),
                  i.Lc(4, l, 1, 0, void 0, 4),
                  i.Wb(),
                  i.Wb(),
                  i.Xb(5, "div", 5),
                  i.fc("@tabContent.done", function (e) {
                    return t.onToggleDone(e);
                  }),
                  i.Xb(6, "div", 6),
                  i.nc(7),
                  i.Lc(8, u, 2, 1, "ng-container", 4),
                  i.Wb(),
                  i.Wb()),
                  2 & e &&
                    (i.pc("ngClass", i.tc(14, d, t.selected, t.disabled)),
                    i.Eb(1),
                    i.Fb("tabindex", t.disabled ? -1 : 0)("id", t.id)(
                      "aria-controls",
                      t.id + "-content"
                    )("aria-expanded", t.selected),
                    i.Eb(1),
                    i.pc(
                      "ngClass",
                      t.selected
                        ? t.accordion.collapseIcon
                        : t.accordion.expandIcon
                    ),
                    i.Eb(1),
                    i.pc("ngIf", !t.hasHeaderFacet),
                    i.Eb(1),
                    i.pc("ngIf", t.hasHeaderFacet),
                    i.Eb(1),
                    i.pc(
                      "@tabContent",
                      t.selected
                        ? i.sc(
                            19,
                            f,
                            i.sc(
                              17,
                              p,
                              t.animating ? t.transitionOptions : "0ms"
                            )
                          )
                        : i.sc(23, m, i.sc(21, g, t.transitionOptions))
                    )("ngClass", i.sc(25, b, !t.selected || t.animating)),
                    i.Fb("id", t.id + "-content")("aria-hidden", !t.selected)(
                      "aria-labelledby",
                      t.id
                    ),
                    i.Eb(3),
                    i.pc(
                      "ngIf",
                      t.contentTemplate && (t.cache ? t.loaded : t.selected)
                    ));
              },
              directives: [r.k, r.m, r.r],
              encapsulation: 2,
              data: {
                animation: [
                  Object(s.m)("tabContent", [
                    Object(s.j)("hidden", Object(s.k)({ height: "0" })),
                    Object(s.j)("void", Object(s.k)({ height: "{{height}}" }), {
                      params: { height: "0" },
                    }),
                    Object(s.j)("visible", Object(s.k)({ height: "*" })),
                    Object(s.l)(
                      "visible <=> hidden",
                      Object(s.e)("{{transitionParams}}")
                    ),
                    Object(s.l)(
                      "void => hidden",
                      Object(s.e)("{{transitionParams}}")
                    ),
                    Object(s.l)(
                      "void => visible",
                      Object(s.e)("{{transitionParams}}")
                    ),
                  ]),
                ],
              },
            })),
            e
          );
        })(),
        _ = (() => {
          let e = class {
            constructor(e, t) {
              (this.el = e),
                (this.changeDetector = t),
                (this.onClose = new i.o()),
                (this.onOpen = new i.o()),
                (this.expandIcon = "pi pi-fw pi-chevron-right"),
                (this.collapseIcon = "pi pi-fw pi-chevron-down"),
                (this.activeIndexChange = new i.o()),
                (this.tabs = []);
            }
            ngAfterContentInit() {
              this.initTabs(),
                (this.tabListSubscription = this.tabList.changes.subscribe(
                  (e) => {
                    this.initTabs(), this.changeDetector.markForCheck();
                  }
                ));
            }
            initTabs() {
              (this.tabs = this.tabList.toArray()), this.updateSelectionState();
            }
            getBlockableElement() {
              return this.el.nativeElement.children[0];
            }
            get activeIndex() {
              return this._activeIndex;
            }
            set activeIndex(e) {
              (this._activeIndex = e),
                this.preventActiveIndexPropagation
                  ? (this.preventActiveIndexPropagation = !1)
                  : this.updateSelectionState();
            }
            updateSelectionState() {
              if (this.tabs && this.tabs.length && null != this._activeIndex)
                for (let e = 0; e < this.tabs.length; e++) {
                  let t = this.multiple
                    ? this._activeIndex.includes(e)
                    : e === this._activeIndex;
                  t !== this.tabs[e].selected &&
                    ((this.tabs[e].animating = !0),
                    (this.tabs[e].selected = t),
                    this.tabs[e].selectedChange.emit(t));
                }
            }
            updateActiveIndex() {
              let e = this.multiple ? [] : null;
              this.tabs.forEach((t, n) => {
                if (t.selected) {
                  if (!this.multiple) return void (e = n);
                  e.push(n);
                }
              }),
                (this.preventActiveIndexPropagation = !0),
                this.activeIndexChange.emit(e);
            }
            ngOnDestroy() {
              this.tabListSubscription &&
                this.tabListSubscription.unsubscribe();
            }
          };
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.i));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["p-accordion"]],
              contentQueries: function (e, t, n) {
                var s;
                1 & e && i.Jb(n, S, !1),
                  2 & e && i.Ac((s = i.gc())) && (t.tabList = s);
              },
              inputs: {
                expandIcon: "expandIcon",
                collapseIcon: "collapseIcon",
                activeIndex: "activeIndex",
                multiple: "multiple",
                style: "style",
                styleClass: "styleClass",
              },
              outputs: {
                onClose: "onClose",
                onOpen: "onOpen",
                activeIndexChange: "activeIndexChange",
              },
              ngContentSelectors: y,
              decls: 2,
              vars: 4,
              consts: [["role", "tablist", 3, "ngClass", "ngStyle"]],
              template: function (e, t) {
                1 & e && (i.oc(), i.Xb(0, "div", 0), i.nc(1), i.Wb()),
                  2 & e &&
                    (i.Gb(t.styleClass),
                    i.pc("ngClass", "ui-accordion ui-widget ui-helper-reset")(
                      "ngStyle",
                      t.style
                    ));
              },
              directives: [r.k, r.n],
              encapsulation: 2,
            })),
            e
          );
        })(),
        C = (() => {
          let e = class {};
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[r.c], o.e],
            })),
            e
          );
        })();
    },
    "z+Ro": function (e, t, n) {
      "use strict";
      function i(e) {
        return e && "function" == typeof e.schedule;
      }
      n.d(t, "a", function () {
        return i;
      });
    },
    z5Zb: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return u;
      }),
        n.d(t, "b", function () {
          return h;
        }),
        n.d(t, "c", function () {
          return d;
        }),
        n.d(t, "d", function () {
          return p;
        }),
        n.d(t, "e", function () {
          return c;
        }),
        n.d(t, "f", function () {
          return l;
        }),
        n.d(t, "g", function () {
          return a;
        });
      var i = n("fXoL"),
        s = n("jtHE");
      function r(e, t) {
        return e === t;
      }
      function o(e, t, n) {
        if (null === t || null === n || t.length !== n.length) return !1;
        const i = t.length;
        for (let s = 0; s < i; s++) if (!e(t[s], n[s])) return !1;
        return !0;
      }
      function a(e, t = r) {
        let n = null,
          i = null;
        function s() {
          return (
            o(t, n, arguments) || (i = e.apply(null, arguments)),
            (n = arguments),
            i
          );
        }
        return (
          (s.reset = function () {
            (n = null), (i = null);
          }),
          s
        );
      }
      const l = a(function () {
        const e = Object(i.W)();
        if (!e) return !1;
        const t = e.injector.get(i.h, null);
        return (
          !!t &&
          t.some((e) =>
            ((e && e.providers) || []).some(
              (e) =>
                (e && e.provide && "MockNgModuleResolver" === e.provide.name) ||
                !1
            )
          )
        );
      });
      let c = (() => {
        class e {
          constructor() {
            this.bootstrap$ = new s.a(1);
          }
          get appBootstrapped$() {
            return this.bootstrap$.asObservable();
          }
          bootstrap() {
            this.bootstrap$.next(!0), this.bootstrap$.complete();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const u = new i.r("INITIAL_STATE_TOKEN");
      let h = (() => {
        class e {
          static set(e) {
            this.value = e;
          }
          static pop() {
            const e = this.value;
            return (this.value = {}), e;
          }
        }
        return (e.value = {}), e;
      })();
      const d = new i.r("Internals.StateContextFactory"),
        p = new i.r("Internals.StateFactory");
    },
    z6cu: function (e, t, n) {
      "use strict";
      n.d(t, "a", function () {
        return s;
      });
      var i = n("HDdC");
      function s(e, t) {
        return new i.a(
          t
            ? (n) => t.schedule(r, 0, { error: e, subscriber: n })
            : (t) => t.error(e)
        );
      }
      function r({ error: e, subscriber: t }) {
        t.error(e);
      }
    },
    zUnb: function (e, t, n) {
      "use strict";
      n.r(t);
      var i = n("fXoL"),
        s = n("AytR"),
        r = n("tyNb"),
        o = n("arS9"),
        a = n("RtSl");
      function l(e, t) {
        if ((1 & e && (i.Xb(0, "span"), i.Nc(1), i.Wb()), 2 & e)) {
          const e = t.$implicit;
          i.Eb(1), i.Oc(e.detail);
        }
      }
      const c = function () {
        return { marginTop: "90px" };
      };
      let u = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-root"]],
            decls: 3,
            vars: 3,
            consts: [["pTemplate", "message"]],
            template: function (e, t) {
              1 & e &&
                (i.Sb(0, "router-outlet"),
                i.Xb(1, "p-toast"),
                i.Lc(2, l, 2, 1, "ng-template", 0),
                i.Wb()),
                2 & e && (i.Eb(1), i.Jc(i.rc(2, c)));
            },
            directives: [r.l, o.a, a.d],
            encapsulation: 2,
          })),
          e
        );
      })();
      var h = n("sum4"),
        d = n("aF9I");
      let p = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-public-layout"]],
            decls: 5,
            vars: 0,
            consts: [
              ["id", "main"],
              [1, "content"],
              [1, "d-block", "mt-5"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "main", 0),
                i.Sb(1, "app-public-header"),
                i.Xb(2, "div", 1),
                i.Sb(3, "router-outlet"),
                i.Wb(),
                i.Sb(4, "app-footer", 2),
                i.Wb());
            },
            directives: [h.a, r.l, d.a],
            styles: [
              "main[_ngcontent-%COMP%] {\n      background: #fff;\n      padding-top: 100px;\n    }",
            ],
          })),
          e
        );
      })();
      var f = n("quSY"),
        g = n("AcyG"),
        m = n("7s7n"),
        b = n("M02b"),
        v = n("TkeJ"),
        y = n("9Kd/"),
        w = n("6T7H"),
        S = n("oHij"),
        _ = n("RmEv"),
        C = n("aZ8m"),
        E = n("cZd9");
      let O = (() => {
          class e {
            constructor(e, t, n) {
              (this.snack = e),
                (this.store = t),
                (this.actions = n),
                (this.subscription = new f.a());
            }
            ngOnInit() {
              this.subscribeOnLogoutSuccess();
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            logout() {
              this.store.dispatch(new b.a.Logout());
            }
            subscribeOnLogoutSuccess() {
              this.subscription.add(
                this.actions
                  .pipe(Object(g.k)(b.a.LogoutSuccess))
                  .subscribe(() => {
                    this.snack.success("Logout success!"),
                      this.store.dispatch(new v.a(["/"]));
                  })
              );
            }
            changeLocale(e) {
              this.store.dispatch(new S.a.ChangeLocale(e));
            }
            get user() {
              return this.store.selectSnapshot(m.a.model);
            }
            get isAuthorized() {
              return this.store.selectSnapshot(y.a.isAuthorized);
            }
            get languages() {
              return this.store.selectSnapshot(w.a.languages);
            }
            get selectedLanguage() {
              return this.store.selectSnapshot(w.a.selectedLanguage);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(_.a), i.Rb(g.h), i.Rb(g.b));
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["app-private-layout"]],
              decls: 8,
              vars: 4,
              consts: [
                [
                  3,
                  "user",
                  "isAuthorized",
                  "languages",
                  "selectedLanguage",
                  "selectedLanguageEvent",
                  "logoutEvent",
                ],
                [1, "content"],
                [1, "content__sidebar"],
                [1, "content__main", "container-fluid", "mt-4"],
                [1, "row"],
                [1, "col-12"],
              ],
              template: function (e, t) {
                1 & e &&
                  (i.Xb(0, "main"),
                  i.Xb(1, "app-header", 0),
                  i.fc("selectedLanguageEvent", function (e) {
                    return t.changeLocale(e);
                  })("logoutEvent", function () {
                    return t.logout();
                  }),
                  i.Wb(),
                  i.Xb(2, "div", 1),
                  i.Sb(3, "app-sidebar-menu", 2),
                  i.Xb(4, "div", 3),
                  i.Xb(5, "div", 4),
                  i.Xb(6, "div", 5),
                  i.Sb(7, "router-outlet"),
                  i.Wb(),
                  i.Wb(),
                  i.Wb(),
                  i.Wb(),
                  i.Wb()),
                  2 & e &&
                    (i.Eb(1),
                    i.pc("user", t.user)("isAuthorized", t.isAuthorized)(
                      "languages",
                      t.languages
                    )("selectedLanguage", t.selectedLanguage));
              },
              directives: [C.a, E.a, r.l],
              styles: [
                ".content__sidebar[_ngcontent-%COMP%]{display:block;width:100%;background:#fff;max-width:245px;border-right:1px solid #ddd;overflow:hidden}.content__main[_ngcontent-%COMP%]{max-width:calc(100% - 63px)}@media (max-width:991px){.content__sidebar[_ngcontent-%COMP%]{width:63px}}",
              ],
            })),
            e
          );
        })(),
        x = (() => {
          class e {}
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵcmp = i.Lb({
              type: e,
              selectors: [["app-not-found-page"]],
              decls: 2,
              vars: 0,
              template: function (e, t) {
                1 & e && (i.Xb(0, "h1"), i.Nc(1, "404 page"), i.Wb());
              },
              styles: [""],
            })),
            e
          );
        })();
      var T = n("LRne");
      let k = (() => {
        class e {
          preload(e, t) {
            return e.data && e.data.preload ? t() : Object(T.a)(null);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      var M = n("nAdJ");
      let I = (() => {
        class e {}
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-terms-page"]],
            decls: 383,
            vars: 0,
            consts: [
              [1, "container", "mt-5"],
              [1, "row"],
              [1, "col-12"],
              [1, "mb-5"],
              [1, "fw-bold"],
              [1, "mt-5", "mb-3", "fw-bold"],
              [1, "mb-1"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "div", 0),
                i.Xb(1, "div", 1),
                i.Xb(2, "div", 2),
                i.Xb(3, "p", 3),
                i.Nc(4, "MarketVision International Inc."),
                i.Sb(5, "br"),
                i.Nc(6, "c/o THE TRUST COMPANY OF THE MARSHALL ISLANDS, INC."),
                i.Sb(7, "br"),
                i.Nc(
                  8,
                  "Trust Company Complex, Ajeltake Road, Ajeltake Island, Majuro, Republic of the Marshall Islands, MH 96960"
                ),
                i.Wb(),
                i.Xb(9, "h1", 4),
                i.Nc(
                  10,
                  "MarketVision International Inc. GENERAL TERMS AND CONDITIONS"
                ),
                i.Wb(),
                i.Xb(11, "p"),
                i.Nc(12, "Version: June 2021"),
                i.Wb(),
                i.Xb(13, "h3", 5),
                i.Nc(14, "Section 1. INTRODUCTION"),
                i.Wb(),
                i.Xb(15, "p"),
                i.Nc(
                  16,
                  "BY REGISTERING FOR OR USING THE MarketVision, YOU (ON BEHALF OF YOURSELF OR THE BUSINESS YOU REPRESENT) AGREE TO BE BOUND BY THE TERMS AND CONDITIONS OF THIS AGREEMENT, INCLUDING ALL POLICIES INCORPORATED BY REFERENCE INTO THIS AGREEMENT, EACH AS MAY BE MODIFIED FROM TIME TO TIME. IF YOU DO NOT AGREE TO THESE TERMS AND CONDITIONS, YOU MAY NOT USE OR ACCESS THE SERVICE."
                ),
                i.Wb(),
                i.Xb(17, "p"),
                i.Nc(
                  18,
                  "This Agreement is a contract between you and MarketVision International Inc., a company having its registered office in the Marshall Islands. (\u201cMarketVision\u201d, \u201cCompany\u201d, \u201cwe\u201d, \u201cus\u201d) and applies to your use of MarketVision Services. This Agreement incorporates, and you hereby accept and agree to the applicable policies, notices, procedures, specifications, FAQs, guides and guidelines that are provided or made available to you."
                ),
                i.Wb(),
                i.Xb(19, "p"),
                i.Nc(
                  20,
                  "MarketVision is a cryptocurrency wallet where you can deposit and withdraw bitcoin, and send bitcoin to another wallet. You can also subscribe to trading bot services which will have separate terms and conditions, which must be accepted prior to use."
                ),
                i.Wb(),
                i.Xb(21, "p"),
                i.Nc(
                  22,
                  "By entering into this Agreement, you confirm to understand and comply with any and all laws, rules and regulations in your jurisdiction that may be applicable to you in connection with you use of the services provided by MarketVision, including but not limited to cryptocurrency wallet, and the trading bots."
                ),
                i.Wb(),
                i.Xb(23, "p"),
                i.Nc(
                  24,
                  "Please review our Privacy Policy in order to better understand our commitment to maintaining your privacy, as well as our use and disclosure of your Information to which you are consenting."
                ),
                i.Wb(),
                i.Xb(25, "h3", 5),
                i.Nc(26, "Section 2. RISK DISCLOSURE"),
                i.Wb(),
                i.Xb(27, "p"),
                i.Nc(
                  28,
                  "Please note the following risks applicable on your use of the services of MarketVision. MarketVision will not be held liable in these circumstances."
                ),
                i.Wb(),
                i.Xb(29, "p"),
                i.Xb(30, "span", 4),
                i.Nc(31, "Section 2.01."),
                i.Wb(),
                i.Nc(
                  32,
                  "\xa0\nThe prices of virtual currencies are prone to significant fluctuations due to several reasons like announced, or proposed legislations, government or regulatory restrictions, or other such factors."
                ),
                i.Wb(),
                i.Xb(33, "p"),
                i.Xb(34, "span", 4),
                i.Nc(35, "Section 2.02."),
                i.Wb(),
                i.Nc(
                  36,
                  "\xa0\n\xa0Virtual currency is not legal tender and is not backed any the government. Virtual currencies are based only on technology and user consensus. Central governments may not take any corrective actions, in cases of massive manipulations or market panic, to guarantee stability, maintain liquidity or protect the value of a virtual currencies."
                ),
                i.Wb(),
                i.Xb(37, "p"),
                i.Xb(38, "span", 4),
                i.Nc(39, "Section 2.03."),
                i.Wb(),
                i.Nc(
                  40,
                  "\xa0\n\xa0Virtual currency transactions can be delayed until a certain number of confirmations have been received from the public ledger. This means a transaction may not be immediately reflected on your balance. The date and time a transaction is recorded on the public ledger may not be the same as when you or another party initiated the transaction. Transactions may also be cancelled on the blockchain."
                ),
                i.Wb(),
                i.Xb(41, "p"),
                i.Xb(42, "span", 4),
                i.Nc(43, "Section 2.04."),
                i.Wb(),
                i.Nc(
                  44,
                  "\xa0\nVirtual currency transactions are irreversible. Accidental transactions or transactions due to fraud may not be recovered.\xa0MarketVision\n\xa0"
                ),
                i.Xb(45, "span", 4),
                i.Nc(
                  46,
                  "will not be able to help you in case you lost your private key"
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(47, "p"),
                i.Xb(48, "span", 4),
                i.Nc(49, "Section 2.05."),
                i.Wb(),
                i.Nc(
                  50,
                  "\xa0\nMarketVision may not be held liable for Force majeure or unforeseen adverse events, natural disasters, other emergencies, and unforeseen changes in the external environment that may affect your transactions."
                ),
                i.Wb(),
                i.Xb(51, "p"),
                i.Xb(52, "span", 4),
                i.Nc(53, "Section 2.06."),
                i.Wb(),
                i.Nc(
                  54,
                  "\xa0\n\xa0Your transactions are or may be, in the future, subject to various reporting, tax or other liabilities and obligations in your country. Legislation and regulation may adversely affect the use, transfer, exchange, and value of virtual currency."
                ),
                i.Wb(),
                i.Xb(55, "p"),
                i.Xb(56, "span", 4),
                i.Nc(57, "Section 2.07."),
                i.Wb(),
                i.Nc(
                  58,
                  "\xa0\nMarketVision may close, suspend, limit your access to your MarketVision wallet account, limit access to your funds, or permanently block your account as reasonably needed to protect against the risk of liability if you violate any section of this agreement. We may also permanently block your account for reasons listed in Sections 10 and 11.\nExamples of when funds may be temporarily restricted are related to certain anti-money laundering, fraud, financial and other regulatory risks."
                ),
                i.Wb(),
                i.Xb(59, "p"),
                i.Xb(60, "span", 4),
                i.Nc(61, "Section 2.08."),
                i.Wb(),
                i.Nc(
                  62,
                  "\xa0\nUnforeseen technical outages or systems failures may occur within MarketVision 's applications which may cause the MarketVision wallet to stop operating.\u2028"
                ),
                i.Wb(),
                i.Xb(63, "h3", 5),
                i.Nc(64, "Section 3. ACCOUNT ELIGIBILITY AND REGISTRATION"),
                i.Wb(),
                i.Xb(65, "p", 6),
                i.Xb(66, "span", 4),
                i.Nc(67, "Section 3.01"),
                i.Wb(),
                i.Nc(
                  68,
                  "\xa0\n\xa0To be eligible for our Services, you must:"
                ),
                i.Wb(),
                i.Xb(69, "ul"),
                i.Xb(70, "li"),
                i.Nc(71, "Be at least 18 years old, and"),
                i.Wb(),
                i.Xb(72, "li"),
                i.Nc(73, "Have full capacity to enter into a contract ."),
                i.Wb(),
                i.Wb(),
                i.Xb(74, "p"),
                i.Xb(75, "span", 4),
                i.Nc(76, "Section 3.02."),
                i.Wb(),
                i.Nc(
                  77,
                  "\xa0\nWe may restrict or prohibit use of all or a portion of the Services from certain countries, territories, or jurisdictions."
                ),
                i.Wb(),
                i.Xb(78, "p"),
                i.Xb(79, "span", 4),
                i.Nc(80, "Section 3.03."),
                i.Wb(),
                i.Nc(
                  81,
                  "\xa0\nYou agree to provide complete, current and accurate information about your identity and location; keep your account information updated at all times including change of country residency."
                ),
                i.Wb(),
                i.Xb(82, "p"),
                i.Xb(83, "span", 4),
                i.Nc(84, "Section 3.04."),
                i.Wb(),
                i.Nc(
                  85,
                  "\xa0\nYou may be required to provide additional information to verify you or your business\u2019 identity as a condition to providing the wallet to you, or before we permit you to make transfers or withdraw funds from your account. We may also make any inquiries to third to validate the information that you provide to us."
                ),
                i.Wb(),
                i.Xb(86, "p"),
                i.Xb(87, "span", 4),
                i.Nc(88, "Section 3.05."),
                i.Wb(),
                i.Nc(
                  89,
                  "\xa0\nAccount limit levels are in place to protect you against financial crime and is also part of our compliance to anti-money laundering laws and regulations. Subject to review and approval at our discretion, you can request to upgrade your levels to unlock additional features within your MarketVision account, including raising limits to sending and receiving cryptocurrency. Some levels may require additional document verification or information provided by you to verify your identity."
                ),
                i.Wb(),
                i.Xb(90, "p"),
                i.Xb(91, "span", 4),
                i.Nc(92, "Section 3.06."),
                i.Wb(),
                i.Nc(
                  93,
                  "\xa0\nYou agree to act only on your behalf unless you are opening the account for and under the direction of the company that employs you or has duly authorized you as their legal representative."
                ),
                i.Wb(),
                i.Xb(94, "p", 6),
                i.Xb(95, "span", 4),
                i.Nc(96, "Section 3.07."),
                i.Wb(),
                i.Nc(
                  97,
                  "\xa0\nIf you are opening an account or using the services of MarketVision on behalf of a legal entity,"
                ),
                i.Wb(),
                i.Xb(98, "ul"),
                i.Xb(99, "li"),
                i.Nc(
                  100,
                  "you represent and warrant that you are authorized to bind that entity to these Terms,"
                ),
                i.Wb(),
                i.Xb(101, "li"),
                i.Nc(
                  102,
                  "all references to \u201cyou\u201d will refer to you and that entity, and"
                ),
                i.Wb(),
                i.Xb(103, "li"),
                i.Nc(
                  104,
                  "that entity agrees to be responsible for you and any other user that accesses the Services on its behalf."
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(105, "p"),
                i.Xb(106, "span", 4),
                i.Nc(107, "Section 3.08."),
                i.Wb(),
                i.Nc(
                  108,
                  "\xa0\n\xa0You agree not use a password for your MarketVision account that you use for any other website or online service; protect the security of your MarketVision account, including not sharing your credentials with any third party; and immediately notify us if you discover or otherwise suspect any unauthorized access or use related to your MarketVision account."
                ),
                i.Wb(),
                i.Xb(109, "p"),
                i.Xb(110, "span", 4),
                i.Nc(111, "Section 3.09."),
                i.Wb(),
                i.Nc(
                  112,
                  "\xa0\nYou are permitted to have one account with MarketVision."
                ),
                i.Wb(),
                i.Xb(113, "p"),
                i.Xb(114, "span", 4),
                i.Nc(115, "Section 3.10."),
                i.Wb(),
                i.Nc(
                  116,
                  "\xa0\nYou are not permitted to transfer your account to a third party.\u2028"
                ),
                i.Wb(),
                i.Xb(117, "h3", 5),
                i.Nc(
                  118,
                  "Section 4. ACCESS AND CHANGING YOUR ACCOUNT INFORMATION"
                ),
                i.Wb(),
                i.Xb(119, "p"),
                i.Xb(120, "span", 4),
                i.Nc(121, "Section 3.01"),
                i.Wb(),
                i.Nc(
                  122,
                  "\xa0\n\xa0To be eligible for our Services, you must:"
                ),
                i.Wb(),
                i.Xb(123, "p"),
                i.Xb(124, "span", 4),
                i.Nc(125, "Section 4.01.\xa0"),
                i.Wb(),
                i.Nc(
                  126,
                  "\xa0\nYou can review the personal or business information that you provided to us and make any changes on your account at any time by logging into your account profile."
                ),
                i.Wb(),
                i.Xb(127, "p"),
                i.Xb(128, "span", 4),
                i.Nc(129, "Section 4.02."),
                i.Wb(),
                i.Nc(
                  130,
                  "\xa0\nYou may also access the details of your account transaction history and available Funds, unless your account access is restricted."
                ),
                i.Wb(),
                i.Xb(131, "p"),
                i.Xb(132, "span", 4),
                i.Nc(133, "Section 4.03."),
                i.Wb(),
                i.Nc(
                  134,
                  "\xa0\n\xa0You may request a downloadable report via your account profile including all fees incurred and any other amounts charged to your Account in the relevant period. MarketVision reserves the right to charge a fee for providing you with additional information or for providing the transaction history and other information about fees other than the standard downloadable format.\u2028"
                ),
                i.Wb(),
                i.Xb(135, "h3", 5),
                i.Nc(136, "Section 5. PROHIBITED ACTIVITIES AND USER CONDUCT"),
                i.Wb(),
                i.Xb(137, "p", 6),
                i.Xb(138, "span", 4),
                i.Nc(139, "Section 5.01.\xa0"),
                i.Wb(),
                i.Nc(
                  140,
                  "\xa0\nYou may not use the MarketVision Service to conduct, or facilitate activities that violate any law, statute, regulation or a decision of an authority including but not limited to:"
                ),
                i.Wb(),
                i.Xb(141, "ul"),
                i.Xb(142, "li"),
                i.Nc(
                  143,
                  "participation in an organized criminal group and racketeering;"
                ),
                i.Wb(),
                i.Xb(144, "li"),
                i.Nc(145, "terrorism, including terrorist financing;"),
                i.Wb(),
                i.Xb(146, "li"),
                i.Nc(147, "trafficking in human beings and migrant smuggling;"),
                i.Wb(),
                i.Xb(148, "li"),
                i.Nc(
                  149,
                  "sexual exploitation, including sexual exploitation of children;"
                ),
                i.Wb(),
                i.Xb(150, "li"),
                i.Nc(
                  151,
                  "illicit trafficking in narcotic drugs and psychotropic substances;"
                ),
                i.Wb(),
                i.Xb(152, "li"),
                i.Nc(153, "illicit arms trafficking;"),
                i.Wb(),
                i.Xb(154, "li"),
                i.Nc(155, "illicit trafficking in stolen and other goods;"),
                i.Wb(),
                i.Xb(156, "li"),
                i.Nc(157, "corruption and bribery;"),
                i.Wb(),
                i.Xb(158, "li"),
                i.Nc(159, "fraud;"),
                i.Wb(),
                i.Xb(160, "li"),
                i.Nc(161, "counterfeiting currency;"),
                i.Wb(),
                i.Xb(162, "li"),
                i.Nc(163, "counterfeiting and piracy of products;"),
                i.Wb(),
                i.Xb(164, "li"),
                i.Nc(165, "environmental crime;"),
                i.Wb(),
                i.Xb(166, "li"),
                i.Nc(167, "murder, grievous bodily injury;"),
                i.Wb(),
                i.Xb(168, "li"),
                i.Nc(169, "kidnapping, illegal restraint and hostage-taking;"),
                i.Wb(),
                i.Xb(170, "li"),
                i.Nc(171, "robbery or theft;"),
                i.Wb(),
                i.Xb(172, "li"),
                i.Nc(
                  173,
                  "smuggling; (including in relation to customs and excise duties and taxes);"
                ),
                i.Wb(),
                i.Xb(174, "li"),
                i.Nc(
                  175,
                  "tax crimes (related to direct taxes and indirect taxes);"
                ),
                i.Wb(),
                i.Xb(176, "li"),
                i.Nc(177, "extortion;"),
                i.Wb(),
                i.Xb(178, "li"),
                i.Nc(179, "forgery;"),
                i.Wb(),
                i.Xb(180, "li"),
                i.Nc(181, "piracy; and"),
                i.Wb(),
                i.Xb(182, "li"),
                i.Nc(183, "insider trading and market manipulation."),
                i.Wb(),
                i.Wb(),
                i.Xb(184, "p", 6),
                i.Xb(185, "span", 4),
                i.Nc(186, "Section 5.02."),
                i.Wb(),
                i.Nc(187, "\xa0\nYou are also prohibited from:"),
                i.Wb(),
                i.Xb(188, "ul"),
                i.Xb(189, "li"),
                i.Nc(
                  190,
                  "use the Services or allow a third-party individual or entity to use the Services to commit fraud or otherwise violate the law;"
                ),
                i.Wb(),
                i.Xb(191, "li"),
                i.Nc(
                  192,
                  "engage in conduct or an act of fraud, extortion or blackmail, that seeks to disseminate falsehoods about MarketVision or otherwise harm the MarketVision\u2019s reputation and credibility using deception;"
                ),
                i.Wb(),
                i.Xb(193, "li"),
                i.Nc(
                  194,
                  "use the Services in any manner that could interfere with, disrupt, negatively affect or inhibit other users from fully enjoying the Services or that could damage, disable, overburden or impair the functioning of the Services in any manner;"
                ),
                i.Wb(),
                i.Xb(195, "li"),
                i.Nc(
                  196,
                  "reverse engineer any aspect of the Services or do anything that might discover the source code of the Services;"
                ),
                i.Wb(),
                i.Xb(197, "li"),
                i.Nc(
                  198,
                  "reproduce (other than standard website page caching), create derivative works of, publicly perform, publicly display, distribute, sell, rent, lease, timeshare or otherwise commercially exploit the Services, in whole or in part;"
                ),
                i.Wb(),
                i.Xb(199, "li"),
                i.Nc(
                  200,
                  "attempt to bypass or circumvent measures employed to prevent or limit access to any content, area or functionality on the Services;"
                ),
                i.Wb(),
                i.Xb(201, "li"),
                i.Nc(
                  202,
                  "develop any third-party applications that interact with the Services without our prior written consent, except as allowed through the use of the MarketVision API;"
                ),
                i.Wb(),
                i.Xb(203, "li"),
                i.Nc(
                  204,
                  "use any robot, spider, crawler, scraper, script, browser extension, offline reader or other automated means or interface not authorized by us to access the Services, extract data or otherwise interfere with or modify the rendering of Services pages or functionality;"
                ),
                i.Wb(),
                i.Xb(205, "li"),
                i.Nc(
                  206,
                  "use the Services other than for its intended purposes; or use the Services to engage in or promote any activity that violates these Terms."
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(207, "h3", 5),
                i.Nc(208, "Section 6. TRANSACTIONS"),
                i.Wb(),
                i.Xb(209, "p"),
                i.Xb(210, "span", 4),
                i.Nc(211, "Section 6.01.\xa0"),
                i.Wb(),
                i.Nc(
                  212,
                  "\xa0\nWhen you receive or transfer funds to your account, MarketVision will collect information about the sender or recipient and share that information with the external account, which is in line with the recommendations set forth by the Financial Action Task Force."
                ),
                i.Wb(),
                i.Xb(213, "p", 6),
                i.Xb(214, "span", 4),
                i.Nc(215, "Section 6.02."),
                i.Wb(),
                i.Nc(
                  216,
                  "We may, at any time, refuse a transaction or impose any other conditions or restrictions upon your use of the Services.\nMarketVision may, without being obliged to do so, refuse to execute a transaction if the transaction contains any factual error, in particular, incomplete or imprecise transactional details;"
                ),
                i.Wb(),
                i.Xb(217, "ul"),
                i.Xb(218, "li"),
                i.Nc(
                  219,
                  "if you have breached any of your obligations towards MarketVision under these Terms and Conditions or any other agreement entered into between you and MarketVision;"
                ),
                i.Wb(),
                i.Xb(220, "li"),
                i.Nc(
                  221,
                  "if the transaction does not meet the agreed form as set out in these Terms and Conditions;"
                ),
                i.Wb(),
                i.Xb(222, "li"),
                i.Nc(
                  223,
                  "if your Funds are insufficient to execute a transaction in full;"
                ),
                i.Wb(),
                i.Xb(224, "li"),
                i.Nc(
                  225,
                  "if the limits as may have been agreed upon between you and MarketVision have been reached;"
                ),
                i.Wb(),
                i.Xb(226, "li"),
                i.Nc(227, "if the transaction cannot be executed in full;"),
                i.Wb(),
                i.Xb(228, "li"),
                i.Nc(
                  229,
                  "if MarketVision is legally or contractually obliged to freeze your Account or block transactions;"
                ),
                i.Wb(),
                i.Xb(230, "li"),
                i.Nc(
                  231,
                  "if MarketVision suspects that the security of Service is compromised, e.g. because of a problem or technical failure or because of hacking attacks;"
                ),
                i.Wb(),
                i.Xb(232, "li"),
                i.Nc(233, "if MarketVision suspects fraud;"),
                i.Wb(),
                i.Xb(234, "li"),
                i.Nc(
                  235,
                  "if MarketVision believes that the execution of the transaction would be contrary to any national or local or foreign laws, regulations or decisions of authorities or would expose MarketVision to liability risks."
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(236, "p"),
                i.Nc(
                  237,
                  "MarketVision may request additional identifying information from you in the event of a transaction is beyond your Account\u2019s permissible use or applicable limits. MarketVision may only continue to process the transaction after the receipt and verification of such information. If you fail to provide this additional required information or documentation, the attempted transaction may be refused or suspended by MarketVision."
                ),
                i.Wb(),
                i.Xb(238, "p"),
                i.Xb(239, "span", 4),
                i.Nc(240, "Section 6.03.\xa0"),
                i.Wb(),
                i.Nc(
                  241,
                  "\xa0\nIn the event there is an error in the processing of any Transaction, you authorize us to initiate debit or credit entries to your Account to correct such error."
                ),
                i.Wb(),
                i.Xb(242, "p"),
                i.Xb(243, "span", 4),
                i.Nc(244, "Section 6.04."),
                i.Wb(),
                i.Nc(
                  245,
                  "If you have insufficient Funds on your Account to complete a transaction, we may cancel the entire transaction or may fulfill a partial transaction using the amount of Funds currently available in your Account, less any fees."
                ),
                i.Wb(),
                i.Xb(246, "p"),
                i.Xb(247, "span", 4),
                i.Nc(248, "Section 6.05."),
                i.Wb(),
                i.Nc(
                  249,
                  "All blockchain-based transactions are final and non-reversible. We do not accept any returns or provide refunds in connection with any such transactions."
                ),
                i.Wb(),
                i.Xb(250, "p"),
                i.Xb(251, "span", 4),
                i.Nc(252, "Section 6.06."),
                i.Wb(),
                i.Nc(
                  253,
                  "While a virtual currency transaction is pending confirmation by the applicable network, the virtual currency subject to such confirmation will be unavailable for use in connection with any other Services transaction.\u2028"
                ),
                i.Wb(),
                i.Xb(254, "h3", 5),
                i.Nc(255, "Section 7. THIRD PARTY EXTERNAL ACCOUNTS"),
                i.Wb(),
                i.Xb(256, "p"),
                i.Xb(257, "span", 4),
                i.Nc(
                  258,
                  "You are solely responsible for your use of any External Account, and you agree"
                ),
                i.Wb(),
                i.Nc(
                  259,
                  "\xa0\nto comply with all terms and conditions applicable to any External Account. MarketVision is not responsible or liable, directly or indirectly, for any damage or loss or alleged to be caused by or in connection with the use of or reliance of any external account."
                ),
                i.Wb(),
                i.Xb(260, "h3", 5),
                i.Nc(261, "Section 8. FEES"),
                i.Wb(),
                i.Xb(262, "p"),
                i.Xb(263, "span", 4),
                i.Nc(264, "Section 8.01."),
                i.Wb(),
                i.Nc(
                  265,
                  "\xa0\nYou agree to pay to us the applicable fees whenever you use our Service. We reserve the right to change our Fees at any time upon prior notification."
                ),
                i.Wb(),
                i.Xb(266, "p"),
                i.Xb(267, "span", 4),
                i.Nc(268, "Section 8.02."),
                i.Wb(),
                i.Nc(
                  269,
                  "\xa0\nYou authorize us to charge or deduct any applicable Fees owed in connection with any actions or services you availed on your account. You agree that we may set off against your Account balance any amounts you owe us under this Agreement. We may show your account in negative balance when the aggregate amount you owe us exceeds the amount held in your Account. The negative balance serves as a reflection of the net amount you owe to us."
                ),
                i.Wb(),
                i.Xb(270, "p"),
                i.Xb(271, "span", 4),
                i.Nc(272, "Section 8.03."),
                i.Wb(),
                i.Nc(
                  273,
                  "\xa0\nYou are responsible for determining and paying any and all taxes and duties in connection with you MarketVision Account. You also are responsible for collecting, withholding, reporting, and remitting correct taxes and duties to the appropriate authority. We are not obliged to determine whether taxes or duties apply and are not responsible for calculating, collecting, reporting, or remitting any taxes or duties to any authority arising from any transaction.\u2028"
                ),
                i.Wb(),
                i.Xb(274, "h3", 5),
                i.Nc(275, "Section 9. INTELLECTUAL PROPERTY"),
                i.Wb(),
                i.Xb(276, "p"),
                i.Xb(277, "span", 4),
                i.Nc(278, "Section 9.01.\xa0"),
                i.Wb(),
                i.Nc(
                  279,
                  "\xa0\nMarketVision AI\xa0is copyrighted technology of MarketVision and copyrighted technology and may not be copied, imitated or used, in whole or in part, outside of its intended use. MarketVision retains all its rights related to its databases, websites, graphics, software, applications, programs, code, etc., including chat text, the content of MarketVision emails, and data such as transaction prices developed or provided by MarketVision or its affiliates. MarketVision may demand any third party stop using MarketVision\u2019s products for any purposes not authorized by MarketVision."
                ),
                i.Wb(),
                i.Xb(280, "p"),
                i.Xb(281, "span", 4),
                i.Nc(282, "Section 9.02.\xa0"),
                i.Wb(),
                i.Nc(
                  283,
                  "\xa0\nThe MarketVision logo, any other MarketVision service names, logos or slogans that may appear on the Services, and the look and feel of the Services, including all page headers, custom graphics, button icons and scripts, are trademarks, service marks or trade dress of MarketVision and our suppliers and our licensors, and may not be copied, imitated or used, in whole or in part, without our or the applicable trademark holder\u2019s prior written permission. You may not use any metatags or other \u201chidden text\u201d utilizing any name, trademark or product or service name of MarketVision without our prior written permission. Further, you may not use, frame or utilize framing techniques to enclose any MarketVision trademark, logo or other proprietary information, including the images found on the Services, the content of any text or the layout or design of any page, or form contained on a page, on the Services without our express written consent.\u2028"
                ),
                i.Wb(),
                i.Xb(284, "h3", 5),
                i.Nc(285, "Section 10. ACCOUNT SUSPENSION"),
                i.Wb(),
                i.Xb(286, "p", 6),
                i.Xb(287, "span", 4),
                i.Nc(288, "Section 10.01.\xa0"),
                i.Wb(),
                i.Nc(
                  289,
                  "\xa0\nYour service may be suspended by us and your access blocked if:"
                ),
                i.Wb(),
                i.Xb(290, "ul"),
                i.Xb(291, "li"),
                i.Nc(292, "you have violated the terms of this Agreement,"),
                i.Wb(),
                i.Xb(293, "li"),
                i.Nc(
                  294,
                  "we determine, at our sole discretion, that you pose an unacceptable fraud risk or other liability risk to us,"
                ),
                i.Wb(),
                i.Xb(295, "li"),
                i.Nc(
                  296,
                  "you provide or have provided false, incomplete, inaccurate, or misleading information (including without limitation any registration information), you do not provide requested information, or otherwise engage in fraudulent or illegal conduct,"
                ),
                i.Wb(),
                i.Xb(297, "li"),
                i.Nc(
                  298,
                  "we have security concerns regarding your Account, including your Credentials, or"
                ),
                i.Wb(),
                i.Xb(299, "li"),
                i.Nc(
                  300,
                  "we suspect unauthorized or fraudulent use of your Account or any payment information in your Account."
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(301, "p"),
                i.Nc(
                  302,
                  "In such cases we will inform you of the suspension of your Account and the reasons for it, where possible, before the suspension and at the latest immediately thereafter, unless we determine giving such information would compromise security concerns or is prohibited by applicable law. We will reactivate your Account or Credentials, or replace it or them, as applicable, once we have resolved the reasons for suspension. You must notify us by raising a support ticket from your MarketVision account.\xa0If you wish to request us to reactivate your Account.\u2028"
                ),
                i.Wb(),
                i.Xb(303, "h3", 5),
                i.Nc(304, "Section 11. ACCOUNT TERMINATION"),
                i.Wb(),
                i.Xb(305, "p"),
                i.Xb(306, "span", 4),
                i.Nc(307, "Section 11.01.\xa0"),
                i.Wb(),
                i.Nc(
                  308,
                  "\xa0\nYou can close your account by logging into your Account and requesting a service ticket."
                ),
                i.Wb(),
                i.Xb(309, "p"),
                i.Xb(310, "span", 4),
                i.Nc(311, "Section 11.02.\xa0"),
                i.Wb(),
                i.Nc(
                  312,
                  "\xa0\nWe may close your Account at our convenience or any time without prior notice where:"
                ),
                i.Wb(),
                i.Xb(313, "ul"),
                i.Xb(314, "li"),
                i.Nc(315, "you are in breach of the terms of this Agreement."),
                i.Wb(),
                i.Xb(316, "li"),
                i.Nc(
                  317,
                  "we suspect that your Account has been accessed fraudulently;"
                ),
                i.Wb(),
                i.Xb(318, "li"),
                i.Nc(
                  319,
                  "we have reason to believe that we may incur any liability through the continuation of our relationship with you;"
                ),
                i.Wb(),
                i.Xb(320, "li"),
                i.Nc(321, "your transactions appear to be contrary to law; or"),
                i.Wb(),
                i.Xb(322, "li"),
                i.Nc(
                  323,
                  "we determined that you fail to meet your obligation to act in good faith."
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(324, "p"),
                i.Nc(
                  325,
                  "When we decide to terminate the bot service, we will provide you with notice of termination and where appropriate, the reasons for terminating the service, together with the ability to withdraw any undisputed Funds that we are holding."
                ),
                i.Wb(),
                i.Xb(326, "p"),
                i.Xb(327, "span", 4),
                i.Nc(328, "Section 11.03.\xa0"),
                i.Wb(),
                i.Nc(329, "\xa0\nWhen your account is closed:"),
                i.Wb(),
                i.Xb(330, "ul"),
                i.Xb(331, "li"),
                i.Nc(332, "we may cancel any pending transactions"),
                i.Wb(),
                i.Xb(333, "li"),
                i.Nc(
                  334,
                  "we may suspend, limit or terminate your access to or use of our Services, websites, software, systems (including any networks and servers used to provide any of the Services) operated by us or on our behalf or some or all of the Services;"
                ),
                i.Wb(),
                i.Xb(335, "li"),
                i.Nc(
                  336,
                  "you will remain liable for all outstanding obligations under this Agreement related to your Account prior to closure;"
                ),
                i.Wb(),
                i.Xb(337, "li"),
                i.Nc(
                  338,
                  "we may keep your Account information in our database for the purpose of fulfilling our legal obligations and other permitted reasons; and"
                ),
                i.Wb(),
                i.Xb(339, "li"),
                i.Nc(
                  340,
                  "we may retain your balance of Funds after closure to the extent and for the time we reasonably require to protect MarketVision against the risk of Reversals, Chargebacks, Claims, fees, fines, penalties and other liabilities of whatever nature. After this time you will be able to withdraw any undisputed Funds that we are holding. Please contact us by raising a support ticket from your MarketVision account.if you have any questions about Funds held in your Account on closure."
                ),
                i.Wb(),
                i.Wb(),
                i.Xb(341, "p"),
                i.Xb(342, "span", 4),
                i.Nc(343, "Section 11.04.\xa0"),
                i.Wb(),
                i.Nc(
                  344,
                  "\xa0\nIf MarketVision is holding Funds in your Account, and we are unable to contact you and have no records of your use of the Services for a prolonged time, you agree that MarketVision may report these Funds to authorities and deliver any such Funds to relevant authorities. MarketVision reserves the right to deduct fees from such unclaimed Funds.\u2028"
                ),
                i.Wb(),
                i.Xb(345, "h3", 5),
                i.Nc(346, "Section 12. LIMITATION OF LIABILITIES"),
                i.Wb(),
                i.Xb(347, "p"),
                i.Xb(348, "span", 4),
                i.Nc(349, "Section 12.01.\xa0"),
                i.Wb(),
                i.Nc(
                  350,
                  "\xa0\nMarketVision will not be held liable for damages arising from the defective execution, non-execution or partial execution of its obligations under this Agreement, except in the case of gross negligence or willful misconduct. Our liability is limited to the greatest extent permitted by law."
                ),
                i.Wb(),
                i.Xb(351, "p"),
                i.Xb(352, "span", 4),
                i.Nc(353, "Section 12.02."),
                i.Wb(),
                i.Nc(
                  354,
                  "\xa0\nWithout limiting the foregoing, in no event will MarketVision be liable to you for any failure or delay by us (or our employees, agents, or representatives) in performing our obligations under this Agreement, where such failure or delay is caused by abnormal and unforeseeable circumstances beyond our control, such as e.g. interruptions or unavailability of telecommunication systems or more generally of our Service (e.g. due to fire or similar disasters, power cuts, failure of computer systems or attacks against the systems of MarketVision). MarketVision shall not be liable for damages resulting from the implementation of legal provisions, measures taken by public authorities, declared or imminent, acts of war, revolutions, civil wars, fait du Prince, strikes, lockouts, boycotts and picketing, regardless of whether MarketVision is itself a party to the conflict or if its services are only partially affected or where a failure or delay occurs as a result of MarketVision complying with its legal obligations or national of foreign laws or regulations or decisions of authorities.\u2028"
                ),
                i.Wb(),
                i.Xb(355, "h3", 5),
                i.Nc(
                  356,
                  "Section 13. GOVERNING LAW, VENUE AND DISPUTE RESOLUTION"
                ),
                i.Wb(),
                i.Xb(357, "p"),
                i.Xb(358, "span", 4),
                i.Nc(359, "Section 13.01.\xa0"),
                i.Wb(),
                i.Nc(
                  360,
                  "\xa0\nThe laws of The British Virgin Islands govern this Agreement and all of its terms and conditions. All disputes shall be of the exclusive competence of the British Virgin Islands, unless MarketVision chooses to bring an action against you before any other court having jurisdiction under ordinary rules of procedure, in particular according to the applicable jurisdiction rules of the relevant British Virgin Islands regulation or applicable convention."
                ),
                i.Wb(),
                i.Xb(361, "p"),
                i.Xb(362, "span", 4),
                i.Nc(363, "Section 13.02."),
                i.Wb(),
                i.Nc(
                  364,
                  "\xa0\nAny matters not provided for in the Terms or those giving rise to any doubts with respect to the interpretation of the Terms shall be promptly resolved through good faith discussions between the MarketVision Global Limited and you."
                ),
                i.Wb(),
                i.Xb(365, "p"),
                i.Xb(366, "span", 4),
                i.Nc(367, "Section 13.03."),
                i.Wb(),
                i.Nc(
                  368,
                  "\xa0\nIf you wish to make a complaint about the Service, you can make a complaint by raising a support ticket from your MarketVision account.\u2028"
                ),
                i.Wb(),
                i.Xb(369, "h3", 5),
                i.Nc(370, "Section Section 14. SEVERABILITY"),
                i.Wb(),
                i.Xb(371, "p"),
                i.Nc(
                  372,
                  "If any part of this Agreement is held by a court of competent jurisdiction to be invalid or unenforceable, the remaining parts of this Agreement will remain in full force and effect and, upon our request, the court will construe any invalid or unenforceable portions in a manner that most closely reflects the effect and intent of the original language. If such construction is not possible, the provision will be severed from this Agreement and the rest of the Agreement remains in full force and effect.\u2028"
                ),
                i.Wb(),
                i.Xb(373, "h3", 5),
                i.Nc(
                  374,
                  "SectionSection 15. CHANGES TO THESE TERMS AND CONDITIONS"
                ),
                i.Wb(),
                i.Xb(375, "p"),
                i.Xb(376, "span", 4),
                i.Nc(377, "Section 15.01."),
                i.Wb(),
                i.Nc(
                  378,
                  "\xa0\nWe reserve the right, at our sole discretion, to modify or replace these Terms at any time. We will provide notice prior to any new terms taking effect."
                ),
                i.Wb(),
                i.Xb(379, "p"),
                i.Xb(380, "span", 4),
                i.Nc(381, "Section 15.02.\xa0"),
                i.Wb(),
                i.Nc(
                  382,
                  "\xa0\nIf you do not accept the changes, you may close your Account."
                ),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb());
            },
            styles: [
              "ul[_ngcontent-%COMP%]{list-style-type:lower-alpha}ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:5px}",
            ],
          })),
          e
        );
      })();
      const P = [
        {
          header: "Which broker do you trade with?",
          text: "With a MV license, you are completely free to choose the exchange on which you wish to trade. Automated exchange trading takes place via the GBE exchange in Hamburg.",
        },
        {
          header: "Which markets are traded automatically?",
          text: "Automated exchange trading takes place via the crypto and FOREX markets.",
        },
        {
          header: "How do I activate my license / indicator?",
          text: "Once you have selected the correct license and the payment has been processed, you can access your license in the back office. All further steps can be found in an explanatory video in the back office!",
        },
        {
          header: "In which markets can I use the indicator?",
          text: "The performance indicator can be used on all markets worldwide that are listed on our partner platform (TradingView). (Stocks, futures, currencies, currency pairs, FOREX, cryptocurrencies, bonds, indices).",
        },
        {
          header: "Can I recommend MV, if so, is there a commission?",
          text: "MarketVision offers a lucrative affiliate program at up to 5 levels.",
        },
        {
          header:
            "Who manages my money in automated trading and where is it located?",
          text: "MarketVision does not manage client funds! Your money remains in the trading platform / account of your choice at all times, which only you have access to.",
        },
        {
          header:
            "What is the maximum risk (deposit percentage) that is traded?",
          text: "The risk management is chosen by you. With the automated exchange When trading, risk management is adjusted to the stock market situation.",
        },
        {
          header:
            "How many exchanges are scanned, how often, or at what interval?",
          text: "MarketVision AI pulls all the data from 7000 exchanges worldwide, in combination with over 1400 other factors. These provide you with an accurate picture for your stock market decisions.",
        },
        {
          header:
            "What is the current trading performance over the last 2 years?",
          text: "The MarketVision indicator has shown a success rate of over 85% in all markets worldwide over the last 2 years, which is constantly improving. MV QnA It should be noted that this benchmark is subject to all market fluctuations and is not a guarantee of a 100% success rate.",
        },
        {
          header:
            "Is the license active immediately after purchase or does it take a while?",
          text: "Once you have selected the correct license and the payment has been processed, you will have access to your license in the back office. Usually it is activated 2-3 hours after purchase. If you have any problems or delays, our team will be happy to help you.",
        },
        {
          header: "Which licenses are available?",
          text: "You will find an overview of all licenses directly after registration in the store.",
        },
        {
          header: "On which broker do I trade?",
          text: "With a MV license, you are completely free to choose the exchange on which you want to make your trades. Automated exchange trading is handled by GBE Stock Exchange in Hamburg.",
        },
        {
          header: "Which markets are traded automatically?",
          text: " Automated trading takes place on the crypto and FOREX markets.",
        },
        {
          header: "How do I activate my license / indicator?",
          text: "After you have selected the appropriate license and gone through the payment process, you will receive access to your license in the back office. All further steps can be found in an explanatory video in the back office!",
        },
        {
          header: "In which markets can I use the indicator?",
          text: "The performance indicator can be used on all markets worldwide that are listed on our partner platform (TradingView). (Stocks, Bonds, Forex, Currency pairs, FOREX, Cryptocurrencies, Bonds, Indices).",
        },
        {
          header: "Can I recommend MV, if so, is there a commission?",
          text: "MarketVision offers a lucrative affiliate program, up to 5. - Who manages my money in automated trading and where is it? MarketVision does not manage client money! Your money remains at all times, on your chosen trading platform/account, to which only you have access.",
        },
        {
          header: "What is the maximum risk in my portfolio?",
          text: "The risk management is chosen by you. With automated stock exchange trading, the risk management is adapted to the respective stock exchange situation.",
        },
        {
          header:
            "How many stock exchanges are scanned, how often and at what interval?",
          text: "MarketVision AI obtains all data from 7,000 stock exchanges worldwide, in combination with over 1400 other factors. These provide you with an accurate picture for your stock market decisions.",
        },
        {
          header:
            "What is the current trading success rate over the last 2 years?",
          text: "The MarketVision indicator has a success rate of over 85% in all markets worldwide over the last 2 years and is constantly improving. It should be noted that this benchmark is subject to all market fluctuations and is not a guarantee of a 100% hit rate.",
        },
        {
          header:
            "Is the license active immediately after purchase or does it take some time?",
          text: "Once you have selected the appropriate license and the payment has been processed, you will be given access to your license in the back office. Normally the license is activated 2-3 hours after purchase. If there are any problems or delays, our team will be happy to assist you.",
        },
        {
          header: "Which licenses are available?",
          text: "You can find an overview of all licenses directly in the store after registration MV QnA",
        },
      ];
      var R = n("jtHE"),
        N = n("Tdnt");
      let L = (() => {
        class e {
          constructor(e) {
            this.http = e;
          }
          createTicket(e) {
            const t = new R.a(1);
            return (
              this.http.post("tickets", e).subscribe(
                (e) => t.next(!0),
                (e) => t.error(e.error || e)
              ),
              t.asObservable()
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(N.a));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      var A = n("rgW5"),
        D = n("ofXK"),
        j = n("3Pt+"),
        F = n("ly96"),
        V = n("XNiG"),
        W = n("1G5W"),
        z = n("A1Yd");
      function X(e, t) {
        if ((1 & e && (i.Xb(0, "span", 19), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Oc(e.getErrorMessage("UserName", e.userName));
        }
      }
      function B(e, t) {
        if ((1 & e && (i.Xb(0, "span", 19), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Oc(e.getErrorMessage("FullName", e.fullName));
        }
      }
      function H(e, t) {
        if ((1 & e && (i.Xb(0, "span", 19), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Oc(e.getErrorMessage("Email", e.email));
        }
      }
      function U(e, t) {
        if ((1 & e && (i.Xb(0, "span", 19), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Oc(e.getErrorMessage("Department", e.department));
        }
      }
      function G(e, t) {
        if ((1 & e && (i.Xb(0, "option", 20), i.Nc(1), i.Wb()), 2 & e)) {
          const e = t.$implicit;
          i.pc("value", e.id), i.Eb(1), i.Oc(e.label);
        }
      }
      function $(e, t) {
        if ((1 & e && (i.Xb(0, "span", 19), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Oc(e.getErrorMessage("Subject", e.subject));
        }
      }
      function q(e, t) {
        if ((1 & e && (i.Xb(0, "span", 19), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc(2);
          i.Eb(1), i.Oc(e.getErrorMessage("TradeId", e.tradeId));
        }
      }
      function K(e, t) {
        if (
          (1 & e &&
            (i.Xb(0, "div", 2),
            i.Xb(1, "div", 0),
            i.Xb(2, "div", 4),
            i.Lc(3, q, 2, 1, "span", 5),
            i.Sb(4, "input", 21),
            i.Xb(5, "label", 7),
            i.Nc(6, "Trade ID"),
            i.Sb(7, "span", 8),
            i.Wb(),
            i.Wb(),
            i.Wb(),
            i.Wb()),
          2 & e)
        ) {
          const e = i.hc();
          i.Eb(3),
            i.pc("ngIf", e.tradeId.touched && e.tradeId.invalid),
            i.Eb(1),
            i.pc("formControl", e.tradeId);
        }
      }
      function Y(e, t) {
        if ((1 & e && (i.Xb(0, "span", 19), i.Nc(1), i.Wb()), 2 & e)) {
          const e = i.hc();
          i.Eb(1), i.Oc(e.getErrorMessage("Message", e.message));
        }
      }
      let Z = (() => {
        class e {
          constructor(e, t) {
            (this.fb = e),
              (this.cdRef = t),
              (this.destroy$ = new V.b()),
              (this.tradeIdVisible = !1),
              (this.departmentList = [
                { id: 1, label: "General" },
                { id: 2, label: "Affiliate / Network" },
                { id: 3, label: "Problem with a trade" },
                { id: 4, label: "Tech-Support" },
              ]),
              (this.submitEvent = new i.o());
          }
          get userName() {
            return this.form.get("userName");
          }
          get fullName() {
            return this.form.get("fullName");
          }
          get email() {
            return this.form.get("email");
          }
          get department() {
            return this.form.get("department");
          }
          get subject() {
            return this.form.get("subject");
          }
          get tradeId() {
            return this.form.get("tradeId");
          }
          get message() {
            return this.form.get("message");
          }
          ngOnInit() {
            this.createForm();
          }
          ngOnDestroy() {
            this.destroy$.next(), this.destroy$.complete();
          }
          ngAfterViewChecked() {
            this.cdRef.detectChanges();
          }
          submit() {
            if ((F.a.markAllAsTouched(this.form), this.form.valid)) {
              let e = {};
              for (const t of Object.keys(this.form.value)) {
                const n = this.form.value[t];
                "" !== n && (e[t] = n);
              }
              this.submitEvent.emit(e);
            }
          }
          createForm() {
            (this.form = this.fb.group({
              userName: [{ value: this.user.userName, disabled: !0 }],
              fullName: [{ value: this.user.fullName, disabled: !0 }],
              email: [{ value: this.user.email, disabled: !0 }],
              department: [this.departmentList[0].id, [j.t.required]],
              subject: ["", [j.t.required]],
              tradeId: ["", []],
              message: ["", [j.t.required]],
            })),
              this.department.valueChanges
                .pipe(Object(W.a)(this.destroy$))
                .subscribe((e) => {
                  3 == e
                    ? ((this.tradeIdVisible = !0),
                      this.tradeId.setValidators([j.t.required]))
                    : ((this.tradeIdVisible = !1),
                      this.tradeId.clearValidators()),
                    this.tradeId.updateValueAndValidity();
                });
          }
          getErrorMessage(e, t) {
            return F.a.getErrorMessage(e, t);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(j.d), i.Rb(i.i));
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-support-form"]],
            inputs: { user: "user" },
            outputs: { submitEvent: "submitEvent" },
            decls: 53,
            vars: 15,
            consts: [
              [1, "col-12"],
              [
                "autocomplete",
                "off",
                "novalidate",
                "false",
                3,
                "formGroup",
                "keyup.enter",
              ],
              [1, "row", "mt-3"],
              [1, "col-lg-4"],
              [1, "d-flex", "flex-column-reverse"],
              ["class", "error-message", 4, "ngIf"],
              ["name", "userName", 1, "form-control", 3, "formControl"],
              [1, "form-label"],
              [1, "color-red-accent"],
              ["name", "fullName", 1, "form-control", 3, "formControl"],
              ["name", "email", 1, "form-control", 3, "formControl"],
              ["name", "department", 1, "form-control", 3, "formControl"],
              [3, "value", 4, "ngFor", "ngForOf"],
              ["name", "subject", 1, "form-control", 3, "formControl"],
              ["class", "row mt-3", 4, "ngIf"],
              [
                "name",
                "message",
                "rows",
                "5",
                1,
                "form-control",
                3,
                "formControl",
              ],
              [1, "row", "mt-5"],
              [1, "col-12", "text-end"],
              ["pButton", "", "type", "button", "label", "Submit", 3, "click"],
              [1, "error-message"],
              [3, "value"],
              ["name", "tradeId", 1, "form-control", 3, "formControl"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "div", 0),
                i.Xb(1, "form", 1),
                i.fc("keyup.enter", function () {
                  return t.submit();
                }),
                i.Xb(2, "div", 2),
                i.Xb(3, "div", 3),
                i.Xb(4, "div", 4),
                i.Lc(5, X, 2, 1, "span", 5),
                i.Sb(6, "input", 6),
                i.Xb(7, "label", 7),
                i.Nc(8, "Username"),
                i.Sb(9, "span", 8),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(10, "div", 3),
                i.Xb(11, "div", 4),
                i.Lc(12, B, 2, 1, "span", 5),
                i.Sb(13, "input", 9),
                i.Xb(14, "label", 7),
                i.Nc(15, "Name"),
                i.Sb(16, "span", 8),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(17, "div", 3),
                i.Xb(18, "div", 4),
                i.Lc(19, H, 2, 1, "span", 5),
                i.Sb(20, "input", 10),
                i.Xb(21, "label", 7),
                i.Nc(22, "E-Mail"),
                i.Sb(23, "span", 8),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(24, "div", 2),
                i.Xb(25, "div", 0),
                i.Xb(26, "div", 4),
                i.Lc(27, U, 2, 1, "span", 5),
                i.Xb(28, "select", 11),
                i.Lc(29, G, 2, 2, "option", 12),
                i.Wb(),
                i.Xb(30, "label", 7),
                i.Nc(31, "Department"),
                i.Sb(32, "span", 8),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(33, "div", 2),
                i.Xb(34, "div", 0),
                i.Xb(35, "div", 4),
                i.Lc(36, $, 2, 1, "span", 5),
                i.Sb(37, "input", 13),
                i.Xb(38, "label", 7),
                i.Nc(39, "Subject"),
                i.Sb(40, "span", 8),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Lc(41, K, 8, 2, "div", 14),
                i.Xb(42, "div", 2),
                i.Xb(43, "div", 0),
                i.Xb(44, "div", 4),
                i.Lc(45, Y, 2, 1, "span", 5),
                i.Sb(46, "textarea", 15),
                i.Xb(47, "label", 7),
                i.Nc(48, "Message"),
                i.Sb(49, "span", 8),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(50, "div", 16),
                i.Xb(51, "div", 17),
                i.Xb(52, "button", 18),
                i.fc("click", function () {
                  return t.submit();
                }),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb()),
                2 & e &&
                  (i.Eb(1),
                  i.pc("formGroup", t.form),
                  i.Eb(4),
                  i.pc("ngIf", t.userName.touched && t.userName.invalid),
                  i.Eb(1),
                  i.pc("formControl", t.userName),
                  i.Eb(6),
                  i.pc("ngIf", t.fullName.touched && t.fullName.invalid),
                  i.Eb(1),
                  i.pc("formControl", t.fullName),
                  i.Eb(6),
                  i.pc("ngIf", t.email.touched && t.email.invalid),
                  i.Eb(1),
                  i.pc("formControl", t.email),
                  i.Eb(7),
                  i.pc("ngIf", t.department.touched && t.department.invalid),
                  i.Eb(1),
                  i.pc("formControl", t.department),
                  i.Eb(1),
                  i.pc("ngForOf", t.departmentList),
                  i.Eb(7),
                  i.pc("ngIf", t.subject.touched && t.subject.invalid),
                  i.Eb(1),
                  i.pc("formControl", t.subject),
                  i.Eb(4),
                  i.pc("ngIf", t.tradeIdVisible),
                  i.Eb(4),
                  i.pc("ngIf", t.message.touched && t.message.invalid),
                  i.Eb(1),
                  i.pc("formControl", t.message));
            },
            directives: [
              j.v,
              j.m,
              j.g,
              D.m,
              j.c,
              j.l,
              j.f,
              j.s,
              D.l,
              z.a,
              j.o,
              j.u,
            ],
            styles: [".h-68[_ngcontent-%COMP%]{min-height:68px}"],
          })),
          e
        );
      })();
      var Q = n("A1oB");
      function J(e, t) {
        if ((1 & e && i.Sb(0, "app-accordion", 9), 2 & e)) {
          const e = i.hc().$implicit;
          i.pc("header", e.header)("text", e.text);
        }
      }
      function ee(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, J, 1, 2, "app-accordion", 8), i.Ub()),
          2 & e)
        ) {
          const e = t.even;
          i.Eb(1), i.pc("ngIf", e);
        }
      }
      function te(e, t) {
        if ((1 & e && i.Sb(0, "app-accordion", 9), 2 & e)) {
          const e = i.hc().$implicit;
          i.pc("header", e.header)("text", e.text);
        }
      }
      function ne(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, te, 1, 2, "app-accordion", 8), i.Ub()),
          2 & e)
        ) {
          const e = t.odd;
          i.Eb(1), i.pc("ngIf", e);
        }
      }
      let ie = (() => {
        class e {
          constructor(e, t, n, i) {
            (this.store = e),
              (this.snack = t),
              (this.support = n),
              (this.router = i),
              (this.faqList = P);
          }
          createTicket(e) {
            this.support.createTicket(e).subscribe(
              () => {
                this.router.navigate(["/office"]),
                  this.snack.success("We receive your request");
              },
              () => this.snack.error("We receive your request")
            );
          }
          get user() {
            return this.store.selectSnapshot(m.a.model);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.Rb(g.h), i.Rb(_.a), i.Rb(L), i.Rb(r.g));
          }),
          (e.ɵcmp = i.Lb({
            type: e,
            selectors: [["app-faq-page"]],
            decls: 12,
            vars: 4,
            consts: [
              [1, "container-fluid", "px-0", "px-lg-3"],
              [1, "row"],
              [1, "col-12"],
              ["header", "FAQ", 3, "selected"],
              [1, "col-12", "col-lg-6"],
              [4, "ngFor", "ngForOf"],
              ["header", "Support"],
              [3, "user", "submitEvent"],
              ["class", "d-block mb-3", 3, "header", "text", 4, "ngIf"],
              [1, "d-block", "mb-3", 3, "header", "text"],
            ],
            template: function (e, t) {
              1 & e &&
                (i.Xb(0, "div", 0),
                i.Xb(1, "div", 1),
                i.Xb(2, "div", 2),
                i.Xb(3, "p-tabView"),
                i.Xb(4, "p-tabPanel", 3),
                i.Xb(5, "div", 1),
                i.Xb(6, "div", 4),
                i.Lc(7, ee, 2, 1, "ng-container", 5),
                i.Wb(),
                i.Xb(8, "div", 4),
                i.Lc(9, ne, 2, 1, "ng-container", 5),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Xb(10, "p-tabPanel", 6),
                i.Xb(11, "app-support-form", 7),
                i.fc("submitEvent", function (e) {
                  return t.createTicket(e);
                }),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb(),
                i.Wb()),
                2 & e &&
                  (i.Eb(4),
                  i.pc("selected", !0),
                  i.Eb(3),
                  i.pc("ngForOf", t.faqList),
                  i.Eb(2),
                  i.pc("ngForOf", t.faqList),
                  i.Eb(2),
                  i.pc("user", t.user));
            },
            directives: [A.b, A.a, D.l, Z, D.m, Q.a],
            styles: [""],
          })),
          e
        );
      })();
      var se = n("Hifb"),
        re = n("xgIS"),
        oe = n("EY2u");
      let ae = (() => {
          class e {
            constructor() {
              (this.scrollSub = new f.a()),
                (this.resizeSub = new f.a()),
                this.manageScrollPos(),
                (this.scrollObs =
                  "undefined" != typeof window
                    ? Object(re.a)(window, "scroll")
                    : oe.a),
                (this.scrollSub = this.scrollObs.subscribe(() =>
                  this.manageScrollPos()
                )),
                (this.resizeObs =
                  "undefined" != typeof window
                    ? Object(re.a)(window, "resize")
                    : oe.a),
                (this.resizeSub = this.resizeObs.subscribe(() =>
                  this.manageScrollPos()
                ));
            }
            manageScrollPos() {
              this.pos = "undefined" != typeof window ? window.pageYOffset : 0;
            }
            ngOnDestroy() {
              this.scrollSub.unsubscribe(), this.resizeSub.unsubscribe();
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        le = (() => {
          class e {
            constructor(e, t, n) {
              (this.elementRef = e),
                (this.renderer = t),
                (this.scroll = n),
                (this.scrollSub = new f.a()),
                (this.resizeSub = new f.a()),
                (this.offset = 80);
            }
            get id() {
              return this.elementRef.nativeElement.id;
            }
            ngOnInit() {
              this.animationName &&
                ((this.isVisible = !1),
                (this.useScroll = this.useScroll
                  ? this.useScroll
                  : !1 !== this.useScroll),
                (this.threshold = (this.threshold && this.threshold) || 0.5),
                "IntersectionObserver" in window && this.useScroll
                  ? new IntersectionObserver(
                      (e, t) => {
                        e.forEach((e) => {
                          e.isIntersecting && this.addAnimationClass();
                        });
                      },
                      {
                        root: null,
                        threshold: this.threshold,
                        rootMargin: "0px",
                      }
                    ).observe(this.elementRef.nativeElement)
                  : ((this.scrollSub = this.scroll.scrollObs.subscribe(() =>
                      this.manageVisibility()
                    )),
                    (this.resizeSub = this.scroll.resizeObs.subscribe(() =>
                      this.manageVisibility()
                    ))));
            }
            ngAfterViewInit() {
              setTimeout(() => this.manageVisibility(), 1);
            }
            ngOnDestroy() {
              this.scrollSub.unsubscribe(), this.resizeSub.unsubscribe();
            }
            manageVisibility() {
              this.isVisible ||
                (this.getWinHeight(),
                this.getOffsetTop(),
                this.scroll.pos >=
                  this.offsetTop + this.offset - this.winHeight &&
                  this.addAnimationClass());
            }
            addAnimationClass() {
              this.animationName &&
                ((this.isVisible = !0), this.setClass(this.animationName));
            }
            setClass(e) {
              for (const t of e.split(" "))
                this.renderer.addClass(this.elementRef.nativeElement, t);
            }
            getWinHeight() {
              this.winHeight =
                "undefined" != typeof window ? window.innerHeight : 0;
            }
            getOffsetTop() {
              if (
                "function" ==
                typeof this.elementRef.nativeElement.getBoundingClientRect
              ) {
                const e =
                  this.elementRef.nativeElement.getBoundingClientRect().top;
                this.offsetTop =
                  e + this.scroll.pos - this.elementRef.nativeElement.clientTop;
              } else this.offsetTop = 0;
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)(i.Rb(i.m), i.Rb(i.F), i.Rb(ae));
            }),
            (e.ɵdir = i.Mb({
              type: e,
              selectors: [["", "animateOnScroll", ""]],
              inputs: {
                offset: "offset",
                useScroll: "useScroll",
                threshold: "threshold",
                animationName: "animationName",
              },
            })),
            e
          );
        })(),
        ce = (() => {
          class e {
            static forRoot() {
              return { ngModule: e, providers: [ae] };
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              imports: [[D.c]],
            })),
            e
          );
        })();
      var ue = n("hPAK");
      function he(e, t) {
        if ((1 & e && i.Sb(0, "app-accordion", 53), 2 & e)) {
          const e = i.hc().$implicit;
          i.pc("header", e.header)("text", e.text);
        }
      }
      function de(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, he, 1, 2, "app-accordion", 52), i.Ub()),
          2 & e)
        ) {
          const e = t.even;
          i.Eb(1), i.pc("ngIf", e);
        }
      }
      function pe(e, t) {
        if ((1 & e && i.Sb(0, "app-accordion", 53), 2 & e)) {
          const e = i.hc().$implicit;
          i.pc("header", e.header)("text", e.text);
        }
      }
      function fe(e, t) {
        if (
          (1 & e && (i.Vb(0), i.Lc(1, pe, 1, 2, "app-accordion", 52), i.Ub()),
          2 & e)
        ) {
          const e = t.odd;
          i.Eb(1), i.pc("ngIf", e);
        }
      }
      const ge = [
        {
          path: "",
          children: [
            {
              path: "",
              component: p,
              children: [
                {
                  path: "",
                  component: (() => {
                    class e {
                      constructor(e, t) {
                        (this.store = e), (this.router = t), (this.faqList = P);
                      }
                      featureSlides() {}
                      navigateToPackage(e) {
                        this.changeRegistrationStep(1),
                          this.changeRegistrationType(e),
                          this.router.navigate(["/"]);
                      }
                      get userRole() {
                        return se.a;
                      }
                      changeRegistrationStep(e) {
                        this.store.dispatch(new b.a.ChangeRegistrationStep(e));
                      }
                      changeRegistrationType(e) {
                        this.store.dispatch(new b.a.ChangeRegistrationType(e));
                      }
                    }
                    return (
                      (e.ɵfac = function (t) {
                        return new (t || e)(i.Rb(g.h), i.Rb(r.g));
                      }),
                      (e.ɵcmp = i.Lb({
                        type: e,
                        selectors: [["app-landing-page"]],
                        decls: 108,
                        vars: 3,
                        consts: [
                          [1, "landing"],
                          [1, "container-fluid"],
                          [1, "row", "video-block"],
                          [1, "col-12"],
                          [1, "container"],
                          [1, "row", "video-block__left"],
                          [1, "col-12", "col-lg-7"],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-2 animate__fadeInUp",
                            1,
                            "landing--main-title",
                            "fw-bold",
                            "hide-on-init",
                          ],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-3 animate__fadeInUp",
                            1,
                            "text",
                            "mt-3",
                            "hide-on-init",
                          ],
                          [
                            "routerLink",
                            "/",
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-5 animate__fadeInUp",
                            1,
                            "mt-5",
                            "button",
                            "button--sm",
                            "button--white-border",
                            "hide-on-init",
                          ],
                          [1, "row", "video-block__right"],
                          [
                            "autoplay",
                            "true",
                            "loop",
                            "true",
                            "width",
                            "100%",
                            "playsinline",
                            "",
                            "preload",
                            "true",
                            1,
                            "landing__video",
                            3,
                            "muted",
                          ],
                          [
                            "src",
                            "chart.mp4",
                            "type",
                            "video/mp4",
                          ],
                          [
                            "id",
                            "how-it-works",
                            1,
                            "row",
                            "bg-gray",
                            "how-it-works",
                            "py-5",
                            "px-1",
                            "px-lg-5",
                            "text-center",
                          ],
                          [1, "col-12", "pb-5", "my-5"],
                          [1, "row"],
                          [1, "how-it-works__text", "fw-bold", "mt-5"],
                          [
                            1,
                            "landing--secondary-title",
                            "fw-bold",
                            "mb-5",
                            "pb-lg-5",
                            "mt-3",
                          ],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-1 animate__fadeInUp",
                            1,
                            "col-12",
                            "col-lg-4",
                            "how-it-works__item",
                            "hide-on-init",
                          ],
                          [1, "how-it-works__card", "py-5", "px-2", "px-lg-5"],
                          [0, "icon", "icon-ic_molecule", "mb-4"],
                          [1, "fs-4", "fw-bold"],
                          [1, "text"],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-3 animate__fadeInUp",
                            1,
                            "col-12",
                            "col-lg-4",
                            "how-it-works__item",
                            "hide-on-init",
                          ],
                          [0, "icon", "icon-ic_mobile", "mb-4"],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-5 animate__fadeInUp",
                            1,
                            "col-12",
                            "col-lg-4",
                            "how-it-works__item",
                            "hide-on-init",
                          ],
                          [0, "icon", "icon-ic_tothemoon", "mb-4"],
                          ["id", "features", 1, "row", "features__block"],
                          [
                            1,
                            "col-12",
                            "col-lg-6",
                            "order-2",
                            "order-lg-1",
                            "mt-5",
                          ],
                          [1, "col-12", "col-lg-12"],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__fadeInLeft",
                            1,
                            "features__slider",
                            "hide-on-init",
                          ],
                          [
                            1,
                            "col-12",
                            "offset-lg-1",
                            "col-lg-5",
                            "order-1",
                            "order-lg-2",
                            "d-flex",
                            "flex-column",
                            "justify-content-center",
                            "mt-5",
                            "pb-3",
                          ],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-3 animate__fadeInUp",
                            1,
                            "text",
                            "hide-on-init",
                          ],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-1 animate__fadeInUp",
                            1,
                            "landing--secondary-title",
                            "fw-bold",
                            "mb-4",
                            "mt-3",
                            "hide-on-init",
                          ],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animate__animated animate__delay-2 animate__fadeInUp",
                            1,
                            "text",
                            "gray",
                            "hide-on-init",
                          ],
                          ["id", "plans", 1, "my-5"],
                          [1, "row", "bg-gray", "pt-5", "plans-block"],
                          [1, "col-12", "mb-5"],
                          [1, "text-center", "my-lg-5"],
                          [1, "landing--secondary-title", "fw-bold"],
                          [1, "package-block", "py-4", "mb-5"],
                          [
                            1,
                            "package-block__item",
                            "mx-4",
                            "mx-lg-5",
                            "my-5",
                            "text-center",
                          ],
                          [1, "package-block__title", "fw-bold", "mb-5"],
                          [1, "package-block__list"],
                          [
                            1,
                            "button",
                            "button--sm",
                            "button--black",
                            3,
                            "click",
                          ],
                          [
                            "animateOnScroll",
                            "",
                            "animationName",
                            "animated",
                            1,
                            "package-block__item",
                            "active",
                            "mx-4",
                            "mx-lg-5",
                            "my-5",
                            "text-center",
                          ],
                          ["id", "faq", 1, "my-5"],
                          [1, "row", "mb-5"],
                          [1, "col-12", "mb-3"],
                          [
                            1,
                            "landing--secondary-title",
                            "text-center",
                            "fw-bold",
                            "my-5",
                          ],
                          [1, "col-12", "col-lg-6"],
                          [4, "ngFor", "ngForOf"],
                          [
                            "class",
                            "d-block mb-3",
                            3,
                            "header",
                            "text",
                            4,
                            "ngIf",
                          ],
                          [1, "d-block", "mb-3", 3, "header", "text"],
                        ],
                        template: function (e, t) {
                          1 & e &&
                            (i.Xb(0, "div", 0),
                            i.Xb(1, "div", 1),
                            i.Xb(2, "div", 2),
                            i.Xb(3, "div", 3),
                            i.Xb(4, "div", 4),
                            i.Xb(5, "div", 3),
                            i.Xb(6, "div", 5),
                            i.Xb(7, "div", 6),
                            i.Xb(8, "h1", 7),
                            i.Nc(
                              9,
                              "Data is not useful until it becomes information"
                            ),
                            i.Wb(),
                            i.Xb(10, "p", 8),
                            i.Nc(
                              11,
                              "Our Trading Indicator transform data into information, that you have the \u201cVision\u201d in our complex financial Markets"
                            ),
                            // i.Wb(),
                            // i.Xb(12, "button", 9),
                            // i.Nc(13, "Email"),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(14, "div", 10),
                            i.Xb(15, "div", 3),
                            i.Xb(16, "video", 11),
                            i.Sb(17, "source", 12),
                            i.Nc(
                              18,
                              "Sorry, your browser doesn't support embedded videos."
                            ),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(19, "div", 13),
                            i.Xb(20, "div", 14),
                            i.Xb(21, "div", 4),
                            i.Xb(22, "div", 15),
                            i.Xb(23, "div", 3),
                            i.Xb(24, "h5", 16),
                            i.Nc(25, "How it works?"),
                            i.Wb(),
                            i.Xb(26, "h1", 17),
                            i.Nc(27, "Simple and fast"),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(28, "div", 18),
                            i.Xb(29, "div", 19),
                            i.Sb(30, "span", 20),
                            i.Xb(31, "p", 21),
                            i.Nc(32, "Register"),
                            i.Wb(),
                            i.Xb(33, "p", 22),
                            i.Nc(
                              34,
                              "Create an account on our platform and choose the appropriate license."
                            ),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(35, "div", 23),
                            i.Xb(36, "div", 19),
                            i.Sb(37, "span", 24),
                            i.Xb(38, "p", 21),
                            i.Nc(39, "Licence"),
                            i.Wb(),
                            i.Xb(40, "p", 22),
                            i.Nc(
                              41,
                              "Choose a license that meets your goals and expectations."
                            ),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(42, "div", 25),
                            i.Xb(43, "div", 19),
                            i.Sb(44, "span", 26),
                            i.Xb(45, "p", 21),
                            i.Nc(46, "Connect"),
                            i.Wb(),
                            i.Xb(47, "p", 22),
                            i.Nc(
                              48,
                              "Connect to your trading account and the system will work for you automatically"
                            ),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(49, "div", 27),
                            i.Xb(50, "div", 3),
                            i.Xb(51, "div", 4),
                            i.Xb(52, "div", 15),
                            i.Xb(53, "div", 28),
                            i.Xb(54, "div", 15),
                            i.Xb(55, "div", 29),
                            i.Xb(56, "div", 30),
                            i.Sb(57, "app-features-swiper"),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(58, "div", 31),
                            i.Xb(59, "p", 32),
                            i.Nc(60, "Features"),
                            i.Wb(),
                            i.Xb(61, "h1", 33),
                            i.Nc(62, "What is MarketVision?"),
                            i.Wb(),
                            i.Xb(63, "span", 34),
                            i.Xb(64, "span"),
                            i.Nc(
                              65,
                              "MarketVision is for real investors who want to take their wealth to the next level."
                            ),
                            i.Wb(),
                            i.Sb(66, "br"),
                            i.Xb(67, "span"),
                            i.Nc(
                              68,
                              "MarketVision is not just a FinTech company in the financial services space, rather MarketVision is a digital marketplace that allows interfaces with various sectors such as real estate, commodities and trading in crypto / forex / cfd, both manually and automatically. Our philosophy is to not only provide more insights to clients around the world through big data analytics and evaluations on international exchanges, but also educate them financially by enabling asset building digitally and physically and making it work for you. Our professional team is distinguished by over 30 years of expertise. In addition, we offer our clients the opportunity to use our indicators. These allow anyone who has gone through our education/training portal to participate in a variety of global exchanges."
                            ),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(69, "div", 15),
                            i.Sb(70, "div", 35),
                            i.Wb(),
                            i.Xb(71, "div", 36),
                            i.Xb(72, "div", 37),
                            i.Xb(73, "div", 38),
                            i.Xb(74, "p", 22),
                            i.Nc(75, "Plans"),
                            i.Wb(),
                            i.Xb(76, "h3", 39),
                            i.Nc(77, "Choose the right plan"),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(78, "div", 40),
                            i.Xb(79, "div", 41),
                            i.Xb(80, "div", 42),
                            i.Nc(81, "Personal Enrolled Customer (PEC)"),
                            i.Wb(),
                            i.Xb(82, "ul", 43),
                            i.Xb(83, "li"),
                            i.Nc(
                              84,
                              "The PEC status allows the use of all our tools, software features and training modules. As a PEC, you are primarily interested using our Company and our experience to increase your profits. You get more relevant trading content, but you can activate the CP back office later."
                            ),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(85, "button", 44),
                            i.fc("click", function () {
                              return t.navigateToPackage(t.userRole.user);
                            }),
                            i.Nc(86, ""),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(87, "div", 45),
                            i.Xb(88, "div", 42),
                            i.Nc(89, "Company Partner (CP)"),
                            i.Wb(),
                            i.Xb(90, "ul", 43),
                            i.Xb(91, "li"),
                            i.Nc(
                              92,
                              "As a CP you are a figurehead of the company and learn how to start your affiliate business. In addition to the trading infrastructure, this option gives you additional information on structural growth, revenue, and commission overview to help distributors find the right tools, advertising, and indicators to build your business."
                            ),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(93, "button", 44),
                            i.fc("click", function () {
                              return t.navigateToPackage(t.userRole.agent);
                            }),
                            i.Nc(94, ""),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(95, "div", 15),
                            i.Sb(96, "div", 46),
                            i.Wb(),
                            i.Xb(97, "div", 47),
                            i.Xb(98, "div", 3),
                            i.Xb(99, "div", 4),
                            i.Xb(100, "div", 47),
                            i.Xb(101, "div", 48),
                            i.Xb(102, "h1", 49),
                            i.Nc(103, "F.A.Q."),
                            i.Wb(),
                            i.Wb(),
                            i.Xb(104, "div", 50),
                            i.Lc(105, de, 2, 1, "ng-container", 51),
                            i.Wb(),
                            i.Xb(106, "div", 50),
                            i.Lc(107, fe, 2, 1, "ng-container", 51),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb(),
                            i.Wb()),
                            2 & e &&
                              (i.Eb(16),
                              i.pc("muted", "muted"),
                              i.Eb(89),
                              i.pc("ngForOf", t.faqList),
                              i.Eb(2),
                              i.pc("ngForOf", t.faqList));
                        },
                        directives: [le, r.h, ue.a, D.l, D.m, Q.a],
                        styles: [
                          '[_nghost-%COMP%]{display:block;width:100%}.landing[_ngcontent-%COMP%]{background:#fff;overflow:hidden}.landing--main-title[_ngcontent-%COMP%]{font-size:60px}.landing--secondary-title[_ngcontent-%COMP%]{font-size:64px}.bg-gray[_ngcontent-%COMP%]{background:#f9f9f9}.plans-block[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{font-size:18px}.video-block[_ngcontent-%COMP%]{background:#000;position:relative;overflow:hidden}.video-block[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#fff}.video-block[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{font-size:18px;color:#6d7783}.video-block__left[_ngcontent-%COMP%]{display:flex;align-items:center;position:relative;z-index:2;height:calc(100vh - 100px);max-height:1000px}.video-block__right[_ngcontent-%COMP%]{position:absolute;top:calc(50% - 380px);right:-300px}.package-block[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-wrap:wrap}.package-block__item[_ngcontent-%COMP%]{color:#000;padding:40px 20px 80px 25px;box-shadow:0 20px 80px rgba(0,0,0,.1);border-radius:20px;max-width:380px;width:100%;background:#fff;position:relative;overflow:hidden;transition:all .33s}.package-block__item[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:relative;z-index:2}.package-block__item[_ngcontent-%COMP%]:last-child{margin-left:-70px!important}.package-block__item[_ngcontent-%COMP%]:after{content:"";display:block;width:440px;height:440px;position:absolute;top:-100%;left:-30px;z-index:-1;border-radius:50%;background:radial-gradient(ellipse at center,#1f183d 0,rgba(18,10,50,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#1f183d",endColorstr="#00120a32",GradientType=1)}.package-block__item[_ngcontent-%COMP%]:before{content:"";position:absolute;top:0;left:0;right:0;bottom:0;border-radius:20px;opacity:0;z-index:-1;background:#000;transition:opacity .33s}.package-block__item.animated[_ngcontent-%COMP%]:last-child{transition:all 1.5s .3s;margin-left:30px!important}.package-block__item.active[_ngcontent-%COMP%]{color:#fff;box-shadow:10px 20px 80px rgba(0,0,0,.3);transform:scale(1.2);transition:all .33s;z-index:2}.package-block__item.active[_ngcontent-%COMP%]   .package-block__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{color:#fff}.package-block__item.active[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:#fff;color:#000;transition:all .33s}.package-block__item.active[_ngcontent-%COMP%]:before{opacity:1;transition:opacity .33s}.package-block__item.active[_ngcontent-%COMP%]:after{top:65%;transition:top .8s .05s}.package-block__text[_ngcontent-%COMP%]{font-size:18px}.package-block__title[_ngcontent-%COMP%]{height:80px;padding:0 30px;font-size:28px;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis}.package-block__list[_ngcontent-%COMP%]{padding-left:0;margin-bottom:50px}.package-block__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:15px;font-size:18px;color:#6d7783}.package-block[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%);bottom:30px;transition:all .33s}.how-it-works__text[_ngcontent-%COMP%]{font-size:18px}.how-it-works__card[_ngcontent-%COMP%]{box-shadow:0 20px 80px rgba(0,0,0,.1);border-radius:15px;height:100%}.how-it-works__card[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%]{font-size:77px;display:inline-block}.how-it-works__card[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{font-size:16px;color:#6d7783;line-height:24px}.features__slider[_ngcontent-%COMP%]{background:url(hand-phone.f0eee06fe27efe4e6e05.svg) no-repeat 100%/631px 670px;height:670px;position:relative}.features__block[_ngcontent-%COMP%]{padding-top:140px;background:#000;min-width:100%}.features__block[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#fff}.features__block[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%]{font-size:18px;color:#fff}.features__block[_ngcontent-%COMP%]   .text.gray[_ngcontent-%COMP%]{color:#6d7783}@media (max-width:991px){.landing--main-title[_ngcontent-%COMP%]{font-size:40px}.landing--secondary-title[_ngcontent-%COMP%]{font-size:45px}.features__slider[_ngcontent-%COMP%]{height:500px;background-size:500px auto}.features__block[_ngcontent-%COMP%]{padding-top:0}.video-block__left[_ngcontent-%COMP%]{margin-top:50px}.video-block__right[_ngcontent-%COMP%]{top:0;right:0;transform:scale(1)}.how-it-works__item[_ngcontent-%COMP%]:before{top:100%;left:50%;transform:translate(-50%,-14px) rotate(90deg)}}',
                        ],
                      })),
                      e
                    );
                  })(),
                },
                { path: "terms", component: I },
              ],
            },
            {
              path: "auth",
              data: { preload: !0 },
              loadChildren: () =>
                Promise.resolve()
                  .then(n.bind(null, "tmEo"))
                  .then((e) => e.AuthModule),
            },
          ],
        },
        {
          path: "office",
          component: O,
          canActivate: [M.a],
          canActivateChild: [M.a],
          children: [
            { path: "", pathMatch: "full", redirectTo: "dashboard" },
            {
              path: "dashboard",
              data: { preload: !1 },
              loadChildren: () =>
                n
                  .e(8)
                  .then(n.bind(null, "v8Dz"))
                  .then((e) => e.DashboardModule),
            },
            {
              path: "shop",
              data: { preload: !1 },
              loadChildren: () =>
                Promise.all([n.e(0), n.e(10)])
                  .then(n.bind(null, "iuH3"))
                  .then((e) => e.ShopModule),
            },
            {
              path: "academy",
              data: { preload: !1 },
              loadChildren: () =>
                n
                  .e(6)
                  .then(n.bind(null, "cAp6"))
                  .then((e) => e.AcademyModule),
            },
            {
              path: "profile",
              data: { preload: !1 },
              loadChildren: () =>
                Promise.all([n.e(0), n.e(9)])
                  .then(n.bind(null, "h42i"))
                  .then((e) => e.ProfileModule),
            },
            {
              path: "account",
              data: { preload: !1 },
              loadChildren: () =>
                Promise.all([n.e(0), n.e(7)])
                  .then(n.bind(null, "JZeA"))
                  .then((e) => e.AccountModule),
            },
            {
              path: "trading",
              data: { preload: !1 },
              loadChildren: () =>
                Promise.resolve()
                  .then(n.bind(null, "fRWx"))
                  .then((e) => e.TradingModule),
            },
            {
              path: "payment",
              data: { preload: !1 },
              loadChildren: () =>
                n
                  .e(0)
                  .then(n.bind(null, "XAZO"))
                  .then((e) => e.PaymentModule),
            },
            { path: "faq", component: ie },
          ],
        },
        { path: "**", component: x },
      ];
      let me = (() => {
        class e {}
        return (
          (e.ɵmod = i.Pb({ type: e })),
          (e.ɵinj = i.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [
              [
                r.k.forRoot(ge, {
                  preloadingStrategy: k,
                  anchorScrolling: "enabled",
                  scrollPositionRestoration: "enabled",
                }),
              ],
              r.k,
            ],
          })),
          e
        );
      })();
      var be = n("vkgz"),
        ve = n("JIr8");
      const ye = (e, t) => {
        return (n = t - e.toString().length), new Array(n + 1).join("0") + e;
        var n;
      };
      class we {
        constructor(e, t, n) {
          (this.action = e), (this.store = t), (this.logWriter = n);
        }
        dispatched(e) {
          const t = Object(g.i)(this.action),
            n =
              ((i = new Date()),
              ye(i.getHours(), 2) +
                ":" +
                ye(i.getMinutes(), 2) +
                ":" +
                ye(i.getSeconds(), 2) +
                "." +
                ye(i.getMilliseconds(), 3));
          var i;
          this.logWriter.startGroup(`action ${t} @ ${n}`),
            this._hasPayload(this.action) &&
              this.logWriter.logGrey("payload", Object.assign({}, this.action)),
            this.logWriter.logGrey("prev state", e);
        }
        completed(e) {
          this.logWriter.logGreen("next state", e), this.logWriter.endGroup();
        }
        errored(e) {
          this.logWriter.logRedish(
            "next state after error",
            this.store.snapshot()
          ),
            this.logWriter.logRedish("error", e),
            this.logWriter.endGroup();
        }
        _hasPayload(e) {
          return this._getNonEmptyProperties(e).length > 0;
        }
        _getNonEmptyProperties(e) {
          return Object.keys(e)
            .map((t) => e[t])
            .filter((e) => void 0 !== e);
        }
      }
      class Se {
        constructor(e) {
          (this.options = e),
            (this.options = this.options || {}),
            (this.logger = e.logger || console);
        }
        startGroup(e) {
          const t = this.options.collapsed
            ? this.logger.groupCollapsed
            : this.logger.group;
          try {
            t.call(this.logger, e);
          } catch (n) {
            console.log(e);
          }
        }
        endGroup() {
          try {
            this.logger.groupEnd();
          } catch (e) {
            this.logger.log("\u2014\u2014 log end \u2014\u2014");
          }
        }
        logGrey(e, t) {
          this.log(e, "color: #9E9E9E; font-weight: bold", t);
        }
        logGreen(e, t) {
          this.log(e, "color: #4CAF50; font-weight: bold", t);
        }
        logRedish(e, t) {
          this.log(e, "color: #FD8182; font-weight: bold", t);
        }
        log(e, t, n) {
          this.isIE()
            ? this.logger.log(e, n)
            : this.logger.log("%c " + e, t, n);
        }
        isIE() {
          const e =
            "undefined" != typeof window && window.navigator.userAgent
              ? window.navigator.userAgent
              : "";
          let t = !1;
          const n = e.indexOf("MSIE "),
            i = e.indexOf("Trident/");
          return (n > -1 || i > -1) && (t = !0), t;
        }
      }
      const _e = new i.r("NGXS_LOGGER_PLUGIN_OPTIONS");
      let Ce = (() => {
        class e {
          constructor(e, t) {
            (this._options = e), (this._injector = t);
          }
          handle(e, t, n) {
            if (this._options.disabled || !this._options.filter(t, e))
              return n(e, t);
            (this._logWriter = this._logWriter || new Se(this._options)),
              (this._store = this._store || this._injector.get(g.h));
            const i = new we(t, this._store, this._logWriter);
            return (
              i.dispatched(e),
              n(e, t).pipe(
                Object(be.a)((e) => {
                  i.completed(e);
                }),
                Object(ve.a)((e) => {
                  throw (i.errored(e), e);
                })
              )
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(_e), i.bc(i.s));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const Ee = new i.r("LOGGER_USER_OPTIONS");
      function Oe(e) {
        const t = {
          logger: console,
          collapsed: !1,
          disabled: !1,
          filter: () => !0,
        };
        return Object.assign({}, t, e);
      }
      let xe = (() => {
        class e {
          static forRoot(t) {
            return {
              ngModule: e,
              providers: [
                { provide: g.c, useClass: Ce, multi: !0 },
                { provide: Ee, useValue: t },
                { provide: _e, useFactory: Oe, deps: [Ee] },
              ],
            };
          }
        }
        return (
          (e.ɵmod = i.Pb({ type: e })),
          (e.ɵinj = i.Ob({
            factory: function (t) {
              return new (t || e)();
            },
          })),
          e
        );
      })();
      var Te,
        ke = n("mrSG");
      !(function (e) {
        class t {}
        (t.type = "[Common] ChangeNavigationSidebar"),
          (e.ChangeNavigationSidebar = t);
      })(Te || (Te = {}));
      let Me = (() => {
        let e = class {
          static navigationSidebar(e) {
            return e.navigationSidebar;
          }
          navigationSidebar(e) {
            const { navigationSidebar: t } = e.getState();
            e.patchState({ navigationSidebar: !t });
          }
        };
        return (
          (e.ɵfac = function (t) {
            return new (t || e)();
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          Object(ke.b)(
            [Object(g.a)(Te.ChangeNavigationSidebar)],
            e.prototype,
            "navigationSidebar",
            null
          ),
          Object(ke.b)([Object(g.f)()], e, "navigationSidebar", null),
          (e = Object(ke.b)(
            [
              Object(g.g)({
                name: "common",
                defaults: { navigationSidebar: !0 },
              }),
            ],
            e
          )),
          e
        );
      })();
      var Ie = n("7o/Q"),
        Pe = n("HDdC");
      const Re = {
        url: "",
        deserializer: (e) => JSON.parse(e.data),
        serializer: (e) => JSON.stringify(e),
      };
      class Ne extends V.a {
        constructor(e, t) {
          if ((super(), e instanceof Pe.a))
            (this.destination = t), (this.source = e);
          else {
            const t = (this._config = Object.assign({}, Re));
            if (((this._output = new V.b()), "string" == typeof e)) t.url = e;
            else for (let n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            if (!t.WebSocketCtor && WebSocket) t.WebSocketCtor = WebSocket;
            else if (!t.WebSocketCtor)
              throw new Error("no WebSocket constructor can be found");
            this.destination = new R.a();
          }
        }
        lift(e) {
          const t = new Ne(this._config, this.destination);
          return (t.operator = e), (t.source = this), t;
        }
        _resetState() {
          (this._socket = null),
            this.source || (this.destination = new R.a()),
            (this._output = new V.b());
        }
        multiplex(e, t, n) {
          const i = this;
          return new Pe.a((s) => {
            try {
              i.next(e());
            } catch (o) {
              s.error(o);
            }
            const r = i.subscribe(
              (e) => {
                try {
                  n(e) && s.next(e);
                } catch (o) {
                  s.error(o);
                }
              },
              (e) => s.error(e),
              () => s.complete()
            );
            return () => {
              try {
                i.next(t());
              } catch (o) {
                s.error(o);
              }
              r.unsubscribe();
            };
          });
        }
        _connectSocket() {
          const {
              WebSocketCtor: e,
              protocol: t,
              url: n,
              binaryType: i,
            } = this._config,
            s = this._output;
          let r = null;
          try {
            (r = t ? new e(n, t) : new e(n)),
              (this._socket = r),
              i && (this._socket.binaryType = i);
          } catch (a) {
            return void s.error(a);
          }
          const o = new f.a(() => {
            (this._socket = null), r && 1 === r.readyState && r.close();
          });
          (r.onopen = (e) => {
            const { _socket: t } = this;
            if (!t) return r.close(), void this._resetState();
            const { openObserver: n } = this._config;
            n && n.next(e);
            const i = this.destination;
            (this.destination = Ie.a.create(
              (t) => {
                if (1 === r.readyState)
                  try {
                    const { serializer: e } = this._config;
                    r.send(e(t));
                  } catch (e) {
                    this.destination.error(e);
                  }
              },
              (e) => {
                const { closingObserver: t } = this._config;
                t && t.next(void 0),
                  e && e.code
                    ? r.close(e.code, e.reason)
                    : s.error(
                        new TypeError(
                          "WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }"
                        )
                      ),
                  this._resetState();
              },
              () => {
                const { closingObserver: e } = this._config;
                e && e.next(void 0), r.close(), this._resetState();
              }
            )),
              i && i instanceof R.a && o.add(i.subscribe(this.destination));
          }),
            (r.onerror = (e) => {
              this._resetState(), s.error(e);
            }),
            (r.onclose = (e) => {
              this._resetState();
              const { closeObserver: t } = this._config;
              t && t.next(e), e.wasClean ? s.complete() : s.error(e);
            }),
            (r.onmessage = (e) => {
              try {
                const { deserializer: t } = this._config;
                s.next(t(e));
              } catch (t) {
                s.error(t);
              }
            });
        }
        _subscribe(e) {
          const { source: t } = this;
          return t
            ? t.subscribe(e)
            : (this._socket || this._connectSocket(),
              this._output.subscribe(e),
              e.add(() => {
                const { _socket: e } = this;
                0 === this._output.observers.length &&
                  (e && 1 === e.readyState && e.close(), this._resetState());
              }),
              e);
        }
        unsubscribe() {
          const { _socket: e } = this;
          e && 1 === e.readyState && e.close(),
            this._resetState(),
            super.unsubscribe();
        }
      }
      const Le = new i.r("NGXS_WEBSOCKET_OPTIONS");
      function Ae(...e) {
        return function () {};
      }
      class De {
        constructor(e) {
          this.payload = e;
        }
        static get type() {
          return "[WebSocket] Connect";
        }
      }
      class je {
        constructor(e) {
          this.payload = e;
        }
        static get type() {
          return "[WebSocket] Message Error";
        }
      }
      class Fe {
        static get type() {
          return "[WebSocket] Disconnect";
        }
      }
      class Ve {
        static get type() {
          return "[WebSocket] Connected";
        }
      }
      class We {
        static get type() {
          return "[WebSocket] Disconnected";
        }
      }
      class ze {
        constructor(e) {
          this.payload = e;
        }
        static get type() {
          return "[WebSocket] Send Message";
        }
      }
      class Xe {
        static get type() {
          return "[WebSocket] Connection Updated";
        }
      }
      class Be extends Error {
        constructor(e) {
          super(`Property ${e} is missing on the socket message`);
        }
      }
      let He = (() => {
        class e {
          constructor(e, t, n) {
            (this.store = e),
              (this.actions$ = t),
              (this.options = n),
              (this.socket = null),
              (this.config = {
                url: this.options.url,
                protocol: this.options.protocol,
                binaryType: this.options.binaryType,
                serializer: this.options.serializer,
                deserializer: this.options.deserializer,
                closeObserver: {
                  next: () => {
                    this.disconnect();
                  },
                },
                openObserver: { next: () => this.store.dispatch(new Ve()) },
              }),
              (this.typeKey = this.options.typeKey),
              this.setupActionsListeners();
          }
          setupActionsListeners() {
            this.actions$.pipe(Object(g.k)(De)).subscribe(({ payload: e }) => {
              this.connect(e);
            }),
              this.actions$.pipe(Object(g.k)(Fe)).subscribe(() => {
                this.disconnect();
              }),
              this.actions$
                .pipe(Object(g.k)(ze))
                .subscribe(({ payload: e }) => {
                  this.send(e);
                });
          }
          connect(e) {
            this.updateConnection(),
              e && this.mergeConfigWithOptions(e),
              (this.socket = new Ne(this.config)),
              this.socket.subscribe({
                next: (e) => {
                  const t = Object(g.j)(e, this.typeKey);
                  if (!t) throw new Be(this.typeKey);
                  this.store.dispatch(Object.assign({}, e, { type: t }));
                },
                error: (e) => {
                  e instanceof CloseEvent
                    ? this.dispatchWebSocketDisconnected()
                    : this.store.dispatch(new je(e));
                },
              });
          }
          disconnect() {
            this.socket &&
              (this.socket.complete(),
              (this.socket = null),
              this.dispatchWebSocketDisconnected());
          }
          send(e) {
            if (!this.socket)
              throw new Error(
                "You must connect to the socket before sending any data"
              );
            this.socket.next(e);
          }
          mergeConfigWithOptions(e) {
            e.url && (this.config.url = e.url),
              e.serializer && (this.config.serializer = e.serializer),
              e.deserializer && (this.config.deserializer = e.deserializer);
          }
          updateConnection() {
            this.socket &&
              (this.socket.complete(),
              (this.socket = null),
              this.store.dispatch(new Xe()));
          }
          dispatchWebSocketDisconnected() {
            this.store.dispatch(new We());
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(g.h), i.bc(g.b), i.bc(Le));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      function Ue(e) {
        return Object.assign(
          {
            reconnectInterval: 5e3,
            reconnectAttempts: 10,
            typeKey: "type",
            deserializer: (e) => JSON.parse(e.data),
            serializer: (e) => JSON.stringify(e),
          },
          e
        );
      }
      const Ge = new i.r("USER_OPTIONS");
      let $e = (() => {
          class e {
            static forRoot(t) {
              return {
                ngModule: e,
                providers: [
                  He,
                  { provide: Ge, useValue: t },
                  { provide: Le, useFactory: Ue, deps: [Ge] },
                  { provide: i.d, useFactory: Ae, deps: [He], multi: !0 },
                ],
              };
            }
          }
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
            })),
            e
          );
        })(),
        qe = (() => {
          class e {}
          return (
            (e.ɵmod = i.Pb({ type: e })),
            (e.ɵinj = i.Ob({
              factory: function (t) {
                return new (t || e)();
              },
              providers: [k],
              imports: [
                [
                  g.d.forRoot([Me], { developmentMode: !s.a.production }),
                  $e.forRoot({ url: s.a.socketUrl }),
                  v.b.forRoot(),
                  xe.forRoot({ disabled: s.a.production }),
                ],
              ],
            })),
            e
          );
        })();
      var Ke = n("xgWI"),
        Ye = n("R1z2"),
        Ze = n("EKJS"),
        Qe = n("M0ag"),
        Je = n("lY0W");
      let et = (() => {
        class e {}
        return (
          (e.ɵmod = i.Pb({ type: e })),
          (e.ɵinj = i.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [Ke.a, Ye.a, Ze.a],
            imports: [[Je.a, Qe.a, g.d.forFeature([m.a])]],
          })),
          e
        );
      })();
      var tt = n("tmEo"),
        nt = n("jhN1"),
        it = n("R0Ic");
      function st() {
        return (
          "undefined" != typeof process &&
          "[object process]" === {}.toString.call(process)
        );
      }
      function rt(e) {
        switch (e.length) {
          case 0:
            return new it.d();
          case 1:
            return e[0];
          default:
            return new it.o(e);
        }
      }
      function ot(e, t, n, i, s = {}, r = {}) {
        const o = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((e) => {
            const n = e.offset,
              i = n == l,
              u = (i && c) || {};
            Object.keys(e).forEach((n) => {
              let i = n,
                a = e[n];
              if ("offset" !== n)
                switch (((i = t.normalizePropertyName(i, o)), a)) {
                  case it.p:
                    a = s[n];
                    break;
                  case it.a:
                    a = r[n];
                    break;
                  default:
                    a = t.normalizeStyleValue(n, i, a, o);
                }
              u[i] = a;
            }),
              i || a.push(u),
              (c = u),
              (l = n);
          }),
          o.length)
        ) {
          const e = "\n - ";
          throw new Error(
            `Unable to animate due to the following errors:${e}${o.join(e)}`
          );
        }
        return a;
      }
      function at(e, t, n, i) {
        switch (t) {
          case "start":
            e.onStart(() => i(n && lt(n, "start", e)));
            break;
          case "done":
            e.onDone(() => i(n && lt(n, "done", e)));
            break;
          case "destroy":
            e.onDestroy(() => i(n && lt(n, "destroy", e)));
        }
      }
      function lt(e, t, n) {
        const i = n.totalTime,
          s = ct(
            e.element,
            e.triggerName,
            e.fromState,
            e.toState,
            t || e.phaseName,
            null == i ? e.totalTime : i,
            !!n.disabled
          ),
          r = e._data;
        return null != r && (s._data = r), s;
      }
      function ct(e, t, n, i, s = "", r = 0, o) {
        return {
          element: e,
          triggerName: t,
          fromState: n,
          toState: i,
          phaseName: s,
          totalTime: r,
          disabled: !!o,
        };
      }
      function ut(e, t, n) {
        let i;
        return (
          e instanceof Map
            ? ((i = e.get(t)), i || e.set(t, (i = n)))
            : ((i = e[t]), i || (i = e[t] = n)),
          i
        );
      }
      function ht(e) {
        const t = e.indexOf(":");
        return [e.substring(1, t), e.substr(t + 1)];
      }
      let dt = (e, t) => !1,
        pt = (e, t) => !1,
        ft = (e, t, n) => [];
      const gt = st();
      (gt || "undefined" != typeof Element) &&
        ((dt = (e, t) => e.contains(t)),
        (pt = (() => {
          if (gt || Element.prototype.matches) return (e, t) => e.matches(t);
          {
            const e = Element.prototype,
              t =
                e.matchesSelector ||
                e.mozMatchesSelector ||
                e.msMatchesSelector ||
                e.oMatchesSelector ||
                e.webkitMatchesSelector;
            return t ? (e, n) => t.apply(e, [n]) : pt;
          }
        })()),
        (ft = (e, t, n) => {
          let i = [];
          if (n) i.push(...e.querySelectorAll(t));
          else {
            const n = e.querySelector(t);
            n && i.push(n);
          }
          return i;
        }));
      let mt = null,
        bt = !1;
      function vt(e) {
        mt ||
          ((mt = ("undefined" != typeof document ? document.body : null) || {}),
          (bt = !!mt.style && "WebkitAppearance" in mt.style));
        let t = !0;
        return (
          mt.style &&
            !(function (e) {
              return "ebkit" == e.substring(1, 6);
            })(e) &&
            ((t = e in mt.style), !t && bt) &&
            (t =
              "Webkit" + e.charAt(0).toUpperCase() + e.substr(1) in mt.style),
          t
        );
      }
      const yt = pt,
        wt = dt,
        St = ft;
      function _t(e) {
        const t = {};
        return (
          Object.keys(e).forEach((n) => {
            const i = n.replace(/([a-z])([A-Z])/g, "$1-$2");
            t[i] = e[n];
          }),
          t
        );
      }
      let Ct = (() => {
          class e {
            validateStyleProperty(e) {
              return vt(e);
            }
            matchesElement(e, t) {
              return yt(e, t);
            }
            containsElement(e, t) {
              return wt(e, t);
            }
            query(e, t, n) {
              return St(e, t, n);
            }
            computeStyle(e, t, n) {
              return n || "";
            }
            animate(e, t, n, i, s, r = [], o) {
              return new it.d(n, i);
            }
          }
          return (
            (e.ɵfac = function (t) {
              return new (t || e)();
            }),
            (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
            e
          );
        })(),
        Et = (() => {
          class e {}
          return (e.NOOP = new Ct()), e;
        })();
      function Ot(e) {
        if ("number" == typeof e) return e;
        const t = e.match(/^(-?[\.\d]+)(m?s)/);
        return !t || t.length < 2 ? 0 : xt(parseFloat(t[1]), t[2]);
      }
      function xt(e, t) {
        switch (t) {
          case "s":
            return 1e3 * e;
          default:
            return e;
        }
      }
      function Tt(e, t, n) {
        return e.hasOwnProperty("duration")
          ? e
          : (function (e, t, n) {
              let i,
                s = 0,
                r = "";
              if ("string" == typeof e) {
                const n = e.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === n)
                  return (
                    t.push(`The provided timing value "${e}" is invalid.`),
                    { duration: 0, delay: 0, easing: "" }
                  );
                i = xt(parseFloat(n[1]), n[2]);
                const o = n[3];
                null != o && (s = xt(parseFloat(o), n[4]));
                const a = n[5];
                a && (r = a);
              } else i = e;
              if (!n) {
                let n = !1,
                  r = t.length;
                i < 0 &&
                  (t.push(
                    "Duration values below 0 are not allowed for this animation step."
                  ),
                  (n = !0)),
                  s < 0 &&
                    (t.push(
                      "Delay values below 0 are not allowed for this animation step."
                    ),
                    (n = !0)),
                  n &&
                    t.splice(
                      r,
                      0,
                      `The provided timing value "${e}" is invalid.`
                    );
              }
              return { duration: i, delay: s, easing: r };
            })(e, t, n);
      }
      function kt(e, t = {}) {
        return (
          Object.keys(e).forEach((n) => {
            t[n] = e[n];
          }),
          t
        );
      }
      function Mt(e, t, n = {}) {
        if (t) for (let i in e) n[i] = e[i];
        else kt(e, n);
        return n;
      }
      function It(e, t, n) {
        return n ? t + ":" + n + ";" : "";
      }
      function Pt(e) {
        let t = "";
        for (let n = 0; n < e.style.length; n++) {
          const i = e.style.item(n);
          t += It(0, i, e.style.getPropertyValue(i));
        }
        for (const n in e.style)
          e.style.hasOwnProperty(n) &&
            !n.startsWith("_") &&
            (t += It(
              0,
              n.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(),
              e.style[n]
            ));
        e.setAttribute("style", t);
      }
      function Rt(e, t, n) {
        e.style &&
          (Object.keys(t).forEach((i) => {
            const s = Wt(i);
            n && !n.hasOwnProperty(i) && (n[i] = e.style[s]),
              (e.style[s] = t[i]);
          }),
          st() && Pt(e));
      }
      function Nt(e, t) {
        e.style &&
          (Object.keys(t).forEach((t) => {
            const n = Wt(t);
            e.style[n] = "";
          }),
          st() && Pt(e));
      }
      function Lt(e) {
        return Array.isArray(e) ? (1 == e.length ? e[0] : Object(it.i)(e)) : e;
      }
      const At = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function Dt(e) {
        let t = [];
        if ("string" == typeof e) {
          let n;
          for (; (n = At.exec(e)); ) t.push(n[1]);
          At.lastIndex = 0;
        }
        return t;
      }
      function jt(e, t, n) {
        const i = e.toString(),
          s = i.replace(At, (e, i) => {
            let s = t[i];
            return (
              t.hasOwnProperty(i) ||
                (n.push("Please provide a value for the animation param " + i),
                (s = "")),
              s.toString()
            );
          });
        return s == i ? e : s;
      }
      function Ft(e) {
        const t = [];
        let n = e.next();
        for (; !n.done; ) t.push(n.value), (n = e.next());
        return t;
      }
      const Vt = /-+([a-z0-9])/g;
      function Wt(e) {
        return e.replace(Vt, (...e) => e[1].toUpperCase());
      }
      function zt(e, t) {
        return 0 === e || 0 === t;
      }
      function Xt(e, t, n) {
        const i = Object.keys(n);
        if (i.length && t.length) {
          let r = t[0],
            o = [];
          if (
            (i.forEach((e) => {
              r.hasOwnProperty(e) || o.push(e), (r[e] = n[e]);
            }),
            o.length)
          )
            for (var s = 1; s < t.length; s++) {
              let n = t[s];
              o.forEach(function (t) {
                n[t] = Ht(e, t);
              });
            }
        }
        return t;
      }
      function Bt(e, t, n) {
        switch (t.type) {
          case 7:
            return e.visitTrigger(t, n);
          case 0:
            return e.visitState(t, n);
          case 1:
            return e.visitTransition(t, n);
          case 2:
            return e.visitSequence(t, n);
          case 3:
            return e.visitGroup(t, n);
          case 4:
            return e.visitAnimate(t, n);
          case 5:
            return e.visitKeyframes(t, n);
          case 6:
            return e.visitStyle(t, n);
          case 8:
            return e.visitReference(t, n);
          case 9:
            return e.visitAnimateChild(t, n);
          case 10:
            return e.visitAnimateRef(t, n);
          case 11:
            return e.visitQuery(t, n);
          case 12:
            return e.visitStagger(t, n);
          default:
            throw new Error(
              "Unable to resolve animation metadata node #" + t.type
            );
        }
      }
      function Ht(e, t) {
        return window.getComputedStyle(e)[t];
      }
      function Ut(e, t) {
        const n = [];
        return (
          "string" == typeof e
            ? e.split(/\s*,\s*/).forEach((e) =>
                (function (e, t, n) {
                  if (":" == e[0]) {
                    const i = (function (e, t) {
                      switch (e) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (e, t) => parseFloat(t) > parseFloat(e);
                        case ":decrement":
                          return (e, t) => parseFloat(t) < parseFloat(e);
                        default:
                          return (
                            t.push(
                              `The transition alias value "${e}" is not supported`
                            ),
                            "* => *"
                          );
                      }
                    })(e, n);
                    if ("function" == typeof i) return void t.push(i);
                    e = i;
                  }
                  const i = e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return (
                      n.push(
                        `The provided transition expression "${e}" is not supported`
                      ),
                      t
                    );
                  const s = i[1],
                    r = i[2],
                    o = i[3];
                  t.push(qt(s, o)),
                    "<" != r[0] || ("*" == s && "*" == o) || t.push(qt(o, s));
                })(e, n, t)
              )
            : n.push(e),
          n
        );
      }
      const Gt = new Set(["true", "1"]),
        $t = new Set(["false", "0"]);
      function qt(e, t) {
        const n = Gt.has(e) || $t.has(e),
          i = Gt.has(t) || $t.has(t);
        return (s, r) => {
          let o = "*" == e || e == s,
            a = "*" == t || t == r;
          return (
            !o && n && "boolean" == typeof s && (o = s ? Gt.has(e) : $t.has(e)),
            !a && i && "boolean" == typeof r && (a = r ? Gt.has(t) : $t.has(t)),
            o && a
          );
        };
      }
      const Kt = new RegExp("s*:selfs*,?", "g");
      function Yt(e, t, n) {
        return new Zt(e).build(t, n);
      }
      class Zt {
        constructor(e) {
          this._driver = e;
        }
        build(e, t) {
          const n = new Qt(t);
          return this._resetContextStyleTimingState(n), Bt(this, Lt(e), n);
        }
        _resetContextStyleTimingState(e) {
          (e.currentQuerySelector = ""),
            (e.collectedStyles = {}),
            (e.collectedStyles[""] = {}),
            (e.currentTime = 0);
        }
        visitTrigger(e, t) {
          let n = (t.queryCount = 0),
            i = (t.depCount = 0);
          const s = [],
            r = [];
          return (
            "@" == e.name.charAt(0) &&
              t.errors.push(
                "animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"
              ),
            e.definitions.forEach((e) => {
              if ((this._resetContextStyleTimingState(t), 0 == e.type)) {
                const n = e,
                  i = n.name;
                i
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((e) => {
                    (n.name = e), s.push(this.visitState(n, t));
                  }),
                  (n.name = i);
              } else if (1 == e.type) {
                const s = this.visitTransition(e, t);
                (n += s.queryCount), (i += s.depCount), r.push(s);
              } else
                t.errors.push(
                  "only state() and transition() definitions can sit inside of a trigger()"
                );
            }),
            {
              type: 7,
              name: e.name,
              states: s,
              transitions: r,
              queryCount: n,
              depCount: i,
              options: null,
            }
          );
        }
        visitState(e, t) {
          const n = this.visitStyle(e.styles, t),
            i = (e.options && e.options.params) || null;
          if (n.containsDynamicStyles) {
            const s = new Set(),
              r = i || {};
            if (
              (n.styles.forEach((e) => {
                if (Jt(e)) {
                  const t = e;
                  Object.keys(t).forEach((e) => {
                    Dt(t[e]).forEach((e) => {
                      r.hasOwnProperty(e) || s.add(e);
                    });
                  });
                }
              }),
              s.size)
            ) {
              const n = Ft(s.values());
              t.errors.push(
                `state("${
                  e.name
                }", ...) must define default values for all the following style substitutions: ${n.join(
                  ", "
                )}`
              );
            }
          }
          return {
            type: 0,
            name: e.name,
            style: n,
            options: i ? { params: i } : null,
          };
        }
        visitTransition(e, t) {
          (t.queryCount = 0), (t.depCount = 0);
          const n = Bt(this, Lt(e.animation), t);
          return {
            type: 1,
            matchers: Ut(e.expr, t.errors),
            animation: n,
            queryCount: t.queryCount,
            depCount: t.depCount,
            options: en(e.options),
          };
        }
        visitSequence(e, t) {
          return {
            type: 2,
            steps: e.steps.map((e) => Bt(this, e, t)),
            options: en(e.options),
          };
        }
        visitGroup(e, t) {
          const n = t.currentTime;
          let i = 0;
          const s = e.steps.map((e) => {
            t.currentTime = n;
            const s = Bt(this, e, t);
            return (i = Math.max(i, t.currentTime)), s;
          });
          return (
            (t.currentTime = i), { type: 3, steps: s, options: en(e.options) }
          );
        }
        visitAnimate(e, t) {
          const n = (function (e, t) {
            let n = null;
            if (e.hasOwnProperty("duration")) n = e;
            else if ("number" == typeof e) return tn(Tt(e, t).duration, 0, "");
            const i = e;
            if (
              i
                .split(/\s+/)
                .some((e) => "{" == e.charAt(0) && "{" == e.charAt(1))
            ) {
              const e = tn(0, 0, "");
              return (e.dynamic = !0), (e.strValue = i), e;
            }
            return (n = n || Tt(i, t)), tn(n.duration, n.delay, n.easing);
          })(e.timings, t.errors);
          let i;
          t.currentAnimateTimings = n;
          let s = e.styles ? e.styles : Object(it.k)({});
          if (5 == s.type) i = this.visitKeyframes(s, t);
          else {
            let s = e.styles,
              r = !1;
            if (!s) {
              r = !0;
              const e = {};
              n.easing && (e.easing = n.easing), (s = Object(it.k)(e));
            }
            t.currentTime += n.duration + n.delay;
            const o = this.visitStyle(s, t);
            (o.isEmptyStep = r), (i = o);
          }
          return (
            (t.currentAnimateTimings = null),
            { type: 4, timings: n, style: i, options: null }
          );
        }
        visitStyle(e, t) {
          const n = this._makeStyleAst(e, t);
          return this._validateStyleAst(n, t), n;
        }
        _makeStyleAst(e, t) {
          const n = [];
          Array.isArray(e.styles)
            ? e.styles.forEach((e) => {
                "string" == typeof e
                  ? e == it.a
                    ? n.push(e)
                    : t.errors.push(
                        `The provided style string value ${e} is not allowed.`
                      )
                  : n.push(e);
              })
            : n.push(e.styles);
          let i = !1,
            s = null;
          return (
            n.forEach((e) => {
              if (Jt(e)) {
                const t = e,
                  n = t.easing;
                if ((n && ((s = n), delete t.easing), !i))
                  for (let e in t)
                    if (t[e].toString().indexOf("{{") >= 0) {
                      i = !0;
                      break;
                    }
              }
            }),
            {
              type: 6,
              styles: n,
              easing: s,
              offset: e.offset,
              containsDynamicStyles: i,
              options: null,
            }
          );
        }
        _validateStyleAst(e, t) {
          const n = t.currentAnimateTimings;
          let i = t.currentTime,
            s = t.currentTime;
          n && s > 0 && (s -= n.duration + n.delay),
            e.styles.forEach((e) => {
              "string" != typeof e &&
                Object.keys(e).forEach((n) => {
                  if (!this._driver.validateStyleProperty(n))
                    return void t.errors.push(
                      `The provided animation property "${n}" is not a supported CSS property for animations`
                    );
                  const r = t.collectedStyles[t.currentQuerySelector],
                    o = r[n];
                  let a = !0;
                  o &&
                    (s != i &&
                      s >= o.startTime &&
                      i <= o.endTime &&
                      (t.errors.push(
                        `The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${s}ms" and "${i}ms"`
                      ),
                      (a = !1)),
                    (s = o.startTime)),
                    a && (r[n] = { startTime: s, endTime: i }),
                    t.options &&
                      (function (e, t, n) {
                        const i = t.params || {},
                          s = Dt(e);
                        s.length &&
                          s.forEach((e) => {
                            i.hasOwnProperty(e) ||
                              n.push(
                                `Unable to resolve the local animation param ${e} in the given list of values`
                              );
                          });
                      })(e[n], t.options, t.errors);
                });
            });
        }
        visitKeyframes(e, t) {
          const n = { type: 5, styles: [], options: null };
          if (!t.currentAnimateTimings)
            return (
              t.errors.push(
                "keyframes() must be placed inside of a call to animate()"
              ),
              n
            );
          let i = 0;
          const s = [];
          let r = !1,
            o = !1,
            a = 0;
          const l = e.steps.map((e) => {
            const n = this._makeStyleAst(e, t);
            let l =
                null != n.offset
                  ? n.offset
                  : (function (e) {
                      if ("string" == typeof e) return null;
                      let t = null;
                      if (Array.isArray(e))
                        e.forEach((e) => {
                          if (Jt(e) && e.hasOwnProperty("offset")) {
                            const n = e;
                            (t = parseFloat(n.offset)), delete n.offset;
                          }
                        });
                      else if (Jt(e) && e.hasOwnProperty("offset")) {
                        const n = e;
                        (t = parseFloat(n.offset)), delete n.offset;
                      }
                      return t;
                    })(n.styles),
              c = 0;
            return (
              null != l && (i++, (c = n.offset = l)),
              (o = o || c < 0 || c > 1),
              (r = r || c < a),
              (a = c),
              s.push(c),
              n
            );
          });
          o &&
            t.errors.push(
              "Please ensure that all keyframe offsets are between 0 and 1"
            ),
            r &&
              t.errors.push(
                "Please ensure that all keyframe offsets are in order"
              );
          const c = e.steps.length;
          let u = 0;
          i > 0 && i < c
            ? t.errors.push(
                "Not all style() steps within the declared keyframes() contain offsets"
              )
            : 0 == i && (u = 1 / (c - 1));
          const h = c - 1,
            d = t.currentTime,
            p = t.currentAnimateTimings,
            f = p.duration;
          return (
            l.forEach((e, i) => {
              const r = u > 0 ? (i == h ? 1 : u * i) : s[i],
                o = r * f;
              (t.currentTime = d + p.delay + o),
                (p.duration = o),
                this._validateStyleAst(e, t),
                (e.offset = r),
                n.styles.push(e);
            }),
            n
          );
        }
        visitReference(e, t) {
          return {
            type: 8,
            animation: Bt(this, Lt(e.animation), t),
            options: en(e.options),
          };
        }
        visitAnimateChild(e, t) {
          return t.depCount++, { type: 9, options: en(e.options) };
        }
        visitAnimateRef(e, t) {
          return {
            type: 10,
            animation: this.visitReference(e.animation, t),
            options: en(e.options),
          };
        }
        visitQuery(e, t) {
          const n = t.currentQuerySelector,
            i = e.options || {};
          t.queryCount++, (t.currentQuery = e);
          const [s, r] = (function (e) {
            const t = !!e.split(/\s*,\s*/).find((e) => ":self" == e);
            return (
              t && (e = e.replace(Kt, "")),
              [
                (e = e
                  .replace(/@\*/g, ".ng-trigger")
                  .replace(/@\w+/g, (e) => ".ng-trigger-" + e.substr(1))
                  .replace(/:animating/g, ".ng-animating")),
                t,
              ]
            );
          })(e.selector);
          (t.currentQuerySelector = n.length ? n + " " + s : s),
            ut(t.collectedStyles, t.currentQuerySelector, {});
          const o = Bt(this, Lt(e.animation), t);
          return (
            (t.currentQuery = null),
            (t.currentQuerySelector = n),
            {
              type: 11,
              selector: s,
              limit: i.limit || 0,
              optional: !!i.optional,
              includeSelf: r,
              animation: o,
              originalSelector: e.selector,
              options: en(e.options),
            }
          );
        }
        visitStagger(e, t) {
          t.currentQuery ||
            t.errors.push("stagger() can only be used inside of query()");
          const n =
            "full" === e.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : Tt(e.timings, t.errors, !0);
          return {
            type: 12,
            animation: Bt(this, Lt(e.animation), t),
            timings: n,
            options: null,
          };
        }
      }
      class Qt {
        constructor(e) {
          (this.errors = e),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function Jt(e) {
        return !Array.isArray(e) && "object" == typeof e;
      }
      function en(e) {
        var t;
        return (
          e
            ? (e = kt(e)).params && (e.params = (t = e.params) ? kt(t) : null)
            : (e = {}),
          e
        );
      }
      function tn(e, t, n) {
        return { duration: e, delay: t, easing: n };
      }
      function nn(e, t, n, i, s, r, o = null, a = !1) {
        return {
          type: 1,
          element: e,
          keyframes: t,
          preStyleProps: n,
          postStyleProps: i,
          duration: s,
          delay: r,
          totalTime: s + r,
          easing: o,
          subTimeline: a,
        };
      }
      class sn {
        constructor() {
          this._map = new Map();
        }
        consume(e) {
          let t = this._map.get(e);
          return t ? this._map.delete(e) : (t = []), t;
        }
        append(e, t) {
          let n = this._map.get(e);
          n || this._map.set(e, (n = [])), n.push(...t);
        }
        has(e) {
          return this._map.has(e);
        }
        clear() {
          this._map.clear();
        }
      }
      const rn = new RegExp(":enter", "g"),
        on = new RegExp(":leave", "g");
      function an(e, t, n, i, s, r = {}, o = {}, a, l, c = []) {
        return new ln().buildKeyframes(e, t, n, i, s, r, o, a, l, c);
      }
      class ln {
        buildKeyframes(e, t, n, i, s, r, o, a, l, c = []) {
          l = l || new sn();
          const u = new un(e, t, l, i, s, c, []);
          (u.options = a),
            u.currentTimeline.setStyles([r], null, u.errors, a),
            Bt(this, n, u);
          const h = u.timelines.filter((e) => e.containsAnimation());
          if (h.length && Object.keys(o).length) {
            const e = h[h.length - 1];
            e.allowOnlyTimelineStyles() || e.setStyles([o], null, u.errors, a);
          }
          return h.length
            ? h.map((e) => e.buildKeyframes())
            : [nn(t, [], [], [], 0, 0, "", !1)];
        }
        visitTrigger(e, t) {}
        visitState(e, t) {}
        visitTransition(e, t) {}
        visitAnimateChild(e, t) {
          const n = t.subInstructions.consume(t.element);
          if (n) {
            const i = t.createSubContext(e.options),
              s = t.currentTimeline.currentTime,
              r = this._visitSubInstructions(n, i, i.options);
            s != r && t.transformIntoNewTimeline(r);
          }
          t.previousNode = e;
        }
        visitAnimateRef(e, t) {
          const n = t.createSubContext(e.options);
          n.transformIntoNewTimeline(),
            this.visitReference(e.animation, n),
            t.transformIntoNewTimeline(n.currentTimeline.currentTime),
            (t.previousNode = e);
        }
        _visitSubInstructions(e, t, n) {
          let i = t.currentTimeline.currentTime;
          const s = null != n.duration ? Ot(n.duration) : null,
            r = null != n.delay ? Ot(n.delay) : null;
          return (
            0 !== s &&
              e.forEach((e) => {
                const n = t.appendInstructionToTimeline(e, s, r);
                i = Math.max(i, n.duration + n.delay);
              }),
            i
          );
        }
        visitReference(e, t) {
          t.updateOptions(e.options, !0),
            Bt(this, e.animation, t),
            (t.previousNode = e);
        }
        visitSequence(e, t) {
          const n = t.subContextCount;
          let i = t;
          const s = e.options;
          if (
            s &&
            (s.params || s.delay) &&
            ((i = t.createSubContext(s)),
            i.transformIntoNewTimeline(),
            null != s.delay)
          ) {
            6 == i.previousNode.type &&
              (i.currentTimeline.snapshotCurrentStyles(),
              (i.previousNode = cn));
            const e = Ot(s.delay);
            i.delayNextStep(e);
          }
          e.steps.length &&
            (e.steps.forEach((e) => Bt(this, e, i)),
            i.currentTimeline.applyStylesToKeyframe(),
            i.subContextCount > n && i.transformIntoNewTimeline()),
            (t.previousNode = e);
        }
        visitGroup(e, t) {
          const n = [];
          let i = t.currentTimeline.currentTime;
          const s = e.options && e.options.delay ? Ot(e.options.delay) : 0;
          e.steps.forEach((r) => {
            const o = t.createSubContext(e.options);
            s && o.delayNextStep(s),
              Bt(this, r, o),
              (i = Math.max(i, o.currentTimeline.currentTime)),
              n.push(o.currentTimeline);
          }),
            n.forEach((e) => t.currentTimeline.mergeTimelineCollectedStyles(e)),
            t.transformIntoNewTimeline(i),
            (t.previousNode = e);
        }
        _visitTiming(e, t) {
          if (e.dynamic) {
            const n = e.strValue;
            return Tt(t.params ? jt(n, t.params, t.errors) : n, t.errors);
          }
          return { duration: e.duration, delay: e.delay, easing: e.easing };
        }
        visitAnimate(e, t) {
          const n = (t.currentAnimateTimings = this._visitTiming(e.timings, t)),
            i = t.currentTimeline;
          n.delay && (t.incrementTime(n.delay), i.snapshotCurrentStyles());
          const s = e.style;
          5 == s.type
            ? this.visitKeyframes(s, t)
            : (t.incrementTime(n.duration),
              this.visitStyle(s, t),
              i.applyStylesToKeyframe()),
            (t.currentAnimateTimings = null),
            (t.previousNode = e);
        }
        visitStyle(e, t) {
          const n = t.currentTimeline,
            i = t.currentAnimateTimings;
          !i && n.getCurrentStyleProperties().length && n.forwardFrame();
          const s = (i && i.easing) || e.easing;
          e.isEmptyStep
            ? n.applyEmptyStep(s)
            : n.setStyles(e.styles, s, t.errors, t.options),
            (t.previousNode = e);
        }
        visitKeyframes(e, t) {
          const n = t.currentAnimateTimings,
            i = t.currentTimeline.duration,
            s = n.duration,
            r = t.createSubContext().currentTimeline;
          (r.easing = n.easing),
            e.styles.forEach((e) => {
              r.forwardTime((e.offset || 0) * s),
                r.setStyles(e.styles, e.easing, t.errors, t.options),
                r.applyStylesToKeyframe();
            }),
            t.currentTimeline.mergeTimelineCollectedStyles(r),
            t.transformIntoNewTimeline(i + s),
            (t.previousNode = e);
        }
        visitQuery(e, t) {
          const n = t.currentTimeline.currentTime,
            i = e.options || {},
            s = i.delay ? Ot(i.delay) : 0;
          s &&
            (6 === t.previousNode.type ||
              (0 == n &&
                t.currentTimeline.getCurrentStyleProperties().length)) &&
            (t.currentTimeline.snapshotCurrentStyles(), (t.previousNode = cn));
          let r = n;
          const o = t.invokeQuery(
            e.selector,
            e.originalSelector,
            e.limit,
            e.includeSelf,
            !!i.optional,
            t.errors
          );
          t.currentQueryTotal = o.length;
          let a = null;
          o.forEach((n, i) => {
            t.currentQueryIndex = i;
            const o = t.createSubContext(e.options, n);
            s && o.delayNextStep(s),
              n === t.element && (a = o.currentTimeline),
              Bt(this, e.animation, o),
              o.currentTimeline.applyStylesToKeyframe(),
              (r = Math.max(r, o.currentTimeline.currentTime));
          }),
            (t.currentQueryIndex = 0),
            (t.currentQueryTotal = 0),
            t.transformIntoNewTimeline(r),
            a &&
              (t.currentTimeline.mergeTimelineCollectedStyles(a),
              t.currentTimeline.snapshotCurrentStyles()),
            (t.previousNode = e);
        }
        visitStagger(e, t) {
          const n = t.parentContext,
            i = t.currentTimeline,
            s = e.timings,
            r = Math.abs(s.duration),
            o = r * (t.currentQueryTotal - 1);
          let a = r * t.currentQueryIndex;
          switch (s.duration < 0 ? "reverse" : s.easing) {
            case "reverse":
              a = o - a;
              break;
            case "full":
              a = n.currentStaggerTime;
          }
          const l = t.currentTimeline;
          a && l.delayNextStep(a);
          const c = l.currentTime;
          Bt(this, e.animation, t),
            (t.previousNode = e),
            (n.currentStaggerTime =
              i.currentTime - c + (i.startTime - n.currentTimeline.startTime));
        }
      }
      const cn = {};
      class un {
        constructor(e, t, n, i, s, r, o, a) {
          (this._driver = e),
            (this.element = t),
            (this.subInstructions = n),
            (this._enterClassName = i),
            (this._leaveClassName = s),
            (this.errors = r),
            (this.timelines = o),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = cn),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = a || new hn(this._driver, t, 0)),
            o.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(e, t) {
          if (!e) return;
          const n = e;
          let i = this.options;
          null != n.duration && (i.duration = Ot(n.duration)),
            null != n.delay && (i.delay = Ot(n.delay));
          const s = n.params;
          if (s) {
            let e = i.params;
            e || (e = this.options.params = {}),
              Object.keys(s).forEach((n) => {
                (t && e.hasOwnProperty(n)) || (e[n] = jt(s[n], e, this.errors));
              });
          }
        }
        _copyOptions() {
          const e = {};
          if (this.options) {
            const t = this.options.params;
            if (t) {
              const n = (e.params = {});
              Object.keys(t).forEach((e) => {
                n[e] = t[e];
              });
            }
          }
          return e;
        }
        createSubContext(e = null, t, n) {
          const i = t || this.element,
            s = new un(
              this._driver,
              i,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(i, n || 0)
            );
          return (
            (s.previousNode = this.previousNode),
            (s.currentAnimateTimings = this.currentAnimateTimings),
            (s.options = this._copyOptions()),
            s.updateOptions(e),
            (s.currentQueryIndex = this.currentQueryIndex),
            (s.currentQueryTotal = this.currentQueryTotal),
            (s.parentContext = this),
            this.subContextCount++,
            s
          );
        }
        transformIntoNewTimeline(e) {
          return (
            (this.previousNode = cn),
            (this.currentTimeline = this.currentTimeline.fork(this.element, e)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(e, t, n) {
          const i = {
              duration: null != t ? t : e.duration,
              delay:
                this.currentTimeline.currentTime +
                (null != n ? n : 0) +
                e.delay,
              easing: "",
            },
            s = new dn(
              this._driver,
              e.element,
              e.keyframes,
              e.preStyleProps,
              e.postStyleProps,
              i,
              e.stretchStartingKeyframe
            );
          return this.timelines.push(s), i;
        }
        incrementTime(e) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + e);
        }
        delayNextStep(e) {
          e > 0 && this.currentTimeline.delayNextStep(e);
        }
        invokeQuery(e, t, n, i, s, r) {
          let o = [];
          if ((i && o.push(this.element), e.length > 0)) {
            e = (e = e.replace(rn, "." + this._enterClassName)).replace(
              on,
              "." + this._leaveClassName
            );
            let t = this._driver.query(this.element, e, 1 != n);
            0 !== n &&
              (t = n < 0 ? t.slice(t.length + n, t.length) : t.slice(0, n)),
              o.push(...t);
          }
          return (
            s ||
              0 != o.length ||
              r.push(
                `\`query("${t}")\` returned zero elements. (Use \`query("${t}", { optional: true })\` if you wish to allow this.)`
              ),
            o
          );
        }
      }
      class hn {
        constructor(e, t, n, i) {
          (this._driver = e),
            (this.element = t),
            (this.startTime = n),
            (this._elementTimelineStylesLookup = i),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(t)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                t,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(e) {
          const t =
            1 == this._keyframes.size &&
            Object.keys(this._pendingStyles).length;
          this.duration || t
            ? (this.forwardTime(this.currentTime + e),
              t && this.snapshotCurrentStyles())
            : (this.startTime += e);
        }
        fork(e, t) {
          return (
            this.applyStylesToKeyframe(),
            new hn(
              this._driver,
              e,
              t || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(e) {
          this.applyStylesToKeyframe(),
            (this.duration = e),
            this._loadKeyframe();
        }
        _updateStyle(e, t) {
          (this._localTimelineStyles[e] = t),
            (this._globalTimelineStyles[e] = t),
            (this._styleSummary[e] = { time: this.currentTime, value: t });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(e) {
          e && (this._previousKeyframe.easing = e),
            Object.keys(this._globalTimelineStyles).forEach((e) => {
              (this._backFill[e] = this._globalTimelineStyles[e] || it.a),
                (this._currentKeyframe[e] = it.a);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(e, t, n, i) {
          t && (this._previousKeyframe.easing = t);
          const s = (i && i.params) || {},
            r = (function (e, t) {
              const n = {};
              let i;
              return (
                e.forEach((e) => {
                  "*" === e
                    ? ((i = i || Object.keys(t)),
                      i.forEach((e) => {
                        n[e] = it.a;
                      }))
                    : Mt(e, !1, n);
                }),
                n
              );
            })(e, this._globalTimelineStyles);
          Object.keys(r).forEach((e) => {
            const t = jt(r[e], s, n);
            (this._pendingStyles[e] = t),
              this._localTimelineStyles.hasOwnProperty(e) ||
                (this._backFill[e] = this._globalTimelineStyles.hasOwnProperty(
                  e
                )
                  ? this._globalTimelineStyles[e]
                  : it.a),
              this._updateStyle(e, t);
          });
        }
        applyStylesToKeyframe() {
          const e = this._pendingStyles,
            t = Object.keys(e);
          0 != t.length &&
            ((this._pendingStyles = {}),
            t.forEach((t) => {
              this._currentKeyframe[t] = e[t];
            }),
            Object.keys(this._localTimelineStyles).forEach((e) => {
              this._currentKeyframe.hasOwnProperty(e) ||
                (this._currentKeyframe[e] = this._localTimelineStyles[e]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((e) => {
            const t = this._localTimelineStyles[e];
            (this._pendingStyles[e] = t), this._updateStyle(e, t);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const e = [];
          for (let t in this._currentKeyframe) e.push(t);
          return e;
        }
        mergeTimelineCollectedStyles(e) {
          Object.keys(e._styleSummary).forEach((t) => {
            const n = this._styleSummary[t],
              i = e._styleSummary[t];
            (!n || i.time > n.time) && this._updateStyle(t, i.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const e = new Set(),
            t = new Set(),
            n = 1 === this._keyframes.size && 0 === this.duration;
          let i = [];
          this._keyframes.forEach((s, r) => {
            const o = Mt(s, !0);
            Object.keys(o).forEach((n) => {
              const i = o[n];
              i == it.p ? e.add(n) : i == it.a && t.add(n);
            }),
              n || (o.offset = r / this.duration),
              i.push(o);
          });
          const s = e.size ? Ft(e.values()) : [],
            r = t.size ? Ft(t.values()) : [];
          if (n) {
            const e = i[0],
              t = kt(e);
            (e.offset = 0), (t.offset = 1), (i = [e, t]);
          }
          return nn(
            this.element,
            i,
            s,
            r,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class dn extends hn {
        constructor(e, t, n, i, s, r, o = !1) {
          super(e, t, r.delay),
            (this.element = t),
            (this.keyframes = n),
            (this.preStyleProps = i),
            (this.postStyleProps = s),
            (this._stretchStartingKeyframe = o),
            (this.timings = {
              duration: r.duration,
              delay: r.delay,
              easing: r.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let e = this.keyframes,
            { delay: t, duration: n, easing: i } = this.timings;
          if (this._stretchStartingKeyframe && t) {
            const s = [],
              r = n + t,
              o = t / r,
              a = Mt(e[0], !1);
            (a.offset = 0), s.push(a);
            const l = Mt(e[0], !1);
            (l.offset = pn(o)), s.push(l);
            const c = e.length - 1;
            for (let i = 1; i <= c; i++) {
              let o = Mt(e[i], !1);
              (o.offset = pn((t + o.offset * n) / r)), s.push(o);
            }
            (n = r), (t = 0), (i = ""), (e = s);
          }
          return nn(
            this.element,
            e,
            this.preStyleProps,
            this.postStyleProps,
            n,
            t,
            i,
            !0
          );
        }
      }
      function pn(e, t = 3) {
        const n = Math.pow(10, t - 1);
        return Math.round(e * n) / n;
      }
      class fn {}
      class gn extends fn {
        normalizePropertyName(e, t) {
          return Wt(e);
        }
        normalizeStyleValue(e, t, n, i) {
          let s = "";
          const r = n.toString().trim();
          if (mn[t] && 0 !== n && "0" !== n)
            if ("number" == typeof n) s = "px";
            else {
              const t = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              t &&
                0 == t[1].length &&
                i.push(`Please provide a CSS unit value for ${e}:${n}`);
            }
          return r + s;
        }
      }
      const mn = (() =>
        (function (e) {
          const t = {};
          return e.forEach((e) => (t[e] = !0)), t;
        })(
          "width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(
            ","
          )
        ))();
      function bn(e, t, n, i, s, r, o, a, l, c, u, h, d) {
        return {
          type: 0,
          element: e,
          triggerName: t,
          isRemovalTransition: s,
          fromState: n,
          fromStyles: r,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: u,
          totalTime: h,
          errors: d,
        };
      }
      const vn = {};
      class yn {
        constructor(e, t, n) {
          (this._triggerName = e), (this.ast = t), (this._stateStyles = n);
        }
        match(e, t, n, i) {
          return (function (e, t, n, i, s) {
            return e.some((e) => e(t, n, i, s));
          })(this.ast.matchers, e, t, n, i);
        }
        buildStyles(e, t, n) {
          const i = this._stateStyles["*"],
            s = this._stateStyles[e],
            r = i ? i.buildStyles(t, n) : {};
          return s ? s.buildStyles(t, n) : r;
        }
        build(e, t, n, i, s, r, o, a, l, c) {
          const u = [],
            h = (this.ast.options && this.ast.options.params) || vn,
            d = this.buildStyles(n, (o && o.params) || vn, u),
            p = (a && a.params) || vn,
            f = this.buildStyles(i, p, u),
            g = new Set(),
            m = new Map(),
            b = new Map(),
            v = "void" === i,
            y = { params: Object.assign(Object.assign({}, h), p) },
            w = c ? [] : an(e, t, this.ast.animation, s, r, d, f, y, l, u);
          let S = 0;
          if (
            (w.forEach((e) => {
              S = Math.max(e.duration + e.delay, S);
            }),
            u.length)
          )
            return bn(t, this._triggerName, n, i, v, d, f, [], [], m, b, S, u);
          w.forEach((e) => {
            const n = e.element,
              i = ut(m, n, {});
            e.preStyleProps.forEach((e) => (i[e] = !0));
            const s = ut(b, n, {});
            e.postStyleProps.forEach((e) => (s[e] = !0)), n !== t && g.add(n);
          });
          const _ = Ft(g.values());
          return bn(t, this._triggerName, n, i, v, d, f, w, _, m, b, S);
        }
      }
      class wn {
        constructor(e, t) {
          (this.styles = e), (this.defaultParams = t);
        }
        buildStyles(e, t) {
          const n = {},
            i = kt(this.defaultParams);
          return (
            Object.keys(e).forEach((t) => {
              const n = e[t];
              null != n && (i[t] = n);
            }),
            this.styles.styles.forEach((e) => {
              if ("string" != typeof e) {
                const s = e;
                Object.keys(s).forEach((e) => {
                  let r = s[e];
                  r.length > 1 && (r = jt(r, i, t)), (n[e] = r);
                });
              }
            }),
            n
          );
        }
      }
      class Sn {
        constructor(e, t) {
          (this.name = e),
            (this.ast = t),
            (this.transitionFactories = []),
            (this.states = {}),
            t.states.forEach((e) => {
              this.states[e.name] = new wn(
                e.style,
                (e.options && e.options.params) || {}
              );
            }),
            _n(this.states, "true", "1"),
            _n(this.states, "false", "0"),
            t.transitions.forEach((t) => {
              this.transitionFactories.push(new yn(e, t, this.states));
            }),
            (this.fallbackTransition = new yn(
              e,
              {
                type: 1,
                animation: { type: 2, steps: [], options: null },
                matchers: [(e, t) => !0],
                options: null,
                queryCount: 0,
                depCount: 0,
              },
              this.states
            ));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(e, t, n, i) {
          return (
            this.transitionFactories.find((s) => s.match(e, t, n, i)) || null
          );
        }
        matchStyles(e, t, n) {
          return this.fallbackTransition.buildStyles(e, t, n);
        }
      }
      function _n(e, t, n) {
        e.hasOwnProperty(t)
          ? e.hasOwnProperty(n) || (e[n] = e[t])
          : e.hasOwnProperty(n) && (e[t] = e[n]);
      }
      const Cn = new sn();
      class En {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._normalizer = n),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(e, t) {
          const n = [],
            i = Yt(this._driver, t, n);
          if (n.length)
            throw new Error(
              "Unable to build the animation due to the following errors: " +
                n.join("\n")
            );
          this._animations[e] = i;
        }
        _buildPlayer(e, t, n) {
          const i = e.element,
            s = ot(0, this._normalizer, 0, e.keyframes, t, n);
          return this._driver.animate(
            i,
            s,
            e.duration,
            e.delay,
            e.easing,
            [],
            !0
          );
        }
        create(e, t, n = {}) {
          const i = [],
            s = this._animations[e];
          let r;
          const o = new Map();
          if (
            (s
              ? ((r = an(
                  this._driver,
                  t,
                  s,
                  "ng-enter",
                  "ng-leave",
                  {},
                  {},
                  n,
                  Cn,
                  i
                )),
                r.forEach((e) => {
                  const t = ut(o, e.element, {});
                  e.postStyleProps.forEach((e) => (t[e] = null));
                }))
              : (i.push(
                  "The requested animation doesn't exist or has already been destroyed"
                ),
                (r = [])),
            i.length)
          )
            throw new Error(
              "Unable to create the animation due to the following errors: " +
                i.join("\n")
            );
          o.forEach((e, t) => {
            Object.keys(e).forEach((n) => {
              e[n] = this._driver.computeStyle(t, n, it.a);
            });
          });
          const a = rt(
            r.map((e) => {
              const t = o.get(e.element);
              return this._buildPlayer(e, {}, t);
            })
          );
          return (
            (this._playersById[e] = a),
            a.onDestroy(() => this.destroy(e)),
            this.players.push(a),
            a
          );
        }
        destroy(e) {
          const t = this._getPlayer(e);
          t.destroy(), delete this._playersById[e];
          const n = this.players.indexOf(t);
          n >= 0 && this.players.splice(n, 1);
        }
        _getPlayer(e) {
          const t = this._playersById[e];
          if (!t)
            throw new Error(
              "Unable to find the timeline player referenced by " + e
            );
          return t;
        }
        listen(e, t, n, i) {
          const s = ct(t, "", "", "");
          return at(this._getPlayer(e), n, s, i), () => {};
        }
        command(e, t, n, i) {
          if ("register" == n) return void this.register(e, i[0]);
          if ("create" == n) return void this.create(e, t, i[0] || {});
          const s = this._getPlayer(e);
          switch (n) {
            case "play":
              s.play();
              break;
            case "pause":
              s.pause();
              break;
            case "reset":
              s.reset();
              break;
            case "restart":
              s.restart();
              break;
            case "finish":
              s.finish();
              break;
            case "init":
              s.init();
              break;
            case "setPosition":
              s.setPosition(parseFloat(i[0]));
              break;
            case "destroy":
              this.destroy(e);
          }
        }
      }
      const On = [],
        xn = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        Tn = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        };
      class kn {
        constructor(e, t = "") {
          this.namespaceId = t;
          const n = e && e.hasOwnProperty("value");
          if (((this.value = null != (i = n ? e.value : e) ? i : null), n)) {
            const t = kt(e);
            delete t.value, (this.options = t);
          } else this.options = {};
          var i;
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(e) {
          const t = e.params;
          if (t) {
            const e = this.options.params;
            Object.keys(t).forEach((n) => {
              null == e[n] && (e[n] = t[n]);
            });
          }
        }
      }
      const Mn = new kn("void");
      class In {
        constructor(e, t, n) {
          (this.id = e),
            (this.hostElement = t),
            (this._engine = n),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + e),
            jn(t, this._hostClassName);
        }
        listen(e, t, n, i) {
          if (!this._triggers.hasOwnProperty(t))
            throw new Error(
              `Unable to listen on the animation trigger event "${n}" because the animation trigger "${t}" doesn't exist!`
            );
          if (null == n || 0 == n.length)
            throw new Error(
              `Unable to listen on the animation trigger "${t}" because the provided event is undefined!`
            );
          if ("start" != (s = n) && "done" != s)
            throw new Error(
              `The provided animation trigger event "${n}" for the animation trigger "${t}" is not supported!`
            );
          var s;
          const r = ut(this._elementListeners, e, []),
            o = { name: t, phase: n, callback: i };
          r.push(o);
          const a = ut(this._engine.statesByElement, e, {});
          return (
            a.hasOwnProperty(t) ||
              (jn(e, "ng-trigger"), jn(e, "ng-trigger-" + t), (a[t] = Mn)),
            () => {
              this._engine.afterFlush(() => {
                const e = r.indexOf(o);
                e >= 0 && r.splice(e, 1), this._triggers[t] || delete a[t];
              });
            }
          );
        }
        register(e, t) {
          return !this._triggers[e] && ((this._triggers[e] = t), !0);
        }
        _getTrigger(e) {
          const t = this._triggers[e];
          if (!t)
            throw new Error(
              `The provided animation trigger "${e}" has not been registered!`
            );
          return t;
        }
        trigger(e, t, n, i = !0) {
          const s = this._getTrigger(t),
            r = new Rn(this.id, t, e);
          let o = this._engine.statesByElement.get(e);
          o ||
            (jn(e, "ng-trigger"),
            jn(e, "ng-trigger-" + t),
            this._engine.statesByElement.set(e, (o = {})));
          let a = o[t];
          const l = new kn(n, this.id);
          if (
            (!(n && n.hasOwnProperty("value")) &&
              a &&
              l.absorbOptions(a.options),
            (o[t] = l),
            a || (a = Mn),
            "void" !== l.value && a.value === l.value)
          ) {
            if (
              !(function (e, t) {
                const n = Object.keys(e),
                  i = Object.keys(t);
                if (n.length != i.length) return !1;
                for (let s = 0; s < n.length; s++) {
                  const i = n[s];
                  if (!t.hasOwnProperty(i) || e[i] !== t[i]) return !1;
                }
                return !0;
              })(a.params, l.params)
            ) {
              const t = [],
                n = s.matchStyles(a.value, a.params, t),
                i = s.matchStyles(l.value, l.params, t);
              t.length
                ? this._engine.reportError(t)
                : this._engine.afterFlush(() => {
                    Nt(e, n), Rt(e, i);
                  });
            }
            return;
          }
          const c = ut(this._engine.playersByElement, e, []);
          c.forEach((e) => {
            e.namespaceId == this.id &&
              e.triggerName == t &&
              e.queued &&
              e.destroy();
          });
          let u = s.matchTransition(a.value, l.value, e, l.params),
            h = !1;
          if (!u) {
            if (!i) return;
            (u = s.fallbackTransition), (h = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: e,
              triggerName: t,
              transition: u,
              fromState: a,
              toState: l,
              player: r,
              isFallbackTransition: h,
            }),
            h ||
              (jn(e, "ng-animate-queued"),
              r.onStart(() => {
                Fn(e, "ng-animate-queued");
              })),
            r.onDone(() => {
              let t = this.players.indexOf(r);
              t >= 0 && this.players.splice(t, 1);
              const n = this._engine.playersByElement.get(e);
              if (n) {
                let e = n.indexOf(r);
                e >= 0 && n.splice(e, 1);
              }
            }),
            this.players.push(r),
            c.push(r),
            r
          );
        }
        deregister(e) {
          delete this._triggers[e],
            this._engine.statesByElement.forEach((t, n) => {
              delete t[e];
            }),
            this._elementListeners.forEach((t, n) => {
              this._elementListeners.set(
                n,
                t.filter((t) => t.name != e)
              );
            });
        }
        clearElementCache(e) {
          this._engine.statesByElement.delete(e),
            this._elementListeners.delete(e);
          const t = this._engine.playersByElement.get(e);
          t &&
            (t.forEach((e) => e.destroy()),
            this._engine.playersByElement.delete(e));
        }
        _signalRemovalForInnerTriggers(e, t) {
          const n = this._engine.driver.query(e, ".ng-trigger", !0);
          n.forEach((e) => {
            if (e.__ng_removed) return;
            const n = this._engine.fetchNamespacesByElement(e);
            n.size
              ? n.forEach((n) => n.triggerLeaveAnimation(e, t, !1, !0))
              : this.clearElementCache(e);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              n.forEach((e) => this.clearElementCache(e))
            );
        }
        triggerLeaveAnimation(e, t, n, i) {
          const s = this._engine.statesByElement.get(e);
          if (s) {
            const r = [];
            if (
              (Object.keys(s).forEach((t) => {
                if (this._triggers[t]) {
                  const n = this.trigger(e, t, "void", i);
                  n && r.push(n);
                }
              }),
              r.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, e, !0, t),
                n && rt(r).onDone(() => this._engine.processLeaveNode(e)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(e) {
          const t = this._elementListeners.get(e);
          if (t) {
            const n = new Set();
            t.forEach((t) => {
              const i = t.name;
              if (n.has(i)) return;
              n.add(i);
              const s = this._triggers[i].fallbackTransition,
                r = this._engine.statesByElement.get(e)[i] || Mn,
                o = new kn("void"),
                a = new Rn(this.id, i, e);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: e,
                  triggerName: i,
                  transition: s,
                  fromState: r,
                  toState: o,
                  player: a,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(e, t) {
          const n = this._engine;
          if (
            (e.childElementCount && this._signalRemovalForInnerTriggers(e, t),
            this.triggerLeaveAnimation(e, t, !0))
          )
            return;
          let i = !1;
          if (n.totalAnimations) {
            const t = n.players.length ? n.playersByQueriedElement.get(e) : [];
            if (t && t.length) i = !0;
            else {
              let t = e;
              for (; (t = t.parentNode); )
                if (n.statesByElement.get(t)) {
                  i = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(e), i))
            n.markElementAsRemoved(this.id, e, !1, t);
          else {
            const i = e.__ng_removed;
            (i && i !== xn) ||
              (n.afterFlush(() => this.clearElementCache(e)),
              n.destroyInnerAnimations(e),
              n._onRemovalComplete(e, t));
          }
        }
        insertNode(e, t) {
          jn(e, this._hostClassName);
        }
        drainQueuedTransitions(e) {
          const t = [];
          return (
            this._queue.forEach((n) => {
              const i = n.player;
              if (i.destroyed) return;
              const s = n.element,
                r = this._elementListeners.get(s);
              r &&
                r.forEach((t) => {
                  if (t.name == n.triggerName) {
                    const i = ct(
                      s,
                      n.triggerName,
                      n.fromState.value,
                      n.toState.value
                    );
                    (i._data = e), at(n.player, t.phase, i, t.callback);
                  }
                }),
                i.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      i.destroy();
                    })
                  : t.push(n);
            }),
            (this._queue = []),
            t.sort((e, t) => {
              const n = e.transition.ast.depCount,
                i = t.transition.ast.depCount;
              return 0 == n || 0 == i
                ? n - i
                : this._engine.driver.containsElement(e.element, t.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(e) {
          this.players.forEach((e) => e.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, e);
        }
        elementContainsData(e) {
          let t = !1;
          return (
            this._elementListeners.has(e) && (t = !0),
            (t = !!this._queue.find((t) => t.element === e) || t),
            t
          );
        }
      }
      class Pn {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this.driver = t),
            (this._normalizer = n),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (e, t) => {});
        }
        _onRemovalComplete(e, t) {
          this.onRemovalComplete(e, t);
        }
        get queuedPlayers() {
          const e = [];
          return (
            this._namespaceList.forEach((t) => {
              t.players.forEach((t) => {
                t.queued && e.push(t);
              });
            }),
            e
          );
        }
        createNamespace(e, t) {
          const n = new In(e, t, this);
          return (
            t.parentNode
              ? this._balanceNamespaceList(n, t)
              : (this.newHostElements.set(t, n), this.collectEnterElement(t)),
            (this._namespaceLookup[e] = n)
          );
        }
        _balanceNamespaceList(e, t) {
          const n = this._namespaceList.length - 1;
          if (n >= 0) {
            let i = !1;
            for (let s = n; s >= 0; s--)
              if (
                this.driver.containsElement(
                  this._namespaceList[s].hostElement,
                  t
                )
              ) {
                this._namespaceList.splice(s + 1, 0, e), (i = !0);
                break;
              }
            i || this._namespaceList.splice(0, 0, e);
          } else this._namespaceList.push(e);
          return this.namespacesByHostElement.set(t, e), e;
        }
        register(e, t) {
          let n = this._namespaceLookup[e];
          return n || (n = this.createNamespace(e, t)), n;
        }
        registerTrigger(e, t, n) {
          let i = this._namespaceLookup[e];
          i && i.register(t, n) && this.totalAnimations++;
        }
        destroy(e, t) {
          if (!e) return;
          const n = this._fetchNamespace(e);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(n.hostElement),
              delete this._namespaceLookup[e];
            const t = this._namespaceList.indexOf(n);
            t >= 0 && this._namespaceList.splice(t, 1);
          }),
            this.afterFlushAnimationsDone(() => n.destroy(t));
        }
        _fetchNamespace(e) {
          return this._namespaceLookup[e];
        }
        fetchNamespacesByElement(e) {
          const t = new Set(),
            n = this.statesByElement.get(e);
          if (n) {
            const e = Object.keys(n);
            for (let i = 0; i < e.length; i++) {
              const s = n[e[i]].namespaceId;
              if (s) {
                const e = this._fetchNamespace(s);
                e && t.add(e);
              }
            }
          }
          return t;
        }
        trigger(e, t, n, i) {
          if (Nn(t)) {
            const s = this._fetchNamespace(e);
            if (s) return s.trigger(t, n, i), !0;
          }
          return !1;
        }
        insertNode(e, t, n, i) {
          if (!Nn(t)) return;
          const s = t.__ng_removed;
          if (s && s.setForRemoval) {
            (s.setForRemoval = !1), (s.setForMove = !0);
            const e = this.collectedLeaveElements.indexOf(t);
            e >= 0 && this.collectedLeaveElements.splice(e, 1);
          }
          if (e) {
            const i = this._fetchNamespace(e);
            i && i.insertNode(t, n);
          }
          i && this.collectEnterElement(t);
        }
        collectEnterElement(e) {
          this.collectedEnterElements.push(e);
        }
        markElementAsDisabled(e, t) {
          t
            ? this.disabledNodes.has(e) ||
              (this.disabledNodes.add(e), jn(e, "ng-animate-disabled"))
            : this.disabledNodes.has(e) &&
              (this.disabledNodes.delete(e), Fn(e, "ng-animate-disabled"));
        }
        removeNode(e, t, n, i) {
          if (Nn(t)) {
            const s = e ? this._fetchNamespace(e) : null;
            if (
              (s ? s.removeNode(t, i) : this.markElementAsRemoved(e, t, !1, i),
              n)
            ) {
              const n = this.namespacesByHostElement.get(t);
              n && n.id !== e && n.removeNode(t, i);
            }
          } else this._onRemovalComplete(t, i);
        }
        markElementAsRemoved(e, t, n, i) {
          this.collectedLeaveElements.push(t),
            (t.__ng_removed = {
              namespaceId: e,
              setForRemoval: i,
              hasAnimation: n,
              removedBeforeQueried: !1,
            });
        }
        listen(e, t, n, i, s) {
          return Nn(t) ? this._fetchNamespace(e).listen(t, n, i, s) : () => {};
        }
        _buildInstruction(e, t, n, i, s) {
          return e.transition.build(
            this.driver,
            e.element,
            e.fromState.value,
            e.toState.value,
            n,
            i,
            e.fromState.options,
            e.toState.options,
            t,
            s
          );
        }
        destroyInnerAnimations(e) {
          let t = this.driver.query(e, ".ng-trigger", !0);
          t.forEach((e) => this.destroyActiveAnimationsForElement(e)),
            0 != this.playersByQueriedElement.size &&
              ((t = this.driver.query(e, ".ng-animating", !0)),
              t.forEach((e) => this.finishActiveQueriedAnimationOnElement(e)));
        }
        destroyActiveAnimationsForElement(e) {
          const t = this.playersByElement.get(e);
          t &&
            t.forEach((e) => {
              e.queued ? (e.markedForDestroy = !0) : e.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(e) {
          const t = this.playersByQueriedElement.get(e);
          t && t.forEach((e) => e.finish());
        }
        whenRenderingDone() {
          return new Promise((e) => {
            if (this.players.length) return rt(this.players).onDone(() => e());
            e();
          });
        }
        processLeaveNode(e) {
          const t = e.__ng_removed;
          if (t && t.setForRemoval) {
            if (((e.__ng_removed = xn), t.namespaceId)) {
              this.destroyInnerAnimations(e);
              const n = this._fetchNamespace(t.namespaceId);
              n && n.clearElementCache(e);
            }
            this._onRemovalComplete(e, t.setForRemoval);
          }
          this.driver.matchesElement(e, ".ng-animate-disabled") &&
            this.markElementAsDisabled(e, !1),
            this.driver.query(e, ".ng-animate-disabled", !0).forEach((e) => {
              this.markElementAsDisabled(e, !1);
            });
        }
        flush(e = -1) {
          let t = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((e, t) =>
                this._balanceNamespaceList(e, t)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let n = 0; n < this.collectedEnterElements.length; n++)
              jn(this.collectedEnterElements[n], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const n = [];
            try {
              t = this._flushAnimations(n, e);
            } finally {
              for (let e = 0; e < n.length; e++) n[e]();
            }
          } else
            for (let n = 0; n < this.collectedLeaveElements.length; n++)
              this.processLeaveNode(this.collectedLeaveElements[n]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((e) => e()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const e = this._whenQuietFns;
            (this._whenQuietFns = []),
              t.length
                ? rt(t).onDone(() => {
                    e.forEach((e) => e());
                  })
                : e.forEach((e) => e());
          }
        }
        reportError(e) {
          throw new Error(
            "Unable to process animations due to the following failed trigger transitions\n " +
              e.join("\n")
          );
        }
        _flushAnimations(e, t) {
          const n = new sn(),
            i = [],
            s = new Map(),
            r = [],
            o = new Map(),
            a = new Map(),
            l = new Map(),
            c = new Set();
          this.disabledNodes.forEach((e) => {
            c.add(e);
            const t = this.driver.query(e, ".ng-animate-queued", !0);
            for (let n = 0; n < t.length; n++) c.add(t[n]);
          });
          const u = this.bodyNode,
            h = Array.from(this.statesByElement.keys()),
            d = Dn(h, this.collectedEnterElements),
            p = new Map();
          let f = 0;
          d.forEach((e, t) => {
            const n = "ng-enter" + f++;
            p.set(t, n), e.forEach((e) => jn(e, n));
          });
          const g = [],
            m = new Set(),
            b = new Set();
          for (let I = 0; I < this.collectedLeaveElements.length; I++) {
            const e = this.collectedLeaveElements[I],
              t = e.__ng_removed;
            t &&
              t.setForRemoval &&
              (g.push(e),
              m.add(e),
              t.hasAnimation
                ? this.driver
                    .query(e, ".ng-star-inserted", !0)
                    .forEach((e) => m.add(e))
                : b.add(e));
          }
          const v = new Map(),
            y = Dn(h, Array.from(m));
          y.forEach((e, t) => {
            const n = "ng-leave" + f++;
            v.set(t, n), e.forEach((e) => jn(e, n));
          }),
            e.push(() => {
              d.forEach((e, t) => {
                const n = p.get(t);
                e.forEach((e) => Fn(e, n));
              }),
                y.forEach((e, t) => {
                  const n = v.get(t);
                  e.forEach((e) => Fn(e, n));
                }),
                g.forEach((e) => {
                  this.processLeaveNode(e);
                });
            });
          const w = [],
            S = [];
          for (let I = this._namespaceList.length - 1; I >= 0; I--)
            this._namespaceList[I].drainQueuedTransitions(t).forEach((e) => {
              const t = e.player,
                s = e.element;
              if ((w.push(t), this.collectedEnterElements.length)) {
                const e = s.__ng_removed;
                if (e && e.setForMove) return void t.destroy();
              }
              const c = !u || !this.driver.containsElement(u, s),
                h = v.get(s),
                d = p.get(s),
                f = this._buildInstruction(e, n, d, h, c);
              if (f.errors && f.errors.length) S.push(f);
              else {
                if (c)
                  return (
                    t.onStart(() => Nt(s, f.fromStyles)),
                    t.onDestroy(() => Rt(s, f.toStyles)),
                    void i.push(t)
                  );
                if (e.isFallbackTransition)
                  return (
                    t.onStart(() => Nt(s, f.fromStyles)),
                    t.onDestroy(() => Rt(s, f.toStyles)),
                    void i.push(t)
                  );
                f.timelines.forEach((e) => (e.stretchStartingKeyframe = !0)),
                  n.append(s, f.timelines),
                  r.push({ instruction: f, player: t, element: s }),
                  f.queriedElements.forEach((e) => ut(o, e, []).push(t)),
                  f.preStyleProps.forEach((e, t) => {
                    const n = Object.keys(e);
                    if (n.length) {
                      let e = a.get(t);
                      e || a.set(t, (e = new Set())),
                        n.forEach((t) => e.add(t));
                    }
                  }),
                  f.postStyleProps.forEach((e, t) => {
                    const n = Object.keys(e);
                    let i = l.get(t);
                    i || l.set(t, (i = new Set())), n.forEach((e) => i.add(e));
                  });
              }
            });
          if (S.length) {
            const e = [];
            S.forEach((t) => {
              e.push(`@${t.triggerName} has failed due to:\n`),
                t.errors.forEach((t) => e.push(`- ${t}\n`));
            }),
              w.forEach((e) => e.destroy()),
              this.reportError(e);
          }
          const _ = new Map(),
            C = new Map();
          r.forEach((e) => {
            const t = e.element;
            n.has(t) &&
              (C.set(t, t),
              this._beforeAnimationBuild(
                e.player.namespaceId,
                e.instruction,
                _
              ));
          }),
            i.forEach((e) => {
              const t = e.element;
              this._getPreviousPlayers(
                t,
                !1,
                e.namespaceId,
                e.triggerName,
                null
              ).forEach((e) => {
                ut(_, t, []).push(e), e.destroy();
              });
            });
          const E = g.filter((e) => Wn(e, a, l)),
            O = new Map();
          An(O, this.driver, b, l, it.a).forEach((e) => {
            Wn(e, a, l) && E.push(e);
          });
          const x = new Map();
          d.forEach((e, t) => {
            An(x, this.driver, new Set(e), a, it.p);
          }),
            E.forEach((e) => {
              const t = O.get(e),
                n = x.get(e);
              O.set(e, Object.assign(Object.assign({}, t), n));
            });
          const T = [],
            k = [],
            M = {};
          r.forEach((e) => {
            const { element: t, player: r, instruction: o } = e;
            if (n.has(t)) {
              if (c.has(t))
                return (
                  r.onDestroy(() => Rt(t, o.toStyles)),
                  (r.disabled = !0),
                  r.overrideTotalTime(o.totalTime),
                  void i.push(r)
                );
              let e = M;
              if (C.size > 1) {
                let n = t;
                const i = [];
                for (; (n = n.parentNode); ) {
                  const t = C.get(n);
                  if (t) {
                    e = t;
                    break;
                  }
                  i.push(n);
                }
                i.forEach((t) => C.set(t, e));
              }
              const n = this._buildAnimation(r.namespaceId, o, _, s, x, O);
              if ((r.setRealPlayer(n), e === M)) T.push(r);
              else {
                const t = this.playersByElement.get(e);
                t && t.length && (r.parentPlayer = rt(t)), i.push(r);
              }
            } else
              Nt(t, o.fromStyles),
                r.onDestroy(() => Rt(t, o.toStyles)),
                k.push(r),
                c.has(t) && i.push(r);
          }),
            k.forEach((e) => {
              const t = s.get(e.element);
              if (t && t.length) {
                const n = rt(t);
                e.setRealPlayer(n);
              }
            }),
            i.forEach((e) => {
              e.parentPlayer ? e.syncPlayerEvents(e.parentPlayer) : e.destroy();
            });
          for (let I = 0; I < g.length; I++) {
            const e = g[I],
              t = e.__ng_removed;
            if ((Fn(e, "ng-leave"), t && t.hasAnimation)) continue;
            let n = [];
            if (o.size) {
              let t = o.get(e);
              t && t.length && n.push(...t);
              let i = this.driver.query(e, ".ng-animating", !0);
              for (let e = 0; e < i.length; e++) {
                let t = o.get(i[e]);
                t && t.length && n.push(...t);
              }
            }
            const i = n.filter((e) => !e.destroyed);
            i.length ? Vn(this, e, i) : this.processLeaveNode(e);
          }
          return (
            (g.length = 0),
            T.forEach((e) => {
              this.players.push(e),
                e.onDone(() => {
                  e.destroy();
                  const t = this.players.indexOf(e);
                  this.players.splice(t, 1);
                }),
                e.play();
            }),
            T
          );
        }
        elementContainsData(e, t) {
          let n = !1;
          const i = t.__ng_removed;
          return (
            i && i.setForRemoval && (n = !0),
            this.playersByElement.has(t) && (n = !0),
            this.playersByQueriedElement.has(t) && (n = !0),
            this.statesByElement.has(t) && (n = !0),
            this._fetchNamespace(e).elementContainsData(t) || n
          );
        }
        afterFlush(e) {
          this._flushFns.push(e);
        }
        afterFlushAnimationsDone(e) {
          this._whenQuietFns.push(e);
        }
        _getPreviousPlayers(e, t, n, i, s) {
          let r = [];
          if (t) {
            const t = this.playersByQueriedElement.get(e);
            t && (r = t);
          } else {
            const t = this.playersByElement.get(e);
            if (t) {
              const e = !s || "void" == s;
              t.forEach((t) => {
                t.queued || ((e || t.triggerName == i) && r.push(t));
              });
            }
          }
          return (
            (n || i) &&
              (r = r.filter(
                (e) => !((n && n != e.namespaceId) || (i && i != e.triggerName))
              )),
            r
          );
        }
        _beforeAnimationBuild(e, t, n) {
          const i = t.element,
            s = t.isRemovalTransition ? void 0 : e,
            r = t.isRemovalTransition ? void 0 : t.triggerName;
          for (const o of t.timelines) {
            const e = o.element,
              a = e !== i,
              l = ut(n, e, []);
            this._getPreviousPlayers(e, a, s, r, t.toState).forEach((e) => {
              const t = e.getRealPlayer();
              t.beforeDestroy && t.beforeDestroy(), e.destroy(), l.push(e);
            });
          }
          Nt(i, t.fromStyles);
        }
        _buildAnimation(e, t, n, i, s, r) {
          const o = t.triggerName,
            a = t.element,
            l = [],
            c = new Set(),
            u = new Set(),
            h = t.timelines.map((t) => {
              const h = t.element;
              c.add(h);
              const d = h.__ng_removed;
              if (d && d.removedBeforeQueried)
                return new it.d(t.duration, t.delay);
              const p = h !== a,
                f = (function (e) {
                  const t = [];
                  return (
                    (function e(t, n) {
                      for (let i = 0; i < t.length; i++) {
                        const s = t[i];
                        s instanceof it.o ? e(s.players, n) : n.push(s);
                      }
                    })(e, t),
                    t
                  );
                })((n.get(h) || On).map((e) => e.getRealPlayer())).filter(
                  (e) => !!e.element && e.element === h
                ),
                g = s.get(h),
                m = r.get(h),
                b = ot(0, this._normalizer, 0, t.keyframes, g, m),
                v = this._buildPlayer(t, b, f);
              if ((t.subTimeline && i && u.add(h), p)) {
                const t = new Rn(e, o, h);
                t.setRealPlayer(v), l.push(t);
              }
              return v;
            });
          l.forEach((e) => {
            ut(this.playersByQueriedElement, e.element, []).push(e),
              e.onDone(() =>
                (function (e, t, n) {
                  let i;
                  if (e instanceof Map) {
                    if (((i = e.get(t)), i)) {
                      if (i.length) {
                        const e = i.indexOf(n);
                        i.splice(e, 1);
                      }
                      0 == i.length && e.delete(t);
                    }
                  } else if (((i = e[t]), i)) {
                    if (i.length) {
                      const e = i.indexOf(n);
                      i.splice(e, 1);
                    }
                    0 == i.length && delete e[t];
                  }
                  return i;
                })(this.playersByQueriedElement, e.element, e)
              );
          }),
            c.forEach((e) => jn(e, "ng-animating"));
          const d = rt(h);
          return (
            d.onDestroy(() => {
              c.forEach((e) => Fn(e, "ng-animating")), Rt(a, t.toStyles);
            }),
            u.forEach((e) => {
              ut(i, e, []).push(d);
            }),
            d
          );
        }
        _buildPlayer(e, t, n) {
          return t.length > 0
            ? this.driver.animate(
                e.element,
                t,
                e.duration,
                e.delay,
                e.easing,
                n
              )
            : new it.d(e.duration, e.delay);
        }
      }
      class Rn {
        constructor(e, t, n) {
          (this.namespaceId = e),
            (this.triggerName = t),
            (this.element = n),
            (this._player = new it.d()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(e) {
          this._containsRealPlayer ||
            ((this._player = e),
            Object.keys(this._queuedCallbacks).forEach((t) => {
              this._queuedCallbacks[t].forEach((n) => at(e, t, void 0, n));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(e.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(e) {
          this.totalTime = e;
        }
        syncPlayerEvents(e) {
          const t = this._player;
          t.triggerCallback && e.onStart(() => t.triggerCallback("start")),
            e.onDone(() => this.finish()),
            e.onDestroy(() => this.destroy());
        }
        _queueEvent(e, t) {
          ut(this._queuedCallbacks, e, []).push(t);
        }
        onDone(e) {
          this.queued && this._queueEvent("done", e), this._player.onDone(e);
        }
        onStart(e) {
          this.queued && this._queueEvent("start", e), this._player.onStart(e);
        }
        onDestroy(e) {
          this.queued && this._queueEvent("destroy", e),
            this._player.onDestroy(e);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(e) {
          this.queued || this._player.setPosition(e);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(e) {
          const t = this._player;
          t.triggerCallback && t.triggerCallback(e);
        }
      }
      function Nn(e) {
        return e && 1 === e.nodeType;
      }
      function Ln(e, t) {
        const n = e.style.display;
        return (e.style.display = null != t ? t : "none"), n;
      }
      function An(e, t, n, i, s) {
        const r = [];
        n.forEach((e) => r.push(Ln(e)));
        const o = [];
        i.forEach((n, i) => {
          const r = {};
          n.forEach((e) => {
            const n = (r[e] = t.computeStyle(i, e, s));
            (n && 0 != n.length) || ((i.__ng_removed = Tn), o.push(i));
          }),
            e.set(i, r);
        });
        let a = 0;
        return n.forEach((e) => Ln(e, r[a++])), o;
      }
      function Dn(e, t) {
        const n = new Map();
        if ((e.forEach((e) => n.set(e, [])), 0 == t.length)) return n;
        const i = new Set(t),
          s = new Map();
        return (
          t.forEach((e) => {
            const t = (function e(t) {
              if (!t) return 1;
              let r = s.get(t);
              if (r) return r;
              const o = t.parentNode;
              return (r = n.has(o) ? o : i.has(o) ? 1 : e(o)), s.set(t, r), r;
            })(e);
            1 !== t && n.get(t).push(e);
          }),
          n
        );
      }
      function jn(e, t) {
        if (e.classList) e.classList.add(t);
        else {
          let n = e.$$classes;
          n || (n = e.$$classes = {}), (n[t] = !0);
        }
      }
      function Fn(e, t) {
        if (e.classList) e.classList.remove(t);
        else {
          let n = e.$$classes;
          n && delete n[t];
        }
      }
      function Vn(e, t, n) {
        rt(n).onDone(() => e.processLeaveNode(t));
      }
      function Wn(e, t, n) {
        const i = n.get(e);
        if (!i) return !1;
        let s = t.get(e);
        return s ? i.forEach((e) => s.add(e)) : t.set(e, i), n.delete(e), !0;
      }
      class zn {
        constructor(e, t, n) {
          (this.bodyNode = e),
            (this._driver = t),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (e, t) => {}),
            (this._transitionEngine = new Pn(e, t, n)),
            (this._timelineEngine = new En(e, t, n)),
            (this._transitionEngine.onRemovalComplete = (e, t) =>
              this.onRemovalComplete(e, t));
        }
        registerTrigger(e, t, n, i, s) {
          const r = e + "-" + i;
          let o = this._triggerCache[r];
          if (!o) {
            const e = [],
              t = Yt(this._driver, s, e);
            if (e.length)
              throw new Error(
                `The animation trigger "${i}" has failed to build due to the following errors:\n - ${e.join(
                  "\n - "
                )}`
              );
            (o = (function (e, t) {
              return new Sn(e, t);
            })(i, t)),
              (this._triggerCache[r] = o);
          }
          this._transitionEngine.registerTrigger(t, i, o);
        }
        register(e, t) {
          this._transitionEngine.register(e, t);
        }
        destroy(e, t) {
          this._transitionEngine.destroy(e, t);
        }
        onInsert(e, t, n, i) {
          this._transitionEngine.insertNode(e, t, n, i);
        }
        onRemove(e, t, n, i) {
          this._transitionEngine.removeNode(e, t, i || !1, n);
        }
        disableAnimations(e, t) {
          this._transitionEngine.markElementAsDisabled(e, t);
        }
        process(e, t, n, i) {
          if ("@" == n.charAt(0)) {
            const [e, s] = ht(n);
            this._timelineEngine.command(e, t, s, i);
          } else this._transitionEngine.trigger(e, t, n, i);
        }
        listen(e, t, n, i, s) {
          if ("@" == n.charAt(0)) {
            const [e, i] = ht(n);
            return this._timelineEngine.listen(e, t, i, s);
          }
          return this._transitionEngine.listen(e, t, n, i, s);
        }
        flush(e = -1) {
          this._transitionEngine.flush(e);
        }
        get players() {
          return this._transitionEngine.players.concat(
            this._timelineEngine.players
          );
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function Xn(e, t) {
        let n = null,
          i = null;
        return (
          Array.isArray(t) && t.length
            ? ((n = Hn(t[0])), t.length > 1 && (i = Hn(t[t.length - 1])))
            : t && (n = Hn(t)),
          n || i ? new Bn(e, n, i) : null
        );
      }
      let Bn = (() => {
        class e {
          constructor(t, n, i) {
            (this._element = t),
              (this._startStyles = n),
              (this._endStyles = i),
              (this._state = 0);
            let s = e.initialStylesByElement.get(t);
            s || e.initialStylesByElement.set(t, (s = {})),
              (this._initialStyles = s);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Rt(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Rt(this._element, this._initialStyles),
                this._endStyles &&
                  (Rt(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (e.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (Nt(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (Nt(this._element, this._endStyles),
                  (this._endStyles = null)),
                Rt(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return (e.initialStylesByElement = new WeakMap()), e;
      })();
      function Hn(e) {
        let t = null;
        const n = Object.keys(e);
        for (let i = 0; i < n.length; i++) {
          const s = n[i];
          Un(s) && ((t = t || {}), (t[s] = e[s]));
        }
        return t;
      }
      function Un(e) {
        return "display" === e || "position" === e;
      }
      class Gn {
        constructor(e, t, n, i, s, r, o) {
          (this._element = e),
            (this._name = t),
            (this._duration = n),
            (this._delay = i),
            (this._easing = s),
            (this._fillMode = r),
            (this._onDoneFn = o),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (e) => this._handleCallback(e));
        }
        apply() {
          !(function (e, t) {
            const n = Qn(e, "").trim();
            n.length &&
              ((function (e, t) {
                let n = 0;
                for (let i = 0; i < e.length; i++) "," === e.charAt(i) && n++;
              })(n),
              (t = `${n}, ${t}`)),
              Zn(e, "", t);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            Yn(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          $n(this._element, this._name, "paused");
        }
        resume() {
          $n(this._element, this._name, "running");
        }
        setPosition(e) {
          const t = qn(this._element, this._name);
          (this._position = e * this._duration),
            Zn(this._element, "Delay", `-${this._position}ms`, t);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(e) {
          const t = e._ngTestManualTimestamp || Date.now(),
            n = 1e3 * parseFloat(e.elapsedTime.toFixed(3));
          e.animationName == this._name &&
            Math.max(t - this._startTime, 0) >= this._delay &&
            n >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFn(),
            Yn(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (e, t) {
              const n = Qn(e, "").split(","),
                i = Kn(n, t);
              i >= 0 && (n.splice(i, 1), Zn(e, "", n.join(",")));
            })(this._element, this._name));
        }
      }
      function $n(e, t, n) {
        Zn(e, "PlayState", n, qn(e, t));
      }
      function qn(e, t) {
        const n = Qn(e, "");
        return n.indexOf(",") > 0 ? Kn(n.split(","), t) : Kn([n], t);
      }
      function Kn(e, t) {
        for (let n = 0; n < e.length; n++) if (e[n].indexOf(t) >= 0) return n;
        return -1;
      }
      function Yn(e, t, n) {
        n
          ? e.removeEventListener("animationend", t)
          : e.addEventListener("animationend", t);
      }
      function Zn(e, t, n, i) {
        const s = "animation" + t;
        if (null != i) {
          const t = e.style[s];
          if (t.length) {
            const e = t.split(",");
            (e[i] = n), (n = e.join(","));
          }
        }
        e.style[s] = n;
      }
      function Qn(e, t) {
        return e.style["animation" + t];
      }
      class Jn {
        constructor(e, t, n, i, s, r, o, a) {
          (this.element = e),
            (this.keyframes = t),
            (this.animationName = n),
            (this._duration = i),
            (this._delay = s),
            (this._finalStyles = o),
            (this._specialStyles = a),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = r || "linear"),
            (this.totalTime = i + s),
            this._buildStyler();
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        destroy() {
          this.init(),
            this._state >= 4 ||
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((e) => e()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((e) => e()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((e) => e()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            this._state >= 3 ||
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(e) {
          this._styler.setPosition(e);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 ||
            ((this._state = 1),
            this._styler.apply(),
            this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(),
              (this._state = 2),
              this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          this._styler.destroy(), this._buildStyler(), this._styler.apply();
        }
        _buildStyler() {
          this._styler = new Gn(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            "forwards",
            () => this.finish()
          );
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
        beforeDestroy() {
          this.init();
          const e = {};
          if (this.hasStarted()) {
            const t = this._state >= 3;
            Object.keys(this._finalStyles).forEach((n) => {
              "offset" != n &&
                (e[n] = t ? this._finalStyles[n] : Ht(this.element, n));
            });
          }
          this.currentSnapshot = e;
        }
      }
      class ei extends it.d {
        constructor(e, t) {
          super(),
            (this.element = e),
            (this._startingStyles = {}),
            (this.__initialized = !1),
            (this._styles = _t(t));
        }
        init() {
          !this.__initialized &&
            this._startingStyles &&
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((e) => {
              this._startingStyles[e] = this.element.style[e];
            }),
            super.init());
        }
        play() {
          this._startingStyles &&
            (this.init(),
            Object.keys(this._styles).forEach((e) =>
              this.element.style.setProperty(e, this._styles[e])
            ),
            super.play());
        }
        destroy() {
          this._startingStyles &&
            (Object.keys(this._startingStyles).forEach((e) => {
              const t = this._startingStyles[e];
              t
                ? this.element.style.setProperty(e, t)
                : this.element.style.removeProperty(e);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class ti {
        constructor() {
          (this._count = 0),
            (this._head = document.querySelector("head")),
            (this._warningIssued = !1);
        }
        validateStyleProperty(e) {
          return vt(e);
        }
        matchesElement(e, t) {
          return yt(e, t);
        }
        containsElement(e, t) {
          return wt(e, t);
        }
        query(e, t, n) {
          return St(e, t, n);
        }
        computeStyle(e, t, n) {
          return window.getComputedStyle(e)[t];
        }
        buildKeyframeElement(e, t, n) {
          n = n.map((e) => _t(e));
          let i = `@keyframes ${t} {\n`,
            s = "";
          n.forEach((e) => {
            s = " ";
            const t = parseFloat(e.offset);
            (i += `${s}${100 * t}% {\n`),
              (s += " "),
              Object.keys(e).forEach((t) => {
                const n = e[t];
                switch (t) {
                  case "offset":
                    return;
                  case "easing":
                    return void (
                      n && (i += `${s}animation-timing-function: ${n};\n`)
                    );
                  default:
                    return void (i += `${s}${t}: ${n};\n`);
                }
              }),
              (i += s + "}\n");
          }),
            (i += "}\n");
          const r = document.createElement("style");
          return (r.innerHTML = i), r;
        }
        animate(e, t, n, i, s, r = [], o) {
          o && this._notifyFaultyScrubber();
          const a = r.filter((e) => e instanceof Jn),
            l = {};
          zt(n, i) &&
            a.forEach((e) => {
              let t = e.currentSnapshot;
              Object.keys(t).forEach((e) => (l[e] = t[e]));
            });
          const c = (function (e) {
            let t = {};
            return (
              e &&
                (Array.isArray(e) ? e : [e]).forEach((e) => {
                  Object.keys(e).forEach((n) => {
                    "offset" != n && "easing" != n && (t[n] = e[n]);
                  });
                }),
              t
            );
          })((t = Xt(e, t, l)));
          if (0 == n) return new ei(e, c);
          const u = "gen_css_kf_" + this._count++,
            h = this.buildKeyframeElement(e, u, t);
          document.querySelector("head").appendChild(h);
          const d = Xn(e, t),
            p = new Jn(e, t, u, n, i, s, c, d);
          return (
            p.onDestroy(() => {
              var e;
              (e = h).parentNode.removeChild(e);
            }),
            p
          );
        }
        _notifyFaultyScrubber() {
          this._warningIssued ||
            (console.warn(
              "@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\n",
              "  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill."
            ),
            (this._warningIssued = !0));
        }
      }
      class ni {
        constructor(e, t, n, i) {
          (this.element = e),
            (this.keyframes = t),
            (this.options = n),
            (this._specialStyles = i),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = n.duration),
            (this._delay = n.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((e) => e()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const e = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            e,
            this.options
          )),
            (this._finalKeyframe = e.length ? e[e.length - 1] : {}),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(e, t, n) {
          return e.animate(t, n);
        }
        onStart(e) {
          this._onStartFns.push(e);
        }
        onDone(e) {
          this._onDoneFns.push(e);
        }
        onDestroy(e) {
          this._onDestroyFns.push(e);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((e) => e()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((e) => e()),
            (this._onDestroyFns = []));
        }
        setPosition(e) {
          this.domPlayer.currentTime = e * this.time;
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const e = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((t) => {
              "offset" != t &&
                (e[t] = this._finished
                  ? this._finalKeyframe[t]
                  : Ht(this.element, t));
            }),
            (this.currentSnapshot = e);
        }
        triggerCallback(e) {
          const t = "start" == e ? this._onStartFns : this._onDoneFns;
          t.forEach((e) => e()), (t.length = 0);
        }
      }
      class ii {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(
            si().toString()
          )),
            (this._cssKeyframesDriver = new ti());
        }
        validateStyleProperty(e) {
          return vt(e);
        }
        matchesElement(e, t) {
          return yt(e, t);
        }
        containsElement(e, t) {
          return wt(e, t);
        }
        query(e, t, n) {
          return St(e, t, n);
        }
        computeStyle(e, t, n) {
          return window.getComputedStyle(e)[t];
        }
        overrideWebAnimationsSupport(e) {
          this._isNativeImpl = e;
        }
        animate(e, t, n, i, s, r = [], o) {
          if (!o && !this._isNativeImpl)
            return this._cssKeyframesDriver.animate(e, t, n, i, s, r);
          const a = {
            duration: n,
            delay: i,
            fill: 0 == i ? "both" : "forwards",
          };
          s && (a.easing = s);
          const l = {},
            c = r.filter((e) => e instanceof ni);
          zt(n, i) &&
            c.forEach((e) => {
              let t = e.currentSnapshot;
              Object.keys(t).forEach((e) => (l[e] = t[e]));
            });
          const u = Xn(e, (t = Xt(e, (t = t.map((e) => Mt(e, !1))), l)));
          return new ni(e, t, a, u);
        }
      }
      function si() {
        return (
          ("undefined" != typeof window &&
            void 0 !== window.document &&
            Element.prototype.animate) ||
          {}
        );
      }
      let ri = (() => {
        class e extends it.b {
          constructor(e, t) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = e.createRenderer(t.body, {
                id: "0",
                encapsulation: i.R.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(e) {
            const t = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const n = Array.isArray(e) ? Object(it.i)(e) : e;
            return (
              li(this._renderer, null, t, "register", [n]),
              new oi(t, this._renderer)
            );
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(i.G), i.bc(D.e));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      class oi extends it.c {
        constructor(e, t) {
          super(), (this._id = e), (this._renderer = t);
        }
        create(e, t) {
          return new ai(this._id, e, t || {}, this._renderer);
        }
      }
      class ai {
        constructor(e, t, n, i) {
          (this.id = e),
            (this.element = t),
            (this._renderer = i),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", n);
        }
        _listen(e, t) {
          return this._renderer.listen(this.element, `@@${this.id}:${e}`, t);
        }
        _command(e, ...t) {
          return li(this._renderer, this.element, this.id, e, t);
        }
        onDone(e) {
          this._listen("done", e);
        }
        onStart(e) {
          this._listen("start", e);
        }
        onDestroy(e) {
          this._listen("destroy", e);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset");
        }
        setPosition(e) {
          this._command("setPosition", e);
        }
        getPosition() {
          return 0;
        }
      }
      function li(e, t, n, i, s) {
        return e.setProperty(t, `@@${n}:${i}`, s);
      }
      let ci = (() => {
        class e {
          constructor(e, t, n) {
            (this.delegate = e),
              (this.engine = t),
              (this._zone = n),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (t.onRemovalComplete = (e, t) => {
                t && t.parentNode(e) && t.removeChild(e.parentNode, e);
              });
          }
          createRenderer(e, t) {
            const n = this.delegate.createRenderer(e, t);
            if (!(e && t && t.data && t.data.animation)) {
              let e = this._rendererCache.get(n);
              return (
                e ||
                  ((e = new ui("", n, this.engine)),
                  this._rendererCache.set(n, e)),
                e
              );
            }
            const i = t.id,
              s = t.id + "-" + this._currentId;
            this._currentId++, this.engine.register(s, e);
            const r = (t) => {
              Array.isArray(t)
                ? t.forEach(r)
                : this.engine.registerTrigger(i, s, e, t.name, t);
            };
            return t.data.animation.forEach(r), new hi(this, s, n, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(e, t, n) {
            e >= 0 && e < this._microtaskId
              ? this._zone.run(() => t(n))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((e) => {
                        const [t, n] = e;
                        t(n);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([t, n]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(i.G), i.bc(zn), i.bc(i.B));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      class ui {
        constructor(e, t, n) {
          (this.namespaceId = e),
            (this.delegate = t),
            (this.engine = n),
            (this.destroyNode = this.delegate.destroyNode
              ? (e) => t.destroyNode(e)
              : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.delegate.destroy();
        }
        createElement(e, t) {
          return this.delegate.createElement(e, t);
        }
        createComment(e) {
          return this.delegate.createComment(e);
        }
        createText(e) {
          return this.delegate.createText(e);
        }
        appendChild(e, t) {
          this.delegate.appendChild(e, t),
            this.engine.onInsert(this.namespaceId, t, e, !1);
        }
        insertBefore(e, t, n) {
          this.delegate.insertBefore(e, t, n),
            this.engine.onInsert(this.namespaceId, t, e, !0);
        }
        removeChild(e, t, n) {
          this.engine.onRemove(this.namespaceId, t, this.delegate, n);
        }
        selectRootElement(e, t) {
          return this.delegate.selectRootElement(e, t);
        }
        parentNode(e) {
          return this.delegate.parentNode(e);
        }
        nextSibling(e) {
          return this.delegate.nextSibling(e);
        }
        setAttribute(e, t, n, i) {
          this.delegate.setAttribute(e, t, n, i);
        }
        removeAttribute(e, t, n) {
          this.delegate.removeAttribute(e, t, n);
        }
        addClass(e, t) {
          this.delegate.addClass(e, t);
        }
        removeClass(e, t) {
          this.delegate.removeClass(e, t);
        }
        setStyle(e, t, n, i) {
          this.delegate.setStyle(e, t, n, i);
        }
        removeStyle(e, t, n) {
          this.delegate.removeStyle(e, t, n);
        }
        setProperty(e, t, n) {
          "@" == t.charAt(0) && "@.disabled" == t
            ? this.disableAnimations(e, !!n)
            : this.delegate.setProperty(e, t, n);
        }
        setValue(e, t) {
          this.delegate.setValue(e, t);
        }
        listen(e, t, n) {
          return this.delegate.listen(e, t, n);
        }
        disableAnimations(e, t) {
          this.engine.disableAnimations(e, t);
        }
      }
      class hi extends ui {
        constructor(e, t, n, i) {
          super(t, n, i), (this.factory = e), (this.namespaceId = t);
        }
        setProperty(e, t, n) {
          "@" == t.charAt(0)
            ? "." == t.charAt(1) && "@.disabled" == t
              ? this.disableAnimations(e, (n = void 0 === n || !!n))
              : this.engine.process(this.namespaceId, e, t.substr(1), n)
            : this.delegate.setProperty(e, t, n);
        }
        listen(e, t, n) {
          if ("@" == t.charAt(0)) {
            const i = (function (e) {
              switch (e) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return e;
              }
            })(e);
            let s = t.substr(1),
              r = "";
            return (
              "@" != s.charAt(0) &&
                ([s, r] = (function (e) {
                  const t = e.indexOf(".");
                  return [e.substring(0, t), e.substr(t + 1)];
                })(s)),
              this.engine.listen(this.namespaceId, i, s, r, (e) => {
                this.factory.scheduleListenerCallback(e._data || -1, n, e);
              })
            );
          }
          return this.delegate.listen(e, t, n);
        }
      }
      let di = (() => {
        class e extends zn {
          constructor(e, t, n) {
            super(e.body, t, n);
          }
        }
        return (
          (e.ɵfac = function (t) {
            return new (t || e)(i.bc(D.e), i.bc(Et), i.bc(fn));
          }),
          (e.ɵprov = i.Nb({ token: e, factory: e.ɵfac })),
          e
        );
      })();
      const pi = [
        {
          provide: Et,
          useFactory: function () {
            return "function" == typeof si() ? new ii() : new ti();
          },
        },
        {
          provide: new i.r("AnimationModuleType"),
          useValue: "BrowserAnimations",
        },
        { provide: it.b, useClass: ri },
        {
          provide: fn,
          useFactory: function () {
            return new gn();
          },
        },
        { provide: zn, useClass: di },
        {
          provide: i.G,
          useFactory: function (e, t, n) {
            return new ci(e, t, n);
          },
          deps: [nt.d, zn, i.B],
        },
      ];
      let fi = (() => {
        class e {}
        return (
          (e.ɵmod = i.Pb({ type: e })),
          (e.ɵinj = i.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            providers: pi,
            imports: [nt.a],
          })),
          e
        );
      })();
      var gi = n("CnOO");
      let mi = (() => {
        class e {}
        return (
          (e.ɵmod = i.Pb({ type: e })),
          (e.ɵinj = i.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            providers: [L],
            imports: [[Je.a, Qe.a]],
          })),
          e
        );
      })();
      var bi = n("fRWx");
      let vi = (() => {
        class e {}
        return (
          (e.ɵmod = i.Pb({ type: e, bootstrap: [u] })),
          (e.ɵinj = i.Ob({
            factory: function (t) {
              return new (t || e)();
            },
            imports: [
              [
                nt.a,
                fi,
                me,
                qe,
                Je.a,
                tt.AuthModule,
                et,
                bi.TradingModule,
                Qe.a,
                mi,
                gi.a.forRoot(s.a.stripeApiKey),
                ce.forRoot(),
              ],
            ],
          })),
          e
        );
      })();
      s.a.production && Object(i.U)(),
        nt
          .c()
          .bootstrapModule(vi)
          .catch((e) => console.error(e));
    },
    zn8P: function (e, t) {
      function n(e) {
        return Promise.resolve().then(function () {
          var t = new Error("Cannot find module '" + e + "'");
          throw ((t.code = "MODULE_NOT_FOUND"), t);
        });
      }
      (n.keys = function () {
        return [];
      }),
        (n.resolve = n),
        (e.exports = n),
        (n.id = "zn8P");
    },
  },
  [[0, 1]],
]);
